[{"name":"class RtmpMediaDescriptor(val scheme: String, val host: String, val port: Int, val app: String?, val streamKey: String) : MediaDescriptor","description":"io.github.thibaultbee.streampack.ext.rtmp.data.mediadescriptor.RtmpMediaDescriptor","location":"streampack-rtmp/io.github.thibaultbee.streampack.ext.rtmp.data.mediadescriptor/-rtmp-media-descriptor/index.html","searchKeys":["RtmpMediaDescriptor","class RtmpMediaDescriptor(val scheme: String, val host: String, val port: Int, val app: String?, val streamKey: String) : MediaDescriptor","io.github.thibaultbee.streampack.ext.rtmp.data.mediadescriptor.RtmpMediaDescriptor"]},{"name":"class RtmpSink(dispatcher: CoroutineDispatcher = Executors.newSingleThreadExecutor()\n        .asCoroutineDispatcher()) : AbstractSink","description":"io.github.thibaultbee.streampack.ext.rtmp.elements.endpoints.composites.sinks.RtmpSink","location":"streampack-rtmp/io.github.thibaultbee.streampack.ext.rtmp.elements.endpoints.composites.sinks/-rtmp-sink/index.html","searchKeys":["RtmpSink","class RtmpSink(dispatcher: CoroutineDispatcher = Executors.newSingleThreadExecutor()\n        .asCoroutineDispatcher()) : AbstractSink","io.github.thibaultbee.streampack.ext.rtmp.elements.endpoints.composites.sinks.RtmpSink"]},{"name":"constructor(dispatcher: CoroutineDispatcher = Executors.newSingleThreadExecutor()\n        .asCoroutineDispatcher())","description":"io.github.thibaultbee.streampack.ext.rtmp.elements.endpoints.composites.sinks.RtmpSink.RtmpSink","location":"streampack-rtmp/io.github.thibaultbee.streampack.ext.rtmp.elements.endpoints.composites.sinks/-rtmp-sink/-rtmp-sink.html","searchKeys":["RtmpSink","constructor(dispatcher: CoroutineDispatcher = Executors.newSingleThreadExecutor()\n        .asCoroutineDispatcher())","io.github.thibaultbee.streampack.ext.rtmp.elements.endpoints.composites.sinks.RtmpSink.RtmpSink"]},{"name":"constructor(scheme: String, host: String, port: Int, app: String?, streamKey: String)","description":"io.github.thibaultbee.streampack.ext.rtmp.data.mediadescriptor.RtmpMediaDescriptor.RtmpMediaDescriptor","location":"streampack-rtmp/io.github.thibaultbee.streampack.ext.rtmp.data.mediadescriptor/-rtmp-media-descriptor/-rtmp-media-descriptor.html","searchKeys":["RtmpMediaDescriptor","constructor(scheme: String, host: String, port: Int, app: String?, streamKey: String)","io.github.thibaultbee.streampack.ext.rtmp.data.mediadescriptor.RtmpMediaDescriptor.RtmpMediaDescriptor"]},{"name":"fun RtmpEndpointFactory(): CompositeEndpointFactory","description":"io.github.thibaultbee.streampack.ext.rtmp.elements.endpoints.composites.RtmpEndpointFactory","location":"streampack-rtmp/io.github.thibaultbee.streampack.ext.rtmp.elements.endpoints.composites/-rtmp-endpoint-factory.html","searchKeys":["RtmpEndpointFactory","fun RtmpEndpointFactory(): CompositeEndpointFactory","io.github.thibaultbee.streampack.ext.rtmp.elements.endpoints.composites.RtmpEndpointFactory"]},{"name":"fun RtmpMediaDescriptor(descriptor: MediaDescriptor): RtmpMediaDescriptor","description":"io.github.thibaultbee.streampack.ext.rtmp.data.mediadescriptor.RtmpMediaDescriptor","location":"streampack-rtmp/io.github.thibaultbee.streampack.ext.rtmp.data.mediadescriptor/-rtmp-media-descriptor.html","searchKeys":["RtmpMediaDescriptor","fun RtmpMediaDescriptor(descriptor: MediaDescriptor): RtmpMediaDescriptor","io.github.thibaultbee.streampack.ext.rtmp.data.mediadescriptor.RtmpMediaDescriptor"]},{"name":"fun RtmpMediaDescriptor(uri: Uri): RtmpMediaDescriptor","description":"io.github.thibaultbee.streampack.ext.rtmp.data.mediadescriptor.RtmpMediaDescriptor","location":"streampack-rtmp/io.github.thibaultbee.streampack.ext.rtmp.data.mediadescriptor/-rtmp-media-descriptor.html","searchKeys":["RtmpMediaDescriptor","fun RtmpMediaDescriptor(uri: Uri): RtmpMediaDescriptor","io.github.thibaultbee.streampack.ext.rtmp.data.mediadescriptor.RtmpMediaDescriptor"]},{"name":"fun fromUri(uri: Uri): RtmpMediaDescriptor","description":"io.github.thibaultbee.streampack.ext.rtmp.data.mediadescriptor.RtmpMediaDescriptor.Companion.fromUri","location":"streampack-rtmp/io.github.thibaultbee.streampack.ext.rtmp.data.mediadescriptor/-rtmp-media-descriptor/-companion/from-uri.html","searchKeys":["fromUri","fun fromUri(uri: Uri): RtmpMediaDescriptor","io.github.thibaultbee.streampack.ext.rtmp.data.mediadescriptor.RtmpMediaDescriptor.Companion.fromUri"]},{"name":"fun fromUrl(url: String): RtmpMediaDescriptor","description":"io.github.thibaultbee.streampack.ext.rtmp.data.mediadescriptor.RtmpMediaDescriptor.Companion.fromUrl","location":"streampack-rtmp/io.github.thibaultbee.streampack.ext.rtmp.data.mediadescriptor/-rtmp-media-descriptor/-companion/from-url.html","searchKeys":["fromUrl","fun fromUrl(url: String): RtmpMediaDescriptor","io.github.thibaultbee.streampack.ext.rtmp.data.mediadescriptor.RtmpMediaDescriptor.Companion.fromUrl"]},{"name":"object Companion","description":"io.github.thibaultbee.streampack.ext.rtmp.data.mediadescriptor.RtmpMediaDescriptor.Companion","location":"streampack-rtmp/io.github.thibaultbee.streampack.ext.rtmp.data.mediadescriptor/-rtmp-media-descriptor/-companion/index.html","searchKeys":["Companion","object Companion","io.github.thibaultbee.streampack.ext.rtmp.data.mediadescriptor.RtmpMediaDescriptor.Companion"]},{"name":"object Companion","description":"io.github.thibaultbee.streampack.ext.rtmp.elements.endpoints.composites.sinks.RtmpSink.Companion","location":"streampack-rtmp/io.github.thibaultbee.streampack.ext.rtmp.elements.endpoints.composites.sinks/-rtmp-sink/-companion/index.html","searchKeys":["Companion","object Companion","io.github.thibaultbee.streampack.ext.rtmp.elements.endpoints.composites.sinks.RtmpSink.Companion"]},{"name":"open override fun configure(config: SinkConfiguration)","description":"io.github.thibaultbee.streampack.ext.rtmp.elements.endpoints.composites.sinks.RtmpSink.configure","location":"streampack-rtmp/io.github.thibaultbee.streampack.ext.rtmp.elements.endpoints.composites.sinks/-rtmp-sink/configure.html","searchKeys":["configure","open override fun configure(config: SinkConfiguration)","io.github.thibaultbee.streampack.ext.rtmp.elements.endpoints.composites.sinks.RtmpSink.configure"]},{"name":"open override val isOpenFlow: StateFlow<Boolean>","description":"io.github.thibaultbee.streampack.ext.rtmp.elements.endpoints.composites.sinks.RtmpSink.isOpenFlow","location":"streampack-rtmp/io.github.thibaultbee.streampack.ext.rtmp.elements.endpoints.composites.sinks/-rtmp-sink/is-open-flow.html","searchKeys":["isOpenFlow","open override val isOpenFlow: StateFlow<Boolean>","io.github.thibaultbee.streampack.ext.rtmp.elements.endpoints.composites.sinks.RtmpSink.isOpenFlow"]},{"name":"open override val supportedSinkTypes: List<MediaSinkType>","description":"io.github.thibaultbee.streampack.ext.rtmp.elements.endpoints.composites.sinks.RtmpSink.supportedSinkTypes","location":"streampack-rtmp/io.github.thibaultbee.streampack.ext.rtmp.elements.endpoints.composites.sinks/-rtmp-sink/supported-sink-types.html","searchKeys":["supportedSinkTypes","open override val supportedSinkTypes: List<MediaSinkType>","io.github.thibaultbee.streampack.ext.rtmp.elements.endpoints.composites.sinks.RtmpSink.supportedSinkTypes"]},{"name":"open override val uri: Uri","description":"io.github.thibaultbee.streampack.ext.rtmp.data.mediadescriptor.RtmpMediaDescriptor.uri","location":"streampack-rtmp/io.github.thibaultbee.streampack.ext.rtmp.data.mediadescriptor/-rtmp-media-descriptor/uri.html","searchKeys":["uri","open override val uri: Uri","io.github.thibaultbee.streampack.ext.rtmp.data.mediadescriptor.RtmpMediaDescriptor.uri"]},{"name":"open suspend override fun close()","description":"io.github.thibaultbee.streampack.ext.rtmp.elements.endpoints.composites.sinks.RtmpSink.close","location":"streampack-rtmp/io.github.thibaultbee.streampack.ext.rtmp.elements.endpoints.composites.sinks/-rtmp-sink/close.html","searchKeys":["close","open suspend override fun close()","io.github.thibaultbee.streampack.ext.rtmp.elements.endpoints.composites.sinks.RtmpSink.close"]},{"name":"open suspend override fun openImpl(mediaDescriptor: MediaDescriptor)","description":"io.github.thibaultbee.streampack.ext.rtmp.elements.endpoints.composites.sinks.RtmpSink.openImpl","location":"streampack-rtmp/io.github.thibaultbee.streampack.ext.rtmp.elements.endpoints.composites.sinks/-rtmp-sink/open-impl.html","searchKeys":["openImpl","open suspend override fun openImpl(mediaDescriptor: MediaDescriptor)","io.github.thibaultbee.streampack.ext.rtmp.elements.endpoints.composites.sinks.RtmpSink.openImpl"]},{"name":"open suspend override fun startStream()","description":"io.github.thibaultbee.streampack.ext.rtmp.elements.endpoints.composites.sinks.RtmpSink.startStream","location":"streampack-rtmp/io.github.thibaultbee.streampack.ext.rtmp.elements.endpoints.composites.sinks/-rtmp-sink/start-stream.html","searchKeys":["startStream","open suspend override fun startStream()","io.github.thibaultbee.streampack.ext.rtmp.elements.endpoints.composites.sinks.RtmpSink.startStream"]},{"name":"open suspend override fun stopStream()","description":"io.github.thibaultbee.streampack.ext.rtmp.elements.endpoints.composites.sinks.RtmpSink.stopStream","location":"streampack-rtmp/io.github.thibaultbee.streampack.ext.rtmp.elements.endpoints.composites.sinks/-rtmp-sink/stop-stream.html","searchKeys":["stopStream","open suspend override fun stopStream()","io.github.thibaultbee.streampack.ext.rtmp.elements.endpoints.composites.sinks.RtmpSink.stopStream"]},{"name":"open suspend override fun write(packet: Packet): Int","description":"io.github.thibaultbee.streampack.ext.rtmp.elements.endpoints.composites.sinks.RtmpSink.write","location":"streampack-rtmp/io.github.thibaultbee.streampack.ext.rtmp.elements.endpoints.composites.sinks/-rtmp-sink/write.html","searchKeys":["write","open suspend override fun write(packet: Packet): Int","io.github.thibaultbee.streampack.ext.rtmp.elements.endpoints.composites.sinks.RtmpSink.write"]},{"name":"val app: String?","description":"io.github.thibaultbee.streampack.ext.rtmp.data.mediadescriptor.RtmpMediaDescriptor.app","location":"streampack-rtmp/io.github.thibaultbee.streampack.ext.rtmp.data.mediadescriptor/-rtmp-media-descriptor/app.html","searchKeys":["app","val app: String?","io.github.thibaultbee.streampack.ext.rtmp.data.mediadescriptor.RtmpMediaDescriptor.app"]},{"name":"val host: String","description":"io.github.thibaultbee.streampack.ext.rtmp.data.mediadescriptor.RtmpMediaDescriptor.host","location":"streampack-rtmp/io.github.thibaultbee.streampack.ext.rtmp.data.mediadescriptor/-rtmp-media-descriptor/host.html","searchKeys":["host","val host: String","io.github.thibaultbee.streampack.ext.rtmp.data.mediadescriptor.RtmpMediaDescriptor.host"]},{"name":"val port: Int","description":"io.github.thibaultbee.streampack.ext.rtmp.data.mediadescriptor.RtmpMediaDescriptor.port","location":"streampack-rtmp/io.github.thibaultbee.streampack.ext.rtmp.data.mediadescriptor/-rtmp-media-descriptor/port.html","searchKeys":["port","val port: Int","io.github.thibaultbee.streampack.ext.rtmp.data.mediadescriptor.RtmpMediaDescriptor.port"]},{"name":"val scheme: String","description":"io.github.thibaultbee.streampack.ext.rtmp.data.mediadescriptor.RtmpMediaDescriptor.scheme","location":"streampack-rtmp/io.github.thibaultbee.streampack.ext.rtmp.data.mediadescriptor/-rtmp-media-descriptor/scheme.html","searchKeys":["scheme","val scheme: String","io.github.thibaultbee.streampack.ext.rtmp.data.mediadescriptor.RtmpMediaDescriptor.scheme"]},{"name":"val streamKey: String","description":"io.github.thibaultbee.streampack.ext.rtmp.data.mediadescriptor.RtmpMediaDescriptor.streamKey","location":"streampack-rtmp/io.github.thibaultbee.streampack.ext.rtmp.data.mediadescriptor/-rtmp-media-descriptor/stream-key.html","searchKeys":["streamKey","val streamKey: String","io.github.thibaultbee.streampack.ext.rtmp.data.mediadescriptor.RtmpMediaDescriptor.streamKey"]},{"name":"AAC","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.SoundFormat.AAC","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags/-sound-format/-a-a-c/index.html","searchKeys":["AAC","AAC","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.SoundFormat.AAC"]},{"name":"AAC_LC","description":"io.github.thibaultbee.streampack.core.elements.utils.av.audio.AudioObjectType.AAC_LC","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.audio/-audio-object-type/-a-a-c_-l-c/index.html","searchKeys":["AAC_LC","AAC_LC","io.github.thibaultbee.streampack.core.elements.utils.av.audio.AudioObjectType.AAC_LC"]},{"name":"AAC_LTP","description":"io.github.thibaultbee.streampack.core.elements.utils.av.audio.AudioObjectType.AAC_LTP","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.audio/-audio-object-type/-a-a-c_-l-t-p/index.html","searchKeys":["AAC_LTP","AAC_LTP","io.github.thibaultbee.streampack.core.elements.utils.av.audio.AudioObjectType.AAC_LTP"]},{"name":"AAC_MAIN","description":"io.github.thibaultbee.streampack.core.elements.utils.av.audio.AudioObjectType.AAC_MAIN","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.audio/-audio-object-type/-a-a-c_-m-a-i-n/index.html","searchKeys":["AAC_MAIN","AAC_MAIN","io.github.thibaultbee.streampack.core.elements.utils.av.audio.AudioObjectType.AAC_MAIN"]},{"name":"AAC_SCALABLE","description":"io.github.thibaultbee.streampack.core.elements.utils.av.audio.AudioObjectType.AAC_SCALABLE","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.audio/-audio-object-type/-a-a-c_-s-c-a-l-a-b-l-e/index.html","searchKeys":["AAC_SCALABLE","AAC_SCALABLE","io.github.thibaultbee.streampack.core.elements.utils.av.audio.AudioObjectType.AAC_SCALABLE"]},{"name":"AAC_SSR","description":"io.github.thibaultbee.streampack.core.elements.utils.av.audio.AudioObjectType.AAC_SSR","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.audio/-audio-object-type/-a-a-c_-s-s-r/index.html","searchKeys":["AAC_SSR","AAC_SSR","io.github.thibaultbee.streampack.core.elements.utils.av.audio.AudioObjectType.AAC_SSR"]},{"name":"ADPCM","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.SoundFormat.ADPCM","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags/-sound-format/-a-d-p-c-m/index.html","searchKeys":["ADPCM","ADPCM","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.SoundFormat.ADPCM"]},{"name":"ADVANCED_CODEC_DIGITAL_HDTV","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.data.TSServiceInfo.ServiceType.ADVANCED_CODEC_DIGITAL_HDTV","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.data/-t-s-service-info/-service-type/-a-d-v-a-n-c-e-d_-c-o-d-e-c_-d-i-g-i-t-a-l_-h-d-t-v/index.html","searchKeys":["ADVANCED_CODEC_DIGITAL_HDTV","ADVANCED_CODEC_DIGITAL_HDTV","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.data.TSServiceInfo.ServiceType.ADVANCED_CODEC_DIGITAL_HDTV"]},{"name":"ADVANCED_CODEC_DIGITAL_RADIO","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.data.TSServiceInfo.ServiceType.ADVANCED_CODEC_DIGITAL_RADIO","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.data/-t-s-service-info/-service-type/-a-d-v-a-n-c-e-d_-c-o-d-e-c_-d-i-g-i-t-a-l_-r-a-d-i-o/index.html","searchKeys":["ADVANCED_CODEC_DIGITAL_RADIO","ADVANCED_CODEC_DIGITAL_RADIO","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.data.TSServiceInfo.ServiceType.ADVANCED_CODEC_DIGITAL_RADIO"]},{"name":"ADVANCED_CODEC_DIGITAL_SDTV","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.data.TSServiceInfo.ServiceType.ADVANCED_CODEC_DIGITAL_SDTV","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.data/-t-s-service-info/-service-type/-a-d-v-a-n-c-e-d_-c-o-d-e-c_-d-i-g-i-t-a-l_-s-d-t-v/index.html","searchKeys":["ADVANCED_CODEC_DIGITAL_SDTV","ADVANCED_CODEC_DIGITAL_SDTV","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.data.TSServiceInfo.ServiceType.ADVANCED_CODEC_DIGITAL_SDTV"]},{"name":"ALGORITHMIC_SYNTHESIS","description":"io.github.thibaultbee.streampack.core.elements.utils.av.audio.AudioObjectType.ALGORITHMIC_SYNTHESIS","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.audio/-audio-object-type/-a-l-g-o-r-i-t-h-m-i-c_-s-y-n-t-h-e-s-i-s/index.html","searchKeys":["ALGORITHMIC_SYNTHESIS","ALGORITHMIC_SYNTHESIS","io.github.thibaultbee.streampack.core.elements.utils.av.audio.AudioObjectType.ALGORITHMIC_SYNTHESIS"]},{"name":"ALS","description":"io.github.thibaultbee.streampack.core.elements.utils.av.audio.AudioObjectType.ALS","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.audio/-audio-object-type/-a-l-s/index.html","searchKeys":["ALS","ALS","io.github.thibaultbee.streampack.core.elements.utils.av.audio.AudioObjectType.ALS"]},{"name":"ARIB_STD_B67","description":"io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.TransferCharacteristics.ARIB_STD_B67","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx/-transfer-characteristics/-a-r-i-b_-s-t-d_-b67/index.html","searchKeys":["ARIB_STD_B67","ARIB_STD_B67","io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.TransferCharacteristics.ARIB_STD_B67"]},{"name":"ASYNC","description":"io.github.thibaultbee.streampack.core.elements.encoders.EncoderMode.ASYNC","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.encoders/-encoder-mode/-a-s-y-n-c/index.html","searchKeys":["ASYNC","ASYNC","io.github.thibaultbee.streampack.core.elements.encoders.EncoderMode.ASYNC"]},{"name":"AUD","description":"io.github.thibaultbee.streampack.core.elements.utils.av.video.hevc.HEVCDecoderConfigurationRecord.NalUnit.Type.AUD","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.video.hevc/-h-e-v-c-decoder-configuration-record/-nal-unit/-type/-a-u-d/index.html","searchKeys":["AUD","AUD","io.github.thibaultbee.streampack.core.elements.utils.av.video.hevc.HEVCDecoderConfigurationRecord.NalUnit.Type.AUD"]},{"name":"AUDIO","description":"io.github.thibaultbee.streampack.core.elements.data.PacketType.AUDIO","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.data/-packet-type/-a-u-d-i-o/index.html","searchKeys":["AUDIO","AUDIO","io.github.thibaultbee.streampack.core.elements.data.PacketType.AUDIO"]},{"name":"AUDIO","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.TagType.AUDIO","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags/-tag-type/-a-u-d-i-o/index.html","searchKeys":["AUDIO","AUDIO","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.TagType.AUDIO"]},{"name":"AUDIO_AAC","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets.Pmt.StreamType.AUDIO_AAC","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets/-pmt/-stream-type/-a-u-d-i-o_-a-a-c/index.html","searchKeys":["AUDIO_AAC","AUDIO_AAC","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets.Pmt.StreamType.AUDIO_AAC"]},{"name":"AUDIO_AAC_LATM","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets.Pmt.StreamType.AUDIO_AAC_LATM","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets/-pmt/-stream-type/-a-u-d-i-o_-a-a-c_-l-a-t-m/index.html","searchKeys":["AUDIO_AAC_LATM","AUDIO_AAC_LATM","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets.Pmt.StreamType.AUDIO_AAC_LATM"]},{"name":"AUDIO_AC3","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets.Pmt.StreamType.AUDIO_AC3","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets/-pmt/-stream-type/-a-u-d-i-o_-a-c3/index.html","searchKeys":["AUDIO_AC3","AUDIO_AC3","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets.Pmt.StreamType.AUDIO_AC3"]},{"name":"AUDIO_DTS","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets.Pmt.StreamType.AUDIO_DTS","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets/-pmt/-stream-type/-a-u-d-i-o_-d-t-s/index.html","searchKeys":["AUDIO_DTS","AUDIO_DTS","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets.Pmt.StreamType.AUDIO_DTS"]},{"name":"AUDIO_EAC3","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets.Pmt.StreamType.AUDIO_EAC3","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets/-pmt/-stream-type/-a-u-d-i-o_-e-a-c3/index.html","searchKeys":["AUDIO_EAC3","AUDIO_EAC3","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets.Pmt.StreamType.AUDIO_EAC3"]},{"name":"AUDIO_ISO_13818_3_MP3","description":"io.github.thibaultbee.streampack.core.elements.utils.av.descriptors.ObjectTypeIndication.AUDIO_ISO_13818_3_MP3","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.descriptors/-object-type-indication/-a-u-d-i-o_-i-s-o_13818_3_-m-p3/index.html","searchKeys":["AUDIO_ISO_13818_3_MP3","AUDIO_ISO_13818_3_MP3","io.github.thibaultbee.streampack.core.elements.utils.av.descriptors.ObjectTypeIndication.AUDIO_ISO_13818_3_MP3"]},{"name":"AUDIO_ISO_14496_3_AAC","description":"io.github.thibaultbee.streampack.core.elements.utils.av.descriptors.ObjectTypeIndication.AUDIO_ISO_14496_3_AAC","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.descriptors/-object-type-indication/-a-u-d-i-o_-i-s-o_14496_3_-a-a-c/index.html","searchKeys":["AUDIO_ISO_14496_3_AAC","AUDIO_ISO_14496_3_AAC","io.github.thibaultbee.streampack.core.elements.utils.av.descriptors.ObjectTypeIndication.AUDIO_ISO_14496_3_AAC"]},{"name":"AUDIO_MPEG1","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets.Pmt.StreamType.AUDIO_MPEG1","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets/-pmt/-stream-type/-a-u-d-i-o_-m-p-e-g1/index.html","searchKeys":["AUDIO_MPEG1","AUDIO_MPEG1","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets.Pmt.StreamType.AUDIO_MPEG1"]},{"name":"AUDIO_MPEG2","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets.Pmt.StreamType.AUDIO_MPEG2","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets/-pmt/-stream-type/-a-u-d-i-o_-m-p-e-g2/index.html","searchKeys":["AUDIO_MPEG2","AUDIO_MPEG2","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets.Pmt.StreamType.AUDIO_MPEG2"]},{"name":"AUDIO_STREAM_0","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets.Pes.StreamId.AUDIO_STREAM_0","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets/-pes/-stream-id/-a-u-d-i-o_-s-t-r-e-a-m_0/index.html","searchKeys":["AUDIO_STREAM_0","AUDIO_STREAM_0","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets.Pes.StreamId.AUDIO_STREAM_0"]},{"name":"AUDIO_TRUEHD","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets.Pmt.StreamType.AUDIO_TRUEHD","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets/-pmt/-stream-type/-a-u-d-i-o_-t-r-u-e-h-d/index.html","searchKeys":["AUDIO_TRUEHD","AUDIO_TRUEHD","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets.Pmt.StreamType.AUDIO_TRUEHD"]},{"name":"AUXILIARY_VIDEO","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.HandlerBox.HandlerType.AUXILIARY_VIDEO","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-handler-box/-handler-type/-a-u-x-i-l-i-a-r-y_-v-i-d-e-o/index.html","searchKeys":["AUXILIARY_VIDEO","AUXILIARY_VIDEO","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.HandlerBox.HandlerType.AUXILIARY_VIDEO"]},{"name":"AV1","description":"io.github.thibaultbee.streampack.core.elements.utils.av.FourCCs.AV1","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av/-four-c-cs/-a-v1/index.html","searchKeys":["AV1","AV1","io.github.thibaultbee.streampack.core.elements.utils.av.FourCCs.AV1"]},{"name":"AVC","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.video.CodecID.AVC","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.video/-codec-i-d/-a-v-c/index.html","searchKeys":["AVC","AVC","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.video.CodecID.AVC"]},{"name":"AudioStream","description":"io.github.thibaultbee.streampack.core.elements.utils.av.descriptors.StreamType.AudioStream","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.descriptors/-stream-type/-audio-stream/index.html","searchKeys":["AudioStream","AudioStream","io.github.thibaultbee.streampack.core.elements.utils.av.descriptors.StreamType.AudioStream"]},{"name":"BASE_DATA_OFFSET_PRESENT","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.TrackFragmentHeaderBox.TrackFragmentFlag.BASE_DATA_OFFSET_PRESENT","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-track-fragment-header-box/-track-fragment-flag/-b-a-s-e_-d-a-t-a_-o-f-f-s-e-t_-p-r-e-s-e-n-t/index.html","searchKeys":["BASE_DATA_OFFSET_PRESENT","BASE_DATA_OFFSET_PRESENT","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.TrackFragmentHeaderBox.TrackFragmentFlag.BASE_DATA_OFFSET_PRESENT"]},{"name":"BIT_DEPTH","description":"io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.VP9CodecPrivate.CodecFeature.Ids.BIT_DEPTH","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx/-v-p9-codec-private/-codec-feature/-ids/-b-i-t_-d-e-p-t-h/index.html","searchKeys":["BIT_DEPTH","BIT_DEPTH","io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.VP9CodecPrivate.CodecFeature.Ids.BIT_DEPTH"]},{"name":"BOOLEAN","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.amf.AmfType.BOOLEAN","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.amf/-amf-type/-b-o-o-l-e-a-n/index.html","searchKeys":["BOOLEAN","BOOLEAN","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.amf.AmfType.BOOLEAN"]},{"name":"BT1361_0","description":"io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.TransferCharacteristics.BT1361_0","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx/-transfer-characteristics/-b-t1361_0/index.html","searchKeys":["BT1361_0","BT1361_0","io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.TransferCharacteristics.BT1361_0"]},{"name":"BT2020","description":"io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.ColorPrimaries.BT2020","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx/-color-primaries/-b-t2020/index.html","searchKeys":["BT2020","BT2020","io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.ColorPrimaries.BT2020"]},{"name":"BT2020_10","description":"io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.TransferCharacteristics.BT2020_10","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx/-transfer-characteristics/-b-t2020_10/index.html","searchKeys":["BT2020_10","BT2020_10","io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.TransferCharacteristics.BT2020_10"]},{"name":"BT2020_12","description":"io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.TransferCharacteristics.BT2020_12","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx/-transfer-characteristics/-b-t2020_12/index.html","searchKeys":["BT2020_12","BT2020_12","io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.TransferCharacteristics.BT2020_12"]},{"name":"BT2020_CL","description":"io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.MatrixCoefficients.BT2020_CL","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx/-matrix-coefficients/-b-t2020_-c-l/index.html","searchKeys":["BT2020_CL","BT2020_CL","io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.MatrixCoefficients.BT2020_CL"]},{"name":"BT2020_NCL","description":"io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.MatrixCoefficients.BT2020_NCL","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx/-matrix-coefficients/-b-t2020_-n-c-l/index.html","searchKeys":["BT2020_NCL","BT2020_NCL","io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.MatrixCoefficients.BT2020_NCL"]},{"name":"BT470BG","description":"io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.ColorPrimaries.BT470BG","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx/-color-primaries/-b-t470-b-g/index.html","searchKeys":["BT470BG","BT470BG","io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.ColorPrimaries.BT470BG"]},{"name":"BT470BG","description":"io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.MatrixCoefficients.BT470BG","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx/-matrix-coefficients/-b-t470-b-g/index.html","searchKeys":["BT470BG","BT470BG","io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.MatrixCoefficients.BT470BG"]},{"name":"BT470M","description":"io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.ColorPrimaries.BT470M","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx/-color-primaries/-b-t470-m/index.html","searchKeys":["BT470M","BT470M","io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.ColorPrimaries.BT470M"]},{"name":"BT709","description":"io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.ColorPrimaries.BT709","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx/-color-primaries/-b-t709/index.html","searchKeys":["BT709","BT709","io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.ColorPrimaries.BT709"]},{"name":"BT709","description":"io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.MatrixCoefficients.BT709","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx/-matrix-coefficients/-b-t709/index.html","searchKeys":["BT709","BT709","io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.MatrixCoefficients.BT709"]},{"name":"BT709","description":"io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.TransferCharacteristics.BT709","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx/-transfer-characteristics/-b-t709/index.html","searchKeys":["BT709","BT709","io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.TransferCharacteristics.BT709"]},{"name":"CALLBACK","description":"io.github.thibaultbee.streampack.core.pipelines.StreamerPipeline.AudioOutputMode.CALLBACK","location":"streampack-core/io.github.thibaultbee.streampack.core.pipelines/-streamer-pipeline/-audio-output-mode/-c-a-l-l-b-a-c-k/index.html","searchKeys":["CALLBACK","CALLBACK","io.github.thibaultbee.streampack.core.pipelines.StreamerPipeline.AudioOutputMode.CALLBACK"]},{"name":"CELP","description":"io.github.thibaultbee.streampack.core.elements.utils.av.audio.AudioObjectType.CELP","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.audio/-audio-object-type/-c-e-l-p/index.html","searchKeys":["CELP","CELP","io.github.thibaultbee.streampack.core.elements.utils.av.audio.AudioObjectType.CELP"]},{"name":"CHANNEL_1","description":"io.github.thibaultbee.streampack.core.elements.utils.av.audio.ChannelConfiguration.CHANNEL_1","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.audio/-channel-configuration/-c-h-a-n-n-e-l_1/index.html","searchKeys":["CHANNEL_1","CHANNEL_1","io.github.thibaultbee.streampack.core.elements.utils.av.audio.ChannelConfiguration.CHANNEL_1"]},{"name":"CHANNEL_2","description":"io.github.thibaultbee.streampack.core.elements.utils.av.audio.ChannelConfiguration.CHANNEL_2","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.audio/-channel-configuration/-c-h-a-n-n-e-l_2/index.html","searchKeys":["CHANNEL_2","CHANNEL_2","io.github.thibaultbee.streampack.core.elements.utils.av.audio.ChannelConfiguration.CHANNEL_2"]},{"name":"CHANNEL_3","description":"io.github.thibaultbee.streampack.core.elements.utils.av.audio.ChannelConfiguration.CHANNEL_3","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.audio/-channel-configuration/-c-h-a-n-n-e-l_3/index.html","searchKeys":["CHANNEL_3","CHANNEL_3","io.github.thibaultbee.streampack.core.elements.utils.av.audio.ChannelConfiguration.CHANNEL_3"]},{"name":"CHANNEL_4","description":"io.github.thibaultbee.streampack.core.elements.utils.av.audio.ChannelConfiguration.CHANNEL_4","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.audio/-channel-configuration/-c-h-a-n-n-e-l_4/index.html","searchKeys":["CHANNEL_4","CHANNEL_4","io.github.thibaultbee.streampack.core.elements.utils.av.audio.ChannelConfiguration.CHANNEL_4"]},{"name":"CHANNEL_5","description":"io.github.thibaultbee.streampack.core.elements.utils.av.audio.ChannelConfiguration.CHANNEL_5","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.audio/-channel-configuration/-c-h-a-n-n-e-l_5/index.html","searchKeys":["CHANNEL_5","CHANNEL_5","io.github.thibaultbee.streampack.core.elements.utils.av.audio.ChannelConfiguration.CHANNEL_5"]},{"name":"CHANNEL_6","description":"io.github.thibaultbee.streampack.core.elements.utils.av.audio.ChannelConfiguration.CHANNEL_6","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.audio/-channel-configuration/-c-h-a-n-n-e-l_6/index.html","searchKeys":["CHANNEL_6","CHANNEL_6","io.github.thibaultbee.streampack.core.elements.utils.av.audio.ChannelConfiguration.CHANNEL_6"]},{"name":"CHANNEL_8","description":"io.github.thibaultbee.streampack.core.elements.utils.av.audio.ChannelConfiguration.CHANNEL_8","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.audio/-channel-configuration/-c-h-a-n-n-e-l_8/index.html","searchKeys":["CHANNEL_8","CHANNEL_8","io.github.thibaultbee.streampack.core.elements.utils.av.audio.ChannelConfiguration.CHANNEL_8"]},{"name":"CHROMAT_CL","description":"io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.MatrixCoefficients.CHROMAT_CL","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx/-matrix-coefficients/-c-h-r-o-m-a-t_-c-l/index.html","searchKeys":["CHROMAT_CL","CHROMAT_CL","io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.MatrixCoefficients.CHROMAT_CL"]},{"name":"CHROMAT_NCL","description":"io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.MatrixCoefficients.CHROMAT_NCL","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx/-matrix-coefficients/-c-h-r-o-m-a-t_-n-c-l/index.html","searchKeys":["CHROMAT_NCL","CHROMAT_NCL","io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.MatrixCoefficients.CHROMAT_NCL"]},{"name":"CHROMA_SUBSAMPLING","description":"io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.VP9CodecPrivate.CodecFeature.Ids.CHROMA_SUBSAMPLING","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx/-v-p9-codec-private/-codec-feature/-ids/-c-h-r-o-m-a_-s-u-b-s-a-m-p-l-i-n-g/index.html","searchKeys":["CHROMA_SUBSAMPLING","CHROMA_SUBSAMPLING","io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.VP9CodecPrivate.CodecFeature.Ids.CHROMA_SUBSAMPLING"]},{"name":"CODED_FRAMES","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.video.PacketType.CODED_FRAMES","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.video/-packet-type/-c-o-d-e-d_-f-r-a-m-e-s/index.html","searchKeys":["CODED_FRAMES","CODED_FRAMES","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.video.PacketType.CODED_FRAMES"]},{"name":"CODED_FRAMES_X","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.video.PacketType.CODED_FRAMES_X","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.video/-packet-type/-c-o-d-e-d_-f-r-a-m-e-s_-x/index.html","searchKeys":["CODED_FRAMES_X","CODED_FRAMES_X","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.video.PacketType.CODED_FRAMES_X"]},{"name":"CONTENT","description":"io.github.thibaultbee.streampack.core.elements.endpoints.MediaSinkType.CONTENT","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints/-media-sink-type/-c-o-n-t-e-n-t/index.html","searchKeys":["CONTENT","CONTENT","io.github.thibaultbee.streampack.core.elements.endpoints.MediaSinkType.CONTENT"]},{"name":"CROP","description":"io.github.thibaultbee.streampack.core.elements.processing.video.outputs.AspectRatioMode.CROP","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.processing.video.outputs/-aspect-ratio-mode/-c-r-o-p/index.html","searchKeys":["CROP","CROP","io.github.thibaultbee.streampack.core.elements.processing.video.outputs.AspectRatioMode.CROP"]},{"name":"ClockReferenceStream","description":"io.github.thibaultbee.streampack.core.elements.utils.av.descriptors.StreamType.ClockReferenceStream","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.descriptors/-stream-type/-clock-reference-stream/index.html","searchKeys":["ClockReferenceStream","ClockReferenceStream","io.github.thibaultbee.streampack.core.elements.utils.av.descriptors.StreamType.ClockReferenceStream"]},{"name":"ContentClassificationDescr","description":"io.github.thibaultbee.streampack.core.elements.utils.av.descriptors.Tags.ContentClassificationDescr","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.descriptors/-tags/-content-classification-descr/index.html","searchKeys":["ContentClassificationDescr","ContentClassificationDescr","io.github.thibaultbee.streampack.core.elements.utils.av.descriptors.Tags.ContentClassificationDescr"]},{"name":"ContentCreationDateDescr","description":"io.github.thibaultbee.streampack.core.elements.utils.av.descriptors.Tags.ContentCreationDateDescr","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.descriptors/-tags/-content-creation-date-descr/index.html","searchKeys":["ContentCreationDateDescr","ContentCreationDateDescr","io.github.thibaultbee.streampack.core.elements.utils.av.descriptors.Tags.ContentCreationDateDescr"]},{"name":"ContentCreatorNameDescr","description":"io.github.thibaultbee.streampack.core.elements.utils.av.descriptors.Tags.ContentCreatorNameDescr","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.descriptors/-tags/-content-creator-name-descr/index.html","searchKeys":["ContentCreatorNameDescr","ContentCreatorNameDescr","io.github.thibaultbee.streampack.core.elements.utils.av.descriptors.Tags.ContentCreatorNameDescr"]},{"name":"ContentIdentDescr","description":"io.github.thibaultbee.streampack.core.elements.utils.av.descriptors.Tags.ContentIdentDescr","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.descriptors/-tags/-content-ident-descr/index.html","searchKeys":["ContentIdentDescr","ContentIdentDescr","io.github.thibaultbee.streampack.core.elements.utils.av.descriptors.Tags.ContentIdentDescr"]},{"name":"DATA_OFFSET_PRESENT","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.TrackRunBox.TrackRunFlag.DATA_OFFSET_PRESENT","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-track-run-box/-track-run-flag/-d-a-t-a_-o-f-f-s-e-t_-p-r-e-s-e-n-t/index.html","searchKeys":["DATA_OFFSET_PRESENT","DATA_OFFSET_PRESENT","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.TrackRunBox.TrackRunFlag.DATA_OFFSET_PRESENT"]},{"name":"DATE","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.amf.AmfType.DATE","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.amf/-amf-type/-d-a-t-e/index.html","searchKeys":["DATE","DATE","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.amf.AmfType.DATE"]},{"name":"DEFAULT","description":"io.github.thibaultbee.streampack.core.elements.processing.video.utils.GLUtils.InputFormat.DEFAULT","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.processing.video.utils/-g-l-utils/-input-format/-d-e-f-a-u-l-t/index.html","searchKeys":["DEFAULT","DEFAULT","io.github.thibaultbee.streampack.core.elements.processing.video.utils.GLUtils.InputFormat.DEFAULT"]},{"name":"DEFAULT_BASE_IS_MOOF","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.TrackFragmentHeaderBox.TrackFragmentFlag.DEFAULT_BASE_IS_MOOF","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-track-fragment-header-box/-track-fragment-flag/-d-e-f-a-u-l-t_-b-a-s-e_-i-s_-m-o-o-f/index.html","searchKeys":["DEFAULT_BASE_IS_MOOF","DEFAULT_BASE_IS_MOOF","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.TrackFragmentHeaderBox.TrackFragmentFlag.DEFAULT_BASE_IS_MOOF"]},{"name":"DEFAULT_SAMPLE_DURATION_PRESENT","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.TrackFragmentHeaderBox.TrackFragmentFlag.DEFAULT_SAMPLE_DURATION_PRESENT","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-track-fragment-header-box/-track-fragment-flag/-d-e-f-a-u-l-t_-s-a-m-p-l-e_-d-u-r-a-t-i-o-n_-p-r-e-s-e-n-t/index.html","searchKeys":["DEFAULT_SAMPLE_DURATION_PRESENT","DEFAULT_SAMPLE_DURATION_PRESENT","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.TrackFragmentHeaderBox.TrackFragmentFlag.DEFAULT_SAMPLE_DURATION_PRESENT"]},{"name":"DEFAULT_SAMPLE_FLAGS_PRESENT","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.TrackFragmentHeaderBox.TrackFragmentFlag.DEFAULT_SAMPLE_FLAGS_PRESENT","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-track-fragment-header-box/-track-fragment-flag/-d-e-f-a-u-l-t_-s-a-m-p-l-e_-f-l-a-g-s_-p-r-e-s-e-n-t/index.html","searchKeys":["DEFAULT_SAMPLE_FLAGS_PRESENT","DEFAULT_SAMPLE_FLAGS_PRESENT","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.TrackFragmentHeaderBox.TrackFragmentFlag.DEFAULT_SAMPLE_FLAGS_PRESENT"]},{"name":"DEFAULT_SAMPLE_SIZE_PRESENT","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.TrackFragmentHeaderBox.TrackFragmentFlag.DEFAULT_SAMPLE_SIZE_PRESENT","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-track-fragment-header-box/-track-fragment-flag/-d-e-f-a-u-l-t_-s-a-m-p-l-e_-s-i-z-e_-p-r-e-s-e-n-t/index.html","searchKeys":["DEFAULT_SAMPLE_SIZE_PRESENT","DEFAULT_SAMPLE_SIZE_PRESENT","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.TrackFragmentHeaderBox.TrackFragmentFlag.DEFAULT_SAMPLE_SIZE_PRESENT"]},{"name":"DEVICE_SPECIFIC","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.SoundFormat.DEVICE_SPECIFIC","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags/-sound-format/-d-e-v-i-c-e_-s-p-e-c-i-f-i-c/index.html","searchKeys":["DEVICE_SPECIFIC","DEVICE_SPECIFIC","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.SoundFormat.DEVICE_SPECIFIC"]},{"name":"DIGITAL_RADIO","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.data.TSServiceInfo.ServiceType.DIGITAL_RADIO","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.data/-t-s-service-info/-service-type/-d-i-g-i-t-a-l_-r-a-d-i-o/index.html","searchKeys":["DIGITAL_RADIO","DIGITAL_RADIO","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.data.TSServiceInfo.ServiceType.DIGITAL_RADIO"]},{"name":"DIGITAL_TV","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.data.TSServiceInfo.ServiceType.DIGITAL_TV","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.data/-t-s-service-info/-service-type/-d-i-g-i-t-a-l_-t-v/index.html","searchKeys":["DIGITAL_TV","DIGITAL_TV","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.data.TSServiceInfo.ServiceType.DIGITAL_TV"]},{"name":"DISPOSABLE_INTER","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.video.FrameType.DISPOSABLE_INTER","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.video/-frame-type/-d-i-s-p-o-s-a-b-l-e_-i-n-t-e-r/index.html","searchKeys":["DISPOSABLE_INTER","DISPOSABLE_INTER","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.video.FrameType.DISPOSABLE_INTER"]},{"name":"DST","description":"io.github.thibaultbee.streampack.core.elements.utils.av.audio.AudioObjectType.DST","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.audio/-audio-object-type/-d-s-t/index.html","searchKeys":["DST","DST","io.github.thibaultbee.streampack.core.elements.utils.av.audio.AudioObjectType.DST"]},{"name":"DURATION_IS_EMPTY","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.TrackFragmentHeaderBox.TrackFragmentFlag.DURATION_IS_EMPTY","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-track-fragment-header-box/-track-fragment-flag/-d-u-r-a-t-i-o-n_-i-s_-e-m-p-t-y/index.html","searchKeys":["DURATION_IS_EMPTY","DURATION_IS_EMPTY","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.TrackFragmentHeaderBox.TrackFragmentFlag.DURATION_IS_EMPTY"]},{"name":"DecSpecificInfo","description":"io.github.thibaultbee.streampack.core.elements.utils.av.descriptors.Tags.DecSpecificInfo","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.descriptors/-tags/-dec-specific-info/index.html","searchKeys":["DecSpecificInfo","DecSpecificInfo","io.github.thibaultbee.streampack.core.elements.utils.av.descriptors.Tags.DecSpecificInfo"]},{"name":"DecoderConfigDescr","description":"io.github.thibaultbee.streampack.core.elements.utils.av.descriptors.Tags.DecoderConfigDescr","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.descriptors/-tags/-decoder-config-descr/index.html","searchKeys":["DecoderConfigDescr","DecoderConfigDescr","io.github.thibaultbee.streampack.core.elements.utils.av.descriptors.Tags.DecoderConfigDescr"]},{"name":"ECMA_ARRAY","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.amf.AmfType.ECMA_ARRAY","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.amf/-amf-type/-e-c-m-a_-a-r-r-a-y/index.html","searchKeys":["ECMA_ARRAY","ECMA_ARRAY","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.amf.AmfType.ECMA_ARRAY"]},{"name":"ENABLED","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.TrackHeaderBox.TrackFlag.ENABLED","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-track-header-box/-track-flag/-e-n-a-b-l-e-d/index.html","searchKeys":["ENABLED","ENABLED","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.TrackHeaderBox.TrackFlag.ENABLED"]},{"name":"END_OF_SEQUENCE","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.video.AVCPacketType.END_OF_SEQUENCE","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.video/-a-v-c-packet-type/-e-n-d_-o-f_-s-e-q-u-e-n-c-e/index.html","searchKeys":["END_OF_SEQUENCE","END_OF_SEQUENCE","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.video.AVCPacketType.END_OF_SEQUENCE"]},{"name":"EOB","description":"io.github.thibaultbee.streampack.core.elements.utils.av.video.hevc.HEVCDecoderConfigurationRecord.NalUnit.Type.EOB","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.video.hevc/-h-e-v-c-decoder-configuration-record/-nal-unit/-type/-e-o-b/index.html","searchKeys":["EOB","EOB","io.github.thibaultbee.streampack.core.elements.utils.av.video.hevc.HEVCDecoderConfigurationRecord.NalUnit.Type.EOB"]},{"name":"EOS","description":"io.github.thibaultbee.streampack.core.elements.utils.av.video.hevc.HEVCDecoderConfigurationRecord.NalUnit.Type.EOS","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.video.hevc/-h-e-v-c-decoder-configuration-record/-nal-unit/-type/-e-o-s/index.html","searchKeys":["EOS","EOS","io.github.thibaultbee.streampack.core.elements.utils.av.video.hevc.HEVCDecoderConfigurationRecord.NalUnit.Type.EOS"]},{"name":"ER_AAC_ELD","description":"io.github.thibaultbee.streampack.core.elements.utils.av.audio.AudioObjectType.ER_AAC_ELD","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.audio/-audio-object-type/-e-r_-a-a-c_-e-l-d/index.html","searchKeys":["ER_AAC_ELD","ER_AAC_ELD","io.github.thibaultbee.streampack.core.elements.utils.av.audio.AudioObjectType.ER_AAC_ELD"]},{"name":"ER_AAC_LC","description":"io.github.thibaultbee.streampack.core.elements.utils.av.audio.AudioObjectType.ER_AAC_LC","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.audio/-audio-object-type/-e-r_-a-a-c_-l-c/index.html","searchKeys":["ER_AAC_LC","ER_AAC_LC","io.github.thibaultbee.streampack.core.elements.utils.av.audio.AudioObjectType.ER_AAC_LC"]},{"name":"ER_AAC_LD","description":"io.github.thibaultbee.streampack.core.elements.utils.av.audio.AudioObjectType.ER_AAC_LD","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.audio/-audio-object-type/-e-r_-a-a-c_-l-d/index.html","searchKeys":["ER_AAC_LD","ER_AAC_LD","io.github.thibaultbee.streampack.core.elements.utils.av.audio.AudioObjectType.ER_AAC_LD"]},{"name":"ER_AAC_LTP","description":"io.github.thibaultbee.streampack.core.elements.utils.av.audio.AudioObjectType.ER_AAC_LTP","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.audio/-audio-object-type/-e-r_-a-a-c_-l-t-p/index.html","searchKeys":["ER_AAC_LTP","ER_AAC_LTP","io.github.thibaultbee.streampack.core.elements.utils.av.audio.AudioObjectType.ER_AAC_LTP"]},{"name":"ER_AAC_SCALABLE","description":"io.github.thibaultbee.streampack.core.elements.utils.av.audio.AudioObjectType.ER_AAC_SCALABLE","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.audio/-audio-object-type/-e-r_-a-a-c_-s-c-a-l-a-b-l-e/index.html","searchKeys":["ER_AAC_SCALABLE","ER_AAC_SCALABLE","io.github.thibaultbee.streampack.core.elements.utils.av.audio.AudioObjectType.ER_AAC_SCALABLE"]},{"name":"ER_BSAC","description":"io.github.thibaultbee.streampack.core.elements.utils.av.audio.AudioObjectType.ER_BSAC","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.audio/-audio-object-type/-e-r_-b-s-a-c/index.html","searchKeys":["ER_BSAC","ER_BSAC","io.github.thibaultbee.streampack.core.elements.utils.av.audio.AudioObjectType.ER_BSAC"]},{"name":"ER_CELP","description":"io.github.thibaultbee.streampack.core.elements.utils.av.audio.AudioObjectType.ER_CELP","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.audio/-audio-object-type/-e-r_-c-e-l-p/index.html","searchKeys":["ER_CELP","ER_CELP","io.github.thibaultbee.streampack.core.elements.utils.av.audio.AudioObjectType.ER_CELP"]},{"name":"ER_HILN","description":"io.github.thibaultbee.streampack.core.elements.utils.av.audio.AudioObjectType.ER_HILN","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.audio/-audio-object-type/-e-r_-h-i-l-n/index.html","searchKeys":["ER_HILN","ER_HILN","io.github.thibaultbee.streampack.core.elements.utils.av.audio.AudioObjectType.ER_HILN"]},{"name":"ER_HVXC","description":"io.github.thibaultbee.streampack.core.elements.utils.av.audio.AudioObjectType.ER_HVXC","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.audio/-audio-object-type/-e-r_-h-v-x-c/index.html","searchKeys":["ER_HVXC","ER_HVXC","io.github.thibaultbee.streampack.core.elements.utils.av.audio.AudioObjectType.ER_HVXC"]},{"name":"ER_PARAMETRIC","description":"io.github.thibaultbee.streampack.core.elements.utils.av.audio.AudioObjectType.ER_PARAMETRIC","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.audio/-audio-object-type/-e-r_-p-a-r-a-m-e-t-r-i-c/index.html","searchKeys":["ER_PARAMETRIC","ER_PARAMETRIC","io.github.thibaultbee.streampack.core.elements.utils.av.audio.AudioObjectType.ER_PARAMETRIC"]},{"name":"ER_TWIN_VQ","description":"io.github.thibaultbee.streampack.core.elements.utils.av.audio.AudioObjectType.ER_TWIN_VQ","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.audio/-audio-object-type/-e-r_-t-w-i-n_-v-q/index.html","searchKeys":["ER_TWIN_VQ","ER_TWIN_VQ","io.github.thibaultbee.streampack.core.elements.utils.av.audio.AudioObjectType.ER_TWIN_VQ"]},{"name":"ESDescr","description":"io.github.thibaultbee.streampack.core.elements.utils.av.descriptors.Tags.ESDescr","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.descriptors/-tags/-e-s-descr/index.html","searchKeys":["ESDescr","ESDescr","io.github.thibaultbee.streampack.core.elements.utils.av.descriptors.Tags.ESDescr"]},{"name":"ES_ID_Inc","description":"io.github.thibaultbee.streampack.core.elements.utils.av.descriptors.Tags.ES_ID_Inc","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.descriptors/-tags/-e-s_-i-d_-inc/index.html","searchKeys":["ES_ID_Inc","ES_ID_Inc","io.github.thibaultbee.streampack.core.elements.utils.av.descriptors.Tags.ES_ID_Inc"]},{"name":"ES_ID_Ref","description":"io.github.thibaultbee.streampack.core.elements.utils.av.descriptors.Tags.ES_ID_Ref","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.descriptors/-tags/-e-s_-i-d_-ref/index.html","searchKeys":["ES_ID_Ref","ES_ID_Ref","io.github.thibaultbee.streampack.core.elements.utils.av.descriptors.Tags.ES_ID_Ref"]},{"name":"EXPLICIT","description":"io.github.thibaultbee.streampack.core.elements.utils.av.audio.SamplingFrequencyIndex.EXPLICIT","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.audio/-sampling-frequency-index/-e-x-p-l-i-c-i-t/index.html","searchKeys":["EXPLICIT","EXPLICIT","io.github.thibaultbee.streampack.core.elements.utils.av.audio.SamplingFrequencyIndex.EXPLICIT"]},{"name":"EXTENDED_STREAM","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets.Pes.StreamId.EXTENDED_STREAM","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets/-pes/-stream-id/-e-x-t-e-n-d-e-d_-s-t-r-e-a-m/index.html","searchKeys":["EXTENDED_STREAM","EXTENDED_STREAM","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets.Pes.StreamId.EXTENDED_STREAM"]},{"name":"ExpandedTextualDescr","description":"io.github.thibaultbee.streampack.core.elements.utils.av.descriptors.Tags.ExpandedTextualDescr","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.descriptors/-tags/-expanded-textual-descr/index.html","searchKeys":["ExpandedTextualDescr","ExpandedTextualDescr","io.github.thibaultbee.streampack.core.elements.utils.av.descriptors.Tags.ExpandedTextualDescr"]},{"name":"ExtensionProfileLevelDescr","description":"io.github.thibaultbee.streampack.core.elements.utils.av.descriptors.Tags.ExtensionProfileLevelDescr","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.descriptors/-tags/-extension-profile-level-descr/index.html","searchKeys":["ExtensionProfileLevelDescr","ExtensionProfileLevelDescr","io.github.thibaultbee.streampack.core.elements.utils.av.descriptors.Tags.ExtensionProfileLevelDescr"]},{"name":"FCC","description":"io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.MatrixCoefficients.FCC","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx/-matrix-coefficients/-f-c-c/index.html","searchKeys":["FCC","FCC","io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.MatrixCoefficients.FCC"]},{"name":"FD","description":"io.github.thibaultbee.streampack.core.elements.utils.av.video.hevc.HEVCDecoderConfigurationRecord.NalUnit.Type.FD","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.video.hevc/-h-e-v-c-decoder-configuration-record/-nal-unit/-type/-f-d/index.html","searchKeys":["FD","FD","io.github.thibaultbee.streampack.core.elements.utils.av.video.hevc.HEVCDecoderConfigurationRecord.NalUnit.Type.FD"]},{"name":"FILE","description":"io.github.thibaultbee.streampack.core.elements.endpoints.MediaSinkType.FILE","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints/-media-sink-type/-f-i-l-e/index.html","searchKeys":["FILE","FILE","io.github.thibaultbee.streampack.core.elements.endpoints.MediaSinkType.FILE"]},{"name":"FILM","description":"io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.ColorPrimaries.FILM","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx/-color-primaries/-f-i-l-m/index.html","searchKeys":["FILM","FILM","io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.ColorPrimaries.FILM"]},{"name":"FIRST_SAMPLE_FLAGS_PRESENT","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.TrackRunBox.TrackRunFlag.FIRST_SAMPLE_FLAGS_PRESENT","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-track-run-box/-track-run-flag/-f-i-r-s-t_-s-a-m-p-l-e_-f-l-a-g-s_-p-r-e-s-e-n-t/index.html","searchKeys":["FIRST_SAMPLE_FLAGS_PRESENT","FIRST_SAMPLE_FLAGS_PRESENT","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.TrackRunBox.TrackRunFlag.FIRST_SAMPLE_FLAGS_PRESENT"]},{"name":"FLV","description":"io.github.thibaultbee.streampack.core.elements.endpoints.MediaContainerType.FLV","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints/-media-container-type/-f-l-v/index.html","searchKeys":["FLV","FLV","io.github.thibaultbee.streampack.core.elements.endpoints.MediaContainerType.FLV"]},{"name":"FMC","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets.Pmt.Descriptor.FMC","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets/-pmt/-descriptor/-f-m-c/index.html","searchKeys":["FMC","FMC","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets.Pmt.Descriptor.FMC"]},{"name":"F_11025HZ","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.SoundRate.F_11025HZ","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags/-sound-rate/-f_11025-h-z/index.html","searchKeys":["F_11025HZ","F_11025HZ","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.SoundRate.F_11025HZ"]},{"name":"F_11025HZ","description":"io.github.thibaultbee.streampack.core.elements.utils.av.audio.SamplingFrequencyIndex.F_11025HZ","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.audio/-sampling-frequency-index/-f_11025-h-z/index.html","searchKeys":["F_11025HZ","F_11025HZ","io.github.thibaultbee.streampack.core.elements.utils.av.audio.SamplingFrequencyIndex.F_11025HZ"]},{"name":"F_12000HZ","description":"io.github.thibaultbee.streampack.core.elements.utils.av.audio.SamplingFrequencyIndex.F_12000HZ","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.audio/-sampling-frequency-index/-f_12000-h-z/index.html","searchKeys":["F_12000HZ","F_12000HZ","io.github.thibaultbee.streampack.core.elements.utils.av.audio.SamplingFrequencyIndex.F_12000HZ"]},{"name":"F_16000HZ","description":"io.github.thibaultbee.streampack.core.elements.utils.av.audio.SamplingFrequencyIndex.F_16000HZ","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.audio/-sampling-frequency-index/-f_16000-h-z/index.html","searchKeys":["F_16000HZ","F_16000HZ","io.github.thibaultbee.streampack.core.elements.utils.av.audio.SamplingFrequencyIndex.F_16000HZ"]},{"name":"F_22050HZ","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.SoundRate.F_22050HZ","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags/-sound-rate/-f_22050-h-z/index.html","searchKeys":["F_22050HZ","F_22050HZ","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.SoundRate.F_22050HZ"]},{"name":"F_22050HZ","description":"io.github.thibaultbee.streampack.core.elements.utils.av.audio.SamplingFrequencyIndex.F_22050HZ","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.audio/-sampling-frequency-index/-f_22050-h-z/index.html","searchKeys":["F_22050HZ","F_22050HZ","io.github.thibaultbee.streampack.core.elements.utils.av.audio.SamplingFrequencyIndex.F_22050HZ"]},{"name":"F_24000HZ","description":"io.github.thibaultbee.streampack.core.elements.utils.av.audio.SamplingFrequencyIndex.F_24000HZ","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.audio/-sampling-frequency-index/-f_24000-h-z/index.html","searchKeys":["F_24000HZ","F_24000HZ","io.github.thibaultbee.streampack.core.elements.utils.av.audio.SamplingFrequencyIndex.F_24000HZ"]},{"name":"F_32000HZ","description":"io.github.thibaultbee.streampack.core.elements.utils.av.audio.SamplingFrequencyIndex.F_32000HZ","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.audio/-sampling-frequency-index/-f_32000-h-z/index.html","searchKeys":["F_32000HZ","F_32000HZ","io.github.thibaultbee.streampack.core.elements.utils.av.audio.SamplingFrequencyIndex.F_32000HZ"]},{"name":"F_44100HZ","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.SoundRate.F_44100HZ","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags/-sound-rate/-f_44100-h-z/index.html","searchKeys":["F_44100HZ","F_44100HZ","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.SoundRate.F_44100HZ"]},{"name":"F_44100HZ","description":"io.github.thibaultbee.streampack.core.elements.utils.av.audio.SamplingFrequencyIndex.F_44100HZ","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.audio/-sampling-frequency-index/-f_44100-h-z/index.html","searchKeys":["F_44100HZ","F_44100HZ","io.github.thibaultbee.streampack.core.elements.utils.av.audio.SamplingFrequencyIndex.F_44100HZ"]},{"name":"F_48000HZ","description":"io.github.thibaultbee.streampack.core.elements.utils.av.audio.SamplingFrequencyIndex.F_48000HZ","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.audio/-sampling-frequency-index/-f_48000-h-z/index.html","searchKeys":["F_48000HZ","F_48000HZ","io.github.thibaultbee.streampack.core.elements.utils.av.audio.SamplingFrequencyIndex.F_48000HZ"]},{"name":"F_5500HZ","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.SoundRate.F_5500HZ","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags/-sound-rate/-f_5500-h-z/index.html","searchKeys":["F_5500HZ","F_5500HZ","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.SoundRate.F_5500HZ"]},{"name":"F_64000HZ","description":"io.github.thibaultbee.streampack.core.elements.utils.av.audio.SamplingFrequencyIndex.F_64000HZ","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.audio/-sampling-frequency-index/-f_64000-h-z/index.html","searchKeys":["F_64000HZ","F_64000HZ","io.github.thibaultbee.streampack.core.elements.utils.av.audio.SamplingFrequencyIndex.F_64000HZ"]},{"name":"F_7350HZ","description":"io.github.thibaultbee.streampack.core.elements.utils.av.audio.SamplingFrequencyIndex.F_7350HZ","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.audio/-sampling-frequency-index/-f_7350-h-z/index.html","searchKeys":["F_7350HZ","F_7350HZ","io.github.thibaultbee.streampack.core.elements.utils.av.audio.SamplingFrequencyIndex.F_7350HZ"]},{"name":"F_8000HZ","description":"io.github.thibaultbee.streampack.core.elements.utils.av.audio.SamplingFrequencyIndex.F_8000HZ","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.audio/-sampling-frequency-index/-f_8000-h-z/index.html","searchKeys":["F_8000HZ","F_8000HZ","io.github.thibaultbee.streampack.core.elements.utils.av.audio.SamplingFrequencyIndex.F_8000HZ"]},{"name":"F_88200HZ","description":"io.github.thibaultbee.streampack.core.elements.utils.av.audio.SamplingFrequencyIndex.F_88200HZ","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.audio/-sampling-frequency-index/-f_88200-h-z/index.html","searchKeys":["F_88200HZ","F_88200HZ","io.github.thibaultbee.streampack.core.elements.utils.av.audio.SamplingFrequencyIndex.F_88200HZ"]},{"name":"F_96000HZ","description":"io.github.thibaultbee.streampack.core.elements.utils.av.audio.SamplingFrequencyIndex.F_96000HZ","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.audio/-sampling-frequency-index/-f_96000-h-z/index.html","searchKeys":["F_96000HZ","F_96000HZ","io.github.thibaultbee.streampack.core.elements.utils.av.audio.SamplingFrequencyIndex.F_96000HZ"]},{"name":"G711_ALAW","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.SoundFormat.G711_ALAW","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags/-sound-format/-g711_-a-l-a-w/index.html","searchKeys":["G711_ALAW","G711_ALAW","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.SoundFormat.G711_ALAW"]},{"name":"G711_MLAW","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.SoundFormat.G711_MLAW","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags/-sound-format/-g711_-m-l-a-w/index.html","searchKeys":["G711_MLAW","G711_MLAW","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.SoundFormat.G711_MLAW"]},{"name":"GAMMA22","description":"io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.TransferCharacteristics.GAMMA22","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx/-transfer-characteristics/-g-a-m-m-a22/index.html","searchKeys":["GAMMA22","GAMMA22","io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.TransferCharacteristics.GAMMA22"]},{"name":"GAMMA28","description":"io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.TransferCharacteristics.GAMMA28","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx/-transfer-characteristics/-g-a-m-m-a28/index.html","searchKeys":["GAMMA28","GAMMA28","io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.TransferCharacteristics.GAMMA28"]},{"name":"GENERAL_MIDI","description":"io.github.thibaultbee.streampack.core.elements.utils.av.audio.AudioObjectType.GENERAL_MIDI","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.audio/-audio-object-type/-g-e-n-e-r-a-l_-m-i-d-i/index.html","searchKeys":["GENERAL_MIDI","GENERAL_MIDI","io.github.thibaultbee.streampack.core.elements.utils.av.audio.AudioObjectType.GENERAL_MIDI"]},{"name":"GENERATED_KEY","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.video.FrameType.GENERATED_KEY","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.video/-frame-type/-g-e-n-e-r-a-t-e-d_-k-e-y/index.html","searchKeys":["GENERATED_KEY","GENERATED_KEY","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.video.FrameType.GENERATED_KEY"]},{"name":"HEVC","description":"io.github.thibaultbee.streampack.core.elements.utils.av.FourCCs.HEVC","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av/-four-c-cs/-h-e-v-c/index.html","searchKeys":["HEVC","HEVC","io.github.thibaultbee.streampack.core.elements.utils.av.FourCCs.HEVC"]},{"name":"HEVC_DIGITAL_HDTV","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.data.TSServiceInfo.ServiceType.HEVC_DIGITAL_HDTV","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.data/-t-s-service-info/-service-type/-h-e-v-c_-d-i-g-i-t-a-l_-h-d-t-v/index.html","searchKeys":["HEVC_DIGITAL_HDTV","HEVC_DIGITAL_HDTV","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.data.TSServiceInfo.ServiceType.HEVC_DIGITAL_HDTV"]},{"name":"HIGH_THROUGHPUT","description":"io.github.thibaultbee.streampack.core.elements.utils.av.video.hevc.HEVCProfile.HIGH_THROUGHPUT","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.video.hevc/-h-e-v-c-profile/-h-i-g-h_-t-h-r-o-u-g-h-p-u-t/index.html","searchKeys":["HIGH_THROUGHPUT","HIGH_THROUGHPUT","io.github.thibaultbee.streampack.core.elements.utils.av.video.hevc.HEVCProfile.HIGH_THROUGHPUT"]},{"name":"HIGH_THROUGHPUT_SCREEN_EXTENDED","description":"io.github.thibaultbee.streampack.core.elements.utils.av.video.hevc.HEVCProfile.HIGH_THROUGHPUT_SCREEN_EXTENDED","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.video.hevc/-h-e-v-c-profile/-h-i-g-h_-t-h-r-o-u-g-h-p-u-t_-s-c-r-e-e-n_-e-x-t-e-n-d-e-d/index.html","searchKeys":["HIGH_THROUGHPUT_SCREEN_EXTENDED","HIGH_THROUGHPUT_SCREEN_EXTENDED","io.github.thibaultbee.streampack.core.elements.utils.av.video.hevc.HEVCProfile.HIGH_THROUGHPUT_SCREEN_EXTENDED"]},{"name":"HVXC","description":"io.github.thibaultbee.streampack.core.elements.utils.av.audio.AudioObjectType.HVXC","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.audio/-audio-object-type/-h-v-x-c/index.html","searchKeys":["HVXC","HVXC","io.github.thibaultbee.streampack.core.elements.utils.av.audio.AudioObjectType.HVXC"]},{"name":"IDENTITY","description":"io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.MatrixCoefficients.IDENTITY","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx/-matrix-coefficients/-i-d-e-n-t-i-t-y/index.html","searchKeys":["IDENTITY","IDENTITY","io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.MatrixCoefficients.IDENTITY"]},{"name":"IEC61966_2_1","description":"io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.TransferCharacteristics.IEC61966_2_1","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx/-transfer-characteristics/-i-e-c61966_2_1/index.html","searchKeys":["IEC61966_2_1","IEC61966_2_1","io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.TransferCharacteristics.IEC61966_2_1"]},{"name":"IEC61966_2_4","description":"io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.TransferCharacteristics.IEC61966_2_4","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx/-transfer-characteristics/-i-e-c61966_2_4/index.html","searchKeys":["IEC61966_2_4","IEC61966_2_4","io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.TransferCharacteristics.IEC61966_2_4"]},{"name":"INFO_COMMAND","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.video.FrameType.INFO_COMMAND","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.video/-frame-type/-i-n-f-o_-c-o-m-m-a-n-d/index.html","searchKeys":["INFO_COMMAND","INFO_COMMAND","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.video.FrameType.INFO_COMMAND"]},{"name":"INTER","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.video.FrameType.INTER","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.video/-frame-type/-i-n-t-e-r/index.html","searchKeys":["INTER","INTER","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.video.FrameType.INTER"]},{"name":"IN_MOVIE","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.TrackHeaderBox.TrackFlag.IN_MOVIE","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-track-header-box/-track-flag/-i-n_-m-o-v-i-e/index.html","searchKeys":["IN_MOVIE","IN_MOVIE","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.TrackHeaderBox.TrackFlag.IN_MOVIE"]},{"name":"IN_PREVIEW","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.TrackHeaderBox.TrackFlag.IN_PREVIEW","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-track-header-box/-track-flag/-i-n_-p-r-e-v-i-e-w/index.html","searchKeys":["IN_PREVIEW","IN_PREVIEW","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.TrackHeaderBox.TrackFlag.IN_PREVIEW"]},{"name":"IOD","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets.Pmt.Descriptor.IOD","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets/-pmt/-descriptor/-i-o-d/index.html","searchKeys":["IOD","IOD","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets.Pmt.Descriptor.IOD"]},{"name":"IPIDescrPointer","description":"io.github.thibaultbee.streampack.core.elements.utils.av.descriptors.Tags.IPIDescrPointer","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.descriptors/-tags/-i-p-i-descr-pointer/index.html","searchKeys":["IPIDescrPointer","IPIDescrPointer","io.github.thibaultbee.streampack.core.elements.utils.av.descriptors.Tags.IPIDescrPointer"]},{"name":"IPL_DescrPointerRef","description":"io.github.thibaultbee.streampack.core.elements.utils.av.descriptors.Tags.IPL_DescrPointerRef","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.descriptors/-tags/-i-p-l_-descr-pointer-ref/index.html","searchKeys":["IPL_DescrPointerRef","IPL_DescrPointerRef","io.github.thibaultbee.streampack.core.elements.utils.av.descriptors.Tags.IPL_DescrPointerRef"]},{"name":"IPMPDescr","description":"io.github.thibaultbee.streampack.core.elements.utils.av.descriptors.Tags.IPMPDescr","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.descriptors/-tags/-i-p-m-p-descr/index.html","searchKeys":["IPMPDescr","IPMPDescr","io.github.thibaultbee.streampack.core.elements.utils.av.descriptors.Tags.IPMPDescr"]},{"name":"IPMPDescrPointer","description":"io.github.thibaultbee.streampack.core.elements.utils.av.descriptors.Tags.IPMPDescrPointer","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.descriptors/-tags/-i-p-m-p-descr-pointer/index.html","searchKeys":["IPMPDescrPointer","IPMPDescrPointer","io.github.thibaultbee.streampack.core.elements.utils.av.descriptors.Tags.IPMPDescrPointer"]},{"name":"IPMPStream","description":"io.github.thibaultbee.streampack.core.elements.utils.av.descriptors.StreamType.IPMPStream","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.descriptors/-stream-type/-i-p-m-p-stream/index.html","searchKeys":["IPMPStream","IPMPStream","io.github.thibaultbee.streampack.core.elements.utils.av.descriptors.StreamType.IPMPStream"]},{"name":"ISO_639_LANGUAGE","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets.Pmt.Descriptor.ISO_639_LANGUAGE","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets/-pmt/-descriptor/-i-s-o_639_-l-a-n-g-u-a-g-e/index.html","searchKeys":["ISO_639_LANGUAGE","ISO_639_LANGUAGE","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets.Pmt.Descriptor.ISO_639_LANGUAGE"]},{"name":"IS_ASPECT_RATIO","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.TrackHeaderBox.TrackFlag.IS_ASPECT_RATIO","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-track-header-box/-track-flag/-i-s_-a-s-p-e-c-t_-r-a-t-i-o/index.html","searchKeys":["IS_ASPECT_RATIO","IS_ASPECT_RATIO","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.TrackHeaderBox.TrackFlag.IS_ASPECT_RATIO"]},{"name":"InitialObjectDescr","description":"io.github.thibaultbee.streampack.core.elements.utils.av.descriptors.Tags.InitialObjectDescr","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.descriptors/-tags/-initial-object-descr/index.html","searchKeys":["InitialObjectDescr","InitialObjectDescr","io.github.thibaultbee.streampack.core.elements.utils.av.descriptors.Tags.InitialObjectDescr"]},{"name":"KEY","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.video.FrameType.KEY","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.video/-frame-type/-k-e-y/index.html","searchKeys":["KEY","KEY","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.video.FrameType.KEY"]},{"name":"KeyWordDescr","description":"io.github.thibaultbee.streampack.core.elements.utils.av.descriptors.Tags.KeyWordDescr","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.descriptors/-tags/-key-word-descr/index.html","searchKeys":["KeyWordDescr","KeyWordDescr","io.github.thibaultbee.streampack.core.elements.utils.av.descriptors.Tags.KeyWordDescr"]},{"name":"LAYER_1","description":"io.github.thibaultbee.streampack.core.elements.utils.av.audio.AudioObjectType.LAYER_1","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.audio/-audio-object-type/-l-a-y-e-r_1/index.html","searchKeys":["LAYER_1","LAYER_1","io.github.thibaultbee.streampack.core.elements.utils.av.audio.AudioObjectType.LAYER_1"]},{"name":"LAYER_2","description":"io.github.thibaultbee.streampack.core.elements.utils.av.audio.AudioObjectType.LAYER_2","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.audio/-audio-object-type/-l-a-y-e-r_2/index.html","searchKeys":["LAYER_2","LAYER_2","io.github.thibaultbee.streampack.core.elements.utils.av.audio.AudioObjectType.LAYER_2"]},{"name":"LAYER_3","description":"io.github.thibaultbee.streampack.core.elements.utils.av.audio.AudioObjectType.LAYER_3","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.audio/-audio-object-type/-l-a-y-e-r_3/index.html","searchKeys":["LAYER_3","LAYER_3","io.github.thibaultbee.streampack.core.elements.utils.av.audio.AudioObjectType.LAYER_3"]},{"name":"LD_MPEG_SURROUND","description":"io.github.thibaultbee.streampack.core.elements.utils.av.audio.AudioObjectType.LD_MPEG_SURROUND","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.audio/-audio-object-type/-l-d_-m-p-e-g_-s-u-r-r-o-u-n-d/index.html","searchKeys":["LD_MPEG_SURROUND","LD_MPEG_SURROUND","io.github.thibaultbee.streampack.core.elements.utils.av.audio.AudioObjectType.LD_MPEG_SURROUND"]},{"name":"LEADING_SAMPLE_WITHOUT_DEPENDENCY","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models.IsLeading.LEADING_SAMPLE_WITHOUT_DEPENDENCY","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models/-is-leading/-l-e-a-d-i-n-g_-s-a-m-p-l-e_-w-i-t-h-o-u-t_-d-e-p-e-n-d-e-n-c-y/index.html","searchKeys":["LEADING_SAMPLE_WITHOUT_DEPENDENCY","LEADING_SAMPLE_WITHOUT_DEPENDENCY","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models.IsLeading.LEADING_SAMPLE_WITHOUT_DEPENDENCY"]},{"name":"LEADING_SAMPLE_WITH_DEPENDENCY","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models.IsLeading.LEADING_SAMPLE_WITH_DEPENDENCY","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models/-is-leading/-l-e-a-d-i-n-g_-s-a-m-p-l-e_-w-i-t-h_-d-e-p-e-n-d-e-n-c-y/index.html","searchKeys":["LEADING_SAMPLE_WITH_DEPENDENCY","LEADING_SAMPLE_WITH_DEPENDENCY","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models.IsLeading.LEADING_SAMPLE_WITH_DEPENDENCY"]},{"name":"LEVEL","description":"io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.VP9CodecPrivate.CodecFeature.Ids.LEVEL","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx/-v-p9-codec-private/-codec-feature/-ids/-l-e-v-e-l/index.html","searchKeys":["LEVEL","LEVEL","io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.VP9CodecPrivate.CodecFeature.Ids.LEVEL"]},{"name":"LEVEL_1","description":"io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.Level.LEVEL_1","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx/-level/-l-e-v-e-l_1/index.html","searchKeys":["LEVEL_1","LEVEL_1","io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.Level.LEVEL_1"]},{"name":"LEVEL_11","description":"io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.Level.LEVEL_11","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx/-level/-l-e-v-e-l_11/index.html","searchKeys":["LEVEL_11","LEVEL_11","io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.Level.LEVEL_11"]},{"name":"LEVEL_2","description":"io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.Level.LEVEL_2","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx/-level/-l-e-v-e-l_2/index.html","searchKeys":["LEVEL_2","LEVEL_2","io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.Level.LEVEL_2"]},{"name":"LEVEL_21","description":"io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.Level.LEVEL_21","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx/-level/-l-e-v-e-l_21/index.html","searchKeys":["LEVEL_21","LEVEL_21","io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.Level.LEVEL_21"]},{"name":"LEVEL_3","description":"io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.Level.LEVEL_3","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx/-level/-l-e-v-e-l_3/index.html","searchKeys":["LEVEL_3","LEVEL_3","io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.Level.LEVEL_3"]},{"name":"LEVEL_31","description":"io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.Level.LEVEL_31","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx/-level/-l-e-v-e-l_31/index.html","searchKeys":["LEVEL_31","LEVEL_31","io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.Level.LEVEL_31"]},{"name":"LEVEL_4","description":"io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.Level.LEVEL_4","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx/-level/-l-e-v-e-l_4/index.html","searchKeys":["LEVEL_4","LEVEL_4","io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.Level.LEVEL_4"]},{"name":"LEVEL_41","description":"io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.Level.LEVEL_41","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx/-level/-l-e-v-e-l_41/index.html","searchKeys":["LEVEL_41","LEVEL_41","io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.Level.LEVEL_41"]},{"name":"LEVEL_5","description":"io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.Level.LEVEL_5","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx/-level/-l-e-v-e-l_5/index.html","searchKeys":["LEVEL_5","LEVEL_5","io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.Level.LEVEL_5"]},{"name":"LEVEL_51","description":"io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.Level.LEVEL_51","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx/-level/-l-e-v-e-l_51/index.html","searchKeys":["LEVEL_51","LEVEL_51","io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.Level.LEVEL_51"]},{"name":"LEVEL_52","description":"io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.Level.LEVEL_52","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx/-level/-l-e-v-e-l_52/index.html","searchKeys":["LEVEL_52","LEVEL_52","io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.Level.LEVEL_52"]},{"name":"LEVEL_6","description":"io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.Level.LEVEL_6","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx/-level/-l-e-v-e-l_6/index.html","searchKeys":["LEVEL_6","LEVEL_6","io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.Level.LEVEL_6"]},{"name":"LEVEL_61","description":"io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.Level.LEVEL_61","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx/-level/-l-e-v-e-l_61/index.html","searchKeys":["LEVEL_61","LEVEL_61","io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.Level.LEVEL_61"]},{"name":"LEVEL_62","description":"io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.Level.LEVEL_62","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx/-level/-l-e-v-e-l_62/index.html","searchKeys":["LEVEL_62","LEVEL_62","io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.Level.LEVEL_62"]},{"name":"LINEAR","description":"io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.TransferCharacteristics.LINEAR","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx/-transfer-characteristics/-l-i-n-e-a-r/index.html","searchKeys":["LINEAR","LINEAR","io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.TransferCharacteristics.LINEAR"]},{"name":"LOG","description":"io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.TransferCharacteristics.LOG","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx/-transfer-characteristics/-l-o-g/index.html","searchKeys":["LOG","LOG","io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.TransferCharacteristics.LOG"]},{"name":"LOG_SQRT","description":"io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.TransferCharacteristics.LOG_SQRT","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx/-transfer-characteristics/-l-o-g_-s-q-r-t/index.html","searchKeys":["LOG_SQRT","LOG_SQRT","io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.TransferCharacteristics.LOG_SQRT"]},{"name":"LONG_STRING","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.amf.AmfType.LONG_STRING","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.amf/-amf-type/-l-o-n-g_-s-t-r-i-n-g/index.html","searchKeys":["LONG_STRING","LONG_STRING","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.amf.AmfType.LONG_STRING"]},{"name":"LanguageDescr","description":"io.github.thibaultbee.streampack.core.elements.utils.av.descriptors.Tags.LanguageDescr","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.descriptors/-tags/-language-descr/index.html","searchKeys":["LanguageDescr","LanguageDescr","io.github.thibaultbee.streampack.core.elements.utils.av.descriptors.Tags.LanguageDescr"]},{"name":"MAIN","description":"io.github.thibaultbee.streampack.core.elements.utils.av.video.hevc.HEVCProfile.MAIN","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.video.hevc/-h-e-v-c-profile/-m-a-i-n/index.html","searchKeys":["MAIN","MAIN","io.github.thibaultbee.streampack.core.elements.utils.av.video.hevc.HEVCProfile.MAIN"]},{"name":"MAIN_10","description":"io.github.thibaultbee.streampack.core.elements.utils.av.video.hevc.HEVCProfile.MAIN_10","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.video.hevc/-h-e-v-c-profile/-m-a-i-n_10/index.html","searchKeys":["MAIN_10","MAIN_10","io.github.thibaultbee.streampack.core.elements.utils.av.video.hevc.HEVCProfile.MAIN_10"]},{"name":"MAIN_STILL_PICTURE","description":"io.github.thibaultbee.streampack.core.elements.utils.av.video.hevc.HEVCProfile.MAIN_STILL_PICTURE","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.video.hevc/-h-e-v-c-profile/-m-a-i-n_-s-t-i-l-l_-p-i-c-t-u-r-e/index.html","searchKeys":["MAIN_STILL_PICTURE","MAIN_STILL_PICTURE","io.github.thibaultbee.streampack.core.elements.utils.av.video.hevc.HEVCProfile.MAIN_STILL_PICTURE"]},{"name":"MAIN_SYNTHESIS","description":"io.github.thibaultbee.streampack.core.elements.utils.av.audio.AudioObjectType.MAIN_SYNTHESIS","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.audio/-audio-object-type/-m-a-i-n_-s-y-n-t-h-e-s-i-s/index.html","searchKeys":["MAIN_SYNTHESIS","MAIN_SYNTHESIS","io.github.thibaultbee.streampack.core.elements.utils.av.audio.AudioObjectType.MAIN_SYNTHESIS"]},{"name":"METADATA","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets.Pmt.Descriptor.METADATA","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets/-pmt/-descriptor/-m-e-t-a-d-a-t-a/index.html","searchKeys":["METADATA","METADATA","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets.Pmt.Descriptor.METADATA"]},{"name":"METADATA","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets.Pmt.StreamType.METADATA","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets/-pmt/-stream-type/-m-e-t-a-d-a-t-a/index.html","searchKeys":["METADATA","METADATA","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets.Pmt.StreamType.METADATA"]},{"name":"METADATA_STD","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets.Pmt.Descriptor.METADATA_STD","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets/-pmt/-descriptor/-m-e-t-a-d-a-t-a_-s-t-d/index.html","searchKeys":["METADATA_STD","METADATA_STD","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets.Pmt.Descriptor.METADATA_STD"]},{"name":"METADATA_STREAM","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets.Pes.StreamId.METADATA_STREAM","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets/-pes/-stream-id/-m-e-t-a-d-a-t-a_-s-t-r-e-a-m/index.html","searchKeys":["METADATA_STREAM","METADATA_STREAM","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets.Pes.StreamId.METADATA_STREAM"]},{"name":"META_DATA","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.video.PacketType.META_DATA","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.video/-packet-type/-m-e-t-a_-d-a-t-a/index.html","searchKeys":["META_DATA","META_DATA","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.video.PacketType.META_DATA"]},{"name":"MONO","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.SoundType.MONO","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags/-sound-type/-m-o-n-o/index.html","searchKeys":["MONO","MONO","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.SoundType.MONO"]},{"name":"MP3","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.SoundFormat.MP3","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags/-sound-format/-m-p3/index.html","searchKeys":["MP3","MP3","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.SoundFormat.MP3"]},{"name":"MP3_8K","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.SoundFormat.MP3_8K","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags/-sound-format/-m-p3_8-k/index.html","searchKeys":["MP3_8K","MP3_8K","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.SoundFormat.MP3_8K"]},{"name":"MP4","description":"io.github.thibaultbee.streampack.core.elements.endpoints.MediaContainerType.MP4","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints/-media-container-type/-m-p4/index.html","searchKeys":["MP4","MP4","io.github.thibaultbee.streampack.core.elements.endpoints.MediaContainerType.MP4"]},{"name":"MP4_IOD","description":"io.github.thibaultbee.streampack.core.elements.utils.av.descriptors.Tags.MP4_IOD","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.descriptors/-tags/-m-p4_-i-o-d/index.html","searchKeys":["MP4_IOD","MP4_IOD","io.github.thibaultbee.streampack.core.elements.utils.av.descriptors.Tags.MP4_IOD"]},{"name":"MP4_OD","description":"io.github.thibaultbee.streampack.core.elements.utils.av.descriptors.Tags.MP4_OD","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.descriptors/-tags/-m-p4_-o-d/index.html","searchKeys":["MP4_OD","MP4_OD","io.github.thibaultbee.streampack.core.elements.utils.av.descriptors.Tags.MP4_OD"]},{"name":"MPEG2_DIGITAL_HDTV","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.data.TSServiceInfo.ServiceType.MPEG2_DIGITAL_HDTV","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.data/-t-s-service-info/-service-type/-m-p-e-g2_-d-i-g-i-t-a-l_-h-d-t-v/index.html","searchKeys":["MPEG2_DIGITAL_HDTV","MPEG2_DIGITAL_HDTV","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.data.TSServiceInfo.ServiceType.MPEG2_DIGITAL_HDTV"]},{"name":"MPEG2_TS_SEQUENCE_START","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.video.PacketType.MPEG2_TS_SEQUENCE_START","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.video/-packet-type/-m-p-e-g2_-t-s_-s-e-q-u-e-n-c-e_-s-t-a-r-t/index.html","searchKeys":["MPEG2_TS_SEQUENCE_START","MPEG2_TS_SEQUENCE_START","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.video.PacketType.MPEG2_TS_SEQUENCE_START"]},{"name":"MPEG7Stream","description":"io.github.thibaultbee.streampack.core.elements.utils.av.descriptors.StreamType.MPEG7Stream","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.descriptors/-stream-type/-m-p-e-g7-stream/index.html","searchKeys":["MPEG7Stream","MPEG7Stream","io.github.thibaultbee.streampack.core.elements.utils.av.descriptors.StreamType.MPEG7Stream"]},{"name":"MPEGJStream","description":"io.github.thibaultbee.streampack.core.elements.utils.av.descriptors.StreamType.MPEGJStream","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.descriptors/-stream-type/-m-p-e-g-j-stream/index.html","searchKeys":["MPEGJStream","MPEGJStream","io.github.thibaultbee.streampack.core.elements.utils.av.descriptors.StreamType.MPEGJStream"]},{"name":"MPEG_SURROUND","description":"io.github.thibaultbee.streampack.core.elements.utils.av.audio.AudioObjectType.MPEG_SURROUND","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.audio/-audio-object-type/-m-p-e-g_-s-u-r-r-o-u-n-d/index.html","searchKeys":["MPEG_SURROUND","MPEG_SURROUND","io.github.thibaultbee.streampack.core.elements.utils.av.audio.AudioObjectType.MPEG_SURROUND"]},{"name":"MULTIVIEW_MAIN","description":"io.github.thibaultbee.streampack.core.elements.utils.av.video.hevc.HEVCProfile.MULTIVIEW_MAIN","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.video.hevc/-h-e-v-c-profile/-m-u-l-t-i-v-i-e-w_-m-a-i-n/index.html","searchKeys":["MULTIVIEW_MAIN","MULTIVIEW_MAIN","io.github.thibaultbee.streampack.core.elements.utils.av.video.hevc.HEVCProfile.MULTIVIEW_MAIN"]},{"name":"NALU","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.video.AVCPacketType.NALU","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.video/-a-v-c-packet-type/-n-a-l-u/index.html","searchKeys":["NALU","NALU","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.video.AVCPacketType.NALU"]},{"name":"NELLYMOSER","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.SoundFormat.NELLYMOSER","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags/-sound-format/-n-e-l-l-y-m-o-s-e-r/index.html","searchKeys":["NELLYMOSER","NELLYMOSER","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.SoundFormat.NELLYMOSER"]},{"name":"NELLYMOSER_16KHZ","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.SoundFormat.NELLYMOSER_16KHZ","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags/-sound-format/-n-e-l-l-y-m-o-s-e-r_16-k-h-z/index.html","searchKeys":["NELLYMOSER_16KHZ","NELLYMOSER_16KHZ","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.SoundFormat.NELLYMOSER_16KHZ"]},{"name":"NELLYMOSER_8KHZ","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.SoundFormat.NELLYMOSER_8KHZ","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags/-sound-format/-n-e-l-l-y-m-o-s-e-r_8-k-h-z/index.html","searchKeys":["NELLYMOSER_8KHZ","NELLYMOSER_8KHZ","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.SoundFormat.NELLYMOSER_8KHZ"]},{"name":"NOT_A_LEADING_SAMPLE","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models.IsLeading.NOT_A_LEADING_SAMPLE","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models/-is-leading/-n-o-t_-a_-l-e-a-d-i-n-g_-s-a-m-p-l-e/index.html","searchKeys":["NOT_A_LEADING_SAMPLE","NOT_A_LEADING_SAMPLE","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models.IsLeading.NOT_A_LEADING_SAMPLE"]},{"name":"NOT_THIS_ONE","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models.SampleIsDependedOn.NOT_THIS_ONE","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models/-sample-is-depended-on/-n-o-t_-t-h-i-s_-o-n-e/index.html","searchKeys":["NOT_THIS_ONE","NOT_THIS_ONE","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models.SampleIsDependedOn.NOT_THIS_ONE"]},{"name":"NO_OTHER","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models.SampleDependsOn.NO_OTHER","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models/-sample-depends-on/-n-o_-o-t-h-e-r/index.html","searchKeys":["NO_OTHER","NO_OTHER","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models.SampleDependsOn.NO_OTHER"]},{"name":"NO_REDUNDANT_CODING","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models.HasRedundancy.NO_REDUNDANT_CODING","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models/-has-redundancy/-n-o_-r-e-d-u-n-d-a-n-t_-c-o-d-i-n-g/index.html","searchKeys":["NO_REDUNDANT_CODING","NO_REDUNDANT_CODING","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models.HasRedundancy.NO_REDUNDANT_CODING"]},{"name":"NULL","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.amf.AmfType.NULL","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.amf/-amf-type/-n-u-l-l/index.html","searchKeys":["NULL","NULL","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.amf.AmfType.NULL"]},{"name":"NULL","description":"io.github.thibaultbee.streampack.core.elements.utils.av.audio.AudioObjectType.NULL","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.audio/-audio-object-type/-n-u-l-l/index.html","searchKeys":["NULL","NULL","io.github.thibaultbee.streampack.core.elements.utils.av.audio.AudioObjectType.NULL"]},{"name":"NUMBER","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.amf.AmfType.NUMBER","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.amf/-amf-type/-n-u-m-b-e-r/index.html","searchKeys":["NUMBER","NUMBER","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.amf.AmfType.NUMBER"]},{"name":"OBJECT","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.amf.AmfType.OBJECT","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.amf/-amf-type/-o-b-j-e-c-t/index.html","searchKeys":["OBJECT","OBJECT","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.amf.AmfType.OBJECT"]},{"name":"OBJECT_END","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.amf.AmfType.OBJECT_END","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.amf/-amf-type/-o-b-j-e-c-t_-e-n-d/index.html","searchKeys":["OBJECT_END","OBJECT_END","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.amf.AmfType.OBJECT_END"]},{"name":"OCICreationDateDescr","description":"io.github.thibaultbee.streampack.core.elements.utils.av.descriptors.Tags.OCICreationDateDescr","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.descriptors/-tags/-o-c-i-creation-date-descr/index.html","searchKeys":["OCICreationDateDescr","OCICreationDateDescr","io.github.thibaultbee.streampack.core.elements.utils.av.descriptors.Tags.OCICreationDateDescr"]},{"name":"OCICreatorNameDescr","description":"io.github.thibaultbee.streampack.core.elements.utils.av.descriptors.Tags.OCICreatorNameDescr","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.descriptors/-tags/-o-c-i-creator-name-descr/index.html","searchKeys":["OCICreatorNameDescr","OCICreatorNameDescr","io.github.thibaultbee.streampack.core.elements.utils.av.descriptors.Tags.OCICreatorNameDescr"]},{"name":"OGG","description":"io.github.thibaultbee.streampack.core.elements.endpoints.MediaContainerType.OGG","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints/-media-container-type/-o-g-g/index.html","searchKeys":["OGG","OGG","io.github.thibaultbee.streampack.core.elements.endpoints.MediaContainerType.OGG"]},{"name":"OTHERS","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models.SampleDependsOn.OTHERS","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models/-sample-depends-on/-o-t-h-e-r-s/index.html","searchKeys":["OTHERS","OTHERS","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models.SampleDependsOn.OTHERS"]},{"name":"ObjectContentInfoStream","description":"io.github.thibaultbee.streampack.core.elements.utils.av.descriptors.StreamType.ObjectContentInfoStream","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.descriptors/-stream-type/-object-content-info-stream/index.html","searchKeys":["ObjectContentInfoStream","ObjectContentInfoStream","io.github.thibaultbee.streampack.core.elements.utils.av.descriptors.StreamType.ObjectContentInfoStream"]},{"name":"ObjectDescr","description":"io.github.thibaultbee.streampack.core.elements.utils.av.descriptors.Tags.ObjectDescr","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.descriptors/-tags/-object-descr/index.html","searchKeys":["ObjectDescr","ObjectDescr","io.github.thibaultbee.streampack.core.elements.utils.av.descriptors.Tags.ObjectDescr"]},{"name":"ObjectDescriptorStream","description":"io.github.thibaultbee.streampack.core.elements.utils.av.descriptors.StreamType.ObjectDescriptorStream","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.descriptors/-stream-type/-object-descriptor-stream/index.html","searchKeys":["ObjectDescriptorStream","ObjectDescriptorStream","io.github.thibaultbee.streampack.core.elements.utils.av.descriptors.StreamType.ObjectDescriptorStream"]},{"name":"PCM","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.SoundFormat.PCM","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags/-sound-format/-p-c-m/index.html","searchKeys":["PCM","PCM","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.SoundFormat.PCM"]},{"name":"PCM_LE","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.SoundFormat.PCM_LE","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags/-sound-format/-p-c-m_-l-e/index.html","searchKeys":["PCM_LE","PCM_LE","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.SoundFormat.PCM_LE"]},{"name":"PPS","description":"io.github.thibaultbee.streampack.core.elements.utils.av.video.hevc.HEVCDecoderConfigurationRecord.NalUnit.Type.PPS","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.video.hevc/-h-e-v-c-decoder-configuration-record/-nal-unit/-type/-p-p-s/index.html","searchKeys":["PPS","PPS","io.github.thibaultbee.streampack.core.elements.utils.av.video.hevc.HEVCDecoderConfigurationRecord.NalUnit.Type.PPS"]},{"name":"PREFIX_SEI","description":"io.github.thibaultbee.streampack.core.elements.utils.av.video.hevc.HEVCDecoderConfigurationRecord.NalUnit.Type.PREFIX_SEI","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.video.hevc/-h-e-v-c-decoder-configuration-record/-nal-unit/-type/-p-r-e-f-i-x_-s-e-i/index.html","searchKeys":["PREFIX_SEI","PREFIX_SEI","io.github.thibaultbee.streampack.core.elements.utils.av.video.hevc.HEVCDecoderConfigurationRecord.NalUnit.Type.PREFIX_SEI"]},{"name":"PRESERVE","description":"io.github.thibaultbee.streampack.core.elements.processing.video.outputs.AspectRatioMode.PRESERVE","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.processing.video.outputs/-aspect-ratio-mode/-p-r-e-s-e-r-v-e/index.html","searchKeys":["PRESERVE","PRESERVE","io.github.thibaultbee.streampack.core.elements.processing.video.outputs.AspectRatioMode.PRESERVE"]},{"name":"PRIVATE_DATA","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets.Pmt.StreamType.PRIVATE_DATA","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets/-pmt/-stream-type/-p-r-i-v-a-t-e_-d-a-t-a/index.html","searchKeys":["PRIVATE_DATA","PRIVATE_DATA","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets.Pmt.StreamType.PRIVATE_DATA"]},{"name":"PRIVATE_SECTION","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets.Pmt.StreamType.PRIVATE_SECTION","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets/-pmt/-stream-type/-p-r-i-v-a-t-e_-s-e-c-t-i-o-n/index.html","searchKeys":["PRIVATE_SECTION","PRIVATE_SECTION","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets.Pmt.StreamType.PRIVATE_SECTION"]},{"name":"PRIVATE_STREAM_1","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets.Pes.StreamId.PRIVATE_STREAM_1","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets/-pes/-stream-id/-p-r-i-v-a-t-e_-s-t-r-e-a-m_1/index.html","searchKeys":["PRIVATE_STREAM_1","PRIVATE_STREAM_1","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets.Pes.StreamId.PRIVATE_STREAM_1"]},{"name":"PROFILE","description":"io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.VP9CodecPrivate.CodecFeature.Ids.PROFILE","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx/-v-p9-codec-private/-codec-feature/-ids/-p-r-o-f-i-l-e/index.html","searchKeys":["PROFILE","PROFILE","io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.VP9CodecPrivate.CodecFeature.Ids.PROFILE"]},{"name":"PROFILE_0","description":"io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.Profile.PROFILE_0","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx/-profile/-p-r-o-f-i-l-e_0/index.html","searchKeys":["PROFILE_0","PROFILE_0","io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.Profile.PROFILE_0"]},{"name":"PROFILE_1","description":"io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.Profile.PROFILE_1","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx/-profile/-p-r-o-f-i-l-e_1/index.html","searchKeys":["PROFILE_1","PROFILE_1","io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.Profile.PROFILE_1"]},{"name":"PROFILE_2","description":"io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.Profile.PROFILE_2","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx/-profile/-p-r-o-f-i-l-e_2/index.html","searchKeys":["PROFILE_2","PROFILE_2","io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.Profile.PROFILE_2"]},{"name":"PROFILE_3","description":"io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.Profile.PROFILE_3","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx/-profile/-p-r-o-f-i-l-e_3/index.html","searchKeys":["PROFILE_3","PROFILE_3","io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.Profile.PROFILE_3"]},{"name":"PS","description":"io.github.thibaultbee.streampack.core.elements.utils.av.audio.AudioObjectType.PS","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.audio/-audio-object-type/-p-s/index.html","searchKeys":["PS","PS","io.github.thibaultbee.streampack.core.elements.utils.av.audio.AudioObjectType.PS"]},{"name":"PUSH","description":"io.github.thibaultbee.streampack.core.pipelines.StreamerPipeline.AudioOutputMode.PUSH","location":"streampack-core/io.github.thibaultbee.streampack.core.pipelines/-streamer-pipeline/-audio-output-mode/-p-u-s-h/index.html","searchKeys":["PUSH","PUSH","io.github.thibaultbee.streampack.core.pipelines.StreamerPipeline.AudioOutputMode.PUSH"]},{"name":"ProfileLevelIndicationIndexDescr","description":"io.github.thibaultbee.streampack.core.elements.utils.av.descriptors.Tags.ProfileLevelIndicationIndexDescr","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.descriptors/-tags/-profile-level-indication-index-descr/index.html","searchKeys":["ProfileLevelIndicationIndexDescr","ProfileLevelIndicationIndexDescr","io.github.thibaultbee.streampack.core.elements.utils.av.descriptors.Tags.ProfileLevelIndicationIndexDescr"]},{"name":"QoSDescr","description":"io.github.thibaultbee.streampack.core.elements.utils.av.descriptors.Tags.QoSDescr","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.descriptors/-tags/-qo-s-descr/index.html","searchKeys":["QoSDescr","QoSDescr","io.github.thibaultbee.streampack.core.elements.utils.av.descriptors.Tags.QoSDescr"]},{"name":"RAW","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.AACPacketType.RAW","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags/-a-a-c-packet-type/-r-a-w/index.html","searchKeys":["RAW","RAW","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.AACPacketType.RAW"]},{"name":"REDUNDANT_CODING","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models.HasRedundancy.REDUNDANT_CODING","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models/-has-redundancy/-r-e-d-u-n-d-a-n-t_-c-o-d-i-n-g/index.html","searchKeys":["REDUNDANT_CODING","REDUNDANT_CODING","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models.HasRedundancy.REDUNDANT_CODING"]},{"name":"REGISTRATION","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets.Pmt.Descriptor.REGISTRATION","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets/-pmt/-descriptor/-r-e-g-i-s-t-r-a-t-i-o-n/index.html","searchKeys":["REGISTRATION","REGISTRATION","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets.Pmt.Descriptor.REGISTRATION"]},{"name":"RESERVED","description":"io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.MatrixCoefficients.RESERVED","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx/-matrix-coefficients/-r-e-s-e-r-v-e-d/index.html","searchKeys":["RESERVED","RESERVED","io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.MatrixCoefficients.RESERVED"]},{"name":"REXT","description":"io.github.thibaultbee.streampack.core.elements.utils.av.video.hevc.HEVCProfile.REXT","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.video.hevc/-h-e-v-c-profile/-r-e-x-t/index.html","searchKeys":["REXT","REXT","io.github.thibaultbee.streampack.core.elements.utils.av.video.hevc.HEVCProfile.REXT"]},{"name":"RTMP","description":"io.github.thibaultbee.streampack.core.elements.endpoints.MediaSinkType.RTMP","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints/-media-sink-type/-r-t-m-p/index.html","searchKeys":["RTMP","RTMP","io.github.thibaultbee.streampack.core.elements.endpoints.MediaSinkType.RTMP"]},{"name":"RatingDescr","description":"io.github.thibaultbee.streampack.core.elements.utils.av.descriptors.Tags.RatingDescr","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.descriptors/-tags/-rating-descr/index.html","searchKeys":["RatingDescr","RatingDescr","io.github.thibaultbee.streampack.core.elements.utils.av.descriptors.Tags.RatingDescr"]},{"name":"RegistrationDescr","description":"io.github.thibaultbee.streampack.core.elements.utils.av.descriptors.Tags.RegistrationDescr","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.descriptors/-tags/-registration-descr/index.html","searchKeys":["RegistrationDescr","RegistrationDescr","io.github.thibaultbee.streampack.core.elements.utils.av.descriptors.Tags.RegistrationDescr"]},{"name":"SAMPLE_COMPOSITION_TIME_OFFSETS_PRESENT","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.TrackRunBox.TrackRunFlag.SAMPLE_COMPOSITION_TIME_OFFSETS_PRESENT","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-track-run-box/-track-run-flag/-s-a-m-p-l-e_-c-o-m-p-o-s-i-t-i-o-n_-t-i-m-e_-o-f-f-s-e-t-s_-p-r-e-s-e-n-t/index.html","searchKeys":["SAMPLE_COMPOSITION_TIME_OFFSETS_PRESENT","SAMPLE_COMPOSITION_TIME_OFFSETS_PRESENT","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.TrackRunBox.TrackRunFlag.SAMPLE_COMPOSITION_TIME_OFFSETS_PRESENT"]},{"name":"SAMPLE_DESCRIPTION_INDEX_PRESENT","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.TrackFragmentHeaderBox.TrackFragmentFlag.SAMPLE_DESCRIPTION_INDEX_PRESENT","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-track-fragment-header-box/-track-fragment-flag/-s-a-m-p-l-e_-d-e-s-c-r-i-p-t-i-o-n_-i-n-d-e-x_-p-r-e-s-e-n-t/index.html","searchKeys":["SAMPLE_DESCRIPTION_INDEX_PRESENT","SAMPLE_DESCRIPTION_INDEX_PRESENT","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.TrackFragmentHeaderBox.TrackFragmentFlag.SAMPLE_DESCRIPTION_INDEX_PRESENT"]},{"name":"SAMPLE_DURATION_PRESENT","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.TrackRunBox.TrackRunFlag.SAMPLE_DURATION_PRESENT","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-track-run-box/-track-run-flag/-s-a-m-p-l-e_-d-u-r-a-t-i-o-n_-p-r-e-s-e-n-t/index.html","searchKeys":["SAMPLE_DURATION_PRESENT","SAMPLE_DURATION_PRESENT","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.TrackRunBox.TrackRunFlag.SAMPLE_DURATION_PRESENT"]},{"name":"SAMPLE_FLAGS_PRESENT","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.TrackRunBox.TrackRunFlag.SAMPLE_FLAGS_PRESENT","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-track-run-box/-track-run-flag/-s-a-m-p-l-e_-f-l-a-g-s_-p-r-e-s-e-n-t/index.html","searchKeys":["SAMPLE_FLAGS_PRESENT","SAMPLE_FLAGS_PRESENT","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.TrackRunBox.TrackRunFlag.SAMPLE_FLAGS_PRESENT"]},{"name":"SAMPLE_SIZE_PRESENT","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.TrackRunBox.TrackRunFlag.SAMPLE_SIZE_PRESENT","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-track-run-box/-track-run-flag/-s-a-m-p-l-e_-s-i-z-e_-p-r-e-s-e-n-t/index.html","searchKeys":["SAMPLE_SIZE_PRESENT","SAMPLE_SIZE_PRESENT","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.TrackRunBox.TrackRunFlag.SAMPLE_SIZE_PRESENT"]},{"name":"SAOC","description":"io.github.thibaultbee.streampack.core.elements.utils.av.audio.AudioObjectType.SAOC","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.audio/-audio-object-type/-s-a-o-c/index.html","searchKeys":["SAOC","SAOC","io.github.thibaultbee.streampack.core.elements.utils.av.audio.AudioObjectType.SAOC"]},{"name":"SBR","description":"io.github.thibaultbee.streampack.core.elements.utils.av.audio.AudioObjectType.SBR","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.audio/-audio-object-type/-s-b-r/index.html","searchKeys":["SBR","SBR","io.github.thibaultbee.streampack.core.elements.utils.av.audio.AudioObjectType.SBR"]},{"name":"SCALABLE_MAIN","description":"io.github.thibaultbee.streampack.core.elements.utils.av.video.hevc.HEVCProfile.SCALABLE_MAIN","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.video.hevc/-h-e-v-c-profile/-s-c-a-l-a-b-l-e_-m-a-i-n/index.html","searchKeys":["SCALABLE_MAIN","SCALABLE_MAIN","io.github.thibaultbee.streampack.core.elements.utils.av.video.hevc.HEVCProfile.SCALABLE_MAIN"]},{"name":"SCALABLE_REXT","description":"io.github.thibaultbee.streampack.core.elements.utils.av.video.hevc.HEVCProfile.SCALABLE_REXT","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.video.hevc/-h-e-v-c-profile/-s-c-a-l-a-b-l-e_-r-e-x-t/index.html","searchKeys":["SCALABLE_REXT","SCALABLE_REXT","io.github.thibaultbee.streampack.core.elements.utils.av.video.hevc.HEVCProfile.SCALABLE_REXT"]},{"name":"SCREEN_1","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.video.CodecID.SCREEN_1","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.video/-codec-i-d/-s-c-r-e-e-n_1/index.html","searchKeys":["SCREEN_1","SCREEN_1","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.video.CodecID.SCREEN_1"]},{"name":"SCREEN_2","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.video.CodecID.SCREEN_2","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.video/-codec-i-d/-s-c-r-e-e-n_2/index.html","searchKeys":["SCREEN_2","SCREEN_2","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.video.CodecID.SCREEN_2"]},{"name":"SCREEN_EXTENDED","description":"io.github.thibaultbee.streampack.core.elements.utils.av.video.hevc.HEVCProfile.SCREEN_EXTENDED","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.video.hevc/-h-e-v-c-profile/-s-c-r-e-e-n_-e-x-t-e-n-d-e-d/index.html","searchKeys":["SCREEN_EXTENDED","SCREEN_EXTENDED","io.github.thibaultbee.streampack.core.elements.utils.av.video.hevc.HEVCProfile.SCREEN_EXTENDED"]},{"name":"SCRIPT","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.TagType.SCRIPT","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags/-tag-type/-s-c-r-i-p-t/index.html","searchKeys":["SCRIPT","SCRIPT","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.TagType.SCRIPT"]},{"name":"SEQUENCE_END","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.video.PacketType.SEQUENCE_END","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.video/-packet-type/-s-e-q-u-e-n-c-e_-e-n-d/index.html","searchKeys":["SEQUENCE_END","SEQUENCE_END","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.video.PacketType.SEQUENCE_END"]},{"name":"SEQUENCE_HEADER","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.AACPacketType.SEQUENCE_HEADER","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags/-a-a-c-packet-type/-s-e-q-u-e-n-c-e_-h-e-a-d-e-r/index.html","searchKeys":["SEQUENCE_HEADER","SEQUENCE_HEADER","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.AACPacketType.SEQUENCE_HEADER"]},{"name":"SEQUENCE_HEADER","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.video.AVCPacketType.SEQUENCE_HEADER","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.video/-a-v-c-packet-type/-s-e-q-u-e-n-c-e_-h-e-a-d-e-r/index.html","searchKeys":["SEQUENCE_HEADER","SEQUENCE_HEADER","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.video.AVCPacketType.SEQUENCE_HEADER"]},{"name":"SEQUENCE_START","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.video.PacketType.SEQUENCE_START","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.video/-packet-type/-s-e-q-u-e-n-c-e_-s-t-a-r-t/index.html","searchKeys":["SEQUENCE_START","SEQUENCE_START","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.video.PacketType.SEQUENCE_START"]},{"name":"SL","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets.Pmt.Descriptor.SL","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets/-pmt/-descriptor/-s-l/index.html","searchKeys":["SL","SL","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets.Pmt.Descriptor.SL"]},{"name":"SLConfigDescr","description":"io.github.thibaultbee.streampack.core.elements.utils.av.descriptors.Tags.SLConfigDescr","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.descriptors/-tags/-s-l-config-descr/index.html","searchKeys":["SLConfigDescr","SLConfigDescr","io.github.thibaultbee.streampack.core.elements.utils.av.descriptors.Tags.SLConfigDescr"]},{"name":"SLS","description":"io.github.thibaultbee.streampack.core.elements.utils.av.audio.AudioObjectType.SLS","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.audio/-audio-object-type/-s-l-s/index.html","searchKeys":["SLS","SLS","io.github.thibaultbee.streampack.core.elements.utils.av.audio.AudioObjectType.SLS"]},{"name":"SLS_NON_CORE","description":"io.github.thibaultbee.streampack.core.elements.utils.av.audio.AudioObjectType.SLS_NON_CORE","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.audio/-audio-object-type/-s-l-s_-n-o-n_-c-o-r-e/index.html","searchKeys":["SLS_NON_CORE","SLS_NON_CORE","io.github.thibaultbee.streampack.core.elements.utils.av.audio.AudioObjectType.SLS_NON_CORE"]},{"name":"SMPTE170M","description":"io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.ColorPrimaries.SMPTE170M","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx/-color-primaries/-s-m-p-t-e170-m/index.html","searchKeys":["SMPTE170M","SMPTE170M","io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.ColorPrimaries.SMPTE170M"]},{"name":"SMPTE240M","description":"io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.ColorPrimaries.SMPTE240M","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx/-color-primaries/-s-m-p-t-e240-m/index.html","searchKeys":["SMPTE240M","SMPTE240M","io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.ColorPrimaries.SMPTE240M"]},{"name":"SMPTE428","description":"io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.ColorPrimaries.SMPTE428","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx/-color-primaries/-s-m-p-t-e428/index.html","searchKeys":["SMPTE428","SMPTE428","io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.ColorPrimaries.SMPTE428"]},{"name":"SMPTE431","description":"io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.ColorPrimaries.SMPTE431","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx/-color-primaries/-s-m-p-t-e431/index.html","searchKeys":["SMPTE431","SMPTE431","io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.ColorPrimaries.SMPTE431"]},{"name":"SMPTE432","description":"io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.ColorPrimaries.SMPTE432","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx/-color-primaries/-s-m-p-t-e432/index.html","searchKeys":["SMPTE432","SMPTE432","io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.ColorPrimaries.SMPTE432"]},{"name":"SMPTEST428_1","description":"io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.ColorPrimaries.SMPTEST428_1","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx/-color-primaries/-s-m-p-t-e-s-t428_1/index.html","searchKeys":["SMPTEST428_1","SMPTEST428_1","io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.ColorPrimaries.SMPTEST428_1"]},{"name":"SMPTE_170M","description":"io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.MatrixCoefficients.SMPTE_170M","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx/-matrix-coefficients/-s-m-p-t-e_170-m/index.html","searchKeys":["SMPTE_170M","SMPTE_170M","io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.MatrixCoefficients.SMPTE_170M"]},{"name":"SMPTE_170M","description":"io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.TransferCharacteristics.SMPTE_170M","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx/-transfer-characteristics/-s-m-p-t-e_170-m/index.html","searchKeys":["SMPTE_170M","SMPTE_170M","io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.TransferCharacteristics.SMPTE_170M"]},{"name":"SMPTE_2085","description":"io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.MatrixCoefficients.SMPTE_2085","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx/-matrix-coefficients/-s-m-p-t-e_2085/index.html","searchKeys":["SMPTE_2085","SMPTE_2085","io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.MatrixCoefficients.SMPTE_2085"]},{"name":"SMPTE_240M","description":"io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.MatrixCoefficients.SMPTE_240M","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx/-matrix-coefficients/-s-m-p-t-e_240-m/index.html","searchKeys":["SMPTE_240M","SMPTE_240M","io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.MatrixCoefficients.SMPTE_240M"]},{"name":"SMPTE_240M","description":"io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.TransferCharacteristics.SMPTE_240M","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx/-transfer-characteristics/-s-m-p-t-e_240-m/index.html","searchKeys":["SMPTE_240M","SMPTE_240M","io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.TransferCharacteristics.SMPTE_240M"]},{"name":"SMPTE_ST2084","description":"io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.TransferCharacteristics.SMPTE_ST2084","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx/-transfer-characteristics/-s-m-p-t-e_-s-t2084/index.html","searchKeys":["SMPTE_ST2084","SMPTE_ST2084","io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.TransferCharacteristics.SMPTE_ST2084"]},{"name":"SMPTE_ST428","description":"io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.TransferCharacteristics.SMPTE_ST428","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx/-transfer-characteristics/-s-m-p-t-e_-s-t428/index.html","searchKeys":["SMPTE_ST428","SMPTE_ST428","io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.TransferCharacteristics.SMPTE_ST428"]},{"name":"SMR_MAIN","description":"io.github.thibaultbee.streampack.core.elements.utils.av.audio.AudioObjectType.SMR_MAIN","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.audio/-audio-object-type/-s-m-r_-m-a-i-n/index.html","searchKeys":["SMR_MAIN","SMR_MAIN","io.github.thibaultbee.streampack.core.elements.utils.av.audio.AudioObjectType.SMR_MAIN"]},{"name":"SMR_SIMPLE","description":"io.github.thibaultbee.streampack.core.elements.utils.av.audio.AudioObjectType.SMR_SIMPLE","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.audio/-audio-object-type/-s-m-r_-s-i-m-p-l-e/index.html","searchKeys":["SMR_SIMPLE","SMR_SIMPLE","io.github.thibaultbee.streampack.core.elements.utils.av.audio.AudioObjectType.SMR_SIMPLE"]},{"name":"SORENSON_H263","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.video.CodecID.SORENSON_H263","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.video/-codec-i-d/-s-o-r-e-n-s-o-n_-h263/index.html","searchKeys":["SORENSON_H263","SORENSON_H263","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.video.CodecID.SORENSON_H263"]},{"name":"SOUND","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.HandlerBox.HandlerType.SOUND","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-handler-box/-handler-type/-s-o-u-n-d/index.html","searchKeys":["SOUND","SOUND","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.HandlerBox.HandlerType.SOUND"]},{"name":"SPECIFIC","description":"io.github.thibaultbee.streampack.core.elements.utils.av.audio.ChannelConfiguration.SPECIFIC","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.audio/-channel-configuration/-s-p-e-c-i-f-i-c/index.html","searchKeys":["SPECIFIC","SPECIFIC","io.github.thibaultbee.streampack.core.elements.utils.av.audio.ChannelConfiguration.SPECIFIC"]},{"name":"SPEEX","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.SoundFormat.SPEEX","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags/-sound-format/-s-p-e-e-x/index.html","searchKeys":["SPEEX","SPEEX","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.SoundFormat.SPEEX"]},{"name":"SPS","description":"io.github.thibaultbee.streampack.core.elements.utils.av.video.hevc.HEVCDecoderConfigurationRecord.NalUnit.Type.SPS","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.video.hevc/-h-e-v-c-decoder-configuration-record/-nal-unit/-type/-s-p-s/index.html","searchKeys":["SPS","SPS","io.github.thibaultbee.streampack.core.elements.utils.av.video.hevc.HEVCDecoderConfigurationRecord.NalUnit.Type.SPS"]},{"name":"SRT","description":"io.github.thibaultbee.streampack.core.elements.endpoints.MediaSinkType.SRT","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints/-media-sink-type/-s-r-t/index.html","searchKeys":["SRT","SRT","io.github.thibaultbee.streampack.core.elements.endpoints.MediaSinkType.SRT"]},{"name":"SSC","description":"io.github.thibaultbee.streampack.core.elements.utils.av.audio.AudioObjectType.SSC","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.audio/-audio-object-type/-s-s-c/index.html","searchKeys":["SSC","SSC","io.github.thibaultbee.streampack.core.elements.utils.av.audio.AudioObjectType.SSC"]},{"name":"STEREO","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.SoundType.STEREO","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags/-sound-type/-s-t-e-r-e-o/index.html","searchKeys":["STEREO","STEREO","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.SoundType.STEREO"]},{"name":"STRETCH","description":"io.github.thibaultbee.streampack.core.elements.processing.video.outputs.AspectRatioMode.STRETCH","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.processing.video.outputs/-aspect-ratio-mode/-s-t-r-e-t-c-h/index.html","searchKeys":["STRETCH","STRETCH","io.github.thibaultbee.streampack.core.elements.processing.video.outputs.AspectRatioMode.STRETCH"]},{"name":"STRICT_ARRAY","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.amf.AmfType.STRICT_ARRAY","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.amf/-amf-type/-s-t-r-i-c-t_-a-r-r-a-y/index.html","searchKeys":["STRICT_ARRAY","STRICT_ARRAY","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.amf.AmfType.STRICT_ARRAY"]},{"name":"STRING","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.amf.AmfType.STRING","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.amf/-amf-type/-s-t-r-i-n-g/index.html","searchKeys":["STRING","STRING","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.amf.AmfType.STRING"]},{"name":"SUFFIX_SEI","description":"io.github.thibaultbee.streampack.core.elements.utils.av.video.hevc.HEVCDecoderConfigurationRecord.NalUnit.Type.SUFFIX_SEI","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.video.hevc/-h-e-v-c-decoder-configuration-record/-nal-unit/-type/-s-u-f-f-i-x_-s-e-i/index.html","searchKeys":["SUFFIX_SEI","SUFFIX_SEI","io.github.thibaultbee.streampack.core.elements.utils.av.video.hevc.HEVCDecoderConfigurationRecord.NalUnit.Type.SUFFIX_SEI"]},{"name":"SURFACE","description":"io.github.thibaultbee.streampack.core.elements.encoders.EncoderMode.SURFACE","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.encoders/-encoder-mode/-s-u-r-f-a-c-e/index.html","searchKeys":["SURFACE","SURFACE","io.github.thibaultbee.streampack.core.elements.encoders.EncoderMode.SURFACE"]},{"name":"SYNC","description":"io.github.thibaultbee.streampack.core.elements.encoders.EncoderMode.SYNC","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.encoders/-encoder-mode/-s-y-n-c/index.html","searchKeys":["SYNC","SYNC","io.github.thibaultbee.streampack.core.elements.encoders.EncoderMode.SYNC"]},{"name":"S_16BITS","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.SoundSize.S_16BITS","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags/-sound-size/-s_16-b-i-t-s/index.html","searchKeys":["S_16BITS","S_16BITS","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.SoundSize.S_16BITS"]},{"name":"S_8BITS","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.SoundSize.S_8BITS","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags/-sound-size/-s_8-b-i-t-s/index.html","searchKeys":["S_8BITS","S_8BITS","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.SoundSize.S_8BITS"]},{"name":"SceneDescriptionStream","description":"io.github.thibaultbee.streampack.core.elements.utils.av.descriptors.StreamType.SceneDescriptionStream","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.descriptors/-stream-type/-scene-description-stream/index.html","searchKeys":["SceneDescriptionStream","SceneDescriptionStream","io.github.thibaultbee.streampack.core.elements.utils.av.descriptors.StreamType.SceneDescriptionStream"]},{"name":"ShortTextualDescr","description":"io.github.thibaultbee.streampack.core.elements.utils.av.descriptors.Tags.ShortTextualDescr","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.descriptors/-tags/-short-textual-descr/index.html","searchKeys":["ShortTextualDescr","ShortTextualDescr","io.github.thibaultbee.streampack.core.elements.utils.av.descriptors.Tags.ShortTextualDescr"]},{"name":"SmpteCameraPositionDescr","description":"io.github.thibaultbee.streampack.core.elements.utils.av.descriptors.Tags.SmpteCameraPositionDescr","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.descriptors/-tags/-smpte-camera-position-descr/index.html","searchKeys":["SmpteCameraPositionDescr","SmpteCameraPositionDescr","io.github.thibaultbee.streampack.core.elements.utils.av.descriptors.Tags.SmpteCameraPositionDescr"]},{"name":"SupplContentIdentDescr","description":"io.github.thibaultbee.streampack.core.elements.utils.av.descriptors.Tags.SupplContentIdentDescr","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.descriptors/-tags/-suppl-content-ident-descr/index.html","searchKeys":["SupplContentIdentDescr","SupplContentIdentDescr","io.github.thibaultbee.streampack.core.elements.utils.av.descriptors.Tags.SupplContentIdentDescr"]},{"name":"TELETEXT","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.data.TSServiceInfo.ServiceType.TELETEXT","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.data/-t-s-service-info/-service-type/-t-e-l-e-t-e-x-t/index.html","searchKeys":["TELETEXT","TELETEXT","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.data.TSServiceInfo.ServiceType.TELETEXT"]},{"name":"THIS_ONE","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models.SampleIsDependedOn.THIS_ONE","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models/-sample-is-depended-on/-t-h-i-s_-o-n-e/index.html","searchKeys":["THIS_ONE","THIS_ONE","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models.SampleIsDependedOn.THIS_ONE"]},{"name":"THREED_MAIN","description":"io.github.thibaultbee.streampack.core.elements.utils.av.video.hevc.HEVCProfile.THREED_MAIN","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.video.hevc/-h-e-v-c-profile/-t-h-r-e-e-d_-m-a-i-n/index.html","searchKeys":["THREED_MAIN","THREED_MAIN","io.github.thibaultbee.streampack.core.elements.utils.av.video.hevc.HEVCProfile.THREED_MAIN"]},{"name":"THREEGP","description":"io.github.thibaultbee.streampack.core.elements.endpoints.MediaContainerType.THREEGP","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints/-media-container-type/-t-h-r-e-e-g-p/index.html","searchKeys":["THREEGP","THREEGP","io.github.thibaultbee.streampack.core.elements.endpoints.MediaContainerType.THREEGP"]},{"name":"TS","description":"io.github.thibaultbee.streampack.core.elements.endpoints.MediaContainerType.TS","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints/-media-container-type/-t-s/index.html","searchKeys":["TS","TS","io.github.thibaultbee.streampack.core.elements.endpoints.MediaContainerType.TS"]},{"name":"TTSI","description":"io.github.thibaultbee.streampack.core.elements.utils.av.audio.AudioObjectType.TTSI","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.audio/-audio-object-type/-t-t-s-i/index.html","searchKeys":["TTSI","TTSI","io.github.thibaultbee.streampack.core.elements.utils.av.audio.AudioObjectType.TTSI"]},{"name":"TWIN_VQ","description":"io.github.thibaultbee.streampack.core.elements.utils.av.audio.AudioObjectType.TWIN_VQ","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.audio/-audio-object-type/-t-w-i-n_-v-q/index.html","searchKeys":["TWIN_VQ","TWIN_VQ","io.github.thibaultbee.streampack.core.elements.utils.av.audio.AudioObjectType.TWIN_VQ"]},{"name":"UNDEFINED","description":"io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.Level.UNDEFINED","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx/-level/-u-n-d-e-f-i-n-e-d/index.html","searchKeys":["UNDEFINED","UNDEFINED","io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.Level.UNDEFINED"]},{"name":"UNKNOWN","description":"io.github.thibaultbee.streampack.core.elements.data.PacketType.UNKNOWN","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.data/-packet-type/-u-n-k-n-o-w-n/index.html","searchKeys":["UNKNOWN","UNKNOWN","io.github.thibaultbee.streampack.core.elements.data.PacketType.UNKNOWN"]},{"name":"UNKNOWN","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models.HasRedundancy.UNKNOWN","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models/-has-redundancy/-u-n-k-n-o-w-n/index.html","searchKeys":["UNKNOWN","UNKNOWN","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models.HasRedundancy.UNKNOWN"]},{"name":"UNKNOWN","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models.IsLeading.UNKNOWN","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models/-is-leading/-u-n-k-n-o-w-n/index.html","searchKeys":["UNKNOWN","UNKNOWN","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models.IsLeading.UNKNOWN"]},{"name":"UNKNOWN","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models.SampleDependsOn.UNKNOWN","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models/-sample-depends-on/-u-n-k-n-o-w-n/index.html","searchKeys":["UNKNOWN","UNKNOWN","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models.SampleDependsOn.UNKNOWN"]},{"name":"UNKNOWN","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models.SampleIsDependedOn.UNKNOWN","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models/-sample-is-depended-on/-u-n-k-n-o-w-n/index.html","searchKeys":["UNKNOWN","UNKNOWN","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models.SampleIsDependedOn.UNKNOWN"]},{"name":"UNKNOWN","description":"io.github.thibaultbee.streampack.core.elements.processing.video.utils.GLUtils.InputFormat.UNKNOWN","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.processing.video.utils/-g-l-utils/-input-format/-u-n-k-n-o-w-n/index.html","searchKeys":["UNKNOWN","UNKNOWN","io.github.thibaultbee.streampack.core.elements.processing.video.utils.GLUtils.InputFormat.UNKNOWN"]},{"name":"UNSPECIFIED","description":"io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.ColorPrimaries.UNSPECIFIED","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx/-color-primaries/-u-n-s-p-e-c-i-f-i-e-d/index.html","searchKeys":["UNSPECIFIED","UNSPECIFIED","io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.ColorPrimaries.UNSPECIFIED"]},{"name":"UNSPECIFIED","description":"io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.MatrixCoefficients.UNSPECIFIED","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx/-matrix-coefficients/-u-n-s-p-e-c-i-f-i-e-d/index.html","searchKeys":["UNSPECIFIED","UNSPECIFIED","io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.MatrixCoefficients.UNSPECIFIED"]},{"name":"UNSPECIFIED","description":"io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.TransferCharacteristics.UNSPECIFIED","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx/-transfer-characteristics/-u-n-s-p-e-c-i-f-i-e-d/index.html","searchKeys":["UNSPECIFIED","UNSPECIFIED","io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.TransferCharacteristics.UNSPECIFIED"]},{"name":"USAC","description":"io.github.thibaultbee.streampack.core.elements.utils.av.audio.AudioObjectType.USAC","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.audio/-audio-object-type/-u-s-a-c/index.html","searchKeys":["USAC","USAC","io.github.thibaultbee.streampack.core.elements.utils.av.audio.AudioObjectType.USAC"]},{"name":"USAC_NO_SBR","description":"io.github.thibaultbee.streampack.core.elements.utils.av.audio.AudioObjectType.USAC_NO_SBR","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.audio/-audio-object-type/-u-s-a-c_-n-o_-s-b-r/index.html","searchKeys":["USAC_NO_SBR","USAC_NO_SBR","io.github.thibaultbee.streampack.core.elements.utils.av.audio.AudioObjectType.USAC_NO_SBR"]},{"name":"VIDEO","description":"io.github.thibaultbee.streampack.core.elements.data.PacketType.VIDEO","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.data/-packet-type/-v-i-d-e-o/index.html","searchKeys":["VIDEO","VIDEO","io.github.thibaultbee.streampack.core.elements.data.PacketType.VIDEO"]},{"name":"VIDEO","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.TagType.VIDEO","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags/-tag-type/-v-i-d-e-o/index.html","searchKeys":["VIDEO","VIDEO","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.TagType.VIDEO"]},{"name":"VIDEO","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.HandlerBox.HandlerType.VIDEO","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-handler-box/-handler-type/-v-i-d-e-o/index.html","searchKeys":["VIDEO","VIDEO","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.HandlerBox.HandlerType.VIDEO"]},{"name":"VIDEO_CAVS","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets.Pmt.StreamType.VIDEO_CAVS","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets/-pmt/-stream-type/-v-i-d-e-o_-c-a-v-s/index.html","searchKeys":["VIDEO_CAVS","VIDEO_CAVS","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets.Pmt.StreamType.VIDEO_CAVS"]},{"name":"VIDEO_DIRAC","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets.Pmt.StreamType.VIDEO_DIRAC","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets/-pmt/-stream-type/-v-i-d-e-o_-d-i-r-a-c/index.html","searchKeys":["VIDEO_DIRAC","VIDEO_DIRAC","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets.Pmt.StreamType.VIDEO_DIRAC"]},{"name":"VIDEO_H264","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets.Pmt.StreamType.VIDEO_H264","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets/-pmt/-stream-type/-v-i-d-e-o_-h264/index.html","searchKeys":["VIDEO_H264","VIDEO_H264","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets.Pmt.StreamType.VIDEO_H264"]},{"name":"VIDEO_HEVC","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets.Pmt.StreamType.VIDEO_HEVC","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets/-pmt/-stream-type/-v-i-d-e-o_-h-e-v-c/index.html","searchKeys":["VIDEO_HEVC","VIDEO_HEVC","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets.Pmt.StreamType.VIDEO_HEVC"]},{"name":"VIDEO_MPEG1","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets.Pmt.StreamType.VIDEO_MPEG1","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets/-pmt/-stream-type/-v-i-d-e-o_-m-p-e-g1/index.html","searchKeys":["VIDEO_MPEG1","VIDEO_MPEG1","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets.Pmt.StreamType.VIDEO_MPEG1"]},{"name":"VIDEO_MPEG2","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets.Pmt.StreamType.VIDEO_MPEG2","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets/-pmt/-stream-type/-v-i-d-e-o_-m-p-e-g2/index.html","searchKeys":["VIDEO_MPEG2","VIDEO_MPEG2","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets.Pmt.StreamType.VIDEO_MPEG2"]},{"name":"VIDEO_MPEG4","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets.Pmt.StreamType.VIDEO_MPEG4","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets/-pmt/-stream-type/-v-i-d-e-o_-m-p-e-g4/index.html","searchKeys":["VIDEO_MPEG4","VIDEO_MPEG4","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets.Pmt.StreamType.VIDEO_MPEG4"]},{"name":"VIDEO_STREAM","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets.Pmt.Descriptor.VIDEO_STREAM","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets/-pmt/-descriptor/-v-i-d-e-o_-s-t-r-e-a-m/index.html","searchKeys":["VIDEO_STREAM","VIDEO_STREAM","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets.Pmt.Descriptor.VIDEO_STREAM"]},{"name":"VIDEO_STREAM_0","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets.Pes.StreamId.VIDEO_STREAM_0","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets/-pes/-stream-id/-v-i-d-e-o_-s-t-r-e-a-m_0/index.html","searchKeys":["VIDEO_STREAM_0","VIDEO_STREAM_0","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets.Pes.StreamId.VIDEO_STREAM_0"]},{"name":"VIDEO_VC1","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets.Pmt.StreamType.VIDEO_VC1","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets/-pmt/-stream-type/-v-i-d-e-o_-v-c1/index.html","searchKeys":["VIDEO_VC1","VIDEO_VC1","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets.Pmt.StreamType.VIDEO_VC1"]},{"name":"VP6","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.video.CodecID.VP6","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.video/-codec-i-d/-v-p6/index.html","searchKeys":["VP6","VP6","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.video.CodecID.VP6"]},{"name":"VP6_ALPHA","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.video.CodecID.VP6_ALPHA","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.video/-codec-i-d/-v-p6_-a-l-p-h-a/index.html","searchKeys":["VP6_ALPHA","VP6_ALPHA","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.video.CodecID.VP6_ALPHA"]},{"name":"VP9","description":"io.github.thibaultbee.streampack.core.elements.utils.av.FourCCs.VP9","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av/-four-c-cs/-v-p9/index.html","searchKeys":["VP9","VP9","io.github.thibaultbee.streampack.core.elements.utils.av.FourCCs.VP9"]},{"name":"VPS","description":"io.github.thibaultbee.streampack.core.elements.utils.av.video.hevc.HEVCDecoderConfigurationRecord.NalUnit.Type.VPS","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.video.hevc/-h-e-v-c-decoder-configuration-record/-nal-unit/-type/-v-p-s/index.html","searchKeys":["VPS","VPS","io.github.thibaultbee.streampack.core.elements.utils.av.video.hevc.HEVCDecoderConfigurationRecord.NalUnit.Type.VPS"]},{"name":"VisualStream","description":"io.github.thibaultbee.streampack.core.elements.utils.av.descriptors.StreamType.VisualStream","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.descriptors/-stream-type/-visual-stream/index.html","searchKeys":["VisualStream","VisualStream","io.github.thibaultbee.streampack.core.elements.utils.av.descriptors.StreamType.VisualStream"]},{"name":"WAVETABLE_SYNTHESIS","description":"io.github.thibaultbee.streampack.core.elements.utils.av.audio.AudioObjectType.WAVETABLE_SYNTHESIS","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.audio/-audio-object-type/-w-a-v-e-t-a-b-l-e_-s-y-n-t-h-e-s-i-s/index.html","searchKeys":["WAVETABLE_SYNTHESIS","WAVETABLE_SYNTHESIS","io.github.thibaultbee.streampack.core.elements.utils.av.audio.AudioObjectType.WAVETABLE_SYNTHESIS"]},{"name":"WEBM","description":"io.github.thibaultbee.streampack.core.elements.endpoints.MediaContainerType.WEBM","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints/-media-container-type/-w-e-b-m/index.html","searchKeys":["WEBM","WEBM","io.github.thibaultbee.streampack.core.elements.endpoints.MediaContainerType.WEBM"]},{"name":"YCGCO","description":"io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.MatrixCoefficients.YCGCO","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx/-matrix-coefficients/-y-c-g-c-o/index.html","searchKeys":["YCGCO","YCGCO","io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.MatrixCoefficients.YCGCO"]},{"name":"YUV","description":"io.github.thibaultbee.streampack.core.elements.processing.video.utils.GLUtils.InputFormat.YUV","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.processing.video.utils/-g-l-utils/-input-format/-y-u-v/index.html","searchKeys":["YUV","YUV","io.github.thibaultbee.streampack.core.elements.processing.video.utils.GLUtils.InputFormat.YUV"]},{"name":"YUV400","description":"io.github.thibaultbee.streampack.core.elements.utils.av.video.ChromaFormat.YUV400","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.video/-chroma-format/-y-u-v400/index.html","searchKeys":["YUV400","YUV400","io.github.thibaultbee.streampack.core.elements.utils.av.video.ChromaFormat.YUV400"]},{"name":"YUV420","description":"io.github.thibaultbee.streampack.core.elements.utils.av.video.ChromaFormat.YUV420","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.video/-chroma-format/-y-u-v420/index.html","searchKeys":["YUV420","YUV420","io.github.thibaultbee.streampack.core.elements.utils.av.video.ChromaFormat.YUV420"]},{"name":"YUV420_COLLOCATED_WITH_LUMA","description":"io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.ChromaSubsampling.YUV420_COLLOCATED_WITH_LUMA","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx/-chroma-subsampling/-y-u-v420_-c-o-l-l-o-c-a-t-e-d_-w-i-t-h_-l-u-m-a/index.html","searchKeys":["YUV420_COLLOCATED_WITH_LUMA","YUV420_COLLOCATED_WITH_LUMA","io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.ChromaSubsampling.YUV420_COLLOCATED_WITH_LUMA"]},{"name":"YUV420_VERTICAL","description":"io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.ChromaSubsampling.YUV420_VERTICAL","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx/-chroma-subsampling/-y-u-v420_-v-e-r-t-i-c-a-l/index.html","searchKeys":["YUV420_VERTICAL","YUV420_VERTICAL","io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.ChromaSubsampling.YUV420_VERTICAL"]},{"name":"YUV422","description":"io.github.thibaultbee.streampack.core.elements.utils.av.video.ChromaFormat.YUV422","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.video/-chroma-format/-y-u-v422/index.html","searchKeys":["YUV422","YUV422","io.github.thibaultbee.streampack.core.elements.utils.av.video.ChromaFormat.YUV422"]},{"name":"YUV422","description":"io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.ChromaSubsampling.YUV422","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx/-chroma-subsampling/-y-u-v422/index.html","searchKeys":["YUV422","YUV422","io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.ChromaSubsampling.YUV422"]},{"name":"YUV440","description":"io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.ChromaSubsampling.YUV440","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx/-chroma-subsampling/-y-u-v440/index.html","searchKeys":["YUV440","YUV440","io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.ChromaSubsampling.YUV440"]},{"name":"YUV444","description":"io.github.thibaultbee.streampack.core.elements.utils.av.video.ChromaFormat.YUV444","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.video/-chroma-format/-y-u-v444/index.html","searchKeys":["YUV444","YUV444","io.github.thibaultbee.streampack.core.elements.utils.av.video.ChromaFormat.YUV444"]},{"name":"YUV444","description":"io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.ChromaSubsampling.YUV444","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx/-chroma-subsampling/-y-u-v444/index.html","searchKeys":["YUV444","YUV444","io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.ChromaSubsampling.YUV444"]},{"name":"abstract class AbstractMovieBoxFactory","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models.AbstractMovieBoxFactory","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models/-abstract-movie-box-factory/index.html","searchKeys":["AbstractMovieBoxFactory","abstract class AbstractMovieBoxFactory","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models.AbstractMovieBoxFactory"]},{"name":"abstract class AbstractPreviewableSource : ISurfaceSourceInternal, IVideoSourceInternal, IPreviewableSource","description":"io.github.thibaultbee.streampack.core.elements.sources.video.AbstractPreviewableSource","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.video/-abstract-previewable-source/index.html","searchKeys":["AbstractPreviewableSource","abstract class AbstractPreviewableSource : ISurfaceSourceInternal, IVideoSourceInternal, IPreviewableSource","io.github.thibaultbee.streampack.core.elements.sources.video.AbstractPreviewableSource"]},{"name":"abstract class AbstractSink : ISinkInternal","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.sinks.AbstractSink","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.sinks/-abstract-sink/index.html","searchKeys":["AbstractSink","abstract class AbstractSink : ISinkInternal","io.github.thibaultbee.streampack.core.elements.endpoints.composites.sinks.AbstractSink"]},{"name":"abstract class AmfParameter","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.amf.AmfParameter","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.amf/-amf-parameter/index.html","searchKeys":["AmfParameter","abstract class AmfParameter","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.amf.AmfParameter"]},{"name":"abstract class AudioRecordSourceFactory(effects: Set<UUID>) : IAudioSourceInternal.Factory","description":"io.github.thibaultbee.streampack.core.elements.sources.audio.audiorecord.AudioRecordSourceFactory","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.audio.audiorecord/-audio-record-source-factory/index.html","searchKeys":["AudioRecordSourceFactory","abstract class AudioRecordSourceFactory(effects: Set<UUID>) : IAudioSourceInternal.Factory","io.github.thibaultbee.streampack.core.elements.sources.audio.audiorecord.AudioRecordSourceFactory"]},{"name":"abstract class BaseChunkOffsetBox<T>(type: String, var chunkOffsetEntries: List<T>) : FullBox","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.BaseChunkOffsetBox","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-base-chunk-offset-box/index.html","searchKeys":["BaseChunkOffsetBox","abstract class BaseChunkOffsetBox<T>(type: String, var chunkOffsetEntries: List<T>) : FullBox","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.BaseChunkOffsetBox"]},{"name":"abstract class BaseDescriptor(tag: Tags, sizeOfInstance: Int) : ByteBufferWriter","description":"io.github.thibaultbee.streampack.core.elements.utils.av.descriptors.BaseDescriptor","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.descriptors/-base-descriptor/index.html","searchKeys":["BaseDescriptor","abstract class BaseDescriptor(tag: Tags, sizeOfInstance: Int) : ByteBufferWriter","io.github.thibaultbee.streampack.core.elements.utils.av.descriptors.BaseDescriptor"]},{"name":"abstract class BitBufferWriter : ByteBufferWriter","description":"io.github.thibaultbee.streampack.core.elements.utils.av.buffer.BitBufferWriter","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.buffer/-bit-buffer-writer/index.html","searchKeys":["BitBufferWriter","abstract class BitBufferWriter : ByteBufferWriter","io.github.thibaultbee.streampack.core.elements.utils.av.buffer.BitBufferWriter"]},{"name":"abstract class BitrateRegulator(val bitrateRegulatorConfig: BitrateRegulatorConfig, val onVideoTargetBitrateChange: (Int) -> Unit, val onAudioTargetBitrateChange: (Int) -> Unit) : IBitrateRegulator","description":"io.github.thibaultbee.streampack.core.regulator.BitrateRegulator","location":"streampack-core/io.github.thibaultbee.streampack.core.regulator/-bitrate-regulator/index.html","searchKeys":["BitrateRegulator","abstract class BitrateRegulator(val bitrateRegulatorConfig: BitrateRegulatorConfig, val onVideoTargetBitrateChange: (Int) -> Unit, val onAudioTargetBitrateChange: (Int) -> Unit) : IBitrateRegulator","io.github.thibaultbee.streampack.core.regulator.BitrateRegulator"]},{"name":"abstract class BitrateRegulatorController(audioEncoder: IEncoder?, videoEncoder: IEncoder?, endpoint: IEndpoint, bitrateRegulatorFactory: IBitrateRegulator.Factory, bitrateRegulatorConfig: BitrateRegulatorConfig = BitrateRegulatorConfig()) : IBitrateRegulatorController","description":"io.github.thibaultbee.streampack.core.regulator.controllers.BitrateRegulatorController","location":"streampack-core/io.github.thibaultbee.streampack.core.regulator.controllers/-bitrate-regulator-controller/index.html","searchKeys":["BitrateRegulatorController","abstract class BitrateRegulatorController(audioEncoder: IEncoder?, videoEncoder: IEncoder?, endpoint: IEndpoint, bitrateRegulatorFactory: IBitrateRegulator.Factory, bitrateRegulatorConfig: BitrateRegulatorConfig = BitrateRegulatorConfig()) : IBitrateRegulatorController","io.github.thibaultbee.streampack.core.regulator.controllers.BitrateRegulatorController"]},{"name":"abstract class ByteBufferWriter","description":"io.github.thibaultbee.streampack.core.elements.utils.av.buffer.ByteBufferWriter","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.buffer/-byte-buffer-writer/index.html","searchKeys":["ByteBufferWriter","abstract class ByteBufferWriter","io.github.thibaultbee.streampack.core.elements.utils.av.buffer.ByteBufferWriter"]},{"name":"abstract class Factory : IBitrateRegulatorController.Factory","description":"io.github.thibaultbee.streampack.core.regulator.controllers.BitrateRegulatorController.Factory","location":"streampack-core/io.github.thibaultbee.streampack.core.regulator.controllers/-bitrate-regulator-controller/-factory/index.html","searchKeys":["Factory","abstract class Factory : IBitrateRegulatorController.Factory","io.github.thibaultbee.streampack.core.regulator.controllers.BitrateRegulatorController.Factory"]},{"name":"abstract class FlvTag(ts: Long, type: TagType, isEncrypted: Boolean = false)","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.FlvTag","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags/-flv-tag/index.html","searchKeys":["FlvTag","abstract class FlvTag(ts: Long, type: TagType, isEncrypted: Boolean = false)","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.FlvTag"]},{"name":"abstract class FullBox(type: String, val version: Byte, flags: Int, isCompact: Boolean = true) : Box","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.FullBox","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-full-box/index.html","searchKeys":["FullBox","abstract class FullBox(type: String, val version: Byte, flags: Int, isCompact: Boolean = true) : Box","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.FullBox"]},{"name":"abstract class MP4Segmenter(val hasAudio: Boolean, val hasVideo: Boolean)","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models.MP4Segmenter","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models/-m-p4-segmenter/index.html","searchKeys":["MP4Segmenter","abstract class MP4Segmenter(val hasAudio: Boolean, val hasVideo: Boolean)","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models.MP4Segmenter"]},{"name":"abstract class MP4SegmenterFactory","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models.MP4SegmenterFactory","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models/-m-p4-segmenter-factory/index.html","searchKeys":["MP4SegmenterFactory","abstract class MP4SegmenterFactory","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models.MP4SegmenterFactory"]},{"name":"abstract class MediaDescriptor(val type: MediaDescriptor.Type, customData: List<Any> = emptyList())","description":"io.github.thibaultbee.streampack.core.configuration.mediadescriptor.MediaDescriptor","location":"streampack-core/io.github.thibaultbee.streampack.core.configuration.mediadescriptor/-media-descriptor/index.html","searchKeys":["MediaDescriptor","abstract class MediaDescriptor(val type: MediaDescriptor.Type, customData: List<Any> = emptyList())","io.github.thibaultbee.streampack.core.configuration.mediadescriptor.MediaDescriptor"]},{"name":"abstract class Metadata(val dataRate: Int)","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.Metadata","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags/-metadata/index.html","searchKeys":["Metadata","abstract class Metadata(val dataRate: Int)","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.Metadata"]},{"name":"abstract class OutputStreamSink(coroutineContext: CoroutineContext = Dispatchers.IO) : AbstractSink","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.sinks.OutputStreamSink","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.sinks/-output-stream-sink/index.html","searchKeys":["OutputStreamSink","abstract class OutputStreamSink(coroutineContext: CoroutineContext = Dispatchers.IO) : AbstractSink","io.github.thibaultbee.streampack.core.elements.endpoints.composites.sinks.OutputStreamSink"]},{"name":"abstract class Program2D(vertexShaderSource: String, fragmentShaderSource: String)","description":"io.github.thibaultbee.streampack.core.elements.processing.video.utils.GLUtils.Program2D","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.processing.video.utils/-g-l-utils/-program2-d/index.html","searchKeys":["Program2D","abstract class Program2D(vertexShaderSource: String, fragmentShaderSource: String)","io.github.thibaultbee.streampack.core.elements.processing.video.utils.GLUtils.Program2D"]},{"name":"abstract class RotationProvider : IRotationProvider","description":"io.github.thibaultbee.streampack.core.streamers.orientation.RotationProvider","location":"streampack-core/io.github.thibaultbee.streampack.core.streamers.orientation/-rotation-provider/index.html","searchKeys":["RotationProvider","abstract class RotationProvider : IRotationProvider","io.github.thibaultbee.streampack.core.streamers.orientation.RotationProvider"]},{"name":"abstract class SpecificConfig : BitBufferWriter","description":"io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.config.SpecificConfig","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.config/-specific-config/index.html","searchKeys":["SpecificConfig","abstract class SpecificConfig : BitBufferWriter","io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.config.SpecificConfig"]},{"name":"abstract fun <T> getPreviewSize(targetSize: Size, targetClass: Class<T>): Size","description":"io.github.thibaultbee.streampack.core.elements.sources.video.IPreviewableSource.getPreviewSize","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.video/-i-previewable-source/get-preview-size.html","searchKeys":["getPreviewSize","abstract fun <T> getPreviewSize(targetSize: Size, targetClass: Class<T>): Size","io.github.thibaultbee.streampack.core.elements.sources.video.IPreviewableSource.getPreviewSize"]},{"name":"abstract fun addBitrateRegulatorController(controllerFactory: IBitrateRegulatorController.Factory)","description":"io.github.thibaultbee.streampack.core.pipelines.outputs.encoding.IEncodingPipelineOutput.addBitrateRegulatorController","location":"streampack-core/io.github.thibaultbee.streampack.core.pipelines.outputs.encoding/-i-encoding-pipeline-output/add-bitrate-regulator-controller.html","searchKeys":["addBitrateRegulatorController","abstract fun addBitrateRegulatorController(controllerFactory: IBitrateRegulatorController.Factory)","io.github.thibaultbee.streampack.core.pipelines.outputs.encoding.IEncodingPipelineOutput.addBitrateRegulatorController"]},{"name":"abstract fun addBitrateRegulatorController(controllerFactory: IBitrateRegulatorController.Factory)","description":"io.github.thibaultbee.streampack.core.streamers.single.ISingleStreamer.addBitrateRegulatorController","location":"streampack-core/io.github.thibaultbee.streampack.core.streamers.single/-i-single-streamer/add-bitrate-regulator-controller.html","searchKeys":["addBitrateRegulatorController","abstract fun addBitrateRegulatorController(controllerFactory: IBitrateRegulatorController.Factory)","io.github.thibaultbee.streampack.core.streamers.single.ISingleStreamer.addBitrateRegulatorController"]},{"name":"abstract fun addChunkOffset(chunkOffset: T)","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.BaseChunkOffsetBox.addChunkOffset","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-base-chunk-offset-box/add-chunk-offset.html","searchKeys":["addChunkOffset","abstract fun addChunkOffset(chunkOffset: T)","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.BaseChunkOffsetBox.addChunkOffset"]},{"name":"abstract fun addEffect(effectType: UUID): Boolean","description":"io.github.thibaultbee.streampack.core.elements.sources.audio.audiorecord.IAudioRecordSource.addEffect","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.audio.audiorecord/-i-audio-record-source/add-effect.html","searchKeys":["addEffect","abstract fun addEffect(effectType: UUID): Boolean","io.github.thibaultbee.streampack.core.elements.sources.audio.audiorecord.IAudioRecordSource.addEffect"]},{"name":"abstract fun addListener(listener: IRotationProvider.Listener)","description":"io.github.thibaultbee.streampack.core.streamers.orientation.IRotationProvider.addListener","location":"streampack-core/io.github.thibaultbee.streampack.core.streamers.orientation/-i-rotation-provider/add-listener.html","searchKeys":["addListener","abstract fun addListener(listener: IRotationProvider.Listener)","io.github.thibaultbee.streampack.core.streamers.orientation.IRotationProvider.addListener"]},{"name":"abstract fun addOutputSurface(surfaceOutput: ISurfaceOutput)","description":"io.github.thibaultbee.streampack.core.elements.processing.video.ISurfaceProcessorInternal.addOutputSurface","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.processing.video/-i-surface-processor-internal/add-output-surface.html","searchKeys":["addOutputSurface","abstract fun addOutputSurface(surfaceOutput: ISurfaceOutput)","io.github.thibaultbee.streampack.core.elements.processing.video.ISurfaceProcessorInternal.addOutputSurface"]},{"name":"abstract fun addStream(streamConfig: CodecConfig): Int","description":"io.github.thibaultbee.streampack.core.elements.endpoints.IEndpointInternal.addStream","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints/-i-endpoint-internal/add-stream.html","searchKeys":["addStream","abstract fun addStream(streamConfig: CodecConfig): Int","io.github.thibaultbee.streampack.core.elements.endpoints.IEndpointInternal.addStream"]},{"name":"abstract fun addStream(streamConfig: CodecConfig): Int","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.IMuxerInternal.addStream","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers/-i-muxer-internal/add-stream.html","searchKeys":["addStream","abstract fun addStream(streamConfig: CodecConfig): Int","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.IMuxerInternal.addStream"]},{"name":"abstract fun addStreams(streamConfigs: List<CodecConfig>): Map<CodecConfig, Int>","description":"io.github.thibaultbee.streampack.core.elements.endpoints.IEndpointInternal.addStreams","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints/-i-endpoint-internal/add-streams.html","searchKeys":["addStreams","abstract fun addStreams(streamConfigs: List<CodecConfig>): Map<CodecConfig, Int>","io.github.thibaultbee.streampack.core.elements.endpoints.IEndpointInternal.addStreams"]},{"name":"abstract fun addStreams(streamsConfig: List<CodecConfig>): Map<CodecConfig, Int>","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.IMuxerInternal.addStreams","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers/-i-muxer-internal/add-streams.html","searchKeys":["addStreams","abstract fun addStreams(streamsConfig: List<CodecConfig>): Map<CodecConfig, Int>","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.IMuxerInternal.addStreams"]},{"name":"abstract fun build(hasAudio: Boolean, hasVideo: Boolean): MP4Segmenter","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models.MP4SegmenterFactory.build","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models/-m-p4-segmenter-factory/build.html","searchKeys":["build","abstract fun build(hasAudio: Boolean, hasVideo: Boolean): MP4Segmenter","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models.MP4SegmenterFactory.build"]},{"name":"abstract fun build(trackChunks: List<TrackChunks>, dataOffset: Long): Box","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models.AbstractMovieBoxFactory.build","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models/-abstract-movie-box-factory/build.html","searchKeys":["build","abstract fun build(trackChunks: List<TrackChunks>, dataOffset: Long): Box","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models.AbstractMovieBoxFactory.build"]},{"name":"abstract fun buildFormat(withProfileLevel: Boolean): MediaFormat","description":"io.github.thibaultbee.streampack.core.elements.encoders.mediacodec.EncoderConfig.buildFormat","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.encoders.mediacodec/-encoder-config/build-format.html","searchKeys":["buildFormat","abstract fun buildFormat(withProfileLevel: Boolean): MediaFormat","io.github.thibaultbee.streampack.core.elements.encoders.mediacodec.EncoderConfig.buildFormat"]},{"name":"abstract fun clear()","description":"io.github.thibaultbee.streampack.core.elements.utils.pool.IBufferPool.clear","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.pool/-i-buffer-pool/clear.html","searchKeys":["clear","abstract fun clear()","io.github.thibaultbee.streampack.core.elements.utils.pool.IBufferPool.clear"]},{"name":"abstract fun clear()","description":"io.github.thibaultbee.streampack.core.elements.utils.pool.IRawFrameFactory.clear","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.pool/-i-raw-frame-factory/clear.html","searchKeys":["clear","abstract fun clear()","io.github.thibaultbee.streampack.core.elements.utils.pool.IRawFrameFactory.clear"]},{"name":"abstract fun close()","description":"io.github.thibaultbee.streampack.core.elements.utils.pool.IBufferPool.close","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.pool/-i-buffer-pool/close.html","searchKeys":["close","abstract fun close()","io.github.thibaultbee.streampack.core.elements.utils.pool.IBufferPool.close"]},{"name":"abstract fun close()","description":"io.github.thibaultbee.streampack.core.elements.utils.pool.IRawFrameFactory.close","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.pool/-i-raw-frame-factory/close.html","searchKeys":["close","abstract fun close()","io.github.thibaultbee.streampack.core.elements.utils.pool.IRawFrameFactory.close"]},{"name":"abstract fun configure()","description":"io.github.thibaultbee.streampack.core.elements.encoders.IEncoderInternal.configure","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.encoders/-i-encoder-internal/configure.html","searchKeys":["configure","abstract fun configure()","io.github.thibaultbee.streampack.core.elements.encoders.IEncoderInternal.configure"]},{"name":"abstract fun configure(config: T)","description":"io.github.thibaultbee.streampack.core.elements.interfaces.Configurable.configure","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.interfaces/-configurable/configure.html","searchKeys":["configure","abstract fun configure(config: T)","io.github.thibaultbee.streampack.core.elements.interfaces.Configurable.configure"]},{"name":"abstract fun create(bufferSize: Int, timestampInUs: Long): RawFrame","description":"io.github.thibaultbee.streampack.core.elements.utils.pool.IReadOnlyRawFrameFactory.create","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.pool/-i-read-only-raw-frame-factory/create.html","searchKeys":["create","abstract fun create(bufferSize: Int, timestampInUs: Long): RawFrame","io.github.thibaultbee.streampack.core.elements.utils.pool.IReadOnlyRawFrameFactory.create"]},{"name":"abstract fun create(context: Context): IEndpointInternal","description":"io.github.thibaultbee.streampack.core.elements.endpoints.IEndpointInternal.Factory.create","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints/-i-endpoint-internal/-factory/create.html","searchKeys":["create","abstract fun create(context: Context): IEndpointInternal","io.github.thibaultbee.streampack.core.elements.endpoints.IEndpointInternal.Factory.create"]},{"name":"abstract fun create(dynamicRangeProfile: DynamicRangeProfile): ISurfaceProcessorInternal","description":"io.github.thibaultbee.streampack.core.elements.processing.video.ISurfaceProcessorInternal.Factory.create","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.processing.video/-i-surface-processor-internal/-factory/create.html","searchKeys":["create","abstract fun create(dynamicRangeProfile: DynamicRangeProfile): ISurfaceProcessorInternal","io.github.thibaultbee.streampack.core.elements.processing.video.ISurfaceProcessorInternal.Factory.create"]},{"name":"abstract fun createInputSurface(surfaceSize: Size, timestampOffsetInNs: Long): Surface","description":"io.github.thibaultbee.streampack.core.elements.processing.video.ISurfaceProcessorInternal.createInputSurface","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.processing.video/-i-surface-processor-internal/create-input-surface.html","searchKeys":["createInputSurface","abstract fun createInputSurface(surfaceSize: Size, timestampOffsetInNs: Long): Surface","io.github.thibaultbee.streampack.core.elements.processing.video.ISurfaceProcessorInternal.createInputSurface"]},{"name":"abstract fun d(tag: String, message: String, tr: Throwable? = null)","description":"io.github.thibaultbee.streampack.core.logger.ILogger.d","location":"streampack-core/io.github.thibaultbee.streampack.core.logger/-i-logger/d.html","searchKeys":["d","abstract fun d(tag: String, message: String, tr: Throwable? = null)","io.github.thibaultbee.streampack.core.logger.ILogger.d"]},{"name":"abstract fun e(tag: String, message: String, tr: Throwable? = null)","description":"io.github.thibaultbee.streampack.core.logger.ILogger.e","location":"streampack-core/io.github.thibaultbee.streampack.core.logger/-i-logger/e.html","searchKeys":["e","abstract fun e(tag: String, message: String, tr: Throwable? = null)","io.github.thibaultbee.streampack.core.logger.ILogger.e"]},{"name":"abstract fun encode(buffer: ByteBuffer)","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.amf.AmfParameter.encode","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.amf/-amf-parameter/encode.html","searchKeys":["encode","abstract fun encode(buffer: ByteBuffer)","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.amf.AmfParameter.encode"]},{"name":"abstract fun fillAudioFrame(frame: RawFrame): RawFrame","description":"io.github.thibaultbee.streampack.core.elements.sources.audio.IAudioFrameSourceInternal.fillAudioFrame","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.audio/-i-audio-frame-source-internal/fill-audio-frame.html","searchKeys":["fillAudioFrame","abstract fun fillAudioFrame(frame: RawFrame): RawFrame","io.github.thibaultbee.streampack.core.elements.sources.audio.IAudioFrameSourceInternal.fillAudioFrame"]},{"name":"abstract fun get(capacity: Int): T","description":"io.github.thibaultbee.streampack.core.elements.utils.pool.IGetOnlyBufferPool.get","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.pool/-i-get-only-buffer-pool/get.html","searchKeys":["get","abstract fun get(capacity: Int): T","io.github.thibaultbee.streampack.core.elements.utils.pool.IGetOnlyBufferPool.get"]},{"name":"abstract fun getAudioFrame(frameFactory: IReadOnlyRawFrameFactory): RawFrame","description":"io.github.thibaultbee.streampack.core.elements.sources.audio.IAudioFrameSourceInternal.getAudioFrame","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.audio/-i-audio-frame-source-internal/get-audio-frame.html","searchKeys":["getAudioFrame","abstract fun getAudioFrame(frameFactory: IReadOnlyRawFrameFactory): RawFrame","io.github.thibaultbee.streampack.core.elements.sources.audio.IAudioFrameSourceInternal.getAudioFrame"]},{"name":"abstract fun getInfo(descriptor: MediaDescriptor): IConfigurationInfo","description":"io.github.thibaultbee.streampack.core.streamers.single.ISingleStreamer.getInfo","location":"streampack-core/io.github.thibaultbee.streampack.core.streamers.single/-i-single-streamer/get-info.html","searchKeys":["getInfo","abstract fun getInfo(descriptor: MediaDescriptor): IConfigurationInfo","io.github.thibaultbee.streampack.core.streamers.single.ISingleStreamer.getInfo"]},{"name":"abstract fun getInfo(type: MediaDescriptor.Type): IEndpoint.IEndpointInfo","description":"io.github.thibaultbee.streampack.core.elements.endpoints.IEndpoint.getInfo","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints/-i-endpoint/get-info.html","searchKeys":["getInfo","abstract fun getInfo(type: MediaDescriptor.Type): IEndpoint.IEndpointInfo","io.github.thibaultbee.streampack.core.elements.endpoints.IEndpoint.getInfo"]},{"name":"abstract fun getSupportedBitrates(mimeType: String): Range<Int>","description":"io.github.thibaultbee.streampack.core.streamers.infos.IAVConfigurationInfo.getSupportedBitrates","location":"streampack-core/io.github.thibaultbee.streampack.core.streamers.infos/-i-a-v-configuration-info/get-supported-bitrates.html","searchKeys":["getSupportedBitrates","abstract fun getSupportedBitrates(mimeType: String): Range<Int>","io.github.thibaultbee.streampack.core.streamers.infos.IAVConfigurationInfo.getSupportedBitrates"]},{"name":"abstract fun getSupportedByteFormats(): List<Int>","description":"io.github.thibaultbee.streampack.core.streamers.infos.IAudioConfigurationInfo.getSupportedByteFormats","location":"streampack-core/io.github.thibaultbee.streampack.core.streamers.infos/-i-audio-configuration-info/get-supported-byte-formats.html","searchKeys":["getSupportedByteFormats","abstract fun getSupportedByteFormats(): List<Int>","io.github.thibaultbee.streampack.core.streamers.infos.IAudioConfigurationInfo.getSupportedByteFormats"]},{"name":"abstract fun getSupportedInputChannelRange(mimeType: String): Range<Int>","description":"io.github.thibaultbee.streampack.core.streamers.infos.IAudioConfigurationInfo.getSupportedInputChannelRange","location":"streampack-core/io.github.thibaultbee.streampack.core.streamers.infos/-i-audio-configuration-info/get-supported-input-channel-range.html","searchKeys":["getSupportedInputChannelRange","abstract fun getSupportedInputChannelRange(mimeType: String): Range<Int>","io.github.thibaultbee.streampack.core.streamers.infos.IAudioConfigurationInfo.getSupportedInputChannelRange"]},{"name":"abstract fun getSupportedSampleRates(mimeType: String): List<Int>","description":"io.github.thibaultbee.streampack.core.streamers.infos.IAudioConfigurationInfo.getSupportedSampleRates","location":"streampack-core/io.github.thibaultbee.streampack.core.streamers.infos/-i-audio-configuration-info/get-supported-sample-rates.html","searchKeys":["getSupportedSampleRates","abstract fun getSupportedSampleRates(mimeType: String): List<Int>","io.github.thibaultbee.streampack.core.streamers.infos.IAudioConfigurationInfo.getSupportedSampleRates"]},{"name":"abstract fun getSurfaceSize(targetResolution: Size): Size","description":"io.github.thibaultbee.streampack.core.elements.processing.video.source.ISourceInfoProvider.getSurfaceSize","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.processing.video.source/-i-source-info-provider/get-surface-size.html","searchKeys":["getSurfaceSize","abstract fun getSurfaceSize(targetResolution: Size): Size","io.github.thibaultbee.streampack.core.elements.processing.video.source.ISourceInfoProvider.getSurfaceSize"]},{"name":"abstract fun getVideoFrame(frameFactory: IReadOnlyRawFrameFactory): RawFrame","description":"io.github.thibaultbee.streampack.core.elements.sources.video.IVideoFrameSourceInternal.getVideoFrame","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.video/-i-video-frame-source-internal/get-video-frame.html","searchKeys":["getVideoFrame","abstract fun getVideoFrame(frameFactory: IReadOnlyRawFrameFactory): RawFrame","io.github.thibaultbee.streampack.core.elements.sources.video.IVideoFrameSourceInternal.getVideoFrame"]},{"name":"abstract fun i(tag: String, message: String, tr: Throwable? = null)","description":"io.github.thibaultbee.streampack.core.logger.ILogger.i","location":"streampack-core/io.github.thibaultbee.streampack.core.logger/-i-logger/i.html","searchKeys":["i","abstract fun i(tag: String, message: String, tr: Throwable? = null)","io.github.thibaultbee.streampack.core.logger.ILogger.i"]},{"name":"abstract fun isSourceEquals(source: IAudioSourceInternal?): Boolean","description":"io.github.thibaultbee.streampack.core.elements.sources.audio.IAudioSourceInternal.Factory.isSourceEquals","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.audio/-i-audio-source-internal/-factory/is-source-equals.html","searchKeys":["isSourceEquals","abstract fun isSourceEquals(source: IAudioSourceInternal?): Boolean","io.github.thibaultbee.streampack.core.elements.sources.audio.IAudioSourceInternal.Factory.isSourceEquals"]},{"name":"abstract fun isSourceEquals(source: IVideoSourceInternal?): Boolean","description":"io.github.thibaultbee.streampack.core.elements.sources.video.IVideoSourceInternal.Factory.isSourceEquals","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.video/-i-video-source-internal/-factory/is-source-equals.html","searchKeys":["isSourceEquals","abstract fun isSourceEquals(source: IVideoSourceInternal?): Boolean","io.github.thibaultbee.streampack.core.elements.sources.video.IVideoSourceInternal.Factory.isSourceEquals"]},{"name":"abstract fun mustWriteSegment(frame: Frame): Boolean","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models.MP4Segmenter.mustWriteSegment","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models/-m-p4-segmenter/must-write-segment.html","searchKeys":["mustWriteSegment","abstract fun mustWriteSegment(frame: Frame): Boolean","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models.MP4Segmenter.mustWriteSegment"]},{"name":"abstract fun newBitrateRegulator(bitrateRegulatorConfig: BitrateRegulatorConfig, onVideoTargetBitrateChange: (Int) -> Unit, onAudioTargetBitrateChange: (Int) -> Unit): BitrateRegulator","description":"io.github.thibaultbee.streampack.core.regulator.IBitrateRegulator.Factory.newBitrateRegulator","location":"streampack-core/io.github.thibaultbee.streampack.core.regulator/-i-bitrate-regulator/-factory/new-bitrate-regulator.html","searchKeys":["newBitrateRegulator","abstract fun newBitrateRegulator(bitrateRegulatorConfig: BitrateRegulatorConfig, onVideoTargetBitrateChange: (Int) -> Unit, onAudioTargetBitrateChange: (Int) -> Unit): BitrateRegulator","io.github.thibaultbee.streampack.core.regulator.IBitrateRegulator.Factory.newBitrateRegulator"]},{"name":"abstract fun newBitrateRegulatorController(pipelineOutput: IEncodingPipelineOutput): IBitrateRegulatorController","description":"io.github.thibaultbee.streampack.core.regulator.controllers.IBitrateRegulatorController.Factory.newBitrateRegulatorController","location":"streampack-core/io.github.thibaultbee.streampack.core.regulator.controllers/-i-bitrate-regulator-controller/-factory/new-bitrate-regulator-controller.html","searchKeys":["newBitrateRegulatorController","abstract fun newBitrateRegulatorController(pipelineOutput: IEncodingPipelineOutput): IBitrateRegulatorController","io.github.thibaultbee.streampack.core.regulator.controllers.IBitrateRegulatorController.Factory.newBitrateRegulatorController"]},{"name":"abstract fun onFrameRequested(buffer: ByteBuffer): RawFrame","description":"io.github.thibaultbee.streampack.core.elements.encoders.IEncoderInternal.IAsyncByteBufferInput.OnFrameRequestedListener.onFrameRequested","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.encoders/-i-encoder-internal/-i-async-byte-buffer-input/-on-frame-requested-listener/on-frame-requested.html","searchKeys":["onFrameRequested","abstract fun onFrameRequested(buffer: ByteBuffer): RawFrame","io.github.thibaultbee.streampack.core.elements.encoders.IEncoderInternal.IAsyncByteBufferInput.OnFrameRequestedListener.onFrameRequested"]},{"name":"abstract fun onOrientationChanged(rotation: Int)","description":"io.github.thibaultbee.streampack.core.streamers.orientation.IRotationProvider.Listener.onOrientationChanged","location":"streampack-core/io.github.thibaultbee.streampack.core.streamers.orientation/-i-rotation-provider/-listener/on-orientation-changed.html","searchKeys":["onOrientationChanged","abstract fun onOrientationChanged(rotation: Int)","io.github.thibaultbee.streampack.core.streamers.orientation.IRotationProvider.Listener.onOrientationChanged"]},{"name":"abstract fun onOutputFrame(packet: Packet)","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.IMuxerInternal.IMuxerListener.onOutputFrame","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers/-i-muxer-internal/-i-muxer-listener/on-output-frame.html","searchKeys":["onOutputFrame","abstract fun onOutputFrame(packet: Packet)","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.IMuxerInternal.IMuxerListener.onOutputFrame"]},{"name":"abstract fun processFrame(frame: T): T","description":"io.github.thibaultbee.streampack.core.elements.processing.IFrameProcessor.processFrame","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.processing/-i-frame-processor/process-frame.html","searchKeys":["processFrame","abstract fun processFrame(frame: T): T","io.github.thibaultbee.streampack.core.elements.processing.IFrameProcessor.processFrame"]},{"name":"abstract fun put(buffer: T)","description":"io.github.thibaultbee.streampack.core.elements.utils.pool.IBufferPool.put","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.pool/-i-buffer-pool/put.html","searchKeys":["put","abstract fun put(buffer: T)","io.github.thibaultbee.streampack.core.elements.utils.pool.IBufferPool.put"]},{"name":"abstract fun queueAudioFrame(frame: RawFrame)","description":"io.github.thibaultbee.streampack.core.pipelines.outputs.IAudioSyncPipelineOutputInternal.queueAudioFrame","location":"streampack-core/io.github.thibaultbee.streampack.core.pipelines.outputs/-i-audio-sync-pipeline-output-internal/queue-audio-frame.html","searchKeys":["queueAudioFrame","abstract fun queueAudioFrame(frame: RawFrame)","io.github.thibaultbee.streampack.core.pipelines.outputs.IAudioSyncPipelineOutputInternal.queueAudioFrame"]},{"name":"abstract fun queueInputFrame(frame: RawFrame)","description":"io.github.thibaultbee.streampack.core.elements.encoders.IEncoderInternal.ISyncByteBufferInput.queueInputFrame","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.encoders/-i-encoder-internal/-i-sync-byte-buffer-input/queue-input-frame.html","searchKeys":["queueInputFrame","abstract fun queueInputFrame(frame: RawFrame)","io.github.thibaultbee.streampack.core.elements.encoders.IEncoderInternal.ISyncByteBufferInput.queueInputFrame"]},{"name":"abstract fun queueVideoFrame(frame: RawFrame)","description":"io.github.thibaultbee.streampack.core.pipelines.outputs.IVideoSyncPipelineOutputInternal.queueVideoFrame","location":"streampack-core/io.github.thibaultbee.streampack.core.pipelines.outputs/-i-video-sync-pipeline-output-internal/queue-video-frame.html","searchKeys":["queueVideoFrame","abstract fun queueVideoFrame(frame: RawFrame)","io.github.thibaultbee.streampack.core.pipelines.outputs.IVideoSyncPipelineOutputInternal.queueVideoFrame"]},{"name":"abstract fun release()","description":"io.github.thibaultbee.streampack.core.elements.interfaces.Releasable.release","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.interfaces/-releasable/release.html","searchKeys":["release","abstract fun release()","io.github.thibaultbee.streampack.core.elements.interfaces.Releasable.release"]},{"name":"abstract fun removeAllOutputSurfaces()","description":"io.github.thibaultbee.streampack.core.elements.processing.video.ISurfaceProcessorInternal.removeAllOutputSurfaces","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.processing.video/-i-surface-processor-internal/remove-all-output-surfaces.html","searchKeys":["removeAllOutputSurfaces","abstract fun removeAllOutputSurfaces()","io.github.thibaultbee.streampack.core.elements.processing.video.ISurfaceProcessorInternal.removeAllOutputSurfaces"]},{"name":"abstract fun removeBitrateRegulatorController()","description":"io.github.thibaultbee.streampack.core.pipelines.outputs.encoding.IEncodingPipelineOutput.removeBitrateRegulatorController","location":"streampack-core/io.github.thibaultbee.streampack.core.pipelines.outputs.encoding/-i-encoding-pipeline-output/remove-bitrate-regulator-controller.html","searchKeys":["removeBitrateRegulatorController","abstract fun removeBitrateRegulatorController()","io.github.thibaultbee.streampack.core.pipelines.outputs.encoding.IEncodingPipelineOutput.removeBitrateRegulatorController"]},{"name":"abstract fun removeBitrateRegulatorController()","description":"io.github.thibaultbee.streampack.core.streamers.single.ISingleStreamer.removeBitrateRegulatorController","location":"streampack-core/io.github.thibaultbee.streampack.core.streamers.single/-i-single-streamer/remove-bitrate-regulator-controller.html","searchKeys":["removeBitrateRegulatorController","abstract fun removeBitrateRegulatorController()","io.github.thibaultbee.streampack.core.streamers.single.ISingleStreamer.removeBitrateRegulatorController"]},{"name":"abstract fun removeEffect(effectType: UUID)","description":"io.github.thibaultbee.streampack.core.elements.sources.audio.audiorecord.IAudioRecordSource.removeEffect","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.audio.audiorecord/-i-audio-record-source/remove-effect.html","searchKeys":["removeEffect","abstract fun removeEffect(effectType: UUID)","io.github.thibaultbee.streampack.core.elements.sources.audio.audiorecord.IAudioRecordSource.removeEffect"]},{"name":"abstract fun removeInputSurface(surface: Surface)","description":"io.github.thibaultbee.streampack.core.elements.processing.video.ISurfaceProcessorInternal.removeInputSurface","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.processing.video/-i-surface-processor-internal/remove-input-surface.html","searchKeys":["removeInputSurface","abstract fun removeInputSurface(surface: Surface)","io.github.thibaultbee.streampack.core.elements.processing.video.ISurfaceProcessorInternal.removeInputSurface"]},{"name":"abstract fun removeListener(listener: IRotationProvider.Listener)","description":"io.github.thibaultbee.streampack.core.streamers.orientation.IRotationProvider.removeListener","location":"streampack-core/io.github.thibaultbee.streampack.core.streamers.orientation/-i-rotation-provider/remove-listener.html","searchKeys":["removeListener","abstract fun removeListener(listener: IRotationProvider.Listener)","io.github.thibaultbee.streampack.core.streamers.orientation.IRotationProvider.removeListener"]},{"name":"abstract fun removeOutputSurface(surface: Surface)","description":"io.github.thibaultbee.streampack.core.elements.processing.video.ISurfaceProcessorInternal.removeOutputSurface","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.processing.video/-i-surface-processor-internal/remove-output-surface.html","searchKeys":["removeOutputSurface","abstract fun removeOutputSurface(surface: Surface)","io.github.thibaultbee.streampack.core.elements.processing.video.ISurfaceProcessorInternal.removeOutputSurface"]},{"name":"abstract fun removeOutputSurface(surfaceOutput: ISurfaceOutput)","description":"io.github.thibaultbee.streampack.core.elements.processing.video.ISurfaceProcessorInternal.removeOutputSurface","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.processing.video/-i-surface-processor-internal/remove-output-surface.html","searchKeys":["removeOutputSurface","abstract fun removeOutputSurface(surfaceOutput: ISurfaceOutput)","io.github.thibaultbee.streampack.core.elements.processing.video.ISurfaceProcessorInternal.removeOutputSurface"]},{"name":"abstract fun requestKeyFrame()","description":"io.github.thibaultbee.streampack.core.elements.encoders.IEncoder.requestKeyFrame","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.encoders/-i-encoder/request-key-frame.html","searchKeys":["requestKeyFrame","abstract fun requestKeyFrame()","io.github.thibaultbee.streampack.core.elements.encoders.IEncoder.requestKeyFrame"]},{"name":"abstract fun reset()","description":"io.github.thibaultbee.streampack.core.elements.encoders.IEncoderInternal.reset","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.encoders/-i-encoder-internal/reset.html","searchKeys":["reset","abstract fun reset()","io.github.thibaultbee.streampack.core.elements.encoders.IEncoderInternal.reset"]},{"name":"abstract fun setListener(listener: IEncoderInternal.IListener, listenerExecutor: Executor)","description":"io.github.thibaultbee.streampack.core.elements.encoders.IEncoderInternal.setListener","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.encoders/-i-encoder-internal/set-listener.html","searchKeys":["setListener","abstract fun setListener(listener: IEncoderInternal.IListener, listenerExecutor: Executor)","io.github.thibaultbee.streampack.core.elements.encoders.IEncoderInternal.setListener"]},{"name":"abstract fun start()","description":"io.github.thibaultbee.streampack.core.regulator.controllers.IBitrateRegulatorController.start","location":"streampack-core/io.github.thibaultbee.streampack.core.regulator.controllers/-i-bitrate-regulator-controller/start.html","searchKeys":["start","abstract fun start()","io.github.thibaultbee.streampack.core.regulator.controllers.IBitrateRegulatorController.start"]},{"name":"abstract fun startStream()","description":"io.github.thibaultbee.streampack.core.elements.interfaces.Streamable.startStream","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.interfaces/-streamable/start-stream.html","searchKeys":["startStream","abstract fun startStream()","io.github.thibaultbee.streampack.core.elements.interfaces.Streamable.startStream"]},{"name":"abstract fun stop()","description":"io.github.thibaultbee.streampack.core.regulator.controllers.IBitrateRegulatorController.stop","location":"streampack-core/io.github.thibaultbee.streampack.core.regulator.controllers/-i-bitrate-regulator-controller/stop.html","searchKeys":["stop","abstract fun stop()","io.github.thibaultbee.streampack.core.regulator.controllers.IBitrateRegulatorController.stop"]},{"name":"abstract fun stopStream()","description":"io.github.thibaultbee.streampack.core.elements.interfaces.Streamable.stopStream","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.interfaces/-streamable/stop-stream.html","searchKeys":["stopStream","abstract fun stopStream()","io.github.thibaultbee.streampack.core.elements.interfaces.Streamable.stopStream"]},{"name":"abstract fun toByteBuffer(): ByteBuffer","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.data.ITSElement.toByteBuffer","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.data/-i-t-s-element/to-byte-buffer.html","searchKeys":["toByteBuffer","abstract fun toByteBuffer(): ByteBuffer","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.data.ITSElement.toByteBuffer"]},{"name":"abstract fun update(stats: Any, currentVideoBitrate: Int, currentAudioBitrate: Int)","description":"io.github.thibaultbee.streampack.core.regulator.IBitrateRegulator.update","location":"streampack-core/io.github.thibaultbee.streampack.core.regulator/-i-bitrate-regulator/update.html","searchKeys":["update","abstract fun update(stats: Any, currentVideoBitrate: Int, currentAudioBitrate: Int)","io.github.thibaultbee.streampack.core.regulator.IBitrateRegulator.update"]},{"name":"abstract fun updateTransformMatrix(output: FloatArray, input: FloatArray)","description":"io.github.thibaultbee.streampack.core.elements.processing.video.outputs.ISurfaceOutput.updateTransformMatrix","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.processing.video.outputs/-i-surface-output/update-transform-matrix.html","searchKeys":["updateTransformMatrix","abstract fun updateTransformMatrix(output: FloatArray, input: FloatArray)","io.github.thibaultbee.streampack.core.elements.processing.video.outputs.ISurfaceOutput.updateTransformMatrix"]},{"name":"abstract fun v(tag: String, message: String, tr: Throwable? = null)","description":"io.github.thibaultbee.streampack.core.logger.ILogger.v","location":"streampack-core/io.github.thibaultbee.streampack.core.logger/-i-logger/v.html","searchKeys":["v","abstract fun v(tag: String, message: String, tr: Throwable? = null)","io.github.thibaultbee.streampack.core.logger.ILogger.v"]},{"name":"abstract fun w(tag: String, message: String, tr: Throwable? = null)","description":"io.github.thibaultbee.streampack.core.logger.ILogger.w","location":"streampack-core/io.github.thibaultbee.streampack.core.logger/-i-logger/w.html","searchKeys":["w","abstract fun w(tag: String, message: String, tr: Throwable? = null)","io.github.thibaultbee.streampack.core.logger.ILogger.w"]},{"name":"abstract fun write(frame: Frame, streamPid: Int)","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.IMuxerInternal.write","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers/-i-muxer-internal/write.html","searchKeys":["write","abstract fun write(frame: Frame, streamPid: Int)","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.IMuxerInternal.write"]},{"name":"abstract fun write(output: BitBuffer)","description":"io.github.thibaultbee.streampack.core.elements.utils.av.buffer.BitBufferWriter.write","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.buffer/-bit-buffer-writer/write.html","searchKeys":["write","abstract fun write(output: BitBuffer)","io.github.thibaultbee.streampack.core.elements.utils.av.buffer.BitBufferWriter.write"]},{"name":"abstract fun write(output: ByteBuffer)","description":"io.github.thibaultbee.streampack.core.elements.utils.av.buffer.ByteBufferWriter.write","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.buffer/-byte-buffer-writer/write.html","searchKeys":["write","abstract fun write(output: ByteBuffer)","io.github.thibaultbee.streampack.core.elements.utils.av.buffer.ByteBufferWriter.write"]},{"name":"abstract override fun newBitrateRegulatorController(pipelineOutput: IEncodingPipelineOutput): IBitrateRegulatorController","description":"io.github.thibaultbee.streampack.core.regulator.controllers.BitrateRegulatorController.Factory.newBitrateRegulatorController","location":"streampack-core/io.github.thibaultbee.streampack.core.regulator.controllers/-bitrate-regulator-controller/-factory/new-bitrate-regulator-controller.html","searchKeys":["newBitrateRegulatorController","abstract override fun newBitrateRegulatorController(pipelineOutput: IEncodingPipelineOutput): IBitrateRegulatorController","io.github.thibaultbee.streampack.core.regulator.controllers.BitrateRegulatorController.Factory.newBitrateRegulatorController"]},{"name":"abstract suspend fun close()","description":"io.github.thibaultbee.streampack.core.elements.interfaces.SuspendCloseable.close","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.interfaces/-suspend-closeable/close.html","searchKeys":["close","abstract suspend fun close()","io.github.thibaultbee.streampack.core.elements.interfaces.SuspendCloseable.close"]},{"name":"abstract suspend fun close()","description":"io.github.thibaultbee.streampack.core.interfaces.ICloseableStreamer.close","location":"streampack-core/io.github.thibaultbee.streampack.core.interfaces/-i-closeable-streamer/close.html","searchKeys":["close","abstract suspend fun close()","io.github.thibaultbee.streampack.core.interfaces.ICloseableStreamer.close"]},{"name":"abstract suspend fun configure(config: T)","description":"io.github.thibaultbee.streampack.core.elements.interfaces.SuspendConfigurable.configure","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.interfaces/-suspend-configurable/configure.html","searchKeys":["configure","abstract suspend fun configure(config: T)","io.github.thibaultbee.streampack.core.elements.interfaces.SuspendConfigurable.configure"]},{"name":"abstract suspend fun create(context: Context): IAudioSourceInternal","description":"io.github.thibaultbee.streampack.core.elements.sources.audio.IAudioSourceInternal.Factory.create","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.audio/-i-audio-source-internal/-factory/create.html","searchKeys":["create","abstract suspend fun create(context: Context): IAudioSourceInternal","io.github.thibaultbee.streampack.core.elements.sources.audio.IAudioSourceInternal.Factory.create"]},{"name":"abstract suspend fun create(context: Context): IVideoSourceInternal","description":"io.github.thibaultbee.streampack.core.elements.sources.video.IVideoSourceInternal.Factory.create","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.video/-i-video-source-internal/-factory/create.html","searchKeys":["create","abstract suspend fun create(context: Context): IVideoSourceInternal","io.github.thibaultbee.streampack.core.elements.sources.video.IVideoSourceInternal.Factory.create"]},{"name":"abstract suspend fun getOutput(): Surface?","description":"io.github.thibaultbee.streampack.core.elements.sources.video.ISurfaceSourceInternal.getOutput","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.video/-i-surface-source-internal/get-output.html","searchKeys":["getOutput","abstract suspend fun getOutput(): Surface?","io.github.thibaultbee.streampack.core.elements.sources.video.ISurfaceSourceInternal.getOutput"]},{"name":"abstract suspend fun hasPreview(): Boolean","description":"io.github.thibaultbee.streampack.core.elements.sources.video.IPreviewableSource.hasPreview","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.video/-i-previewable-source/has-preview.html","searchKeys":["hasPreview","abstract suspend fun hasPreview(): Boolean","io.github.thibaultbee.streampack.core.elements.sources.video.IPreviewableSource.hasPreview"]},{"name":"abstract suspend fun onSetAudioSourceConfig(newAudioSourceConfig: AudioSourceConfig)","description":"io.github.thibaultbee.streampack.core.pipelines.outputs.IConfigurableAudioPipelineOutputInternal.Listener.onSetAudioSourceConfig","location":"streampack-core/io.github.thibaultbee.streampack.core.pipelines.outputs/-i-configurable-audio-pipeline-output-internal/-listener/on-set-audio-source-config.html","searchKeys":["onSetAudioSourceConfig","abstract suspend fun onSetAudioSourceConfig(newAudioSourceConfig: AudioSourceConfig)","io.github.thibaultbee.streampack.core.pipelines.outputs.IConfigurableAudioPipelineOutputInternal.Listener.onSetAudioSourceConfig"]},{"name":"abstract suspend fun onSetVideoSourceConfig(newVideoSourceConfig: VideoSourceConfig)","description":"io.github.thibaultbee.streampack.core.pipelines.outputs.IConfigurableVideoPipelineOutputInternal.Listener.onSetVideoSourceConfig","location":"streampack-core/io.github.thibaultbee.streampack.core.pipelines.outputs/-i-configurable-video-pipeline-output-internal/-listener/on-set-video-source-config.html","searchKeys":["onSetVideoSourceConfig","abstract suspend fun onSetVideoSourceConfig(newVideoSourceConfig: VideoSourceConfig)","io.github.thibaultbee.streampack.core.pipelines.outputs.IConfigurableVideoPipelineOutputInternal.Listener.onSetVideoSourceConfig"]},{"name":"abstract suspend fun open(descriptor: MediaDescriptor)","description":"io.github.thibaultbee.streampack.core.elements.endpoints.IEndpointInternal.open","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints/-i-endpoint-internal/open.html","searchKeys":["open","abstract suspend fun open(descriptor: MediaDescriptor)","io.github.thibaultbee.streampack.core.elements.endpoints.IEndpointInternal.open"]},{"name":"abstract suspend fun open(descriptor: MediaDescriptor)","description":"io.github.thibaultbee.streampack.core.interfaces.IOpenableStreamer.open","location":"streampack-core/io.github.thibaultbee.streampack.core.interfaces/-i-openable-streamer/open.html","searchKeys":["open","abstract suspend fun open(descriptor: MediaDescriptor)","io.github.thibaultbee.streampack.core.interfaces.IOpenableStreamer.open"]},{"name":"abstract suspend fun open(mediaDescriptor: MediaDescriptor)","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.sinks.ISinkInternal.open","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.sinks/-i-sink-internal/open.html","searchKeys":["open","abstract suspend fun open(mediaDescriptor: MediaDescriptor)","io.github.thibaultbee.streampack.core.elements.endpoints.composites.sinks.ISinkInternal.open"]},{"name":"abstract suspend fun openImpl(mediaDescriptor: MediaDescriptor)","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.sinks.AbstractSink.openImpl","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.sinks/-abstract-sink/open-impl.html","searchKeys":["openImpl","abstract suspend fun openImpl(mediaDescriptor: MediaDescriptor)","io.github.thibaultbee.streampack.core.elements.endpoints.composites.sinks.AbstractSink.openImpl"]},{"name":"abstract suspend fun openOutputStream(mediaDescriptor: MediaDescriptor): OutputStream","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.sinks.OutputStreamSink.openOutputStream","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.sinks/-output-stream-sink/open-output-stream.html","searchKeys":["openOutputStream","abstract suspend fun openOutputStream(mediaDescriptor: MediaDescriptor): OutputStream","io.github.thibaultbee.streampack.core.elements.endpoints.composites.sinks.OutputStreamSink.openOutputStream"]},{"name":"abstract suspend fun release()","description":"io.github.thibaultbee.streampack.core.interfaces.IStreamer.release","location":"streampack-core/io.github.thibaultbee.streampack.core.interfaces/-i-streamer/release.html","searchKeys":["release","abstract suspend fun release()","io.github.thibaultbee.streampack.core.interfaces.IStreamer.release"]},{"name":"abstract suspend fun requestRelease()","description":"io.github.thibaultbee.streampack.core.elements.sources.video.IPreviewableSource.requestRelease","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.video/-i-previewable-source/request-release.html","searchKeys":["requestRelease","abstract suspend fun requestRelease()","io.github.thibaultbee.streampack.core.elements.sources.video.IPreviewableSource.requestRelease"]},{"name":"abstract suspend fun resetOutput()","description":"io.github.thibaultbee.streampack.core.elements.sources.video.ISurfaceSourceInternal.resetOutput","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.video/-i-surface-source-internal/reset-output.html","searchKeys":["resetOutput","abstract suspend fun resetOutput()","io.github.thibaultbee.streampack.core.elements.sources.video.ISurfaceSourceInternal.resetOutput"]},{"name":"abstract suspend fun resetOutputImpl()","description":"io.github.thibaultbee.streampack.core.elements.sources.video.AbstractPreviewableSource.resetOutputImpl","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.video/-abstract-previewable-source/reset-output-impl.html","searchKeys":["resetOutputImpl","abstract suspend fun resetOutputImpl()","io.github.thibaultbee.streampack.core.elements.sources.video.AbstractPreviewableSource.resetOutputImpl"]},{"name":"abstract suspend fun resetPreview()","description":"io.github.thibaultbee.streampack.core.elements.sources.video.IPreviewableSource.resetPreview","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.video/-i-previewable-source/reset-preview.html","searchKeys":["resetPreview","abstract suspend fun resetPreview()","io.github.thibaultbee.streampack.core.elements.sources.video.IPreviewableSource.resetPreview"]},{"name":"abstract suspend fun resetPreviewImpl()","description":"io.github.thibaultbee.streampack.core.elements.sources.video.AbstractPreviewableSource.resetPreviewImpl","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.video/-abstract-previewable-source/reset-preview-impl.html","searchKeys":["resetPreviewImpl","abstract suspend fun resetPreviewImpl()","io.github.thibaultbee.streampack.core.elements.sources.video.AbstractPreviewableSource.resetPreviewImpl"]},{"name":"abstract suspend fun setAudioCodecConfig(audioCodecConfig: AudioCodecConfig)","description":"io.github.thibaultbee.streampack.core.pipelines.outputs.encoding.IConfigurableAudioEncodingPipelineOutput.setAudioCodecConfig","location":"streampack-core/io.github.thibaultbee.streampack.core.pipelines.outputs.encoding/-i-configurable-audio-encoding-pipeline-output/set-audio-codec-config.html","searchKeys":["setAudioCodecConfig","abstract suspend fun setAudioCodecConfig(audioCodecConfig: AudioCodecConfig)","io.github.thibaultbee.streampack.core.pipelines.outputs.encoding.IConfigurableAudioEncodingPipelineOutput.setAudioCodecConfig"]},{"name":"abstract suspend fun setAudioConfig(audioConfig: T)","description":"io.github.thibaultbee.streampack.core.streamers.IConfigurableAudioStreamer.setAudioConfig","location":"streampack-core/io.github.thibaultbee.streampack.core.streamers/-i-configurable-audio-streamer/set-audio-config.html","searchKeys":["setAudioConfig","abstract suspend fun setAudioConfig(audioConfig: T)","io.github.thibaultbee.streampack.core.streamers.IConfigurableAudioStreamer.setAudioConfig"]},{"name":"abstract suspend fun setOutput(surface: Surface)","description":"io.github.thibaultbee.streampack.core.elements.sources.video.ISurfaceSourceInternal.setOutput","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.video/-i-surface-source-internal/set-output.html","searchKeys":["setOutput","abstract suspend fun setOutput(surface: Surface)","io.github.thibaultbee.streampack.core.elements.sources.video.ISurfaceSourceInternal.setOutput"]},{"name":"abstract suspend fun setPreview(surface: Surface)","description":"io.github.thibaultbee.streampack.core.elements.sources.video.IPreviewableSource.setPreview","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.video/-i-previewable-source/set-preview.html","searchKeys":["setPreview","abstract suspend fun setPreview(surface: Surface)","io.github.thibaultbee.streampack.core.elements.sources.video.IPreviewableSource.setPreview"]},{"name":"abstract suspend fun setSource(audioSourceFactory: IAudioSourceInternal.Factory)","description":"io.github.thibaultbee.streampack.core.pipelines.inputs.IAudioInput.setSource","location":"streampack-core/io.github.thibaultbee.streampack.core.pipelines.inputs/-i-audio-input/set-source.html","searchKeys":["setSource","abstract suspend fun setSource(audioSourceFactory: IAudioSourceInternal.Factory)","io.github.thibaultbee.streampack.core.pipelines.inputs.IAudioInput.setSource"]},{"name":"abstract suspend fun setSource(videoSourceFactory: IVideoSourceInternal.Factory)","description":"io.github.thibaultbee.streampack.core.pipelines.inputs.IVideoInput.setSource","location":"streampack-core/io.github.thibaultbee.streampack.core.pipelines.inputs/-i-video-input/set-source.html","searchKeys":["setSource","abstract suspend fun setSource(videoSourceFactory: IVideoSourceInternal.Factory)","io.github.thibaultbee.streampack.core.pipelines.inputs.IVideoInput.setSource"]},{"name":"abstract suspend fun setTargetRotation(rotation: Int)","description":"io.github.thibaultbee.streampack.core.interfaces.IWithVideoRotation.setTargetRotation","location":"streampack-core/io.github.thibaultbee.streampack.core.interfaces/-i-with-video-rotation/set-target-rotation.html","searchKeys":["setTargetRotation","abstract suspend fun setTargetRotation(rotation: Int)","io.github.thibaultbee.streampack.core.interfaces.IWithVideoRotation.setTargetRotation"]},{"name":"abstract suspend fun setVideoCodecConfig(videoCodecConfig: VideoCodecConfig)","description":"io.github.thibaultbee.streampack.core.pipelines.outputs.encoding.IConfigurableVideoEncodingPipelineOutput.setVideoCodecConfig","location":"streampack-core/io.github.thibaultbee.streampack.core.pipelines.outputs.encoding/-i-configurable-video-encoding-pipeline-output/set-video-codec-config.html","searchKeys":["setVideoCodecConfig","abstract suspend fun setVideoCodecConfig(videoCodecConfig: VideoCodecConfig)","io.github.thibaultbee.streampack.core.pipelines.outputs.encoding.IConfigurableVideoEncodingPipelineOutput.setVideoCodecConfig"]},{"name":"abstract suspend fun setVideoConfig(videoConfig: T)","description":"io.github.thibaultbee.streampack.core.streamers.IConfigurableVideoStreamer.setVideoConfig","location":"streampack-core/io.github.thibaultbee.streampack.core.streamers/-i-configurable-video-streamer/set-video-config.html","searchKeys":["setVideoConfig","abstract suspend fun setVideoConfig(videoConfig: T)","io.github.thibaultbee.streampack.core.streamers.IConfigurableVideoStreamer.setVideoConfig"]},{"name":"abstract suspend fun startPreview()","description":"io.github.thibaultbee.streampack.core.elements.sources.video.IPreviewableSource.startPreview","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.video/-i-previewable-source/start-preview.html","searchKeys":["startPreview","abstract suspend fun startPreview()","io.github.thibaultbee.streampack.core.elements.sources.video.IPreviewableSource.startPreview"]},{"name":"abstract suspend fun startPreview(previewSurface: Surface)","description":"io.github.thibaultbee.streampack.core.elements.sources.video.IPreviewableSource.startPreview","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.video/-i-previewable-source/start-preview.html","searchKeys":["startPreview","abstract suspend fun startPreview(previewSurface: Surface)","io.github.thibaultbee.streampack.core.elements.sources.video.IPreviewableSource.startPreview"]},{"name":"abstract suspend fun startStream()","description":"io.github.thibaultbee.streampack.core.elements.interfaces.SuspendStreamable.startStream","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.interfaces/-suspend-streamable/start-stream.html","searchKeys":["startStream","abstract suspend fun startStream()","io.github.thibaultbee.streampack.core.elements.interfaces.SuspendStreamable.startStream"]},{"name":"abstract suspend fun startStream()","description":"io.github.thibaultbee.streampack.core.interfaces.IStreamer.startStream","location":"streampack-core/io.github.thibaultbee.streampack.core.interfaces/-i-streamer/start-stream.html","searchKeys":["startStream","abstract suspend fun startStream()","io.github.thibaultbee.streampack.core.interfaces.IStreamer.startStream"]},{"name":"abstract suspend fun stopPreview()","description":"io.github.thibaultbee.streampack.core.elements.sources.video.IPreviewableSource.stopPreview","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.video/-i-previewable-source/stop-preview.html","searchKeys":["stopPreview","abstract suspend fun stopPreview()","io.github.thibaultbee.streampack.core.elements.sources.video.IPreviewableSource.stopPreview"]},{"name":"abstract suspend fun stopStream()","description":"io.github.thibaultbee.streampack.core.elements.interfaces.SuspendStreamable.stopStream","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.interfaces/-suspend-streamable/stop-stream.html","searchKeys":["stopStream","abstract suspend fun stopStream()","io.github.thibaultbee.streampack.core.elements.interfaces.SuspendStreamable.stopStream"]},{"name":"abstract suspend fun stopStream()","description":"io.github.thibaultbee.streampack.core.interfaces.IStreamer.stopStream","location":"streampack-core/io.github.thibaultbee.streampack.core.interfaces/-i-streamer/stop-stream.html","searchKeys":["stopStream","abstract suspend fun stopStream()","io.github.thibaultbee.streampack.core.interfaces.IStreamer.stopStream"]},{"name":"abstract suspend fun write(frame: Frame, streamPid: Int)","description":"io.github.thibaultbee.streampack.core.elements.endpoints.IEndpointInternal.write","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints/-i-endpoint-internal/write.html","searchKeys":["write","abstract suspend fun write(frame: Frame, streamPid: Int)","io.github.thibaultbee.streampack.core.elements.endpoints.IEndpointInternal.write"]},{"name":"abstract suspend fun write(packet: Packet): Int","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.sinks.ISinkInternal.write","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.sinks/-i-sink-internal/write.html","searchKeys":["write","abstract suspend fun write(packet: Packet): Int","io.github.thibaultbee.streampack.core.elements.endpoints.composites.sinks.ISinkInternal.write"]},{"name":"abstract val audio: IAudioConfigurationInfo","description":"io.github.thibaultbee.streampack.core.streamers.infos.IConfigurationInfo.audio","location":"streampack-core/io.github.thibaultbee.streampack.core.streamers.infos/-i-configuration-info/audio.html","searchKeys":["audio","abstract val audio: IAudioConfigurationInfo","io.github.thibaultbee.streampack.core.streamers.infos.IConfigurationInfo.audio"]},{"name":"abstract val audio: IEndpoint.IEndpointInfo.IAudioEndpointInfo","description":"io.github.thibaultbee.streampack.core.elements.endpoints.IEndpoint.IEndpointInfo.audio","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints/-i-endpoint/-i-endpoint-info/audio.html","searchKeys":["audio","abstract val audio: IEndpoint.IEndpointInfo.IAudioEndpointInfo","io.github.thibaultbee.streampack.core.elements.endpoints.IEndpoint.IEndpointInfo.audio"]},{"name":"abstract val audio: IMuxer.IMuxerInfo.IAudioMuxerInfo","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.IMuxer.IMuxerInfo.audio","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers/-i-muxer/-i-muxer-info/audio.html","searchKeys":["audio","abstract val audio: IMuxer.IMuxerInfo.IAudioMuxerInfo","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.IMuxer.IMuxerInfo.audio"]},{"name":"abstract val audioCodecConfigFlow: StateFlow<AudioCodecConfig?>","description":"io.github.thibaultbee.streampack.core.pipelines.outputs.encoding.IConfigurableAudioEncodingPipelineOutput.audioCodecConfigFlow","location":"streampack-core/io.github.thibaultbee.streampack.core.pipelines.outputs.encoding/-i-configurable-audio-encoding-pipeline-output/audio-codec-config-flow.html","searchKeys":["audioCodecConfigFlow","abstract val audioCodecConfigFlow: StateFlow<AudioCodecConfig?>","io.github.thibaultbee.streampack.core.pipelines.outputs.encoding.IConfigurableAudioEncodingPipelineOutput.audioCodecConfigFlow"]},{"name":"abstract val audioConfigFlow: StateFlow<AudioConfig?>","description":"io.github.thibaultbee.streampack.core.streamers.single.IAudioSingleStreamer.audioConfigFlow","location":"streampack-core/io.github.thibaultbee.streampack.core.streamers.single/-i-audio-single-streamer/audio-config-flow.html","searchKeys":["audioConfigFlow","abstract val audioConfigFlow: StateFlow<AudioConfig?>","io.github.thibaultbee.streampack.core.streamers.single.IAudioSingleStreamer.audioConfigFlow"]},{"name":"abstract val audioEncoder: IEncoder?","description":"io.github.thibaultbee.streampack.core.pipelines.outputs.encoding.IConfigurableAudioEncodingPipelineOutput.audioEncoder","location":"streampack-core/io.github.thibaultbee.streampack.core.pipelines.outputs.encoding/-i-configurable-audio-encoding-pipeline-output/audio-encoder.html","searchKeys":["audioEncoder","abstract val audioEncoder: IEncoder?","io.github.thibaultbee.streampack.core.pipelines.outputs.encoding.IConfigurableAudioEncodingPipelineOutput.audioEncoder"]},{"name":"abstract val audioEncoder: IEncoder?","description":"io.github.thibaultbee.streampack.core.streamers.single.IAudioSingleStreamer.audioEncoder","location":"streampack-core/io.github.thibaultbee.streampack.core.streamers.single/-i-audio-single-streamer/audio-encoder.html","searchKeys":["audioEncoder","abstract val audioEncoder: IEncoder?","io.github.thibaultbee.streampack.core.streamers.single.IAudioSingleStreamer.audioEncoder"]},{"name":"abstract val audioInput: IAudioInput?","description":"io.github.thibaultbee.streampack.core.interfaces.IWithAudioSource.audioInput","location":"streampack-core/io.github.thibaultbee.streampack.core.interfaces/-i-with-audio-source/audio-input.html","searchKeys":["audioInput","abstract val audioInput: IAudioInput?","io.github.thibaultbee.streampack.core.interfaces.IWithAudioSource.audioInput"]},{"name":"abstract val audioSourceConfigFlow: StateFlow<AudioSourceConfig?>","description":"io.github.thibaultbee.streampack.core.pipelines.outputs.IConfigurableAudioPipelineOutput.audioSourceConfigFlow","location":"streampack-core/io.github.thibaultbee.streampack.core.pipelines.outputs/-i-configurable-audio-pipeline-output/audio-source-config-flow.html","searchKeys":["audioSourceConfigFlow","abstract val audioSourceConfigFlow: StateFlow<AudioSourceConfig?>","io.github.thibaultbee.streampack.core.pipelines.outputs.IConfigurableAudioPipelineOutput.audioSourceConfigFlow"]},{"name":"abstract val availableRatioRange: Range<Float>","description":"io.github.thibaultbee.streampack.core.elements.sources.video.camera.CameraSettings.Zoom.availableRatioRange","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.video.camera/-camera-settings/-zoom/available-ratio-range.html","searchKeys":["availableRatioRange","abstract val availableRatioRange: Range<Float>","io.github.thibaultbee.streampack.core.elements.sources.video.camera.CameraSettings.Zoom.availableRatioRange"]},{"name":"abstract val bitSize: Int","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.data.ITSElement.bitSize","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.data/-i-t-s-element/bit-size.html","searchKeys":["bitSize","abstract val bitSize: Int","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.data.ITSElement.bitSize"]},{"name":"abstract val bitSize: Int","description":"io.github.thibaultbee.streampack.core.elements.utils.av.buffer.BitBufferWriter.bitSize","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.buffer/-bit-buffer-writer/bit-size.html","searchKeys":["bitSize","abstract val bitSize: Int","io.github.thibaultbee.streampack.core.elements.utils.av.buffer.BitBufferWriter.bitSize"]},{"name":"abstract val bitmap: Bitmap","description":"io.github.thibaultbee.streampack.core.elements.sources.video.bitmap.IBitmapSource.bitmap","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.video.bitmap/-i-bitmap-source/bitmap.html","searchKeys":["bitmap","abstract val bitmap: Bitmap","io.github.thibaultbee.streampack.core.elements.sources.video.bitmap.IBitmapSource.bitmap"]},{"name":"abstract val cameraId: String","description":"io.github.thibaultbee.streampack.core.elements.sources.video.camera.ICameraSource.cameraId","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.video.camera/-i-camera-source/camera-id.html","searchKeys":["cameraId","abstract val cameraId: String","io.github.thibaultbee.streampack.core.elements.sources.video.camera.ICameraSource.cameraId"]},{"name":"abstract val config: CodecConfig","description":"io.github.thibaultbee.streampack.core.elements.encoders.IEncoderInternal.config","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.encoders/-i-encoder-internal/config.html","searchKeys":["config","abstract val config: CodecConfig","io.github.thibaultbee.streampack.core.elements.encoders.IEncoderInternal.config"]},{"name":"abstract val descriptor: SurfaceDescriptor","description":"io.github.thibaultbee.streampack.core.elements.processing.video.outputs.ISurfaceOutput.descriptor","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.processing.video.outputs/-i-surface-output/descriptor.html","searchKeys":["descriptor","abstract val descriptor: SurfaceDescriptor","io.github.thibaultbee.streampack.core.elements.processing.video.outputs.ISurfaceOutput.descriptor"]},{"name":"abstract val endpoint: IEndpoint","description":"io.github.thibaultbee.streampack.core.pipelines.outputs.encoding.IEncodingPipelineOutput.endpoint","location":"streampack-core/io.github.thibaultbee.streampack.core.pipelines.outputs.encoding/-i-encoding-pipeline-output/endpoint.html","searchKeys":["endpoint","abstract val endpoint: IEndpoint","io.github.thibaultbee.streampack.core.pipelines.outputs.encoding.IEncodingPipelineOutput.endpoint"]},{"name":"abstract val endpoint: IEndpoint","description":"io.github.thibaultbee.streampack.core.streamers.single.ISingleStreamer.endpoint","location":"streampack-core/io.github.thibaultbee.streampack.core.streamers.single/-i-single-streamer/endpoint.html","searchKeys":["endpoint","abstract val endpoint: IEndpoint","io.github.thibaultbee.streampack.core.streamers.single.ISingleStreamer.endpoint"]},{"name":"abstract val first: IEncodingPipelineOutput","description":"io.github.thibaultbee.streampack.core.streamers.dual.IDualStreamer.first","location":"streampack-core/io.github.thibaultbee.streampack.core.streamers.dual/-i-dual-streamer/first.html","searchKeys":["first","abstract val first: IEncodingPipelineOutput","io.github.thibaultbee.streampack.core.streamers.dual.IDualStreamer.first"]},{"name":"abstract val info: IConfigurationInfo","description":"io.github.thibaultbee.streampack.core.streamers.single.ISingleStreamer.info","location":"streampack-core/io.github.thibaultbee.streampack.core.streamers.single/-i-single-streamer/info.html","searchKeys":["info","abstract val info: IConfigurationInfo","io.github.thibaultbee.streampack.core.streamers.single.ISingleStreamer.info"]},{"name":"abstract val info: IEncoder.IEncoderInfo","description":"io.github.thibaultbee.streampack.core.elements.encoders.IEncoder.info","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.encoders/-i-encoder/info.html","searchKeys":["info","abstract val info: IEncoder.IEncoderInfo","io.github.thibaultbee.streampack.core.elements.encoders.IEncoder.info"]},{"name":"abstract val info: IEndpoint.IEndpointInfo","description":"io.github.thibaultbee.streampack.core.elements.endpoints.IEndpoint.info","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints/-i-endpoint/info.html","searchKeys":["info","abstract val info: IEndpoint.IEndpointInfo","io.github.thibaultbee.streampack.core.elements.endpoints.IEndpoint.info"]},{"name":"abstract val info: IMuxer.IMuxerInfo","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.IMuxer.info","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers/-i-muxer/info.html","searchKeys":["info","abstract val info: IMuxer.IMuxerInfo","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.IMuxer.info"]},{"name":"abstract val infoProviderFlow: StateFlow<ISourceInfoProvider>","description":"io.github.thibaultbee.streampack.core.elements.sources.video.IVideoSourceInternal.infoProviderFlow","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.video/-i-video-source-internal/info-provider-flow.html","searchKeys":["infoProviderFlow","abstract val infoProviderFlow: StateFlow<ISourceInfoProvider>","io.github.thibaultbee.streampack.core.elements.sources.video.IVideoSourceInternal.infoProviderFlow"]},{"name":"abstract val input: IEncoderInternal.IEncoderInput","description":"io.github.thibaultbee.streampack.core.elements.encoders.IEncoderInternal.input","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.encoders/-i-encoder-internal/input.html","searchKeys":["input","abstract val input: IEncoderInternal.IEncoderInput","io.github.thibaultbee.streampack.core.elements.encoders.IEncoderInternal.input"]},{"name":"abstract val isMirror: Boolean","description":"io.github.thibaultbee.streampack.core.elements.processing.video.source.ISourceInfoProvider.isMirror","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.processing.video.source/-i-source-info-provider/is-mirror.html","searchKeys":["isMirror","abstract val isMirror: Boolean","io.github.thibaultbee.streampack.core.elements.processing.video.source.ISourceInfoProvider.isMirror"]},{"name":"abstract val isOpenFlow: StateFlow<Boolean>","description":"io.github.thibaultbee.streampack.core.elements.endpoints.IEndpoint.isOpenFlow","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints/-i-endpoint/is-open-flow.html","searchKeys":["isOpenFlow","abstract val isOpenFlow: StateFlow<Boolean>","io.github.thibaultbee.streampack.core.elements.endpoints.IEndpoint.isOpenFlow"]},{"name":"abstract val isOpenFlow: StateFlow<Boolean>","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.sinks.ISink.isOpenFlow","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.sinks/-i-sink/is-open-flow.html","searchKeys":["isOpenFlow","abstract val isOpenFlow: StateFlow<Boolean>","io.github.thibaultbee.streampack.core.elements.endpoints.composites.sinks.ISink.isOpenFlow"]},{"name":"abstract val isOpenFlow: StateFlow<Boolean>","description":"io.github.thibaultbee.streampack.core.interfaces.ICloseableStreamer.isOpenFlow","location":"streampack-core/io.github.thibaultbee.streampack.core.interfaces/-i-closeable-streamer/is-open-flow.html","searchKeys":["isOpenFlow","abstract val isOpenFlow: StateFlow<Boolean>","io.github.thibaultbee.streampack.core.interfaces.ICloseableStreamer.isOpenFlow"]},{"name":"abstract val isPreviewingFlow: StateFlow<Boolean>","description":"io.github.thibaultbee.streampack.core.elements.sources.video.IPreviewableSource.isPreviewingFlow","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.video/-i-previewable-source/is-previewing-flow.html","searchKeys":["isPreviewingFlow","abstract val isPreviewingFlow: StateFlow<Boolean>","io.github.thibaultbee.streampack.core.elements.sources.video.IPreviewableSource.isPreviewingFlow"]},{"name":"abstract val isStreaming: () -> Boolean","description":"io.github.thibaultbee.streampack.core.elements.processing.video.outputs.ISurfaceOutput.isStreaming","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.processing.video.outputs/-i-surface-output/is-streaming.html","searchKeys":["isStreaming","abstract val isStreaming: () -> Boolean","io.github.thibaultbee.streampack.core.elements.processing.video.outputs.ISurfaceOutput.isStreaming"]},{"name":"abstract val isStreamingFlow: StateFlow<Boolean>","description":"io.github.thibaultbee.streampack.core.elements.sources.audio.IAudioSourceInternal.isStreamingFlow","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.audio/-i-audio-source-internal/is-streaming-flow.html","searchKeys":["isStreamingFlow","abstract val isStreamingFlow: StateFlow<Boolean>","io.github.thibaultbee.streampack.core.elements.sources.audio.IAudioSourceInternal.isStreamingFlow"]},{"name":"abstract val isStreamingFlow: StateFlow<Boolean>","description":"io.github.thibaultbee.streampack.core.elements.sources.video.IVideoSourceInternal.isStreamingFlow","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.video/-i-video-source-internal/is-streaming-flow.html","searchKeys":["isStreamingFlow","abstract val isStreamingFlow: StateFlow<Boolean>","io.github.thibaultbee.streampack.core.elements.sources.video.IVideoSourceInternal.isStreamingFlow"]},{"name":"abstract val isStreamingFlow: StateFlow<Boolean>","description":"io.github.thibaultbee.streampack.core.interfaces.IStreamer.isStreamingFlow","location":"streampack-core/io.github.thibaultbee.streampack.core.interfaces/-i-streamer/is-streaming-flow.html","searchKeys":["isStreamingFlow","abstract val isStreamingFlow: StateFlow<Boolean>","io.github.thibaultbee.streampack.core.interfaces.IStreamer.isStreamingFlow"]},{"name":"abstract val isStreamingFlow: StateFlow<Boolean>","description":"io.github.thibaultbee.streampack.core.pipelines.inputs.IAudioInput.isStreamingFlow","location":"streampack-core/io.github.thibaultbee.streampack.core.pipelines.inputs/-i-audio-input/is-streaming-flow.html","searchKeys":["isStreamingFlow","abstract val isStreamingFlow: StateFlow<Boolean>","io.github.thibaultbee.streampack.core.pipelines.inputs.IAudioInput.isStreamingFlow"]},{"name":"abstract val isStreamingFlow: StateFlow<Boolean>","description":"io.github.thibaultbee.streampack.core.pipelines.inputs.IVideoInput.isStreamingFlow","location":"streampack-core/io.github.thibaultbee.streampack.core.pipelines.inputs/-i-video-input/is-streaming-flow.html","searchKeys":["isStreamingFlow","abstract val isStreamingFlow: StateFlow<Boolean>","io.github.thibaultbee.streampack.core.pipelines.inputs.IVideoInput.isStreamingFlow"]},{"name":"abstract val isVideo: Boolean","description":"io.github.thibaultbee.streampack.core.elements.encoders.mediacodec.EncoderConfig.isVideo","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.encoders.mediacodec/-encoder-config/is-video.html","searchKeys":["isVideo","abstract val isVideo: Boolean","io.github.thibaultbee.streampack.core.elements.encoders.mediacodec.EncoderConfig.isVideo"]},{"name":"abstract val mediaProjection: MediaProjection","description":"io.github.thibaultbee.streampack.core.elements.sources.IMediaProjectionSource.mediaProjection","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources/-i-media-projection-source/media-projection.html","searchKeys":["mediaProjection","abstract val mediaProjection: MediaProjection","io.github.thibaultbee.streampack.core.elements.sources.IMediaProjectionSource.mediaProjection"]},{"name":"abstract val metrics: Any","description":"io.github.thibaultbee.streampack.core.elements.endpoints.IEndpoint.metrics","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints/-i-endpoint/metrics.html","searchKeys":["metrics","abstract val metrics: Any","io.github.thibaultbee.streampack.core.elements.endpoints.IEndpoint.metrics"]},{"name":"abstract val metrics: Any","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.sinks.ISink.metrics","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.sinks/-i-sink/metrics.html","searchKeys":["metrics","abstract val metrics: Any","io.github.thibaultbee.streampack.core.elements.endpoints.composites.sinks.ISink.metrics"]},{"name":"abstract val mimeType: String","description":"io.github.thibaultbee.streampack.core.elements.encoders.IEncoder.mimeType","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.encoders/-i-encoder/mime-type.html","searchKeys":["mimeType","abstract val mimeType: String","io.github.thibaultbee.streampack.core.elements.encoders.IEncoder.mimeType"]},{"name":"abstract val muxer: IMuxer","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.ICompositeEndpoint.muxer","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites/-i-composite-endpoint/muxer.html","searchKeys":["muxer","abstract val muxer: IMuxer","io.github.thibaultbee.streampack.core.elements.endpoints.composites.ICompositeEndpoint.muxer"]},{"name":"abstract val name: String","description":"io.github.thibaultbee.streampack.core.elements.encoders.IEncoder.IEncoderInfo.name","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.encoders/-i-encoder/-i-encoder-info/name.html","searchKeys":["name","abstract val name: String","io.github.thibaultbee.streampack.core.elements.encoders.IEncoder.IEncoderInfo.name"]},{"name":"abstract val onClosed: (ICloseableFrame) -> Unit","description":"io.github.thibaultbee.streampack.core.elements.data.ICloseableFrame.onClosed","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.data/-i-closeable-frame/on-closed.html","searchKeys":["onClosed","abstract val onClosed: (ICloseableFrame) -> Unit","io.github.thibaultbee.streampack.core.elements.data.ICloseableFrame.onClosed"]},{"name":"abstract val processor: IAudioFrameProcessor","description":"io.github.thibaultbee.streampack.core.pipelines.inputs.IAudioInput.processor","location":"streampack-core/io.github.thibaultbee.streampack.core.pipelines.inputs/-i-audio-input/processor.html","searchKeys":["processor","abstract val processor: IAudioFrameProcessor","io.github.thibaultbee.streampack.core.pipelines.inputs.IAudioInput.processor"]},{"name":"abstract val processor: ISurfaceProcessorInternal","description":"io.github.thibaultbee.streampack.core.pipelines.inputs.IVideoInput.processor","location":"streampack-core/io.github.thibaultbee.streampack.core.pipelines.inputs/-i-video-input/processor.html","searchKeys":["processor","abstract val processor: ISurfaceProcessorInternal","io.github.thibaultbee.streampack.core.pipelines.inputs.IVideoInput.processor"]},{"name":"abstract val rawBuffer: ByteBuffer","description":"io.github.thibaultbee.streampack.core.elements.data.ICloseableFrame.rawBuffer","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.data/-i-closeable-frame/raw-buffer.html","searchKeys":["rawBuffer","abstract val rawBuffer: ByteBuffer","io.github.thibaultbee.streampack.core.elements.data.ICloseableFrame.rawBuffer"]},{"name":"abstract val rotation: Int","description":"io.github.thibaultbee.streampack.core.streamers.orientation.IRotationProvider.rotation","location":"streampack-core/io.github.thibaultbee.streampack.core.streamers.orientation/-i-rotation-provider/rotation.html","searchKeys":["rotation","abstract val rotation: Int","io.github.thibaultbee.streampack.core.streamers.orientation.IRotationProvider.rotation"]},{"name":"abstract val rotationDegrees: Int","description":"io.github.thibaultbee.streampack.core.elements.processing.video.source.ISourceInfoProvider.rotationDegrees","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.processing.video.source/-i-source-info-provider/rotation-degrees.html","searchKeys":["rotationDegrees","abstract val rotationDegrees: Int","io.github.thibaultbee.streampack.core.elements.processing.video.source.ISourceInfoProvider.rotationDegrees"]},{"name":"abstract val rotationFlow: Flow<Int>","description":"io.github.thibaultbee.streampack.core.streamers.orientation.IRotationFlowProvider.rotationFlow","location":"streampack-core/io.github.thibaultbee.streampack.core.streamers.orientation/-i-rotation-flow-provider/rotation-flow.html","searchKeys":["rotationFlow","abstract val rotationFlow: Flow<Int>","io.github.thibaultbee.streampack.core.streamers.orientation.IRotationFlowProvider.rotationFlow"]},{"name":"abstract val second: IEncodingPipelineOutput","description":"io.github.thibaultbee.streampack.core.streamers.dual.IDualStreamer.second","location":"streampack-core/io.github.thibaultbee.streampack.core.streamers.dual/-i-dual-streamer/second.html","searchKeys":["second","abstract val second: IEncodingPipelineOutput","io.github.thibaultbee.streampack.core.streamers.dual.IDualStreamer.second"]},{"name":"abstract val settings: CameraSettings","description":"io.github.thibaultbee.streampack.core.elements.sources.video.camera.ICameraSource.settings","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.video.camera/-i-camera-source/settings.html","searchKeys":["settings","abstract val settings: CameraSettings","io.github.thibaultbee.streampack.core.elements.sources.video.camera.ICameraSource.settings"]},{"name":"abstract val sink: ISink","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.ICompositeEndpoint.sink","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites/-i-composite-endpoint/sink.html","searchKeys":["sink","abstract val sink: ISink","io.github.thibaultbee.streampack.core.elements.endpoints.composites.ICompositeEndpoint.sink"]},{"name":"abstract val size: Int","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.amf.AmfParameter.size","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.amf/-amf-parameter/size.html","searchKeys":["size","abstract val size: Int","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.amf.AmfParameter.size"]},{"name":"abstract val size: Int","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.data.ITSElement.size","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.data/-i-t-s-element/size.html","searchKeys":["size","abstract val size: Int","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.data.ITSElement.size"]},{"name":"abstract val size: Int","description":"io.github.thibaultbee.streampack.core.elements.utils.av.buffer.ByteBufferWriter.size","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.buffer/-byte-buffer-writer/size.html","searchKeys":["size","abstract val size: Int","io.github.thibaultbee.streampack.core.elements.utils.av.buffer.ByteBufferWriter.size"]},{"name":"abstract val sourceFlow: StateFlow<IAudioSource?>","description":"io.github.thibaultbee.streampack.core.pipelines.inputs.IAudioInput.sourceFlow","location":"streampack-core/io.github.thibaultbee.streampack.core.pipelines.inputs/-i-audio-input/source-flow.html","searchKeys":["sourceFlow","abstract val sourceFlow: StateFlow<IAudioSource?>","io.github.thibaultbee.streampack.core.pipelines.inputs.IAudioInput.sourceFlow"]},{"name":"abstract val sourceFlow: StateFlow<IVideoSource?>","description":"io.github.thibaultbee.streampack.core.pipelines.inputs.IVideoInput.sourceFlow","location":"streampack-core/io.github.thibaultbee.streampack.core.pipelines.inputs/-i-video-input/source-flow.html","searchKeys":["sourceFlow","abstract val sourceFlow: StateFlow<IVideoSource?>","io.github.thibaultbee.streampack.core.pipelines.inputs.IVideoInput.sourceFlow"]},{"name":"abstract val startBitrate: Int","description":"io.github.thibaultbee.streampack.core.elements.encoders.IEncoder.startBitrate","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.encoders/-i-encoder/start-bitrate.html","searchKeys":["startBitrate","abstract val startBitrate: Int","io.github.thibaultbee.streampack.core.elements.encoders.IEncoder.startBitrate"]},{"name":"abstract val supportedByteFormats: List<Int>?","description":"io.github.thibaultbee.streampack.core.elements.endpoints.IEndpoint.IEndpointInfo.IAudioEndpointInfo.supportedByteFormats","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints/-i-endpoint/-i-endpoint-info/-i-audio-endpoint-info/supported-byte-formats.html","searchKeys":["supportedByteFormats","abstract val supportedByteFormats: List<Int>?","io.github.thibaultbee.streampack.core.elements.endpoints.IEndpoint.IEndpointInfo.IAudioEndpointInfo.supportedByteFormats"]},{"name":"abstract val supportedByteFormats: List<Int>?","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.IMuxer.IMuxerInfo.IAudioMuxerInfo.supportedByteFormats","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers/-i-muxer/-i-muxer-info/-i-audio-muxer-info/supported-byte-formats.html","searchKeys":["supportedByteFormats","abstract val supportedByteFormats: List<Int>?","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.IMuxer.IMuxerInfo.IAudioMuxerInfo.supportedByteFormats"]},{"name":"abstract val supportedEncoders: List<String>","description":"io.github.thibaultbee.streampack.core.elements.endpoints.IEndpoint.IEndpointInfo.IAudioEndpointInfo.supportedEncoders","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints/-i-endpoint/-i-endpoint-info/-i-audio-endpoint-info/supported-encoders.html","searchKeys":["supportedEncoders","abstract val supportedEncoders: List<String>","io.github.thibaultbee.streampack.core.elements.endpoints.IEndpoint.IEndpointInfo.IAudioEndpointInfo.supportedEncoders"]},{"name":"abstract val supportedEncoders: List<String>","description":"io.github.thibaultbee.streampack.core.elements.endpoints.IEndpoint.IEndpointInfo.IVideoEndpointInfo.supportedEncoders","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints/-i-endpoint/-i-endpoint-info/-i-video-endpoint-info/supported-encoders.html","searchKeys":["supportedEncoders","abstract val supportedEncoders: List<String>","io.github.thibaultbee.streampack.core.elements.endpoints.IEndpoint.IEndpointInfo.IVideoEndpointInfo.supportedEncoders"]},{"name":"abstract val supportedEncoders: List<String>","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.IMuxer.IMuxerInfo.IAudioMuxerInfo.supportedEncoders","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers/-i-muxer/-i-muxer-info/-i-audio-muxer-info/supported-encoders.html","searchKeys":["supportedEncoders","abstract val supportedEncoders: List<String>","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.IMuxer.IMuxerInfo.IAudioMuxerInfo.supportedEncoders"]},{"name":"abstract val supportedEncoders: List<String>","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.IMuxer.IMuxerInfo.IVideoMuxerInfo.supportedEncoders","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers/-i-muxer/-i-muxer-info/-i-video-muxer-info/supported-encoders.html","searchKeys":["supportedEncoders","abstract val supportedEncoders: List<String>","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.IMuxer.IMuxerInfo.IVideoMuxerInfo.supportedEncoders"]},{"name":"abstract val supportedEncoders: List<String>","description":"io.github.thibaultbee.streampack.core.streamers.infos.IAVConfigurationInfo.supportedEncoders","location":"streampack-core/io.github.thibaultbee.streampack.core.streamers.infos/-i-a-v-configuration-info/supported-encoders.html","searchKeys":["supportedEncoders","abstract val supportedEncoders: List<String>","io.github.thibaultbee.streampack.core.streamers.infos.IAVConfigurationInfo.supportedEncoders"]},{"name":"abstract val supportedSampleRates: List<Int>?","description":"io.github.thibaultbee.streampack.core.elements.endpoints.IEndpoint.IEndpointInfo.IAudioEndpointInfo.supportedSampleRates","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints/-i-endpoint/-i-endpoint-info/-i-audio-endpoint-info/supported-sample-rates.html","searchKeys":["supportedSampleRates","abstract val supportedSampleRates: List<Int>?","io.github.thibaultbee.streampack.core.elements.endpoints.IEndpoint.IEndpointInfo.IAudioEndpointInfo.supportedSampleRates"]},{"name":"abstract val supportedSampleRates: List<Int>?","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.IMuxer.IMuxerInfo.IAudioMuxerInfo.supportedSampleRates","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers/-i-muxer/-i-muxer-info/-i-audio-muxer-info/supported-sample-rates.html","searchKeys":["supportedSampleRates","abstract val supportedSampleRates: List<Int>?","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.IMuxer.IMuxerInfo.IAudioMuxerInfo.supportedSampleRates"]},{"name":"abstract val supportedSinkTypes: List<MediaSinkType>","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.sinks.AbstractSink.supportedSinkTypes","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.sinks/-abstract-sink/supported-sink-types.html","searchKeys":["supportedSinkTypes","abstract val supportedSinkTypes: List<MediaSinkType>","io.github.thibaultbee.streampack.core.elements.endpoints.composites.sinks.AbstractSink.supportedSinkTypes"]},{"name":"abstract val surface: Surface?","description":"io.github.thibaultbee.streampack.core.elements.encoders.IEncoderInternal.ISurfaceInput.surface","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.encoders/-i-encoder-internal/-i-surface-input/surface.html","searchKeys":["surface","abstract val surface: Surface?","io.github.thibaultbee.streampack.core.elements.encoders.IEncoderInternal.ISurfaceInput.surface"]},{"name":"abstract val surfaceFlow: StateFlow<SurfaceDescriptor?>","description":"io.github.thibaultbee.streampack.core.pipelines.outputs.IVideoSurfacePipelineOutputInternal.surfaceFlow","location":"streampack-core/io.github.thibaultbee.streampack.core.pipelines.outputs/-i-video-surface-pipeline-output-internal/surface-flow.html","searchKeys":["surfaceFlow","abstract val surfaceFlow: StateFlow<SurfaceDescriptor?>","io.github.thibaultbee.streampack.core.pipelines.outputs.IVideoSurfacePipelineOutputInternal.surfaceFlow"]},{"name":"abstract val targetRotation: Int","description":"io.github.thibaultbee.streampack.core.pipelines.outputs.IVideoPipelineOutputInternal.targetRotation","location":"streampack-core/io.github.thibaultbee.streampack.core.pipelines.outputs/-i-video-pipeline-output-internal/target-rotation.html","searchKeys":["targetRotation","abstract val targetRotation: Int","io.github.thibaultbee.streampack.core.pipelines.outputs.IVideoPipelineOutputInternal.targetRotation"]},{"name":"abstract val throwableFlow: StateFlow<Throwable?>","description":"io.github.thibaultbee.streampack.core.interfaces.IStreamer.throwableFlow","location":"streampack-core/io.github.thibaultbee.streampack.core.interfaces/-i-streamer/throwable-flow.html","searchKeys":["throwableFlow","abstract val throwableFlow: StateFlow<Throwable?>","io.github.thibaultbee.streampack.core.interfaces.IStreamer.throwableFlow"]},{"name":"abstract val timestampOffsetInNs: Long","description":"io.github.thibaultbee.streampack.core.elements.sources.video.ISurfaceSourceInternal.timestampOffsetInNs","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.video/-i-surface-source-internal/timestamp-offset-in-ns.html","searchKeys":["timestampOffsetInNs","abstract val timestampOffsetInNs: Long","io.github.thibaultbee.streampack.core.elements.sources.video.ISurfaceSourceInternal.timestampOffsetInNs"]},{"name":"abstract val uri: Uri","description":"io.github.thibaultbee.streampack.core.configuration.mediadescriptor.MediaDescriptor.uri","location":"streampack-core/io.github.thibaultbee.streampack.core.configuration.mediadescriptor/-media-descriptor/uri.html","searchKeys":["uri","abstract val uri: Uri","io.github.thibaultbee.streampack.core.configuration.mediadescriptor.MediaDescriptor.uri"]},{"name":"abstract val video: IEndpoint.IEndpointInfo.IVideoEndpointInfo","description":"io.github.thibaultbee.streampack.core.elements.endpoints.IEndpoint.IEndpointInfo.video","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints/-i-endpoint/-i-endpoint-info/video.html","searchKeys":["video","abstract val video: IEndpoint.IEndpointInfo.IVideoEndpointInfo","io.github.thibaultbee.streampack.core.elements.endpoints.IEndpoint.IEndpointInfo.video"]},{"name":"abstract val video: IMuxer.IMuxerInfo.IVideoMuxerInfo","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.IMuxer.IMuxerInfo.video","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers/-i-muxer/-i-muxer-info/video.html","searchKeys":["video","abstract val video: IMuxer.IMuxerInfo.IVideoMuxerInfo","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.IMuxer.IMuxerInfo.video"]},{"name":"abstract val video: IVideoConfigurationInfo","description":"io.github.thibaultbee.streampack.core.streamers.infos.IConfigurationInfo.video","location":"streampack-core/io.github.thibaultbee.streampack.core.streamers.infos/-i-configuration-info/video.html","searchKeys":["video","abstract val video: IVideoConfigurationInfo","io.github.thibaultbee.streampack.core.streamers.infos.IConfigurationInfo.video"]},{"name":"abstract val videoCodecConfigFlow: StateFlow<VideoCodecConfig?>","description":"io.github.thibaultbee.streampack.core.pipelines.outputs.encoding.IConfigurableVideoEncodingPipelineOutput.videoCodecConfigFlow","location":"streampack-core/io.github.thibaultbee.streampack.core.pipelines.outputs.encoding/-i-configurable-video-encoding-pipeline-output/video-codec-config-flow.html","searchKeys":["videoCodecConfigFlow","abstract val videoCodecConfigFlow: StateFlow<VideoCodecConfig?>","io.github.thibaultbee.streampack.core.pipelines.outputs.encoding.IConfigurableVideoEncodingPipelineOutput.videoCodecConfigFlow"]},{"name":"abstract val videoConfigFlow: StateFlow<VideoConfig?>","description":"io.github.thibaultbee.streampack.core.streamers.single.IVideoSingleStreamer.videoConfigFlow","location":"streampack-core/io.github.thibaultbee.streampack.core.streamers.single/-i-video-single-streamer/video-config-flow.html","searchKeys":["videoConfigFlow","abstract val videoConfigFlow: StateFlow<VideoConfig?>","io.github.thibaultbee.streampack.core.streamers.single.IVideoSingleStreamer.videoConfigFlow"]},{"name":"abstract val videoEncoder: IEncoder?","description":"io.github.thibaultbee.streampack.core.pipelines.outputs.encoding.IConfigurableVideoEncodingPipelineOutput.videoEncoder","location":"streampack-core/io.github.thibaultbee.streampack.core.pipelines.outputs.encoding/-i-configurable-video-encoding-pipeline-output/video-encoder.html","searchKeys":["videoEncoder","abstract val videoEncoder: IEncoder?","io.github.thibaultbee.streampack.core.pipelines.outputs.encoding.IConfigurableVideoEncodingPipelineOutput.videoEncoder"]},{"name":"abstract val videoEncoder: IEncoder?","description":"io.github.thibaultbee.streampack.core.streamers.single.IVideoSingleStreamer.videoEncoder","location":"streampack-core/io.github.thibaultbee.streampack.core.streamers.single/-i-video-single-streamer/video-encoder.html","searchKeys":["videoEncoder","abstract val videoEncoder: IEncoder?","io.github.thibaultbee.streampack.core.streamers.single.IVideoSingleStreamer.videoEncoder"]},{"name":"abstract val videoInput: IVideoInput?","description":"io.github.thibaultbee.streampack.core.interfaces.IWithVideoSource.videoInput","location":"streampack-core/io.github.thibaultbee.streampack.core.interfaces/-i-with-video-source/video-input.html","searchKeys":["videoInput","abstract val videoInput: IVideoInput?","io.github.thibaultbee.streampack.core.interfaces.IWithVideoSource.videoInput"]},{"name":"abstract val videoSourceConfigFlow: StateFlow<VideoSourceConfig?>","description":"io.github.thibaultbee.streampack.core.pipelines.outputs.IConfigurableVideoPipelineOutput.videoSourceConfigFlow","location":"streampack-core/io.github.thibaultbee.streampack.core.pipelines.outputs/-i-configurable-video-pipeline-output/video-source-config-flow.html","searchKeys":["videoSourceConfigFlow","abstract val videoSourceConfigFlow: StateFlow<VideoSourceConfig?>","io.github.thibaultbee.streampack.core.pipelines.outputs.IConfigurableVideoPipelineOutput.videoSourceConfigFlow"]},{"name":"abstract val viewportRect: Rect","description":"io.github.thibaultbee.streampack.core.elements.processing.video.outputs.ISurfaceOutput.viewportRect","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.processing.video.outputs/-i-surface-output/viewport-rect.html","searchKeys":["viewportRect","abstract val viewportRect: Rect","io.github.thibaultbee.streampack.core.elements.processing.video.outputs.ISurfaceOutput.viewportRect"]},{"name":"abstract val withAudio: Boolean","description":"io.github.thibaultbee.streampack.core.pipelines.outputs.IPipelineOutput.withAudio","location":"streampack-core/io.github.thibaultbee.streampack.core.pipelines.outputs/-i-pipeline-output/with-audio.html","searchKeys":["withAudio","abstract val withAudio: Boolean","io.github.thibaultbee.streampack.core.pipelines.outputs.IPipelineOutput.withAudio"]},{"name":"abstract val withConfig: Boolean","description":"io.github.thibaultbee.streampack.core.pipelines.inputs.IAudioInput.withConfig","location":"streampack-core/io.github.thibaultbee.streampack.core.pipelines.inputs/-i-audio-input/with-config.html","searchKeys":["withConfig","abstract val withConfig: Boolean","io.github.thibaultbee.streampack.core.pipelines.inputs.IAudioInput.withConfig"]},{"name":"abstract val withConfig: Boolean","description":"io.github.thibaultbee.streampack.core.pipelines.inputs.IVideoInput.withConfig","location":"streampack-core/io.github.thibaultbee.streampack.core.pipelines.inputs/-i-video-input/with-config.html","searchKeys":["withConfig","abstract val withConfig: Boolean","io.github.thibaultbee.streampack.core.pipelines.inputs.IVideoInput.withConfig"]},{"name":"abstract val withVideo: Boolean","description":"io.github.thibaultbee.streampack.core.pipelines.outputs.IPipelineOutput.withVideo","location":"streampack-core/io.github.thibaultbee.streampack.core.pipelines.outputs/-i-pipeline-output/with-video.html","searchKeys":["withVideo","abstract val withVideo: Boolean","io.github.thibaultbee.streampack.core.pipelines.outputs.IPipelineOutput.withVideo"]},{"name":"abstract var audioConfigEventListener: IConfigurableAudioPipelineOutputInternal.Listener?","description":"io.github.thibaultbee.streampack.core.pipelines.outputs.IConfigurableAudioPipelineOutputInternal.audioConfigEventListener","location":"streampack-core/io.github.thibaultbee.streampack.core.pipelines.outputs/-i-configurable-audio-pipeline-output-internal/audio-config-event-listener.html","searchKeys":["audioConfigEventListener","abstract var audioConfigEventListener: IConfigurableAudioPipelineOutputInternal.Listener?","io.github.thibaultbee.streampack.core.pipelines.outputs.IConfigurableAudioPipelineOutputInternal.audioConfigEventListener"]},{"name":"abstract var audioFrameRequestedListener: IEncoderInternal.IAsyncByteBufferInput.OnFrameRequestedListener?","description":"io.github.thibaultbee.streampack.core.pipelines.outputs.IAudioCallbackPipelineOutputInternal.audioFrameRequestedListener","location":"streampack-core/io.github.thibaultbee.streampack.core.pipelines.outputs/-i-audio-callback-pipeline-output-internal/audio-frame-requested-listener.html","searchKeys":["audioFrameRequestedListener","abstract var audioFrameRequestedListener: IEncoderInternal.IAsyncByteBufferInput.OnFrameRequestedListener?","io.github.thibaultbee.streampack.core.pipelines.outputs.IAudioCallbackPipelineOutputInternal.audioFrameRequestedListener"]},{"name":"abstract var bitrate: Int","description":"io.github.thibaultbee.streampack.core.elements.encoders.IEncoder.bitrate","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.encoders/-i-encoder/bitrate.html","searchKeys":["bitrate","abstract var bitrate: Int","io.github.thibaultbee.streampack.core.elements.encoders.IEncoder.bitrate"]},{"name":"abstract var isMuted: Boolean","description":"io.github.thibaultbee.streampack.core.elements.processing.audio.IAudioFrameProcessor.isMuted","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.processing.audio/-i-audio-frame-processor/is-muted.html","searchKeys":["isMuted","abstract var isMuted: Boolean","io.github.thibaultbee.streampack.core.elements.processing.audio.IAudioFrameProcessor.isMuted"]},{"name":"abstract var listener: IEncoderInternal.IAsyncByteBufferInput.OnFrameRequestedListener","description":"io.github.thibaultbee.streampack.core.elements.encoders.IEncoderInternal.IAsyncByteBufferInput.listener","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.encoders/-i-encoder-internal/-i-async-byte-buffer-input/listener.html","searchKeys":["listener","abstract var listener: IEncoderInternal.IAsyncByteBufferInput.OnFrameRequestedListener","io.github.thibaultbee.streampack.core.elements.encoders.IEncoderInternal.IAsyncByteBufferInput.listener"]},{"name":"abstract var listener: IEncoderInternal.ISurfaceInput.OnSurfaceUpdateListener","description":"io.github.thibaultbee.streampack.core.elements.encoders.IEncoderInternal.ISurfaceInput.listener","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.encoders/-i-encoder-internal/-i-surface-input/listener.html","searchKeys":["listener","abstract var listener: IEncoderInternal.ISurfaceInput.OnSurfaceUpdateListener","io.github.thibaultbee.streampack.core.elements.encoders.IEncoderInternal.ISurfaceInput.listener"]},{"name":"abstract var listener: IMuxerInternal.IMuxerListener?","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.IMuxerInternal.listener","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers/-i-muxer-internal/listener.html","searchKeys":["listener","abstract var listener: IMuxerInternal.IMuxerListener?","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.IMuxerInternal.listener"]},{"name":"abstract var streamEventListener: IPipelineEventOutputInternal.Listener?","description":"io.github.thibaultbee.streampack.core.pipelines.outputs.IPipelineEventOutputInternal.streamEventListener","location":"streampack-core/io.github.thibaultbee.streampack.core.pipelines.outputs/-i-pipeline-event-output-internal/stream-event-listener.html","searchKeys":["streamEventListener","abstract var streamEventListener: IPipelineEventOutputInternal.Listener?","io.github.thibaultbee.streampack.core.pipelines.outputs.IPipelineEventOutputInternal.streamEventListener"]},{"name":"abstract var videoConfigEventListener: IConfigurableVideoPipelineOutputInternal.Listener?","description":"io.github.thibaultbee.streampack.core.pipelines.outputs.IConfigurableVideoPipelineOutputInternal.videoConfigEventListener","location":"streampack-core/io.github.thibaultbee.streampack.core.pipelines.outputs/-i-configurable-video-pipeline-output-internal/video-config-event-listener.html","searchKeys":["videoConfigEventListener","abstract var videoConfigEventListener: IConfigurableVideoPipelineOutputInternal.Listener?","io.github.thibaultbee.streampack.core.pipelines.outputs.IConfigurableVideoPipelineOutputInternal.videoConfigEventListener"]},{"name":"abstract var videoFrameRequestedListener: IEncoderInternal.IAsyncByteBufferInput.OnFrameRequestedListener?","description":"io.github.thibaultbee.streampack.core.pipelines.outputs.IVideoCallbackPipelineOutputInternal.videoFrameRequestedListener","location":"streampack-core/io.github.thibaultbee.streampack.core.pipelines.outputs/-i-video-callback-pipeline-output-internal/video-frame-requested-listener.html","searchKeys":["videoFrameRequestedListener","abstract var videoFrameRequestedListener: IEncoderInternal.IAsyncByteBufferInput.OnFrameRequestedListener?","io.github.thibaultbee.streampack.core.pipelines.outputs.IVideoCallbackPipelineOutputInternal.videoFrameRequestedListener"]},{"name":"abstract var zoomRatio: Float","description":"io.github.thibaultbee.streampack.core.elements.sources.video.camera.CameraSettings.Zoom.zoomRatio","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.video.camera/-camera-settings/-zoom/zoom-ratio.html","searchKeys":["zoomRatio","abstract var zoomRatio: Float","io.github.thibaultbee.streampack.core.elements.sources.video.camera.CameraSettings.Zoom.zoomRatio"]},{"name":"annotation class ByteFormatValue","description":"io.github.thibaultbee.streampack.core.elements.utils.ByteFormatValue","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils/-byte-format-value/index.html","searchKeys":["ByteFormatValue","annotation class ByteFormatValue","io.github.thibaultbee.streampack.core.elements.utils.ByteFormatValue"]},{"name":"annotation class ChannelConfigValue","description":"io.github.thibaultbee.streampack.core.elements.utils.ChannelConfigValue","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils/-channel-config-value/index.html","searchKeys":["ChannelConfigValue","annotation class ChannelConfigValue","io.github.thibaultbee.streampack.core.elements.utils.ChannelConfigValue"]},{"name":"annotation class RotationValue","description":"io.github.thibaultbee.streampack.core.elements.utils.RotationValue","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils/-rotation-value/index.html","searchKeys":["RotationValue","annotation class RotationValue","io.github.thibaultbee.streampack.core.elements.utils.RotationValue"]},{"name":"class ADTSFrameWriter(frameBuffer: ByteBuffer, adts: ADTS) : ByteBufferWriter","description":"io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.ADTSFrameWriter","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac/-a-d-t-s-frame-writer/index.html","searchKeys":["ADTSFrameWriter","class ADTSFrameWriter(frameBuffer: ByteBuffer, adts: ADTS) : ByteBufferWriter","io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.ADTSFrameWriter"]},{"name":"class AV1CodecConfigurationBox1(config: AV1CodecConfigurationRecord) : AV1CodecConfigurationBox","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.AV1CodecConfigurationBox1","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-a-v1-codec-configuration-box1/index.html","searchKeys":["AV1CodecConfigurationBox1","class AV1CodecConfigurationBox1(config: AV1CodecConfigurationRecord) : AV1CodecConfigurationBox","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.AV1CodecConfigurationBox1"]},{"name":"class AV1CodecConfigurationBox2(buffer: ByteBuffer) : AV1CodecConfigurationBox","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.AV1CodecConfigurationBox2","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-a-v1-codec-configuration-box2/index.html","searchKeys":["AV1CodecConfigurationBox2","class AV1CodecConfigurationBox2(buffer: ByteBuffer) : AV1CodecConfigurationBox","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.AV1CodecConfigurationBox2"]},{"name":"class AV1CodecConfigurationRecord(marker: Boolean = true, version: Byte = 1, seqProfile: Byte, seqLevelIdx0: Byte, seqTier0: Boolean, highBitdepth: Boolean, twelveBit: Boolean, monochrome: Boolean, chromaSubsamplingX: Boolean, chromaSubsamplingY: Boolean, chromaSamplePosition: Byte, initialPresentationDelayMinusOne: Int?, configOBUs: ByteBuffer) : ByteBufferWriter","description":"io.github.thibaultbee.streampack.core.elements.utils.av.video.av1.AV1CodecConfigurationRecord","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.video.av1/-a-v1-codec-configuration-record/index.html","searchKeys":["AV1CodecConfigurationRecord","class AV1CodecConfigurationRecord(marker: Boolean = true, version: Byte = 1, seqProfile: Byte, seqLevelIdx0: Byte, seqTier0: Boolean, highBitdepth: Boolean, twelveBit: Boolean, monochrome: Boolean, chromaSubsamplingX: Boolean, chromaSubsamplingY: Boolean, chromaSamplePosition: Byte, initialPresentationDelayMinusOne: Int?, configOBUs: ByteBuffer) : ByteBufferWriter","io.github.thibaultbee.streampack.core.elements.utils.av.video.av1.AV1CodecConfigurationRecord"]},{"name":"class AV1SampleEntry(resolution: Size, horizontalResolution: Int = 72, verticalResolution: Int = 72, frameCount: Short = 1, compressorName: String? = \"AV1 Coding\", depth: Short = 24, av1C: AV1CodecConfigurationBox, btrt: BitRateBox? = null, extensionDescriptorsBox: List<Box> = emptyList(), clap: CleanApertureBox? = null, pasp: PixelAspectRatioBox? = null) : VisualSampleEntry","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.AV1SampleEntry","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-a-v1-sample-entry/index.html","searchKeys":["AV1SampleEntry","class AV1SampleEntry(resolution: Size, horizontalResolution: Int = 72, verticalResolution: Int = 72, frameCount: Short = 1, compressorName: String? = \"AV1 Coding\", depth: Short = 24, av1C: AV1CodecConfigurationBox, btrt: BitRateBox? = null, extensionDescriptorsBox: List<Box> = emptyList(), clap: CleanApertureBox? = null, pasp: PixelAspectRatioBox? = null) : VisualSampleEntry","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.AV1SampleEntry"]},{"name":"class AVCCBufferWriter(buffer: ByteBuffer) : ByteBufferWriter","description":"io.github.thibaultbee.streampack.core.elements.utils.av.buffer.AVCCBufferWriter","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.buffer/-a-v-c-c-buffer-writer/index.html","searchKeys":["AVCCBufferWriter","class AVCCBufferWriter(buffer: ByteBuffer) : ByteBufferWriter","io.github.thibaultbee.streampack.core.elements.utils.av.buffer.AVCCBufferWriter"]},{"name":"class AVCConfigurationBox(config: AVCDecoderConfigurationRecord) : Box","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.AVCConfigurationBox","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-a-v-c-configuration-box/index.html","searchKeys":["AVCConfigurationBox","class AVCConfigurationBox(config: AVCDecoderConfigurationRecord) : Box","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.AVCConfigurationBox"]},{"name":"class AVCSampleEntry(resolution: Size, horizontalResolution: Int = 72, verticalResolution: Int = 72, frameCount: Short = 1, compressorName: String? = \"AVC Coding\", depth: Short = 24, avcC: AVCConfigurationBox, btrt: BitRateBox? = null, extensionDescriptorsBox: List<Box> = emptyList(), clap: CleanApertureBox? = null, pasp: PixelAspectRatioBox? = null) : VisualSampleEntry","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.AVCSampleEntry","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-a-v-c-sample-entry/index.html","searchKeys":["AVCSampleEntry","class AVCSampleEntry(resolution: Size, horizontalResolution: Int = 72, verticalResolution: Int = 72, frameCount: Short = 1, compressorName: String? = \"AVC Coding\", depth: Short = 24, avcC: AVCConfigurationBox, btrt: BitRateBox? = null, extensionDescriptorsBox: List<Box> = emptyList(), clap: CleanApertureBox? = null, pasp: PixelAspectRatioBox? = null) : VisualSampleEntry","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.AVCSampleEntry"]},{"name":"class AVTagsFactory(frame: Frame, config: CodecConfig, sendHeader: Boolean)","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.AVTagsFactory","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags/-a-v-tags-factory/index.html","searchKeys":["AVTagsFactory","class AVTagsFactory(frame: Frame, config: CodecConfig, sendHeader: Boolean)","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.AVTagsFactory"]},{"name":"class AdaptationField(discontinuityIndicator: Boolean = false, randomAccessIndicator: Boolean = false, elementaryStreamPriorityIndicator: Boolean = false, programClockReference: Long? = null, originalProgramClockReference: Long? = null, spliceCountdown: Byte? = null, transportPrivateData: ByteBuffer? = null, adaptationFieldExtension: ByteBuffer? = null) : ITSElement","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.descriptors.AdaptationField","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.descriptors/-adaptation-field/index.html","searchKeys":["AdaptationField","class AdaptationField(discontinuityIndicator: Boolean = false, randomAccessIndicator: Boolean = false, elementaryStreamPriorityIndicator: Boolean = false, programClockReference: Long? = null, originalProgramClockReference: Long? = null, spliceCountdown: Byte? = null, transportPrivateData: ByteBuffer? = null, adaptationFieldExtension: ByteBuffer? = null) : ITSElement","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.descriptors.AdaptationField"]},{"name":"class AmfBoolean(b: Boolean) : AmfParameter","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.amf.primitives.AmfBoolean","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.amf.primitives/-amf-boolean/index.html","searchKeys":["AmfBoolean","class AmfBoolean(b: Boolean) : AmfParameter","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.amf.primitives.AmfBoolean"]},{"name":"class AmfEcmaArray : AmfContainer","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.amf.containers.AmfEcmaArray","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.amf.containers/-amf-ecma-array/index.html","searchKeys":["AmfEcmaArray","class AmfEcmaArray : AmfContainer","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.amf.containers.AmfEcmaArray"]},{"name":"class AmfInt16(s: Short) : AmfParameter","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.amf.primitives.AmfInt16","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.amf.primitives/-amf-int16/index.html","searchKeys":["AmfInt16","class AmfInt16(s: Short) : AmfParameter","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.amf.primitives.AmfInt16"]},{"name":"class AmfInt24(i: Int) : AmfParameter","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.amf.primitives.AmfInt24","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.amf.primitives/-amf-int24/index.html","searchKeys":["AmfInt24","class AmfInt24(i: Int) : AmfParameter","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.amf.primitives.AmfInt24"]},{"name":"class AmfInt32(i: Int) : AmfParameter","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.amf.primitives.AmfInt32","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.amf.primitives/-amf-int32/index.html","searchKeys":["AmfInt32","class AmfInt32(i: Int) : AmfParameter","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.amf.primitives.AmfInt32"]},{"name":"class AmfNamedParameter(name: String, v: AmfParameter) : AmfParameter","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.amf.primitives.AmfNamedParameter","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.amf.primitives/-amf-named-parameter/index.html","searchKeys":["AmfNamedParameter","class AmfNamedParameter(name: String, v: AmfParameter) : AmfParameter","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.amf.primitives.AmfNamedParameter"]},{"name":"class AmfNull : AmfParameter","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.amf.primitives.AmfNull","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.amf.primitives/-amf-null/index.html","searchKeys":["AmfNull","class AmfNull : AmfParameter","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.amf.primitives.AmfNull"]},{"name":"class AmfNumber(d: Double) : AmfParameter","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.amf.primitives.AmfNumber","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.amf.primitives/-amf-number/index.html","searchKeys":["AmfNumber","class AmfNumber(d: Double) : AmfParameter","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.amf.primitives.AmfNumber"]},{"name":"class AmfObject : AmfContainer","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.amf.containers.AmfObject","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.amf.containers/-amf-object/index.html","searchKeys":["AmfObject","class AmfObject : AmfContainer","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.amf.containers.AmfObject"]},{"name":"class AmfString(s: String) : AmfParameter","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.amf.primitives.AmfString","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.amf.primitives/-amf-string/index.html","searchKeys":["AmfString","class AmfString(s: String) : AmfParameter","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.amf.primitives.AmfString"]},{"name":"class AudioEncoderConfig(audioConfig: AudioCodecConfig, mode: EncoderMode) : EncoderConfig<AudioCodecConfig> ","description":"io.github.thibaultbee.streampack.core.elements.encoders.mediacodec.AudioEncoderConfig","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.encoders.mediacodec/-audio-encoder-config/index.html","searchKeys":["AudioEncoderConfig","class AudioEncoderConfig(audioConfig: AudioCodecConfig, mode: EncoderMode) : EncoderConfig<AudioCodecConfig> ","io.github.thibaultbee.streampack.core.elements.encoders.mediacodec.AudioEncoderConfig"]},{"name":"class AudioEncoderInfo(codecInfo: MediaCodecInfo, mimeType: String) : EncoderInfo","description":"io.github.thibaultbee.streampack.core.elements.encoders.mediacodec.AudioEncoderInfo","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.encoders.mediacodec/-audio-encoder-info/index.html","searchKeys":["AudioEncoderInfo","class AudioEncoderInfo(codecInfo: MediaCodecInfo, mimeType: String) : EncoderInfo","io.github.thibaultbee.streampack.core.elements.encoders.mediacodec.AudioEncoderInfo"]},{"name":"class AudioFrameProcessor : IFrameProcessor<RawFrame> , IAudioFrameProcessor","description":"io.github.thibaultbee.streampack.core.elements.processing.audio.AudioFrameProcessor","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.processing.audio/-audio-frame-processor/index.html","searchKeys":["AudioFrameProcessor","class AudioFrameProcessor : IFrameProcessor<RawFrame> , IAudioFrameProcessor","io.github.thibaultbee.streampack.core.elements.processing.audio.AudioFrameProcessor"]},{"name":"class AudioMetadata(val codecID: SoundFormat, val dataRate: Int, val sampleRate: Int, val sampleSize: Int, val isStereo: Boolean) : Metadata","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.AudioMetadata","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags/-audio-metadata/index.html","searchKeys":["AudioMetadata","class AudioMetadata(val codecID: SoundFormat, val dataRate: Int, val sampleRate: Int, val sampleSize: Int, val isStereo: Boolean) : Metadata","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.AudioMetadata"]},{"name":"class AudioMuxElement(val muxConfigPresent: Boolean = true, var useSameStreamMuxConfig: Boolean, streamMuxConfig: StreamMuxConfig? = null, payload: ByteBuffer? = null) : ByteBufferWriter","description":"io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.AudioMuxElement","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac/-audio-mux-element/index.html","searchKeys":["AudioMuxElement","class AudioMuxElement(val muxConfigPresent: Boolean = true, var useSameStreamMuxConfig: Boolean, streamMuxConfig: StreamMuxConfig? = null, payload: ByteBuffer? = null) : ByteBufferWriter","io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.AudioMuxElement"]},{"name":"class AudioOnlySingleStreamer(context: Context, endpointFactory: IEndpointInternal.Factory = DynamicEndpointFactory()) : ISingleStreamer, IAudioSingleStreamer","description":"io.github.thibaultbee.streampack.core.streamers.single.AudioOnlySingleStreamer","location":"streampack-core/io.github.thibaultbee.streampack.core.streamers.single/-audio-only-single-streamer/index.html","searchKeys":["AudioOnlySingleStreamer","class AudioOnlySingleStreamer(context: Context, endpointFactory: IEndpointInternal.Factory = DynamicEndpointFactory()) : ISingleStreamer, IAudioSingleStreamer","io.github.thibaultbee.streampack.core.streamers.single.AudioOnlySingleStreamer"]},{"name":"class AudioSpecificConfigDescriptor(upStream: Boolean, bufferSize: Int, maxBitrate: Int, avgBitrate: Int, audioSpecificConfig: ByteBuffer) : DecoderConfigDescriptor","description":"io.github.thibaultbee.streampack.core.elements.utils.av.descriptors.AudioSpecificConfigDescriptor","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.descriptors/-audio-specific-config-descriptor/index.html","searchKeys":["AudioSpecificConfigDescriptor","class AudioSpecificConfigDescriptor(upStream: Boolean, bufferSize: Int, maxBitrate: Int, avgBitrate: Int, audioSpecificConfig: ByteBuffer) : DecoderConfigDescriptor","io.github.thibaultbee.streampack.core.elements.utils.av.descriptors.AudioSpecificConfigDescriptor"]},{"name":"class AudioStreamerConfigurationInfo(audioEndpointInfo: IEndpoint.IEndpointInfo.IAudioEndpointInfo) : IAudioConfigurationInfo","description":"io.github.thibaultbee.streampack.core.streamers.infos.AudioStreamerConfigurationInfo","location":"streampack-core/io.github.thibaultbee.streampack.core.streamers.infos/-audio-streamer-configuration-info/index.html","searchKeys":["AudioStreamerConfigurationInfo","class AudioStreamerConfigurationInfo(audioEndpointInfo: IEndpoint.IEndpointInfo.IAudioEndpointInfo) : IAudioConfigurationInfo","io.github.thibaultbee.streampack.core.streamers.infos.AudioStreamerConfigurationInfo"]},{"name":"class AudioTag(pts: Long, frameBuffer: ByteBuffer, aacPacketType: AACPacketType?, audioConfig: AudioCodecConfig) : FlvTag","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.AudioTag","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags/-audio-tag/index.html","searchKeys":["AudioTag","class AudioTag(pts: Long, frameBuffer: ByteBuffer, aacPacketType: AACPacketType?, audioConfig: AudioCodecConfig) : FlvTag","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.AudioTag"]},{"name":"class BitRateBox(bufferSizeDB: Int, maxBitrate: Int, avgBitrate: Int) : Box","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.BitRateBox","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-bit-rate-box/index.html","searchKeys":["BitRateBox","class BitRateBox(bufferSizeDB: Int, maxBitrate: Int, avgBitrate: Int) : Box","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.BitRateBox"]},{"name":"class BitmapSourceFactory(bitmap: Bitmap) : IVideoSourceInternal.Factory","description":"io.github.thibaultbee.streampack.core.elements.sources.video.bitmap.BitmapSourceFactory","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.video.bitmap/-bitmap-source-factory/index.html","searchKeys":["BitmapSourceFactory","class BitmapSourceFactory(bitmap: Bitmap) : IVideoSourceInternal.Factory","io.github.thibaultbee.streampack.core.elements.sources.video.bitmap.BitmapSourceFactory"]},{"name":"class BlankShaderProgram : GLUtils.Program2D","description":"io.github.thibaultbee.streampack.core.elements.processing.video.utils.GLUtils.BlankShaderProgram","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.processing.video.utils/-g-l-utils/-blank-shader-program/index.html","searchKeys":["BlankShaderProgram","class BlankShaderProgram : GLUtils.Program2D","io.github.thibaultbee.streampack.core.elements.processing.video.utils.GLUtils.BlankShaderProgram"]},{"name":"class Builder","description":"io.github.thibaultbee.streampack.core.elements.processing.video.utils.GraphicDeviceInfo.Builder","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.processing.video.utils/-graphic-device-info/-builder/index.html","searchKeys":["Builder","class Builder","io.github.thibaultbee.streampack.core.elements.processing.video.utils.GraphicDeviceInfo.Builder"]},{"name":"class ByteBufferBitReader(var buffer: ByteBuffer)","description":"io.github.thibaultbee.streampack.core.elements.utils.av.buffer.ByteBufferBitReader","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.buffer/-byte-buffer-bit-reader/index.html","searchKeys":["ByteBufferBitReader","class ByteBufferBitReader(var buffer: ByteBuffer)","io.github.thibaultbee.streampack.core.elements.utils.av.buffer.ByteBufferBitReader"]},{"name":"class ByteBufferPool(isDirect: Boolean) : IBufferPool<ByteBuffer> , Closeable","description":"io.github.thibaultbee.streampack.core.elements.utils.pool.ByteBufferPool","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.pool/-byte-buffer-pool/index.html","searchKeys":["ByteBufferPool","class ByteBufferPool(isDirect: Boolean) : IBufferPool<ByteBuffer> , Closeable","io.github.thibaultbee.streampack.core.elements.utils.pool.ByteBufferPool"]},{"name":"class CameraCaptureSessionCompatBuilder","description":"io.github.thibaultbee.streampack.core.elements.sources.video.camera.sessioncompat.CameraCaptureSessionCompatBuilder","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.video.camera.sessioncompat/-camera-capture-session-compat-builder/index.html","searchKeys":["CameraCaptureSessionCompatBuilder","class CameraCaptureSessionCompatBuilder","io.github.thibaultbee.streampack.core.elements.sources.video.camera.sessioncompat.CameraCaptureSessionCompatBuilder"]},{"name":"class CameraController","description":"io.github.thibaultbee.streampack.core.elements.sources.video.camera.controllers.CameraController","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.video.camera.controllers/-camera-controller/index.html","searchKeys":["CameraController","class CameraController","io.github.thibaultbee.streampack.core.elements.sources.video.camera.controllers.CameraController"]},{"name":"class CameraException(message: String) : Exception","description":"io.github.thibaultbee.streampack.core.elements.sources.video.camera.CameraException","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.video.camera/-camera-exception/index.html","searchKeys":["CameraException","class CameraException(message: String) : Exception","io.github.thibaultbee.streampack.core.elements.sources.video.camera.CameraException"]},{"name":"class CameraInfoProvider(val rotationDegrees: Int, facingDirection: Int?) : ISourceInfoProvider","description":"io.github.thibaultbee.streampack.core.elements.sources.video.camera.CameraInfoProvider","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.video.camera/-camera-info-provider/index.html","searchKeys":["CameraInfoProvider","class CameraInfoProvider(val rotationDegrees: Int, facingDirection: Int?) : ISourceInfoProvider","io.github.thibaultbee.streampack.core.elements.sources.video.camera.CameraInfoProvider"]},{"name":"class CameraSessionController","description":"io.github.thibaultbee.streampack.core.elements.sources.video.camera.controllers.CameraSessionController","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.video.camera.controllers/-camera-session-controller/index.html","searchKeys":["CameraSessionController","class CameraSessionController","io.github.thibaultbee.streampack.core.elements.sources.video.camera.controllers.CameraSessionController"]},{"name":"class CameraSettings(cameraManager: CameraManager, cameraController: CameraController)","description":"io.github.thibaultbee.streampack.core.elements.sources.video.camera.CameraSettings","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.video.camera/-camera-settings/index.html","searchKeys":["CameraSettings","class CameraSettings(cameraManager: CameraManager, cameraController: CameraController)","io.github.thibaultbee.streampack.core.elements.sources.video.camera.CameraSettings"]},{"name":"class CameraSourceFactory(val cameraId: String? = null) : IVideoSourceInternal.Factory","description":"io.github.thibaultbee.streampack.core.elements.sources.video.camera.CameraSourceFactory","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.video.camera/-camera-source-factory/index.html","searchKeys":["CameraSourceFactory","class CameraSourceFactory(val cameraId: String? = null) : IVideoSourceInternal.Factory","io.github.thibaultbee.streampack.core.elements.sources.video.camera.CameraSourceFactory"]},{"name":"class ChannelMapping(streamCount: Byte, coupledCount: Byte, channelMapping: ByteArray) : ByteBufferWriter","description":"io.github.thibaultbee.streampack.core.elements.utils.av.audio.opus.IdentificationHeader.ChannelMapping","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.audio.opus/-identification-header/-channel-mapping/index.html","searchKeys":["ChannelMapping","class ChannelMapping(streamCount: Byte, coupledCount: Byte, channelMapping: ByteArray) : ByteBufferWriter","io.github.thibaultbee.streampack.core.elements.utils.av.audio.opus.IdentificationHeader.ChannelMapping"]},{"name":"class Chunk(val id: Int)","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models.Chunk","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models/-chunk/index.html","searchKeys":["Chunk","class Chunk(val id: Int)","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models.Chunk"]},{"name":"class ChunkLargeOffsetBox(chunkOffsetEntries: List<Long>) : BaseChunkOffsetBox<Long> ","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.ChunkLargeOffsetBox","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-chunk-large-offset-box/index.html","searchKeys":["ChunkLargeOffsetBox","class ChunkLargeOffsetBox(chunkOffsetEntries: List<Long>) : BaseChunkOffsetBox<Long> ","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.ChunkLargeOffsetBox"]},{"name":"class ChunkOffsetBox(chunkOffsetEntries: List<Int>) : BaseChunkOffsetBox<Int> ","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.ChunkOffsetBox","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-chunk-offset-box/index.html","searchKeys":["ChunkOffsetBox","class ChunkOffsetBox(chunkOffsetEntries: List<Int>) : BaseChunkOffsetBox<Int> ","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.ChunkOffsetBox"]},{"name":"class ChunkedFileOutputStream(val filesDir: File, chunkSize: Int, chunkNameGenerator: (Int) -> String = { id -> \"chunk_$id\" }) : OutputStream","description":"io.github.thibaultbee.streampack.core.elements.utils.ChunkedFileOutputStream","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils/-chunked-file-output-stream/index.html","searchKeys":["ChunkedFileOutputStream","class ChunkedFileOutputStream(val filesDir: File, chunkSize: Int, chunkNameGenerator: (Int) -> String = { id -> \"chunk_$id\" }) : OutputStream","io.github.thibaultbee.streampack.core.elements.utils.ChunkedFileOutputStream"]},{"name":"class ChunkedFileOutputStreamSink(chunkSize: Int) : OutputStreamSink","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.sinks.ChunkedFileOutputStreamSink","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.sinks/-chunked-file-output-stream-sink/index.html","searchKeys":["ChunkedFileOutputStreamSink","class ChunkedFileOutputStreamSink(chunkSize: Int) : OutputStreamSink","io.github.thibaultbee.streampack.core.elements.endpoints.composites.sinks.ChunkedFileOutputStreamSink"]},{"name":"class CleanApertureBox : Box","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.CleanApertureBox","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-clean-aperture-box/index.html","searchKeys":["CleanApertureBox","class CleanApertureBox : Box","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.CleanApertureBox"]},{"name":"class ClosedException(cause: Throwable) : Exception","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.sinks.ClosedException","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.sinks/-closed-exception/index.html","searchKeys":["ClosedException","class ClosedException(cause: Throwable) : Exception","io.github.thibaultbee.streampack.core.elements.endpoints.composites.sinks.ClosedException"]},{"name":"class CodecFeature(val id: Byte, val length: Byte, val data: Any)","description":"io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.VP9CodecPrivate.CodecFeature","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx/-v-p9-codec-private/-codec-feature/index.html","searchKeys":["CodecFeature","class CodecFeature(val id: Byte, val length: Byte, val data: Any)","io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.VP9CodecPrivate.CodecFeature"]},{"name":"class ColorCorrection(cameraManager: CameraManager, cameraSettings: CameraSettings)","description":"io.github.thibaultbee.streampack.core.elements.sources.video.camera.CameraSettings.ColorCorrection","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.video.camera/-camera-settings/-color-correction/index.html","searchKeys":["ColorCorrection","class ColorCorrection(cameraManager: CameraManager, cameraSettings: CameraSettings)","io.github.thibaultbee.streampack.core.elements.sources.video.camera.CameraSettings.ColorCorrection"]},{"name":"class CombineDescriptor(val descriptors: List<MediaDescriptor>) : MediaDescriptor","description":"io.github.thibaultbee.streampack.core.elements.endpoints.CombineEndpoint.CombineDescriptor","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints/-combine-endpoint/-combine-descriptor/index.html","searchKeys":["CombineDescriptor","class CombineDescriptor(val descriptors: List<MediaDescriptor>) : MediaDescriptor","io.github.thibaultbee.streampack.core.elements.endpoints.CombineEndpoint.CombineDescriptor"]},{"name":"class CombineEndpointFactory(val endpointInternals: List<IEndpointInternal>) : IEndpointInternal.Factory","description":"io.github.thibaultbee.streampack.core.elements.endpoints.CombineEndpointFactory","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints/-combine-endpoint-factory/index.html","searchKeys":["CombineEndpointFactory","class CombineEndpointFactory(val endpointInternals: List<IEndpointInternal>) : IEndpointInternal.Factory","io.github.thibaultbee.streampack.core.elements.endpoints.CombineEndpointFactory"]},{"name":"class CompositeEndpoint(val muxer: IMuxerInternal, val sink: ISinkInternal) : ICompositeEndpointInternal","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.CompositeEndpoint","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites/-composite-endpoint/index.html","searchKeys":["CompositeEndpoint","class CompositeEndpoint(val muxer: IMuxerInternal, val sink: ISinkInternal) : ICompositeEndpointInternal","io.github.thibaultbee.streampack.core.elements.endpoints.composites.CompositeEndpoint"]},{"name":"class CompositeEndpointFactory(val muxer: IMuxerInternal, val sink: ISinkInternal) : IEndpointInternal.Factory","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.CompositeEndpointFactory","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites/-composite-endpoint-factory/index.html","searchKeys":["CompositeEndpointFactory","class CompositeEndpointFactory(val muxer: IMuxerInternal, val sink: ISinkInternal) : IEndpointInternal.Factory","io.github.thibaultbee.streampack.core.elements.endpoints.composites.CompositeEndpointFactory"]},{"name":"class ConflatedJob","description":"io.github.thibaultbee.streampack.core.elements.utils.ConflatedJob","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils/-conflated-job/index.html","searchKeys":["ConflatedJob","class ConflatedJob","io.github.thibaultbee.streampack.core.elements.utils.ConflatedJob"]},{"name":"class ContentSink(context: Context) : OutputStreamSink","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.sinks.ContentSink","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.sinks/-content-sink/index.html","searchKeys":["ContentSink","class ContentSink(context: Context) : OutputStreamSink","io.github.thibaultbee.streampack.core.elements.endpoints.composites.sinks.ContentSink"]},{"name":"class CropScalerRegionZoom(val cameraManager: CameraManager, val cameraSettings: CameraSettings) : CameraSettings.Zoom","description":"io.github.thibaultbee.streampack.core.elements.sources.video.camera.CameraSettings.Zoom.CropScalerRegionZoom","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.video.camera/-camera-settings/-zoom/-crop-scaler-region-zoom/index.html","searchKeys":["CropScalerRegionZoom","class CropScalerRegionZoom(val cameraManager: CameraManager, val cameraSettings: CameraSettings) : CameraSettings.Zoom","io.github.thibaultbee.streampack.core.elements.sources.video.camera.CameraSettings.Zoom.CropScalerRegionZoom"]},{"name":"class DataEntryUrlBox(location: String? = null) : DataEntryBox","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.DataEntryUrlBox","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-data-entry-url-box/index.html","searchKeys":["DataEntryUrlBox","class DataEntryUrlBox(location: String? = null) : DataEntryBox","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.DataEntryUrlBox"]},{"name":"class DataEntryUrnBox(name: String, location: String? = null, flags: Int) : DataEntryBox","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.DataEntryUrnBox","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-data-entry-urn-box/index.html","searchKeys":["DataEntryUrnBox","class DataEntryUrnBox(name: String, location: String? = null, flags: Int) : DataEntryBox","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.DataEntryUrnBox"]},{"name":"class DataInformationBox(dref: DataReferenceBox) : Box","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.DataInformationBox","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-data-information-box/index.html","searchKeys":["DataInformationBox","class DataInformationBox(dref: DataReferenceBox) : Box","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.DataInformationBox"]},{"name":"class DataReferenceBox(entries: List<DataEntryBox>) : FullBox","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.DataReferenceBox","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-data-reference-box/index.html","searchKeys":["DataReferenceBox","class DataReferenceBox(entries: List<DataEntryBox>) : FullBox","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.DataReferenceBox"]},{"name":"class DecoderSpecificInfo(specificConfig: ByteBuffer) : BaseDescriptor","description":"io.github.thibaultbee.streampack.core.elements.utils.av.descriptors.DecoderSpecificInfo","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.descriptors/-decoder-specific-info/index.html","searchKeys":["DecoderSpecificInfo","class DecoderSpecificInfo(specificConfig: ByteBuffer) : BaseDescriptor","io.github.thibaultbee.streampack.core.elements.utils.av.descriptors.DecoderSpecificInfo"]},{"name":"class DefaultMP4Segmenter(val hasAudio: Boolean, val hasVideo: Boolean, numOfAudioSampleInSegment: Int = DEFAULT_NUM_OF_AUDIO_SAMPLE_IN_SEGMENT) : MP4Segmenter","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models.DefaultMP4Segmenter","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models/-default-m-p4-segmenter/index.html","searchKeys":["DefaultMP4Segmenter","class DefaultMP4Segmenter(val hasAudio: Boolean, val hasVideo: Boolean, numOfAudioSampleInSegment: Int = DEFAULT_NUM_OF_AUDIO_SAMPLE_IN_SEGMENT) : MP4Segmenter","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models.DefaultMP4Segmenter"]},{"name":"class DefaultMP4SegmenterFactory : MP4SegmenterFactory","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models.DefaultMP4SegmenterFactory","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models/-default-m-p4-segmenter-factory/index.html","searchKeys":["DefaultMP4SegmenterFactory","class DefaultMP4SegmenterFactory : MP4SegmenterFactory","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models.DefaultMP4SegmenterFactory"]},{"name":"class DefaultSurfaceProcessorFactory : ISurfaceProcessorInternal.Factory","description":"io.github.thibaultbee.streampack.core.elements.processing.video.DefaultSurfaceProcessorFactory","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.processing.video/-default-surface-processor-factory/index.html","searchKeys":["DefaultSurfaceProcessorFactory","class DefaultSurfaceProcessorFactory : ISurfaceProcessorInternal.Factory","io.github.thibaultbee.streampack.core.elements.processing.video.DefaultSurfaceProcessorFactory"]},{"name":"class DerivedStateFlow<T>(getValue: () -> T, flow: Flow<T>) : StateFlow<T> ","description":"io.github.thibaultbee.streampack.core.elements.utils.DerivedStateFlow","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils/-derived-state-flow/index.html","searchKeys":["DerivedStateFlow","class DerivedStateFlow<T>(getValue: () -> T, flow: Flow<T>) : StateFlow<T> ","io.github.thibaultbee.streampack.core.elements.utils.DerivedStateFlow"]},{"name":"class DisplayRotationProvider(val context: Context) : RotationProvider","description":"io.github.thibaultbee.streampack.core.streamers.orientation.DisplayRotationProvider","location":"streampack-core/io.github.thibaultbee.streampack.core.streamers.orientation/-display-rotation-provider/index.html","searchKeys":["DisplayRotationProvider","class DisplayRotationProvider(val context: Context) : RotationProvider","io.github.thibaultbee.streampack.core.streamers.orientation.DisplayRotationProvider"]},{"name":"class DualEndpointFactory(mainEndpoint: IEndpointInternal, secondEndpoint: IEndpointInternal) : IEndpointInternal.Factory","description":"io.github.thibaultbee.streampack.core.elements.endpoints.DualEndpointFactory","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints/-dual-endpoint-factory/index.html","searchKeys":["DualEndpointFactory","class DualEndpointFactory(mainEndpoint: IEndpointInternal, secondEndpoint: IEndpointInternal) : IEndpointInternal.Factory","io.github.thibaultbee.streampack.core.elements.endpoints.DualEndpointFactory"]},{"name":"class DualStreamerAudioConfig","description":"io.github.thibaultbee.streampack.core.streamers.dual.DualStreamerAudioConfig","location":"streampack-core/io.github.thibaultbee.streampack.core.streamers.dual/-dual-streamer-audio-config/index.html","searchKeys":["DualStreamerAudioConfig","class DualStreamerAudioConfig","io.github.thibaultbee.streampack.core.streamers.dual.DualStreamerAudioConfig"]},{"name":"class DualStreamerVideoConfig","description":"io.github.thibaultbee.streampack.core.streamers.dual.DualStreamerVideoConfig","location":"streampack-core/io.github.thibaultbee.streampack.core.streamers.dual/-dual-streamer-video-config/index.html","searchKeys":["DualStreamerVideoConfig","class DualStreamerVideoConfig","io.github.thibaultbee.streampack.core.streamers.dual.DualStreamerVideoConfig"]},{"name":"class DynamicEndpointFactory : IEndpointInternal.Factory","description":"io.github.thibaultbee.streampack.core.elements.endpoints.DynamicEndpointFactory","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints/-dynamic-endpoint-factory/index.html","searchKeys":["DynamicEndpointFactory","class DynamicEndpointFactory : IEndpointInternal.Factory","io.github.thibaultbee.streampack.core.elements.endpoints.DynamicEndpointFactory"]},{"name":"class DynamicLocalEndpoint(context: Context) : DynamicEndpoint","description":"io.github.thibaultbee.streampack.core.elements.endpoints.DynamicLocalEndpoint","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints/-dynamic-local-endpoint/index.html","searchKeys":["DynamicLocalEndpoint","class DynamicLocalEndpoint(context: Context) : DynamicEndpoint","io.github.thibaultbee.streampack.core.elements.endpoints.DynamicLocalEndpoint"]},{"name":"class DynamicLocalEndpointFactory : IEndpointInternal.Factory","description":"io.github.thibaultbee.streampack.core.elements.endpoints.DynamicLocalEndpointFactory","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints/-dynamic-local-endpoint-factory/index.html","searchKeys":["DynamicLocalEndpointFactory","class DynamicLocalEndpointFactory : IEndpointInternal.Factory","io.github.thibaultbee.streampack.core.elements.endpoints.DynamicLocalEndpointFactory"]},{"name":"class ESDSBox(esDescriptor: ESDescriptor) : FullBox","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.ESDSBox","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-e-s-d-s-box/index.html","searchKeys":["ESDSBox","class ESDSBox(esDescriptor: ESDescriptor) : FullBox","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.ESDSBox"]},{"name":"class ESDescriptor(esId: Short, streamPriority: Byte, dependsOnEsId: Short? = null, url: String? = null, ocrEsId: Short? = null, decoderConfigDescriptor: DecoderConfigDescriptor, slConfigDescriptor: SLConfigDescriptor) : BaseDescriptor","description":"io.github.thibaultbee.streampack.core.elements.utils.av.descriptors.ESDescriptor","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.descriptors/-e-s-descriptor/index.html","searchKeys":["ESDescriptor","class ESDescriptor(esId: Short, streamPriority: Byte, dependsOnEsId: Short? = null, url: String? = null, ocrEsId: Short? = null, decoderConfigDescriptor: DecoderConfigDescriptor, slConfigDescriptor: SLConfigDescriptor) : BaseDescriptor","io.github.thibaultbee.streampack.core.elements.utils.av.descriptors.ESDescriptor"]},{"name":"class EndpointInfo(val muxerInfo: IMuxer.IMuxerInfo) : IEndpoint.IEndpointInfo","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.CompositeEndpoint.EndpointInfo","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites/-composite-endpoint/-endpoint-info/index.html","searchKeys":["EndpointInfo","class EndpointInfo(val muxerInfo: IMuxer.IMuxerInfo) : IEndpoint.IEndpointInfo","io.github.thibaultbee.streampack.core.elements.endpoints.composites.CompositeEndpoint.EndpointInfo"]},{"name":"class Entry(firstChunk: Int, val samplesPerChunk: Int, sampleDescriptionId: Int) : ByteBufferWriter","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.SampleToChunkBox.Entry","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-sample-to-chunk-box/-entry/index.html","searchKeys":["Entry","class Entry(firstChunk: Int, val samplesPerChunk: Int, sampleDescriptionId: Int) : ByteBufferWriter","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.SampleToChunkBox.Entry"]},{"name":"class Entry(val sampleDuration: Int? = null, val sampleSize: Int? = null, val sampleFlags: Int? = null, val sampleCompositionTimeOffset: Int? = null) : ByteBufferWriter","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.TrackRunBox.Entry","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-track-run-box/-entry/index.html","searchKeys":["Entry","class Entry(val sampleDuration: Int? = null, val sampleSize: Int? = null, val sampleFlags: Int? = null, val sampleCompositionTimeOffset: Int? = null) : ByteBufferWriter","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.TrackRunBox.Entry"]},{"name":"class Exposure(cameraManager: CameraManager, cameraSettings: CameraSettings)","description":"io.github.thibaultbee.streampack.core.elements.sources.video.camera.CameraSettings.Exposure","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.video.camera/-camera-settings/-exposure/index.html","searchKeys":["Exposure","class Exposure(cameraManager: CameraManager, cameraSettings: CameraSettings)","io.github.thibaultbee.streampack.core.elements.sources.video.camera.CameraSettings.Exposure"]},{"name":"class ExtendedVideoTag(pts: Long, buffer: ByteBufferWriter, isKeyFrame: Boolean, packetType: PacketType, mimeType: String) : FlvTag","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.video.ExtendedVideoTag","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.video/-extended-video-tag/index.html","searchKeys":["ExtendedVideoTag","class ExtendedVideoTag(pts: Long, buffer: ByteBufferWriter, isKeyFrame: Boolean, packetType: PacketType, mimeType: String) : FlvTag","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.video.ExtendedVideoTag"]},{"name":"class Factory(bitrateRegulatorFactory: IBitrateRegulator.Factory, bitrateRegulatorConfig: BitrateRegulatorConfig = BitrateRegulatorConfig(), delayTimeInMs: Long = 500) : BitrateRegulatorController.Factory","description":"io.github.thibaultbee.streampack.core.regulator.controllers.DummyBitrateRegulatorController.Factory","location":"streampack-core/io.github.thibaultbee.streampack.core.regulator.controllers/-dummy-bitrate-regulator-controller/-factory/index.html","searchKeys":["Factory","class Factory(bitrateRegulatorFactory: IBitrateRegulator.Factory, bitrateRegulatorConfig: BitrateRegulatorConfig = BitrateRegulatorConfig(), delayTimeInMs: Long = 500) : BitrateRegulatorController.Factory","io.github.thibaultbee.streampack.core.regulator.controllers.DummyBitrateRegulatorController.Factory"]},{"name":"class FakeSink(val supportedSinkTypes: List<MediaSinkType> = MediaSinkType.entries) : AbstractSink","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.sinks.FakeSink","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.sinks/-fake-sink/index.html","searchKeys":["FakeSink","class FakeSink(val supportedSinkTypes: List<MediaSinkType> = MediaSinkType.entries) : AbstractSink","io.github.thibaultbee.streampack.core.elements.endpoints.composites.sinks.FakeSink"]},{"name":"class FileSink(coroutineContext: CoroutineContext = Dispatchers.IO) : AbstractSink","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.sinks.FileSink","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.sinks/-file-sink/index.html","searchKeys":["FileSink","class FileSink(coroutineContext: CoroutineContext = Dispatchers.IO) : AbstractSink","io.github.thibaultbee.streampack.core.elements.endpoints.composites.sinks.FileSink"]},{"name":"class FileTypeBox(majorBrand: String = \"isom\", minorVersion: Int = 512, compatibleBrands: List<String> = listOf(\"isom\", \"iso6\", \"iso2\", \"avc1\", \"mp41\")) : Box","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.FileTypeBox","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-file-type-box/index.html","searchKeys":["FileTypeBox","class FileTypeBox(majorBrand: String = \"isom\", minorVersion: Int = 512, compatibleBrands: List<String> = listOf(\"isom\", \"iso6\", \"iso2\", \"avc1\", \"mp41\")) : Box","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.FileTypeBox"]},{"name":"class Flash(cameraManager: CameraManager, cameraSettings: CameraSettings)","description":"io.github.thibaultbee.streampack.core.elements.sources.video.camera.CameraSettings.Flash","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.video.camera/-camera-settings/-flash/index.html","searchKeys":["Flash","class Flash(cameraManager: CameraManager, cameraSettings: CameraSettings)","io.github.thibaultbee.streampack.core.elements.sources.video.camera.CameraSettings.Flash"]},{"name":"class FlvHeader(hasAudio: Boolean, hasVideo: Boolean)","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.FlvHeader","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags/-flv-header/index.html","searchKeys":["FlvHeader","class FlvHeader(hasAudio: Boolean, hasVideo: Boolean)","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.FlvHeader"]},{"name":"class FlvMuxer(var listener: IMuxerInternal.IMuxerListener? = null, isForFile: Boolean) : IMuxerInternal","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.FlvMuxer","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv/-flv-muxer/index.html","searchKeys":["FlvMuxer","class FlvMuxer(var listener: IMuxerInternal.IMuxerListener? = null, isForFile: Boolean) : IMuxerInternal","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.FlvMuxer"]},{"name":"class Focus(cameraManager: CameraManager, cameraSettings: CameraSettings)","description":"io.github.thibaultbee.streampack.core.elements.sources.video.camera.CameraSettings.Focus","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.video.camera/-camera-settings/-focus/index.html","searchKeys":["Focus","class Focus(cameraManager: CameraManager, cameraSettings: CameraSettings)","io.github.thibaultbee.streampack.core.elements.sources.video.camera.CameraSettings.Focus"]},{"name":"class FocusMetering(cameraManager: CameraManager, cameraSettings: CameraSettings, zoom: CameraSettings.Zoom, focus: CameraSettings.Focus, exposure: CameraSettings.Exposure, whiteBalance: CameraSettings.WhiteBalance)","description":"io.github.thibaultbee.streampack.core.elements.sources.video.camera.CameraSettings.FocusMetering","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.video.camera/-camera-settings/-focus-metering/index.html","searchKeys":["FocusMetering","class FocusMetering(cameraManager: CameraManager, cameraSettings: CameraSettings, zoom: CameraSettings.Zoom, focus: CameraSettings.Focus, exposure: CameraSettings.Exposure, whiteBalance: CameraSettings.WhiteBalance)","io.github.thibaultbee.streampack.core.elements.sources.video.camera.CameraSettings.FocusMetering"]},{"name":"class GraphicDeviceInfo","description":"io.github.thibaultbee.streampack.core.elements.processing.video.utils.GraphicDeviceInfo","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.processing.video.utils/-graphic-device-info/index.html","searchKeys":["GraphicDeviceInfo","class GraphicDeviceInfo","io.github.thibaultbee.streampack.core.elements.processing.video.utils.GraphicDeviceInfo"]},{"name":"class H26XBitBuffer(val buffer: ByteBuffer, initialPosition: Int = buffer.position()) : BitBuffer","description":"io.github.thibaultbee.streampack.core.elements.utils.av.video.H26XBitBuffer","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.video/-h26-x-bit-buffer/index.html","searchKeys":["H26XBitBuffer","class H26XBitBuffer(val buffer: ByteBuffer, initialPosition: Int = buffer.position()) : BitBuffer","io.github.thibaultbee.streampack.core.elements.utils.av.video.H26XBitBuffer"]},{"name":"class HEVCConfigurationBox(config: HEVCDecoderConfigurationRecord) : Box","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.HEVCConfigurationBox","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-h-e-v-c-configuration-box/index.html","searchKeys":["HEVCConfigurationBox","class HEVCConfigurationBox(config: HEVCDecoderConfigurationRecord) : Box","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.HEVCConfigurationBox"]},{"name":"class HEVCSampleEntry(resolution: Size, horizontalResolution: Int = 72, verticalResolution: Int = 72, frameCount: Short = 1, compressorName: String? = \"HEVC Coding\", depth: Short = 24, hvcC: HEVCConfigurationBox, btrt: BitRateBox? = null, extensionDescriptorsBox: List<Box> = emptyList(), clap: CleanApertureBox? = null, pasp: PixelAspectRatioBox? = null) : VisualSampleEntry","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.HEVCSampleEntry","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-h-e-v-c-sample-entry/index.html","searchKeys":["HEVCSampleEntry","class HEVCSampleEntry(resolution: Size, horizontalResolution: Int = 72, verticalResolution: Int = 72, frameCount: Short = 1, compressorName: String? = \"HEVC Coding\", depth: Short = 24, hvcC: HEVCConfigurationBox, btrt: BitRateBox? = null, extensionDescriptorsBox: List<Box> = emptyList(), clap: CleanApertureBox? = null, pasp: PixelAspectRatioBox? = null) : VisualSampleEntry","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.HEVCSampleEntry"]},{"name":"class HandlerBox(type: HandlerBox.HandlerType, name: String) : FullBox","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.HandlerBox","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-handler-box/index.html","searchKeys":["HandlerBox","class HandlerBox(type: HandlerBox.HandlerType, name: String) : FullBox","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.HandlerBox"]},{"name":"class IdentificationHeader(val version: Byte, val channelCount: Byte, val preSkip: Short, val inputSampleRate: Int, val outputGain: Short, val channelMappingFamily: Byte, val channelMapping: IdentificationHeader.ChannelMapping?) : ByteBufferWriter","description":"io.github.thibaultbee.streampack.core.elements.utils.av.audio.opus.IdentificationHeader","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.audio.opus/-identification-header/index.html","searchKeys":["IdentificationHeader","class IdentificationHeader(val version: Byte, val channelCount: Byte, val preSkip: Short, val inputSampleRate: Int, val outputGain: Short, val channelMappingFamily: Byte, val channelMapping: IdentificationHeader.ChannelMapping?) : ByteBufferWriter","io.github.thibaultbee.streampack.core.elements.utils.av.audio.opus.IdentificationHeader"]},{"name":"class IdentitySurfaceOutput(val descriptor: SurfaceDescriptor, val isStreaming: () -> Boolean, val viewportRect: Rect = Rect(\n        0,\n        0,\n        descriptor.resolution.width,\n        descriptor.resolution.height\n    )) : ISurfaceOutput","description":"io.github.thibaultbee.streampack.core.elements.processing.video.outputs.IdentitySurfaceOutput","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.processing.video.outputs/-identity-surface-output/index.html","searchKeys":["IdentitySurfaceOutput","class IdentitySurfaceOutput(val descriptor: SurfaceDescriptor, val isStreaming: () -> Boolean, val viewportRect: Rect = Rect(\n        0,\n        0,\n        descriptor.resolution.width,\n        descriptor.resolution.height\n    )) : ISurfaceOutput","io.github.thibaultbee.streampack.core.elements.processing.video.outputs.IdentitySurfaceOutput"]},{"name":"class IndexedFrame(val id: Int, val frame: Frame)","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models.Chunk.IndexedFrame","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models/-chunk/-indexed-frame/index.html","searchKeys":["IndexedFrame","class IndexedFrame(val id: Int, val frame: Frame)","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models.Chunk.IndexedFrame"]},{"name":"class Iso(cameraManager: CameraManager, cameraSettings: CameraSettings)","description":"io.github.thibaultbee.streampack.core.elements.sources.video.camera.CameraSettings.Iso","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.video.camera/-camera-settings/-iso/index.html","searchKeys":["Iso","class Iso(cameraManager: CameraManager, cameraSettings: CameraSettings)","io.github.thibaultbee.streampack.core.elements.sources.video.camera.CameraSettings.Iso"]},{"name":"class LATMFrameWriter(audioMuxElement: AudioMuxElement) : ByteBufferWriter","description":"io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.LATMFrameWriter","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac/-l-a-t-m-frame-writer/index.html","searchKeys":["LATMFrameWriter","class LATMFrameWriter(audioMuxElement: AudioMuxElement) : ByteBufferWriter","io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.LATMFrameWriter"]},{"name":"class LdSbrHeader(sbrHeaders: List<SbrHeader>) : BitBufferWriter","description":"io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.config.ELDSpecificConfig.LdSbrHeader","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.config/-e-l-d-specific-config/-ld-sbr-header/index.html","searchKeys":["LdSbrHeader","class LdSbrHeader(sbrHeaders: List<SbrHeader>) : BitBufferWriter","io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.config.ELDSpecificConfig.LdSbrHeader"]},{"name":"class MP4AudioSampleEntry(channelCount: Short, sampleSize: Short, sampleRate: Int, esds: ESDSBox, btrt: BitRateBox? = null) : AudioSampleEntry","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.MP4AudioSampleEntry","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-m-p4-audio-sample-entry/index.html","searchKeys":["MP4AudioSampleEntry","class MP4AudioSampleEntry(channelCount: Short, sampleSize: Short, sampleRate: Int, esds: ESDSBox, btrt: BitRateBox? = null) : AudioSampleEntry","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.MP4AudioSampleEntry"]},{"name":"class MediaBox(mdhd: MediaHeaderBox, hdlr: HandlerBox, val minf: MediaInformationBox) : Box","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.MediaBox","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-media-box/index.html","searchKeys":["MediaBox","class MediaBox(mdhd: MediaHeaderBox, hdlr: HandlerBox, val minf: MediaInformationBox) : Box","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.MediaBox"]},{"name":"class MediaCodecEncoder : IEncoderInternal","description":"io.github.thibaultbee.streampack.core.elements.encoders.mediacodec.MediaCodecEncoder","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.encoders.mediacodec/-media-codec-encoder/index.html","searchKeys":["MediaCodecEncoder","class MediaCodecEncoder : IEncoderInternal","io.github.thibaultbee.streampack.core.elements.encoders.mediacodec.MediaCodecEncoder"]},{"name":"class MediaDataBox(dataSize: Int) : Box","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.MediaDataBox","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-media-data-box/index.html","searchKeys":["MediaDataBox","class MediaDataBox(dataSize: Int) : Box","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.MediaDataBox"]},{"name":"class MediaHeaderBox(val version: Byte, creationTime: Long = TimeUtils.utcNowIsom, modificationTime: Long = TimeUtils.utcNowIsom, timescale: Int, duration: Long, language: Short = 0) : FullBox","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.MediaHeaderBox","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-media-header-box/index.html","searchKeys":["MediaHeaderBox","class MediaHeaderBox(val version: Byte, creationTime: Long = TimeUtils.utcNowIsom, modificationTime: Long = TimeUtils.utcNowIsom, timescale: Int, duration: Long, language: Short = 0) : FullBox","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.MediaHeaderBox"]},{"name":"class MediaInformationBox(mhd: TypeMediaHeaderBox, dinf: DataInformationBox, val stbl: SampleTableBox) : Box","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.MediaInformationBox","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-media-information-box/index.html","searchKeys":["MediaInformationBox","class MediaInformationBox(mhd: TypeMediaHeaderBox, dinf: DataInformationBox, val stbl: SampleTableBox) : Box","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.MediaInformationBox"]},{"name":"class MediaMuxerEndpoint(context: Context) : IEndpointInternal","description":"io.github.thibaultbee.streampack.core.elements.endpoints.MediaMuxerEndpoint","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints/-media-muxer-endpoint/index.html","searchKeys":["MediaMuxerEndpoint","class MediaMuxerEndpoint(context: Context) : IEndpointInternal","io.github.thibaultbee.streampack.core.elements.endpoints.MediaMuxerEndpoint"]},{"name":"class MediaMuxerEndpointFactory : IEndpointInternal.Factory","description":"io.github.thibaultbee.streampack.core.elements.endpoints.MediaMuxerEndpointFactory","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints/-media-muxer-endpoint-factory/index.html","searchKeys":["MediaMuxerEndpointFactory","class MediaMuxerEndpointFactory : IEndpointInternal.Factory","io.github.thibaultbee.streampack.core.elements.endpoints.MediaMuxerEndpointFactory"]},{"name":"class MediaProjectionAudioSourceFactory(mediaProjection: MediaProjection, effects: Set<UUID> = defaultAudioEffects) : AudioRecordSourceFactory","description":"io.github.thibaultbee.streampack.core.elements.sources.audio.audiorecord.MediaProjectionAudioSourceFactory","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.audio.audiorecord/-media-projection-audio-source-factory/index.html","searchKeys":["MediaProjectionAudioSourceFactory","class MediaProjectionAudioSourceFactory(mediaProjection: MediaProjection, effects: Set<UUID> = defaultAudioEffects) : AudioRecordSourceFactory","io.github.thibaultbee.streampack.core.elements.sources.audio.audiorecord.MediaProjectionAudioSourceFactory"]},{"name":"class MediaProjectionVideoSourceFactory(mediaProjection: MediaProjection, overrideRotation: Int? = null) : IVideoSourceInternal.Factory","description":"io.github.thibaultbee.streampack.core.elements.sources.video.mediaprojection.MediaProjectionVideoSourceFactory","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.video.mediaprojection/-media-projection-video-source-factory/index.html","searchKeys":["MediaProjectionVideoSourceFactory","class MediaProjectionVideoSourceFactory(mediaProjection: MediaProjection, overrideRotation: Int? = null) : IVideoSourceInternal.Factory","io.github.thibaultbee.streampack.core.elements.sources.video.mediaprojection.MediaProjectionVideoSourceFactory"]},{"name":"class MicrophoneSourceFactory(effects: Set<UUID> = defaultAudioEffects) : AudioRecordSourceFactory","description":"io.github.thibaultbee.streampack.core.elements.sources.audio.audiorecord.MicrophoneSourceFactory","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.audio.audiorecord/-microphone-source-factory/index.html","searchKeys":["MicrophoneSourceFactory","class MicrophoneSourceFactory(effects: Set<UUID> = defaultAudioEffects) : AudioRecordSourceFactory","io.github.thibaultbee.streampack.core.elements.sources.audio.audiorecord.MicrophoneSourceFactory"]},{"name":"class MovieBox(mvhd: MovieHeaderBox, val trak: List<TrackBox>, mvex: MovieExtendsBox? = null) : Box","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.MovieBox","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-movie-box/index.html","searchKeys":["MovieBox","class MovieBox(mvhd: MovieHeaderBox, val trak: List<TrackBox>, mvex: MovieExtendsBox? = null) : Box","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.MovieBox"]},{"name":"class MovieBoxFactory(val timescale: Int) : AbstractMovieBoxFactory","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models.MovieBoxFactory","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models/-movie-box-factory/index.html","searchKeys":["MovieBoxFactory","class MovieBoxFactory(val timescale: Int) : AbstractMovieBoxFactory","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models.MovieBoxFactory"]},{"name":"class MovieExtendsBox(trex: List<TrackExtendsBox>) : Box","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.MovieExtendsBox","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-movie-extends-box/index.html","searchKeys":["MovieExtendsBox","class MovieExtendsBox(trex: List<TrackExtendsBox>) : Box","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.MovieExtendsBox"]},{"name":"class MovieFragmentBox(mfhd: MovieFragmentHeaderBox, traf: List<TrackFragmentBox> = emptyList()) : Box","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.MovieFragmentBox","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-movie-fragment-box/index.html","searchKeys":["MovieFragmentBox","class MovieFragmentBox(mfhd: MovieFragmentHeaderBox, traf: List<TrackFragmentBox> = emptyList()) : Box","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.MovieFragmentBox"]},{"name":"class MovieFragmentBoxFactory(sequenceNumber: Int) : AbstractMovieBoxFactory","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models.MovieFragmentBoxFactory","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models/-movie-fragment-box-factory/index.html","searchKeys":["MovieFragmentBoxFactory","class MovieFragmentBoxFactory(sequenceNumber: Int) : AbstractMovieBoxFactory","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models.MovieFragmentBoxFactory"]},{"name":"class MovieFragmentHeaderBox(sequenceNumber: Int) : FullBox","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.MovieFragmentHeaderBox","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-movie-fragment-header-box/index.html","searchKeys":["MovieFragmentHeaderBox","class MovieFragmentHeaderBox(sequenceNumber: Int) : FullBox","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.MovieFragmentHeaderBox"]},{"name":"class MovieFragmentRandomAccessBox(traf: List<TrackFragmentRandomAccessBox>) : Box","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.MovieFragmentRandomAccessBox","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-movie-fragment-random-access-box/index.html","searchKeys":["MovieFragmentRandomAccessBox","class MovieFragmentRandomAccessBox(traf: List<TrackFragmentRandomAccessBox>) : Box","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.MovieFragmentRandomAccessBox"]},{"name":"class MovieFragmentRandomAccessOffsetBox(mfraSize: Int, val version: Byte = 0) : FullBox","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.MovieFragmentRandomAccessOffsetBox","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-movie-fragment-random-access-offset-box/index.html","searchKeys":["MovieFragmentRandomAccessOffsetBox","class MovieFragmentRandomAccessOffsetBox(mfraSize: Int, val version: Byte = 0) : FullBox","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.MovieFragmentRandomAccessOffsetBox"]},{"name":"class MovieHeaderBox(val version: Byte, creationTime: Long = TimeUtils.utcNowIsom, modificationTime: Long = TimeUtils.utcNowIsom, timescale: Int, duration: Long, rate: Float = 1.0f, volume: Float = 1.0f, transformationMatrix: IntArray = intArrayOf(\n        0x10000,\n        0,\n        0,\n        0,\n        0x10000,\n        0,\n        0,\n        0,\n        0x40000000\n    ), nextTrackId: Int) : FullBox","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.MovieHeaderBox","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-movie-header-box/index.html","searchKeys":["MovieHeaderBox","class MovieHeaderBox(val version: Byte, creationTime: Long = TimeUtils.utcNowIsom, modificationTime: Long = TimeUtils.utcNowIsom, timescale: Int, duration: Long, rate: Float = 1.0f, volume: Float = 1.0f, transformationMatrix: IntArray = intArrayOf(\n        0x10000,\n        0,\n        0,\n        0,\n        0x10000,\n        0,\n        0,\n        0,\n        0x40000000\n    ), nextTrackId: Int) : FullBox","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.MovieHeaderBox"]},{"name":"class Mp4Muxer(var listener: IMuxerInternal.IMuxerListener? = null, timescale: Int = DEFAULT_TIMESCALE, segmenterFactory: MP4SegmenterFactory = DefaultMP4SegmenterFactory()) : IMuxerInternal","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.Mp4Muxer","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4/-mp4-muxer/index.html","searchKeys":["Mp4Muxer","class Mp4Muxer(var listener: IMuxerInternal.IMuxerListener? = null, timescale: Int = DEFAULT_TIMESCALE, segmenterFactory: MP4SegmenterFactory = DefaultMP4SegmenterFactory()) : IMuxerInternal","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.Mp4Muxer"]},{"name":"class MultiException(val throwables: Iterable<Throwable>) : Exception","description":"io.github.thibaultbee.streampack.core.pipelines.utils.MultiException","location":"streampack-core/io.github.thibaultbee.streampack.core.pipelines.utils/-multi-exception/index.html","searchKeys":["MultiException","class MultiException(val throwables: Iterable<Throwable>) : Exception","io.github.thibaultbee.streampack.core.pipelines.utils.MultiException"]},{"name":"class MuteEffect : IAudioEffect","description":"io.github.thibaultbee.streampack.core.elements.processing.audio.MuteEffect","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.processing.audio/-mute-effect/index.html","searchKeys":["MuteEffect","class MuteEffect : IAudioEffect","io.github.thibaultbee.streampack.core.elements.processing.audio.MuteEffect"]},{"name":"class NullMediaHeaderBox : FullBox","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.NullMediaHeaderBox","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-null-media-header-box/index.html","searchKeys":["NullMediaHeaderBox","class NullMediaHeaderBox : FullBox","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.NullMediaHeaderBox"]},{"name":"class OnMetadata(streams: List<Metadata>, duration: Double = 0.0) : FlvTag","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.OnMetadata","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags/-on-metadata/index.html","searchKeys":["OnMetadata","class OnMetadata(streams: List<Metadata>, duration: Double = 0.0) : FlvTag","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.OnMetadata"]},{"name":"class OpenGlRenderer","description":"io.github.thibaultbee.streampack.core.elements.processing.video.OpenGlRenderer","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.processing.video/-open-gl-renderer/index.html","searchKeys":["OpenGlRenderer","class OpenGlRenderer","io.github.thibaultbee.streampack.core.elements.processing.video.OpenGlRenderer"]},{"name":"class OpusCsdParser","description":"io.github.thibaultbee.streampack.core.elements.utils.av.audio.opus.OpusCsdParser","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.audio.opus/-opus-csd-parser/index.html","searchKeys":["OpusCsdParser","class OpusCsdParser","io.github.thibaultbee.streampack.core.elements.utils.av.audio.opus.OpusCsdParser"]},{"name":"class OpusSampleEntry(channelCount: Short, dOps: OpusSpecificBox, btrt: BitRateBox? = null) : AudioSampleEntry","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.OpusSampleEntry","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-opus-sample-entry/index.html","searchKeys":["OpusSampleEntry","class OpusSampleEntry(channelCount: Short, dOps: OpusSpecificBox, btrt: BitRateBox? = null) : AudioSampleEntry","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.OpusSampleEntry"]},{"name":"class OpusSpecificBox(version: Byte = 0, outputChannelCount: Byte, preSkip: Short, inputSampleRate: Int, outputGain: Short, channelMappingFamily: Byte, channelMapping: IdentificationHeader.ChannelMapping? = null) : Box","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.OpusSpecificBox","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-opus-specific-box/index.html","searchKeys":["OpusSpecificBox","class OpusSpecificBox(version: Byte = 0, outputChannelCount: Byte, preSkip: Short, inputSampleRate: Int, outputGain: Short, channelMappingFamily: Byte, channelMapping: IdentificationHeader.ChannelMapping? = null) : Box","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.OpusSpecificBox"]},{"name":"class PassthroughBufferWriter(buffer: ByteBuffer) : ByteBufferWriter","description":"io.github.thibaultbee.streampack.core.elements.utils.av.buffer.PassthroughBufferWriter","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.buffer/-passthrough-buffer-writer/index.html","searchKeys":["PassthroughBufferWriter","class PassthroughBufferWriter(buffer: ByteBuffer) : ByteBufferWriter","io.github.thibaultbee.streampack.core.elements.utils.av.buffer.PassthroughBufferWriter"]},{"name":"class Pat(var listener: IMuxerInternal.IMuxerListener? = null, services: List<Service>, tsId: Short, var versionNumber: Byte = 0, var packetCount: Int = 0) : Psi, ITSElement","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets.Pat","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets/-pat/index.html","searchKeys":["Pat","class Pat(var listener: IMuxerInternal.IMuxerListener? = null, services: List<Service>, tsId: Short, var versionNumber: Byte = 0, var packetCount: Int = 0) : Psi, ITSElement","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets.Pat"]},{"name":"class Pes(muxerListener: IMuxerInternal.IMuxerListener? = null, val stream: Stream, hasPcr: Boolean) : TS","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets.Pes","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets/-pes/index.html","searchKeys":["Pes","class Pes(muxerListener: IMuxerInternal.IMuxerListener? = null, val stream: Stream, hasPcr: Boolean) : TS","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets.Pes"]},{"name":"class PesHeader(streamId: Short, payloadLength: Int, esScramblingControl: Byte = 0, esPriority: Boolean = false, dataAlignmentIndicator: Boolean = false, copyright: Boolean = false, originalOrCopy: Boolean = true, pts: Long? = null, dts: Long? = null, esClockReference: Long? = null, esRate: Int? = null, dsmTrickMode: Byte? = null, additionalCopyInfo: Byte? = null, crc: Short? = null) : ITSElement","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets.PesHeader","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets/-pes-header/index.html","searchKeys":["PesHeader","class PesHeader(streamId: Short, payloadLength: Int, esScramblingControl: Byte = 0, esPriority: Boolean = false, dataAlignmentIndicator: Boolean = false, copyright: Boolean = false, originalOrCopy: Boolean = true, pts: Long? = null, dts: Long? = null, esClockReference: Long? = null, esRate: Int? = null, dsmTrickMode: Byte? = null, additionalCopyInfo: Byte? = null, crc: Short? = null) : ITSElement","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets.PesHeader"]},{"name":"class PixelAspectRatioBox(hSpacing: Int, vSpacing: Int) : Box","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.PixelAspectRatioBox","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-pixel-aspect-ratio-box/index.html","searchKeys":["PixelAspectRatioBox","class PixelAspectRatioBox(hSpacing: Int, vSpacing: Int) : Box","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.PixelAspectRatioBox"]},{"name":"class Pmt(var listener: IMuxerInternal.IMuxerListener? = null, service: Service, var streams: List<Stream>, val pid: Short, var versionNumber: Byte = 0) : Psi, ITSElement","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets.Pmt","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets/-pmt/index.html","searchKeys":["Pmt","class Pmt(var listener: IMuxerInternal.IMuxerListener? = null, service: Service, var streams: List<Stream>, val pid: Short, var versionNumber: Byte = 0) : Psi, ITSElement","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets.Pmt"]},{"name":"class ProgramConfigElement : BitBufferWriter","description":"io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.ProgramConfigElement","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac/-program-config-element/index.html","searchKeys":["ProgramConfigElement","class ProgramConfigElement : BitBufferWriter","io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.ProgramConfigElement"]},{"name":"class RZoom(val cameraManager: CameraManager, val cameraSettings: CameraSettings) : CameraSettings.Zoom","description":"io.github.thibaultbee.streampack.core.elements.sources.video.camera.CameraSettings.Zoom.RZoom","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.video.camera/-camera-settings/-zoom/-r-zoom/index.html","searchKeys":["RZoom","class RZoom(val cameraManager: CameraManager, val cameraSettings: CameraSettings) : CameraSettings.Zoom","io.github.thibaultbee.streampack.core.elements.sources.video.camera.CameraSettings.Zoom.RZoom"]},{"name":"class RawFrameFactory(bufferPool: ByteBufferPool) : IRawFrameFactory","description":"io.github.thibaultbee.streampack.core.elements.utils.pool.RawFrameFactory","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.pool/-raw-frame-factory/index.html","searchKeys":["RawFrameFactory","class RawFrameFactory(bufferPool: ByteBufferPool) : IRawFrameFactory","io.github.thibaultbee.streampack.core.elements.utils.pool.RawFrameFactory"]},{"name":"class RawFramePullPush(frameProcessor: IFrameProcessor<RawFrame>, val onFrame: (RawFrame) -> Unit, frameFactory: IRawFrameFactory)","description":"io.github.thibaultbee.streampack.core.elements.processing.RawFramePullPush","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.processing/-raw-frame-pull-push/index.html","searchKeys":["RawFramePullPush","class RawFramePullPush(frameProcessor: IFrameProcessor<RawFrame>, val onFrame: (RawFrame) -> Unit, frameFactory: IRawFrameFactory)","io.github.thibaultbee.streampack.core.elements.processing.RawFramePullPush"]},{"name":"class SLConfigDescriptor(predefined: Byte) : BaseDescriptor","description":"io.github.thibaultbee.streampack.core.elements.utils.av.descriptors.SLConfigDescriptor","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.descriptors/-s-l-config-descriptor/index.html","searchKeys":["SLConfigDescriptor","class SLConfigDescriptor(predefined: Byte) : BaseDescriptor","io.github.thibaultbee.streampack.core.elements.utils.av.descriptors.SLConfigDescriptor"]},{"name":"class SampleDescriptionBox(sampleEntries: List<SampleEntry>) : FullBox","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.SampleDescriptionBox","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-sample-description-box/index.html","searchKeys":["SampleDescriptionBox","class SampleDescriptionBox(sampleEntries: List<SampleEntry>) : FullBox","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.SampleDescriptionBox"]},{"name":"class SampleSizeBox(sampleSize: Int = 0, sampleSizeEntries: List<Int>? = null) : FullBox","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.SampleSizeBox","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-sample-size-box/index.html","searchKeys":["SampleSizeBox","class SampleSizeBox(sampleSize: Int = 0, sampleSizeEntries: List<Int>? = null) : FullBox","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.SampleSizeBox"]},{"name":"class SampleTableBox(stsd: SampleDescriptionBox, stts: TimeToSampleBox, stss: SyncSampleBox? = null, stsc: SampleToChunkBox, stsz: SampleSizeBox, val co64: ChunkLargeOffsetBox) : Box","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.SampleTableBox","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-sample-table-box/index.html","searchKeys":["SampleTableBox","class SampleTableBox(stsd: SampleDescriptionBox, stts: TimeToSampleBox, stss: SyncSampleBox? = null, stsc: SampleToChunkBox, stsz: SampleSizeBox, val co64: ChunkLargeOffsetBox) : Box","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.SampleTableBox"]},{"name":"class SampleToChunkBox(chunkEntries: List<SampleToChunkBox.Entry>) : FullBox","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.SampleToChunkBox","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-sample-to-chunk-box/index.html","searchKeys":["SampleToChunkBox","class SampleToChunkBox(chunkEntries: List<SampleToChunkBox.Entry>) : FullBox","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.SampleToChunkBox"]},{"name":"class SamplerShaderProgram(dynamicRange: DynamicRangeProfile, shaderProvider: ShaderProvider) : GLUtils.Program2D","description":"io.github.thibaultbee.streampack.core.elements.processing.video.utils.GLUtils.SamplerShaderProgram","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.processing.video.utils/-g-l-utils/-sampler-shader-program/index.html","searchKeys":["SamplerShaderProgram","class SamplerShaderProgram(dynamicRange: DynamicRangeProfile, shaderProvider: ShaderProvider) : GLUtils.Program2D","io.github.thibaultbee.streampack.core.elements.processing.video.utils.GLUtils.SamplerShaderProgram"]},{"name":"class Scheduler(delayTimeInMs: Long, coroutineScope: CoroutineScope = CoroutineScope(Dispatchers.Default), action: suspend CoroutineScope.() -> Unit)","description":"io.github.thibaultbee.streampack.core.elements.utils.Scheduler","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils/-scheduler/index.html","searchKeys":["Scheduler","class Scheduler(delayTimeInMs: Long, coroutineScope: CoroutineScope = CoroutineScope(Dispatchers.Default), action: suspend CoroutineScope.() -> Unit)","io.github.thibaultbee.streampack.core.elements.utils.Scheduler"]},{"name":"class Sdt(var listener: IMuxerInternal.IMuxerListener? = null, services: List<Service>, tsId: Short, originalNetworkId: Short = 0xff01.toShort(), var versionNumber: Byte = 0, var packetCount: Int = 0) : Psi, ITSElement","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets.Sdt","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets/-sdt/index.html","searchKeys":["Sdt","class Sdt(var listener: IMuxerInternal.IMuxerListener? = null, services: List<Service>, tsId: Short, originalNetworkId: Short = 0xff01.toShort(), var versionNumber: Byte = 0, var packetCount: Int = 0) : Psi, ITSElement","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets.Sdt"]},{"name":"class Segment(tracks: List<Track>, movieBoxFactory: AbstractMovieBoxFactory, onNewSample: (ByteBuffer) -> Unit)","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models.Segment","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models/-segment/index.html","searchKeys":["Segment","class Segment(tracks: List<Track>, movieBoxFactory: AbstractMovieBoxFactory, onNewSample: (ByteBuffer) -> Unit)","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models.Segment"]},{"name":"class SensorRotationProvider(val context: Context) : RotationProvider","description":"io.github.thibaultbee.streampack.core.streamers.orientation.SensorRotationProvider","location":"streampack-core/io.github.thibaultbee.streampack.core.streamers.orientation/-sensor-rotation-provider/index.html","searchKeys":["SensorRotationProvider","class SensorRotationProvider(val context: Context) : RotationProvider","io.github.thibaultbee.streampack.core.streamers.orientation.SensorRotationProvider"]},{"name":"class Service(val info: TSServiceInfo, var pmt: Pmt? = null, var streams: MutableList<Stream> = mutableListOf(), var pcrPid: Short? = null)","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.data.Service","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.data/-service/index.html","searchKeys":["Service","class Service(val info: TSServiceInfo, var pmt: Pmt? = null, var streams: MutableList<Stream> = mutableListOf(), var pcrPid: Short? = null)","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.data.Service"]},{"name":"class SoundMediaHeaderBox(balance: Short = 0) : TypeMediaHeaderBox","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.SoundMediaHeaderBox","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-sound-media-header-box/index.html","searchKeys":["SoundMediaHeaderBox","class SoundMediaHeaderBox(balance: Short = 0) : TypeMediaHeaderBox","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.SoundMediaHeaderBox"]},{"name":"class SrtPacket(val buffer: ByteBuffer, val isFirstPacketFrame: Boolean, val isLastPacketFrame: Boolean, val ts: Long, val type: PacketType = PacketType.UNKNOWN) : Packet","description":"io.github.thibaultbee.streampack.core.elements.data.SrtPacket","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.data/-srt-packet/index.html","searchKeys":["SrtPacket","class SrtPacket(val buffer: ByteBuffer, val isFirstPacketFrame: Boolean, val isLastPacketFrame: Boolean, val ts: Long, val type: PacketType = PacketType.UNKNOWN) : Packet","io.github.thibaultbee.streampack.core.elements.data.SrtPacket"]},{"name":"class Stabilization(cameraManager: CameraManager, cameraSettings: CameraSettings)","description":"io.github.thibaultbee.streampack.core.elements.sources.video.camera.CameraSettings.Stabilization","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.video.camera/-camera-settings/-stabilization/index.html","searchKeys":["Stabilization","class Stabilization(cameraManager: CameraManager, cameraSettings: CameraSettings)","io.github.thibaultbee.streampack.core.elements.sources.video.camera.CameraSettings.Stabilization"]},{"name":"class StreamMuxConfig(audioMuxVersion: Int = 0, val audioMuxVersionA: Int = 0, val allStreamsSameTimeFraming: Boolean? = null, numSubFrames: Int? = null, numProgram: Int? = null, numLayer: Int? = null, audioSpecificConfig: BitBuffer? = null, frameLengthType: Int? = null) : BitBufferWriter","description":"io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.StreamMuxConfig","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac/-stream-mux-config/index.html","searchKeys":["StreamMuxConfig","class StreamMuxConfig(audioMuxVersion: Int = 0, val audioMuxVersionA: Int = 0, val allStreamsSameTimeFraming: Boolean? = null, numSubFrames: Int? = null, numProgram: Int? = null, numLayer: Int? = null, audioSpecificConfig: BitBuffer? = null, frameLengthType: Int? = null) : BitBufferWriter","io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.StreamMuxConfig"]},{"name":"class StreamPackLogger : ILogger","description":"io.github.thibaultbee.streampack.core.logger.StreamPackLogger","location":"streampack-core/io.github.thibaultbee.streampack.core.logger/-stream-pack-logger/index.html","searchKeys":["StreamPackLogger","class StreamPackLogger : ILogger","io.github.thibaultbee.streampack.core.logger.StreamPackLogger"]},{"name":"class SurfaceOutput(val descriptor: SurfaceDescriptor, val isStreaming: () -> Boolean, transformationInfo: SurfaceOutput.TransformationInfo) : ISurfaceOutput","description":"io.github.thibaultbee.streampack.core.elements.processing.video.outputs.SurfaceOutput","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.processing.video.outputs/-surface-output/index.html","searchKeys":["SurfaceOutput","class SurfaceOutput(val descriptor: SurfaceDescriptor, val isStreaming: () -> Boolean, transformationInfo: SurfaceOutput.TransformationInfo) : ISurfaceOutput","io.github.thibaultbee.streampack.core.elements.processing.video.outputs.SurfaceOutput"]},{"name":"class SyncSample(val time: Long, val isFragment: Boolean, val moofOffset: Long)","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models.Track.SyncSample","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models/-track/-sync-sample/index.html","searchKeys":["SyncSample","class SyncSample(val time: Long, val isFragment: Boolean, val moofOffset: Long)","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models.Track.SyncSample"]},{"name":"class SyncSampleBox(sampleNumber: List<Int>) : FullBox","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.SyncSampleBox","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-sync-sample-box/index.html","searchKeys":["SyncSampleBox","class SyncSampleBox(sampleNumber: List<Int>) : FullBox","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.SyncSampleBox"]},{"name":"class TableHeader(tableId: Byte, sectionSyntaxIndicator: Boolean, reservedFutureUse: Boolean = false, payloadLength: Short, tableIdExtension: Short = 0, versionNumber: Byte, currentNextIndicator: Boolean = true, sectionNumber: Byte, lastSectionNumber: Byte) : ITSElement","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets.TableHeader","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets/-table-header/index.html","searchKeys":["TableHeader","class TableHeader(tableId: Byte, sectionSyntaxIndicator: Boolean, reservedFutureUse: Boolean = false, payloadLength: Short, tableIdExtension: Short = 0, versionNumber: Byte, currentNextIndicator: Boolean = true, sectionNumber: Byte, lastSectionNumber: Byte) : ITSElement","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets.TableHeader"]},{"name":"class TimeToSampleBox(decodingTimes: List<TimeToSampleBox.Entry>) : FullBox","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.TimeToSampleBox","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-time-to-sample-box/index.html","searchKeys":["TimeToSampleBox","class TimeToSampleBox(decodingTimes: List<TimeToSampleBox.Entry>) : FullBox","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.TimeToSampleBox"]},{"name":"class Track(val id: Int, val config: CodecConfig, val timescale: Int = TimeUtils.TIME_SCALE)","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models.Track","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models/-track/index.html","searchKeys":["Track","class Track(val id: Int, val config: CodecConfig, val timescale: Int = TimeUtils.TIME_SCALE)","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models.Track"]},{"name":"class TrackBox(val tkhd: TrackHeaderBox, val mdia: MediaBox) : Box","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.TrackBox","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-track-box/index.html","searchKeys":["TrackBox","class TrackBox(val tkhd: TrackHeaderBox, val mdia: MediaBox) : Box","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.TrackBox"]},{"name":"class TrackChunks(val track: Track, val onNewSample: (ByteBuffer) -> Unit)","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models.TrackChunks","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models/-track-chunks/index.html","searchKeys":["TrackChunks","class TrackChunks(val track: Track, val onNewSample: (ByteBuffer) -> Unit)","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models.TrackChunks"]},{"name":"class TrackExtendsBox(id: Int, defaultSampleDescriptionIndex: Int = 1, defaultSampleDuration: Int = 0, defaultSampleSize: Int = 0, defaultSampleFlags: SampleFlags = SampleFlags(isNonSyncSample = false)) : FullBox","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.TrackExtendsBox","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-track-extends-box/index.html","searchKeys":["TrackExtendsBox","class TrackExtendsBox(id: Int, defaultSampleDescriptionIndex: Int = 1, defaultSampleDuration: Int = 0, defaultSampleSize: Int = 0, defaultSampleFlags: SampleFlags = SampleFlags(isNonSyncSample = false)) : FullBox","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.TrackExtendsBox"]},{"name":"class TrackFragmentBaseMediaDecodeTimeBox(baseMediaDecodeTime: Number) : FullBox","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.TrackFragmentBaseMediaDecodeTimeBox","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-track-fragment-base-media-decode-time-box/index.html","searchKeys":["TrackFragmentBaseMediaDecodeTimeBox","class TrackFragmentBaseMediaDecodeTimeBox(baseMediaDecodeTime: Number) : FullBox","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.TrackFragmentBaseMediaDecodeTimeBox"]},{"name":"class TrackFragmentBox(tfhd: TrackFragmentHeaderBox, tfdt: TrackFragmentBaseMediaDecodeTimeBox? = null, trun: TrackRunBox? = null) : Box","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.TrackFragmentBox","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-track-fragment-box/index.html","searchKeys":["TrackFragmentBox","class TrackFragmentBox(tfhd: TrackFragmentHeaderBox, tfdt: TrackFragmentBaseMediaDecodeTimeBox? = null, trun: TrackRunBox? = null) : Box","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.TrackFragmentBox"]},{"name":"class TrackFragmentHeaderBox(id: Int, baseDataOffset: Long? = null, sampleDescriptionIndex: Int? = null, defaultSampleDuration: Int? = null, defaultSampleSize: Int? = null, defaultSampleFlags: SampleFlags? = null, durationIsEmpty: Boolean = false) : FullBox","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.TrackFragmentHeaderBox","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-track-fragment-header-box/index.html","searchKeys":["TrackFragmentHeaderBox","class TrackFragmentHeaderBox(id: Int, baseDataOffset: Long? = null, sampleDescriptionIndex: Int? = null, defaultSampleDuration: Int? = null, defaultSampleSize: Int? = null, defaultSampleFlags: SampleFlags? = null, durationIsEmpty: Boolean = false) : FullBox","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.TrackFragmentHeaderBox"]},{"name":"class TrackFragmentRandomAccessBox(id: Int, entries: List<TrackFragmentRandomAccessBox.Entry>) : FullBox","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.TrackFragmentRandomAccessBox","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-track-fragment-random-access-box/index.html","searchKeys":["TrackFragmentRandomAccessBox","class TrackFragmentRandomAccessBox(id: Int, entries: List<TrackFragmentRandomAccessBox.Entry>) : FullBox","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.TrackFragmentRandomAccessBox"]},{"name":"class TrackHeaderBox(val version: Byte, flags: List<TrackHeaderBox.TrackFlag>, val id: Int, creationTime: Long = TimeUtils.utcNowIsom, modificationTime: Long = TimeUtils.utcNowIsom, duration: Long, layer: Short = 0, alternateGroup: Short = 0, volume: Float = 1.0f, transformationMatrix: IntArray = intArrayOf(\n        0x10000,\n        0,\n        0,\n        0,\n        0x10000,\n        0,\n        0,\n        0,\n        0x40000000\n    ), resolution: Size) : FullBox","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.TrackHeaderBox","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-track-header-box/index.html","searchKeys":["TrackHeaderBox","class TrackHeaderBox(val version: Byte, flags: List<TrackHeaderBox.TrackFlag>, val id: Int, creationTime: Long = TimeUtils.utcNowIsom, modificationTime: Long = TimeUtils.utcNowIsom, duration: Long, layer: Short = 0, alternateGroup: Short = 0, volume: Float = 1.0f, transformationMatrix: IntArray = intArrayOf(\n        0x10000,\n        0,\n        0,\n        0,\n        0x10000,\n        0,\n        0,\n        0,\n        0x40000000\n    ), resolution: Size) : FullBox","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.TrackHeaderBox"]},{"name":"class TrackRunBox(val version: Byte, dataOffset: Int? = null, firstSampleFlags: SampleFlags? = null, entries: List<TrackRunBox.Entry> = emptyList()) : FullBox","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.TrackRunBox","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-track-run-box/index.html","searchKeys":["TrackRunBox","class TrackRunBox(val version: Byte, dataOffset: Int? = null, firstSampleFlags: SampleFlags? = null, entries: List<TrackRunBox.Entry> = emptyList()) : FullBox","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.TrackRunBox"]},{"name":"class TsMuxer : IMuxerInternal","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.TsMuxer","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts/-ts-muxer/index.html","searchKeys":["TsMuxer","class TsMuxer : IMuxerInternal","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.TsMuxer"]},{"name":"class UriMediaDescriptor : MediaDescriptor","description":"io.github.thibaultbee.streampack.core.configuration.mediadescriptor.UriMediaDescriptor","location":"streampack-core/io.github.thibaultbee.streampack.core.configuration.mediadescriptor/-uri-media-descriptor/index.html","searchKeys":["UriMediaDescriptor","class UriMediaDescriptor : MediaDescriptor","io.github.thibaultbee.streampack.core.configuration.mediadescriptor.UriMediaDescriptor"]},{"name":"class VP9SampleEntry(resolution: Size, horizontalResolution: Int = 72, verticalResolution: Int = 72, frameCount: Short = 1, compressorName: String? = \"VP9 Coding\", depth: Short = 24, vpcC: VPCodecConfigurationBox, btrt: BitRateBox? = null, extensionDescriptorsBox: List<Box> = emptyList(), clap: CleanApertureBox? = null, pasp: PixelAspectRatioBox? = null) : VisualSampleEntry","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.VP9SampleEntry","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-v-p9-sample-entry/index.html","searchKeys":["VP9SampleEntry","class VP9SampleEntry(resolution: Size, horizontalResolution: Int = 72, verticalResolution: Int = 72, frameCount: Short = 1, compressorName: String? = \"VP9 Coding\", depth: Short = 24, vpcC: VPCodecConfigurationBox, btrt: BitRateBox? = null, extensionDescriptorsBox: List<Box> = emptyList(), clap: CleanApertureBox? = null, pasp: PixelAspectRatioBox? = null) : VisualSampleEntry","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.VP9SampleEntry"]},{"name":"class VPCodecConfigurationBox(config: VPCodecConfigurationRecord) : FullBox","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.VPCodecConfigurationBox","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-v-p-codec-configuration-box/index.html","searchKeys":["VPCodecConfigurationBox","class VPCodecConfigurationBox(config: VPCodecConfigurationRecord) : FullBox","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.VPCodecConfigurationBox"]},{"name":"class VideoCameraStreamerConfigurationInfo(videoEndpointInfo: IEndpoint.IEndpointInfo.IVideoEndpointInfo) : VideoStreamerConfigurationInfo","description":"io.github.thibaultbee.streampack.core.streamers.infos.VideoCameraStreamerConfigurationInfo","location":"streampack-core/io.github.thibaultbee.streampack.core.streamers.infos/-video-camera-streamer-configuration-info/index.html","searchKeys":["VideoCameraStreamerConfigurationInfo","class VideoCameraStreamerConfigurationInfo(videoEndpointInfo: IEndpoint.IEndpointInfo.IVideoEndpointInfo) : VideoStreamerConfigurationInfo","io.github.thibaultbee.streampack.core.streamers.infos.VideoCameraStreamerConfigurationInfo"]},{"name":"class VideoEncoderConfig(videoConfig: VideoCodecConfig, mode: EncoderMode = EncoderMode.SURFACE) : EncoderConfig<VideoCodecConfig> ","description":"io.github.thibaultbee.streampack.core.elements.encoders.mediacodec.VideoEncoderConfig","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.encoders.mediacodec/-video-encoder-config/index.html","searchKeys":["VideoEncoderConfig","class VideoEncoderConfig(videoConfig: VideoCodecConfig, mode: EncoderMode = EncoderMode.SURFACE) : EncoderConfig<VideoCodecConfig> ","io.github.thibaultbee.streampack.core.elements.encoders.mediacodec.VideoEncoderConfig"]},{"name":"class VideoEncoderInfo(codecInfo: MediaCodecInfo, mimeType: String) : EncoderInfo","description":"io.github.thibaultbee.streampack.core.elements.encoders.mediacodec.VideoEncoderInfo","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.encoders.mediacodec/-video-encoder-info/index.html","searchKeys":["VideoEncoderInfo","class VideoEncoderInfo(codecInfo: MediaCodecInfo, mimeType: String) : EncoderInfo","io.github.thibaultbee.streampack.core.elements.encoders.mediacodec.VideoEncoderInfo"]},{"name":"class VideoMediaHeaderBox(graphicsMode: Short = 0, opColor: ShortArray = ShortArray(3)) : TypeMediaHeaderBox","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.VideoMediaHeaderBox","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-video-media-header-box/index.html","searchKeys":["VideoMediaHeaderBox","class VideoMediaHeaderBox(graphicsMode: Short = 0, opColor: ShortArray = ShortArray(3)) : TypeMediaHeaderBox","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.VideoMediaHeaderBox"]},{"name":"class VideoMetadata(val codecID: Int?, val dataRate: Int, val width: Int, val height: Int, val frameRate: Int) : Metadata","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.VideoMetadata","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags/-video-metadata/index.html","searchKeys":["VideoMetadata","class VideoMetadata(val codecID: Int?, val dataRate: Int, val width: Int, val height: Int, val frameRate: Int) : Metadata","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.VideoMetadata"]},{"name":"class VideoOnlyDualStreamer(context: Context, firstEndpointFactory: IEndpointInternal.Factory = DynamicEndpointFactory(), secondEndpointFactory: IEndpointInternal.Factory = DynamicEndpointFactory(), defaultRotation: Int = context.displayRotation) : IDualStreamer, IVideoDualStreamer","description":"io.github.thibaultbee.streampack.core.streamers.dual.VideoOnlyDualStreamer","location":"streampack-core/io.github.thibaultbee.streampack.core.streamers.dual/-video-only-dual-streamer/index.html","searchKeys":["VideoOnlyDualStreamer","class VideoOnlyDualStreamer(context: Context, firstEndpointFactory: IEndpointInternal.Factory = DynamicEndpointFactory(), secondEndpointFactory: IEndpointInternal.Factory = DynamicEndpointFactory(), defaultRotation: Int = context.displayRotation) : IDualStreamer, IVideoDualStreamer","io.github.thibaultbee.streampack.core.streamers.dual.VideoOnlyDualStreamer"]},{"name":"class VideoOnlySingleStreamer(context: Context, endpointFactory: IEndpointInternal.Factory = DynamicEndpointFactory(), defaultRotation: Int = context.displayRotation) : ISingleStreamer, IVideoSingleStreamer","description":"io.github.thibaultbee.streampack.core.streamers.single.VideoOnlySingleStreamer","location":"streampack-core/io.github.thibaultbee.streampack.core.streamers.single/-video-only-single-streamer/index.html","searchKeys":["VideoOnlySingleStreamer","class VideoOnlySingleStreamer(context: Context, endpointFactory: IEndpointInternal.Factory = DynamicEndpointFactory(), defaultRotation: Int = context.displayRotation) : ISingleStreamer, IVideoSingleStreamer","io.github.thibaultbee.streampack.core.streamers.single.VideoOnlySingleStreamer"]},{"name":"class VideoTag(pts: Long, buffer: ByteBufferWriter, isKeyFrame: Boolean, packetType: AVCPacketType?, mimeType: String) : FlvTag","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.video.VideoTag","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.video/-video-tag/index.html","searchKeys":["VideoTag","class VideoTag(pts: Long, buffer: ByteBufferWriter, isKeyFrame: Boolean, packetType: AVCPacketType?, mimeType: String) : FlvTag","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.video.VideoTag"]},{"name":"class VideoTagFactory(pts: Long, buffer: ByteBufferWriter, isKeyFrame: Boolean, packetType: PacketType, mimeType: String)","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.video.VideoTagFactory","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.video/-video-tag-factory/index.html","searchKeys":["VideoTagFactory","class VideoTagFactory(pts: Long, buffer: ByteBufferWriter, isKeyFrame: Boolean, packetType: PacketType, mimeType: String)","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.video.VideoTagFactory"]},{"name":"class WhiteBalance(cameraManager: CameraManager, cameraSettings: CameraSettings)","description":"io.github.thibaultbee.streampack.core.elements.sources.video.camera.CameraSettings.WhiteBalance","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.video.camera/-camera-settings/-white-balance/index.html","searchKeys":["WhiteBalance","class WhiteBalance(cameraManager: CameraManager, cameraSettings: CameraSettings)","io.github.thibaultbee.streampack.core.elements.sources.video.camera.CameraSettings.WhiteBalance"]},{"name":"const val BASE_PID: Short","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.utils.TSConst.BASE_PID","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.utils/-t-s-const/-b-a-s-e_-p-i-d.html","searchKeys":["BASE_PID","const val BASE_PID: Short","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.utils.TSConst.BASE_PID"]},{"name":"const val BLANK_FRAGMENT_SHADER: String","description":"io.github.thibaultbee.streampack.core.elements.processing.video.utils.GLUtils.BLANK_FRAGMENT_SHADER","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.processing.video.utils/-g-l-utils/-b-l-a-n-k_-f-r-a-g-m-e-n-t_-s-h-a-d-e-r.html","searchKeys":["BLANK_FRAGMENT_SHADER","const val BLANK_FRAGMENT_SHADER: String","io.github.thibaultbee.streampack.core.elements.processing.video.utils.GLUtils.BLANK_FRAGMENT_SHADER"]},{"name":"const val BLANK_VERTEX_SHADER: String","description":"io.github.thibaultbee.streampack.core.elements.processing.video.utils.GLUtils.BLANK_VERTEX_SHADER","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.processing.video.utils/-g-l-utils/-b-l-a-n-k_-v-e-r-t-e-x_-s-h-a-d-e-r.html","searchKeys":["BLANK_VERTEX_SHADER","const val BLANK_VERTEX_SHADER: String","io.github.thibaultbee.streampack.core.elements.processing.video.utils.GLUtils.BLANK_VERTEX_SHADER"]},{"name":"const val CRC_SIZE: Int = 4","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets.Psi.Companion.CRC_SIZE","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets/-psi/-companion/-c-r-c_-s-i-z-e.html","searchKeys":["CRC_SIZE","const val CRC_SIZE: Int = 4","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets.Psi.Companion.CRC_SIZE"]},{"name":"const val DEFAULT_COMPENSATION: Int = 0","description":"io.github.thibaultbee.streampack.core.elements.sources.video.camera.CameraSettings.Exposure.Companion.DEFAULT_COMPENSATION","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.video.camera/-camera-settings/-exposure/-companion/-d-e-f-a-u-l-t_-c-o-m-p-e-n-s-a-t-i-o-n.html","searchKeys":["DEFAULT_COMPENSATION","const val DEFAULT_COMPENSATION: Int = 0","io.github.thibaultbee.streampack.core.elements.sources.video.camera.CameraSettings.Exposure.Companion.DEFAULT_COMPENSATION"]},{"name":"const val DEFAULT_LENS_DISTANCE: Float = 0.0f","description":"io.github.thibaultbee.streampack.core.elements.sources.video.camera.CameraSettings.Focus.Companion.DEFAULT_LENS_DISTANCE","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.video.camera/-camera-settings/-focus/-companion/-d-e-f-a-u-l-t_-l-e-n-s_-d-i-s-t-a-n-c-e.html","searchKeys":["DEFAULT_LENS_DISTANCE","const val DEFAULT_LENS_DISTANCE: Float = 0.0f","io.github.thibaultbee.streampack.core.elements.sources.video.camera.CameraSettings.Focus.Companion.DEFAULT_LENS_DISTANCE"]},{"name":"const val DEFAULT_MAX_NUM_OF_METERING_REGION: Int = 0","description":"io.github.thibaultbee.streampack.core.elements.sources.video.camera.CameraSettings.Focus.Companion.DEFAULT_MAX_NUM_OF_METERING_REGION","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.video.camera/-camera-settings/-focus/-companion/-d-e-f-a-u-l-t_-m-a-x_-n-u-m_-o-f_-m-e-t-e-r-i-n-g_-r-e-g-i-o-n.html","searchKeys":["DEFAULT_MAX_NUM_OF_METERING_REGION","const val DEFAULT_MAX_NUM_OF_METERING_REGION: Int = 0","io.github.thibaultbee.streampack.core.elements.sources.video.camera.CameraSettings.Focus.Companion.DEFAULT_MAX_NUM_OF_METERING_REGION"]},{"name":"const val DEFAULT_NUM_OF_AUDIO_SAMPLE_IN_SEGMENT: Int = 128","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models.DefaultMP4Segmenter.Companion.DEFAULT_NUM_OF_AUDIO_SAMPLE_IN_SEGMENT","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models/-default-m-p4-segmenter/-companion/-d-e-f-a-u-l-t_-n-u-m_-o-f_-a-u-d-i-o_-s-a-m-p-l-e_-i-n_-s-e-g-m-e-n-t.html","searchKeys":["DEFAULT_NUM_OF_AUDIO_SAMPLE_IN_SEGMENT","const val DEFAULT_NUM_OF_AUDIO_SAMPLE_IN_SEGMENT: Int = 128","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models.DefaultMP4Segmenter.Companion.DEFAULT_NUM_OF_AUDIO_SAMPLE_IN_SEGMENT"]},{"name":"const val DEFAULT_SENSITIVITY: Int = 100","description":"io.github.thibaultbee.streampack.core.elements.sources.video.camera.CameraSettings.Iso.Companion.DEFAULT_SENSITIVITY","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.video.camera/-camera-settings/-iso/-companion/-d-e-f-a-u-l-t_-s-e-n-s-i-t-i-v-i-t-y.html","searchKeys":["DEFAULT_SENSITIVITY","const val DEFAULT_SENSITIVITY: Int = 100","io.github.thibaultbee.streampack.core.elements.sources.video.camera.CameraSettings.Iso.Companion.DEFAULT_SENSITIVITY"]},{"name":"const val DEFAULT_ZOOM_RATIO: Float = 1.0f","description":"io.github.thibaultbee.streampack.core.elements.sources.video.camera.CameraSettings.Zoom.Companion.DEFAULT_ZOOM_RATIO","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.video.camera/-camera-settings/-zoom/-companion/-d-e-f-a-u-l-t_-z-o-o-m_-r-a-t-i-o.html","searchKeys":["DEFAULT_ZOOM_RATIO","const val DEFAULT_ZOOM_RATIO: Float = 1.0f","io.github.thibaultbee.streampack.core.elements.sources.video.camera.CameraSettings.Zoom.Companion.DEFAULT_ZOOM_RATIO"]},{"name":"const val EGL_GL_COLORSPACE_BT2020_HLG_EXT: Int = 13632","description":"io.github.thibaultbee.streampack.core.elements.processing.video.utils.GLUtils.EGL_GL_COLORSPACE_BT2020_HLG_EXT","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.processing.video.utils/-g-l-utils/-e-g-l_-g-l_-c-o-l-o-r-s-p-a-c-e_-b-t2020_-h-l-g_-e-x-t.html","searchKeys":["EGL_GL_COLORSPACE_BT2020_HLG_EXT","const val EGL_GL_COLORSPACE_BT2020_HLG_EXT: Int = 13632","io.github.thibaultbee.streampack.core.elements.processing.video.utils.GLUtils.EGL_GL_COLORSPACE_BT2020_HLG_EXT"]},{"name":"const val EGL_GL_COLORSPACE_KHR: Int = 12445","description":"io.github.thibaultbee.streampack.core.elements.processing.video.utils.GLUtils.EGL_GL_COLORSPACE_KHR","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.processing.video.utils/-g-l-utils/-e-g-l_-g-l_-c-o-l-o-r-s-p-a-c-e_-k-h-r.html","searchKeys":["EGL_GL_COLORSPACE_KHR","const val EGL_GL_COLORSPACE_KHR: Int = 12445","io.github.thibaultbee.streampack.core.elements.processing.video.utils.GLUtils.EGL_GL_COLORSPACE_KHR"]},{"name":"const val MAX_OUTPUT_PACKET_NUMBER: Int = 7","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.utils.MuxerConst.MAX_OUTPUT_PACKET_NUMBER","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.utils/-muxer-const/-m-a-x_-o-u-t-p-u-t_-p-a-c-k-e-t_-n-u-m-b-e-r.html","searchKeys":["MAX_OUTPUT_PACKET_NUMBER","const val MAX_OUTPUT_PACKET_NUMBER: Int = 7","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.utils.MuxerConst.MAX_OUTPUT_PACKET_NUMBER"]},{"name":"const val PACKET_SIZE: Int = 188","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets.TS.Companion.PACKET_SIZE","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets/-t-s/-companion/-p-a-c-k-e-t_-s-i-z-e.html","searchKeys":["PACKET_SIZE","const val PACKET_SIZE: Int = 188","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets.TS.Companion.PACKET_SIZE"]},{"name":"const val PAT_PACKET_PERIOD: Int = 40","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.utils.MuxerConst.PAT_PACKET_PERIOD","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.utils/-muxer-const/-p-a-t_-p-a-c-k-e-t_-p-e-r-i-o-d.html","searchKeys":["PAT_PACKET_PERIOD","const val PAT_PACKET_PERIOD: Int = 40","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.utils.MuxerConst.PAT_PACKET_PERIOD"]},{"name":"const val PID: Short = 0","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets.Pat.Companion.PID","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets/-pat/-companion/-p-i-d.html","searchKeys":["PID","const val PID: Short = 0","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets.Pat.Companion.PID"]},{"name":"const val PID: Short = 17","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets.Sdt.Companion.PID","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets/-sdt/-companion/-p-i-d.html","searchKeys":["PID","const val PID: Short = 17","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets.Sdt.Companion.PID"]},{"name":"const val PIXEL_STRIDE: Int = 4","description":"io.github.thibaultbee.streampack.core.elements.processing.video.utils.GLUtils.PIXEL_STRIDE","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.processing.video.utils/-g-l-utils/-p-i-x-e-l_-s-t-r-i-d-e.html","searchKeys":["PIXEL_STRIDE","const val PIXEL_STRIDE: Int = 4","io.github.thibaultbee.streampack.core.elements.processing.video.utils.GLUtils.PIXEL_STRIDE"]},{"name":"const val PSI_HEADER_SIZE: Int = 9","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets.Psi.Companion.PSI_HEADER_SIZE","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets/-psi/-companion/-p-s-i_-h-e-a-d-e-r_-s-i-z-e.html","searchKeys":["PSI_HEADER_SIZE","const val PSI_HEADER_SIZE: Int = 9","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets.Psi.Companion.PSI_HEADER_SIZE"]},{"name":"const val SDT_PACKET_PERIOD: Int = 200","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.utils.MuxerConst.SDT_PACKET_PERIOD","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.utils/-muxer-const/-s-d-t_-p-a-c-k-e-t_-p-e-r-i-o-d.html","searchKeys":["SDT_PACKET_PERIOD","const val SDT_PACKET_PERIOD: Int = 200","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.utils.MuxerConst.SDT_PACKET_PERIOD"]},{"name":"const val SIZEOF_FLOAT: Int = 4","description":"io.github.thibaultbee.streampack.core.elements.processing.video.utils.GLUtils.SIZEOF_FLOAT","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.processing.video.utils/-g-l-utils/-s-i-z-e-o-f_-f-l-o-a-t.html","searchKeys":["SIZEOF_FLOAT","const val SIZEOF_FLOAT: Int = 4","io.github.thibaultbee.streampack.core.elements.processing.video.utils.GLUtils.SIZEOF_FLOAT"]},{"name":"const val SYNC_BYTE: Byte = 71","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets.TS.Companion.SYNC_BYTE","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets/-t-s/-companion/-s-y-n-c_-b-y-t-e.html","searchKeys":["SYNC_BYTE","const val SYNC_BYTE: Byte = 71","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets.TS.Companion.SYNC_BYTE"]},{"name":"const val SYSTEM_CLOCK_FREQ: Int = 27000000","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.utils.TSConst.SYSTEM_CLOCK_FREQ","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.utils/-t-s-const/-s-y-s-t-e-m_-c-l-o-c-k_-f-r-e-q.html","searchKeys":["SYSTEM_CLOCK_FREQ","const val SYSTEM_CLOCK_FREQ: Int = 27000000","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.utils.TSConst.SYSTEM_CLOCK_FREQ"]},{"name":"const val TAG: String","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.sinks.AbstractSink.Companion.TAG","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.sinks/-abstract-sink/-companion/-t-a-g.html","searchKeys":["TAG","const val TAG: String","io.github.thibaultbee.streampack.core.elements.endpoints.composites.sinks.AbstractSink.Companion.TAG"]},{"name":"const val TAG: String","description":"io.github.thibaultbee.streampack.core.elements.processing.video.utils.GLUtils.TAG","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.processing.video.utils/-g-l-utils/-t-a-g.html","searchKeys":["TAG","const val TAG: String","io.github.thibaultbee.streampack.core.elements.processing.video.utils.GLUtils.TAG"]},{"name":"const val TAG: String","description":"io.github.thibaultbee.streampack.core.streamers.single.SingleStreamer.Companion.TAG","location":"streampack-core/io.github.thibaultbee.streampack.core.streamers.single/-single-streamer/-companion/-t-a-g.html","searchKeys":["TAG","const val TAG: String","io.github.thibaultbee.streampack.core.streamers.single.SingleStreamer.Companion.TAG"]},{"name":"const val TID: Byte = 0","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets.Pat.Companion.TID","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets/-pat/-companion/-t-i-d.html","searchKeys":["TID","const val TID: Byte = 0","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets.Pat.Companion.TID"]},{"name":"const val TID: Byte = 2","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets.Pmt.Companion.TID","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets/-pmt/-companion/-t-i-d.html","searchKeys":["TID","const val TID: Byte = 2","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets.Pmt.Companion.TID"]},{"name":"const val TID: Byte = 66","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets.Sdt.Companion.TID","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets/-sdt/-companion/-t-i-d.html","searchKeys":["TID","const val TID: Byte = 66","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets.Sdt.Companion.TID"]},{"name":"const val TIME_SCALE: Int","description":"io.github.thibaultbee.streampack.core.elements.utils.TimeUtils.TIME_SCALE","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils/-time-utils/-t-i-m-e_-s-c-a-l-e.html","searchKeys":["TIME_SCALE","const val TIME_SCALE: Int","io.github.thibaultbee.streampack.core.elements.utils.TimeUtils.TIME_SCALE"]},{"name":"const val VAR_TEXTURE: String","description":"io.github.thibaultbee.streampack.core.elements.processing.video.utils.GLUtils.VAR_TEXTURE","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.processing.video.utils/-g-l-utils/-v-a-r_-t-e-x-t-u-r-e.html","searchKeys":["VAR_TEXTURE","const val VAR_TEXTURE: String","io.github.thibaultbee.streampack.core.elements.processing.video.utils.GLUtils.VAR_TEXTURE"]},{"name":"const val VAR_TEXTURE_COORD: String","description":"io.github.thibaultbee.streampack.core.elements.processing.video.utils.GLUtils.VAR_TEXTURE_COORD","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.processing.video.utils/-g-l-utils/-v-a-r_-t-e-x-t-u-r-e_-c-o-o-r-d.html","searchKeys":["VAR_TEXTURE_COORD","const val VAR_TEXTURE_COORD: String","io.github.thibaultbee.streampack.core.elements.processing.video.utils.GLUtils.VAR_TEXTURE_COORD"]},{"name":"const val VERSION_UNKNOWN: String","description":"io.github.thibaultbee.streampack.core.elements.processing.video.utils.GLUtils.VERSION_UNKNOWN","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.processing.video.utils/-g-l-utils/-v-e-r-s-i-o-n_-u-n-k-n-o-w-n.html","searchKeys":["VERSION_UNKNOWN","const val VERSION_UNKNOWN: String","io.github.thibaultbee.streampack.core.elements.processing.video.utils.GLUtils.VERSION_UNKNOWN"]},{"name":"constructor()","description":"io.github.thibaultbee.streampack.core.elements.endpoints.DynamicEndpointFactory.DynamicEndpointFactory","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints/-dynamic-endpoint-factory/-dynamic-endpoint-factory.html","searchKeys":["DynamicEndpointFactory","constructor()","io.github.thibaultbee.streampack.core.elements.endpoints.DynamicEndpointFactory.DynamicEndpointFactory"]},{"name":"constructor()","description":"io.github.thibaultbee.streampack.core.elements.endpoints.DynamicLocalEndpointFactory.DynamicLocalEndpointFactory","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints/-dynamic-local-endpoint-factory/-dynamic-local-endpoint-factory.html","searchKeys":["DynamicLocalEndpointFactory","constructor()","io.github.thibaultbee.streampack.core.elements.endpoints.DynamicLocalEndpointFactory.DynamicLocalEndpointFactory"]},{"name":"constructor()","description":"io.github.thibaultbee.streampack.core.elements.endpoints.MediaMuxerEndpointFactory.MediaMuxerEndpointFactory","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints/-media-muxer-endpoint-factory/-media-muxer-endpoint-factory.html","searchKeys":["MediaMuxerEndpointFactory","constructor()","io.github.thibaultbee.streampack.core.elements.endpoints.MediaMuxerEndpointFactory.MediaMuxerEndpointFactory"]},{"name":"constructor()","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.amf.AmfParameter.AmfParameter","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.amf/-amf-parameter/-amf-parameter.html","searchKeys":["AmfParameter","constructor()","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.amf.AmfParameter.AmfParameter"]},{"name":"constructor()","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.amf.containers.AmfContainer.AmfContainer","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.amf.containers/-amf-container/-amf-container.html","searchKeys":["AmfContainer","constructor()","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.amf.containers.AmfContainer.AmfContainer"]},{"name":"constructor()","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.amf.containers.AmfEcmaArray.AmfEcmaArray","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.amf.containers/-amf-ecma-array/-amf-ecma-array.html","searchKeys":["AmfEcmaArray","constructor()","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.amf.containers.AmfEcmaArray.AmfEcmaArray"]},{"name":"constructor()","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.amf.containers.AmfObject.AmfObject","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.amf.containers/-amf-object/-amf-object.html","searchKeys":["AmfObject","constructor()","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.amf.containers.AmfObject.AmfObject"]},{"name":"constructor()","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.amf.primitives.AmfNull.AmfNull","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.amf.primitives/-amf-null/-amf-null.html","searchKeys":["AmfNull","constructor()","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.amf.primitives.AmfNull.AmfNull"]},{"name":"constructor()","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.CleanApertureBox.CleanApertureBox","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-clean-aperture-box/-clean-aperture-box.html","searchKeys":["CleanApertureBox","constructor()","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.CleanApertureBox.CleanApertureBox"]},{"name":"constructor()","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.NullMediaHeaderBox.NullMediaHeaderBox","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-null-media-header-box/-null-media-header-box.html","searchKeys":["NullMediaHeaderBox","constructor()","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.NullMediaHeaderBox.NullMediaHeaderBox"]},{"name":"constructor()","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models.AbstractMovieBoxFactory.AbstractMovieBoxFactory","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models/-abstract-movie-box-factory/-abstract-movie-box-factory.html","searchKeys":["AbstractMovieBoxFactory","constructor()","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models.AbstractMovieBoxFactory.AbstractMovieBoxFactory"]},{"name":"constructor()","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models.DefaultMP4SegmenterFactory.DefaultMP4SegmenterFactory","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models/-default-m-p4-segmenter-factory/-default-m-p4-segmenter-factory.html","searchKeys":["DefaultMP4SegmenterFactory","constructor()","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models.DefaultMP4SegmenterFactory.DefaultMP4SegmenterFactory"]},{"name":"constructor()","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models.MP4SegmenterFactory.MP4SegmenterFactory","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models/-m-p4-segmenter-factory/-m-p4-segmenter-factory.html","searchKeys":["MP4SegmenterFactory","constructor()","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models.MP4SegmenterFactory.MP4SegmenterFactory"]},{"name":"constructor()","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.TsMuxer.TsMuxer","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts/-ts-muxer/-ts-muxer.html","searchKeys":["TsMuxer","constructor()","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.TsMuxer.TsMuxer"]},{"name":"constructor()","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.sinks.AbstractSink.AbstractSink","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.sinks/-abstract-sink/-abstract-sink.html","searchKeys":["AbstractSink","constructor()","io.github.thibaultbee.streampack.core.elements.endpoints.composites.sinks.AbstractSink.AbstractSink"]},{"name":"constructor()","description":"io.github.thibaultbee.streampack.core.elements.processing.audio.AudioFrameProcessor.AudioFrameProcessor","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.processing.audio/-audio-frame-processor/-audio-frame-processor.html","searchKeys":["AudioFrameProcessor","constructor()","io.github.thibaultbee.streampack.core.elements.processing.audio.AudioFrameProcessor.AudioFrameProcessor"]},{"name":"constructor()","description":"io.github.thibaultbee.streampack.core.elements.processing.audio.MuteEffect.MuteEffect","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.processing.audio/-mute-effect/-mute-effect.html","searchKeys":["MuteEffect","constructor()","io.github.thibaultbee.streampack.core.elements.processing.audio.MuteEffect.MuteEffect"]},{"name":"constructor()","description":"io.github.thibaultbee.streampack.core.elements.processing.video.DefaultSurfaceProcessorFactory.DefaultSurfaceProcessorFactory","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.processing.video/-default-surface-processor-factory/-default-surface-processor-factory.html","searchKeys":["DefaultSurfaceProcessorFactory","constructor()","io.github.thibaultbee.streampack.core.elements.processing.video.DefaultSurfaceProcessorFactory.DefaultSurfaceProcessorFactory"]},{"name":"constructor()","description":"io.github.thibaultbee.streampack.core.elements.processing.video.OpenGlRenderer.OpenGlRenderer","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.processing.video/-open-gl-renderer/-open-gl-renderer.html","searchKeys":["OpenGlRenderer","constructor()","io.github.thibaultbee.streampack.core.elements.processing.video.OpenGlRenderer.OpenGlRenderer"]},{"name":"constructor()","description":"io.github.thibaultbee.streampack.core.elements.processing.video.utils.GLUtils.BlankShaderProgram.BlankShaderProgram","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.processing.video.utils/-g-l-utils/-blank-shader-program/-blank-shader-program.html","searchKeys":["BlankShaderProgram","constructor()","io.github.thibaultbee.streampack.core.elements.processing.video.utils.GLUtils.BlankShaderProgram.BlankShaderProgram"]},{"name":"constructor()","description":"io.github.thibaultbee.streampack.core.elements.processing.video.utils.GraphicDeviceInfo.Builder.Builder","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.processing.video.utils/-graphic-device-info/-builder/-builder.html","searchKeys":["Builder","constructor()","io.github.thibaultbee.streampack.core.elements.processing.video.utils.GraphicDeviceInfo.Builder.Builder"]},{"name":"constructor()","description":"io.github.thibaultbee.streampack.core.elements.sources.video.AbstractPreviewableSource.AbstractPreviewableSource","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.video/-abstract-previewable-source/-abstract-previewable-source.html","searchKeys":["AbstractPreviewableSource","constructor()","io.github.thibaultbee.streampack.core.elements.sources.video.AbstractPreviewableSource.AbstractPreviewableSource"]},{"name":"constructor()","description":"io.github.thibaultbee.streampack.core.elements.sources.video.camera.sessioncompat.CameraCaptureSessionCompatBuilder.CameraCaptureSessionCompatBuilder","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.video.camera.sessioncompat/-camera-capture-session-compat-builder/-camera-capture-session-compat-builder.html","searchKeys":["CameraCaptureSessionCompatBuilder","constructor()","io.github.thibaultbee.streampack.core.elements.sources.video.camera.sessioncompat.CameraCaptureSessionCompatBuilder.CameraCaptureSessionCompatBuilder"]},{"name":"constructor()","description":"io.github.thibaultbee.streampack.core.elements.utils.ConflatedJob.ConflatedJob","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils/-conflated-job/-conflated-job.html","searchKeys":["ConflatedJob","constructor()","io.github.thibaultbee.streampack.core.elements.utils.ConflatedJob.ConflatedJob"]},{"name":"constructor()","description":"io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.ProgramConfigElement.ProgramConfigElement","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac/-program-config-element/-program-config-element.html","searchKeys":["ProgramConfigElement","constructor()","io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.ProgramConfigElement.ProgramConfigElement"]},{"name":"constructor()","description":"io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.config.SpecificConfig.SpecificConfig","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.config/-specific-config/-specific-config.html","searchKeys":["SpecificConfig","constructor()","io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.config.SpecificConfig.SpecificConfig"]},{"name":"constructor()","description":"io.github.thibaultbee.streampack.core.elements.utils.av.audio.opus.OpusCsdParser.OpusCsdParser","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.audio.opus/-opus-csd-parser/-opus-csd-parser.html","searchKeys":["OpusCsdParser","constructor()","io.github.thibaultbee.streampack.core.elements.utils.av.audio.opus.OpusCsdParser.OpusCsdParser"]},{"name":"constructor()","description":"io.github.thibaultbee.streampack.core.elements.utils.av.buffer.BitBufferWriter.BitBufferWriter","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.buffer/-bit-buffer-writer/-bit-buffer-writer.html","searchKeys":["BitBufferWriter","constructor()","io.github.thibaultbee.streampack.core.elements.utils.av.buffer.BitBufferWriter.BitBufferWriter"]},{"name":"constructor()","description":"io.github.thibaultbee.streampack.core.elements.utils.av.buffer.ByteBufferWriter.ByteBufferWriter","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.buffer/-byte-buffer-writer/-byte-buffer-writer.html","searchKeys":["ByteBufferWriter","constructor()","io.github.thibaultbee.streampack.core.elements.utils.av.buffer.ByteBufferWriter.ByteBufferWriter"]},{"name":"constructor()","description":"io.github.thibaultbee.streampack.core.logger.StreamPackLogger.StreamPackLogger","location":"streampack-core/io.github.thibaultbee.streampack.core.logger/-stream-pack-logger/-stream-pack-logger.html","searchKeys":["StreamPackLogger","constructor()","io.github.thibaultbee.streampack.core.logger.StreamPackLogger.StreamPackLogger"]},{"name":"constructor()","description":"io.github.thibaultbee.streampack.core.regulator.controllers.BitrateRegulatorController.Factory.Factory","location":"streampack-core/io.github.thibaultbee.streampack.core.regulator.controllers/-bitrate-regulator-controller/-factory/-factory.html","searchKeys":["Factory","constructor()","io.github.thibaultbee.streampack.core.regulator.controllers.BitrateRegulatorController.Factory.Factory"]},{"name":"constructor()","description":"io.github.thibaultbee.streampack.core.streamers.orientation.RotationProvider.RotationProvider","location":"streampack-core/io.github.thibaultbee.streampack.core.streamers.orientation/-rotation-provider/-rotation-provider.html","searchKeys":["RotationProvider","constructor()","io.github.thibaultbee.streampack.core.streamers.orientation.RotationProvider.RotationProvider"]},{"name":"constructor(a: Char, b: Char, c: Char, d: Char, mimeType: String?)","description":"io.github.thibaultbee.streampack.core.elements.utils.av.FourCC.FourCC","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av/-four-c-c/-four-c-c.html","searchKeys":["FourCC","constructor(a: Char, b: Char, c: Char, d: Char, mimeType: String?)","io.github.thibaultbee.streampack.core.elements.utils.av.FourCC.FourCC"]},{"name":"constructor(aspectRatioMode: AspectRatioMode, targetRotation: Int, cropRect: Rect, needMirroring: Boolean, infoProvider: ISourceInfoProvider)","description":"io.github.thibaultbee.streampack.core.elements.processing.video.outputs.SurfaceOutput.TransformationInfo.TransformationInfo","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.processing.video.outputs/-surface-output/-transformation-info/-transformation-info.html","searchKeys":["TransformationInfo","constructor(aspectRatioMode: AspectRatioMode, targetRotation: Int, cropRect: Rect, needMirroring: Boolean, infoProvider: ISourceInfoProvider)","io.github.thibaultbee.streampack.core.elements.processing.video.outputs.SurfaceOutput.TransformationInfo.TransformationInfo"]},{"name":"constructor(audioConfig: AudioCodecConfig, mode: EncoderMode)","description":"io.github.thibaultbee.streampack.core.elements.encoders.mediacodec.AudioEncoderConfig.AudioEncoderConfig","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.encoders.mediacodec/-audio-encoder-config/-audio-encoder-config.html","searchKeys":["AudioEncoderConfig","constructor(audioConfig: AudioCodecConfig, mode: EncoderMode)","io.github.thibaultbee.streampack.core.elements.encoders.mediacodec.AudioEncoderConfig.AudioEncoderConfig"]},{"name":"constructor(audioEncoder: IEncoder?, videoEncoder: IEncoder, endpoint: IEndpoint, bitrateRegulatorFactory: IBitrateRegulator.Factory, bitrateRegulatorConfig: BitrateRegulatorConfig = BitrateRegulatorConfig(), delayTimeInMs: Long = 500)","description":"io.github.thibaultbee.streampack.core.regulator.controllers.DummyBitrateRegulatorController.DummyBitrateRegulatorController","location":"streampack-core/io.github.thibaultbee.streampack.core.regulator.controllers/-dummy-bitrate-regulator-controller/-dummy-bitrate-regulator-controller.html","searchKeys":["DummyBitrateRegulatorController","constructor(audioEncoder: IEncoder?, videoEncoder: IEncoder, endpoint: IEndpoint, bitrateRegulatorFactory: IBitrateRegulator.Factory, bitrateRegulatorConfig: BitrateRegulatorConfig = BitrateRegulatorConfig(), delayTimeInMs: Long = 500)","io.github.thibaultbee.streampack.core.regulator.controllers.DummyBitrateRegulatorController.DummyBitrateRegulatorController"]},{"name":"constructor(audioEncoder: IEncoder?, videoEncoder: IEncoder?, endpoint: IEndpoint, bitrateRegulatorFactory: IBitrateRegulator.Factory, bitrateRegulatorConfig: BitrateRegulatorConfig = BitrateRegulatorConfig())","description":"io.github.thibaultbee.streampack.core.regulator.controllers.BitrateRegulatorController.BitrateRegulatorController","location":"streampack-core/io.github.thibaultbee.streampack.core.regulator.controllers/-bitrate-regulator-controller/-bitrate-regulator-controller.html","searchKeys":["BitrateRegulatorController","constructor(audioEncoder: IEncoder?, videoEncoder: IEncoder?, endpoint: IEndpoint, bitrateRegulatorFactory: IBitrateRegulator.Factory, bitrateRegulatorConfig: BitrateRegulatorConfig = BitrateRegulatorConfig())","io.github.thibaultbee.streampack.core.regulator.controllers.BitrateRegulatorController.BitrateRegulatorController"]},{"name":"constructor(audioEndpointInfo: IEndpoint.IEndpointInfo.IAudioEndpointInfo)","description":"io.github.thibaultbee.streampack.core.streamers.infos.AudioStreamerConfigurationInfo.AudioStreamerConfigurationInfo","location":"streampack-core/io.github.thibaultbee.streampack.core.streamers.infos/-audio-streamer-configuration-info/-audio-streamer-configuration-info.html","searchKeys":["AudioStreamerConfigurationInfo","constructor(audioEndpointInfo: IEndpoint.IEndpointInfo.IAudioEndpointInfo)","io.github.thibaultbee.streampack.core.streamers.infos.AudioStreamerConfigurationInfo.AudioStreamerConfigurationInfo"]},{"name":"constructor(audioMuxElement: AudioMuxElement)","description":"io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.LATMFrameWriter.LATMFrameWriter","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac/-l-a-t-m-frame-writer/-l-a-t-m-frame-writer.html","searchKeys":["LATMFrameWriter","constructor(audioMuxElement: AudioMuxElement)","io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.LATMFrameWriter.LATMFrameWriter"]},{"name":"constructor(audioMuxVersion: Int = 0, audioMuxVersionA: Int = 0, allStreamsSameTimeFraming: Boolean? = null, numSubFrames: Int? = null, numProgram: Int? = null, numLayer: Int? = null, audioSpecificConfig: BitBuffer? = null, frameLengthType: Int? = null)","description":"io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.StreamMuxConfig.StreamMuxConfig","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac/-stream-mux-config/-stream-mux-config.html","searchKeys":["StreamMuxConfig","constructor(audioMuxVersion: Int = 0, audioMuxVersionA: Int = 0, allStreamsSameTimeFraming: Boolean? = null, numSubFrames: Int? = null, numProgram: Int? = null, numLayer: Int? = null, audioSpecificConfig: BitBuffer? = null, frameLengthType: Int? = null)","io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.StreamMuxConfig.StreamMuxConfig"]},{"name":"constructor(audioObjectType: AudioObjectType, channelConfiguration: ChannelConfiguration, frameLengthFlag: Boolean, dependsOnCoreCoder: Boolean, extensionFlag: Boolean, coreCoderDelay: Short? = null, programConfigElement: ProgramConfigElement? = null, layerNr: Byte? = null, numOfSubFrame: Short? = null, layerLength: Short? = null, aacSectionDataResilienceFlag: Boolean? = null, aacScaleFactorDataResilienceFlag: Boolean? = null, aacSpectralDataResilienceFlag: Boolean? = null, extensionFlag3: Boolean? = null)","description":"io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.config.GASpecificConfig.GASpecificConfig","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.config/-g-a-specific-config/-g-a-specific-config.html","searchKeys":["GASpecificConfig","constructor(audioObjectType: AudioObjectType, channelConfiguration: ChannelConfiguration, frameLengthFlag: Boolean, dependsOnCoreCoder: Boolean, extensionFlag: Boolean, coreCoderDelay: Short? = null, programConfigElement: ProgramConfigElement? = null, layerNr: Byte? = null, numOfSubFrame: Short? = null, layerLength: Short? = null, aacSectionDataResilienceFlag: Boolean? = null, aacScaleFactorDataResilienceFlag: Boolean? = null, aacSpectralDataResilienceFlag: Boolean? = null, extensionFlag3: Boolean? = null)","io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.config.GASpecificConfig.GASpecificConfig"]},{"name":"constructor(audioObjectType: AudioObjectType, sampleRate: Int, channelConfiguration: ChannelConfiguration, extension: AudioSpecificConfig.AudioSpecificConfigExtension? = null, specificConfig: SpecificConfig? = null, epConfig: Int? = null)","description":"io.github.thibaultbee.streampack.core.elements.utils.av.audio.AudioSpecificConfig.AudioSpecificConfig","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.audio/-audio-specific-config/-audio-specific-config.html","searchKeys":["AudioSpecificConfig","constructor(audioObjectType: AudioObjectType, sampleRate: Int, channelConfiguration: ChannelConfiguration, extension: AudioSpecificConfig.AudioSpecificConfigExtension? = null, specificConfig: SpecificConfig? = null, epConfig: Int? = null)","io.github.thibaultbee.streampack.core.elements.utils.av.audio.AudioSpecificConfig.AudioSpecificConfig"]},{"name":"constructor(audioObjectType: AudioObjectType, sampleRate: Int, channelConfiguration: ChannelConfiguration?, extensionAudioObjectType: AudioObjectType = AudioObjectType.SBR)","description":"io.github.thibaultbee.streampack.core.elements.utils.av.audio.AudioSpecificConfig.AudioSpecificConfigExtension.AudioSpecificConfigExtension","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.audio/-audio-specific-config/-audio-specific-config-extension/-audio-specific-config-extension.html","searchKeys":["AudioSpecificConfigExtension","constructor(audioObjectType: AudioObjectType, sampleRate: Int, channelConfiguration: ChannelConfiguration?, extensionAudioObjectType: AudioObjectType = AudioObjectType.SBR)","io.github.thibaultbee.streampack.core.elements.utils.av.audio.AudioSpecificConfig.AudioSpecificConfigExtension.AudioSpecificConfigExtension"]},{"name":"constructor(b: Boolean)","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.amf.primitives.AmfBoolean.AmfBoolean","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.amf.primitives/-amf-boolean/-amf-boolean.html","searchKeys":["AmfBoolean","constructor(b: Boolean)","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.amf.primitives.AmfBoolean.AmfBoolean"]},{"name":"constructor(balance: Short = 0)","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.SoundMediaHeaderBox.SoundMediaHeaderBox","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-sound-media-header-box/-sound-media-header-box.html","searchKeys":["SoundMediaHeaderBox","constructor(balance: Short = 0)","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.SoundMediaHeaderBox.SoundMediaHeaderBox"]},{"name":"constructor(baseMediaDecodeTime: Number)","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.TrackFragmentBaseMediaDecodeTimeBox.TrackFragmentBaseMediaDecodeTimeBox","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-track-fragment-base-media-decode-time-box/-track-fragment-base-media-decode-time-box.html","searchKeys":["TrackFragmentBaseMediaDecodeTimeBox","constructor(baseMediaDecodeTime: Number)","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.TrackFragmentBaseMediaDecodeTimeBox.TrackFragmentBaseMediaDecodeTimeBox"]},{"name":"constructor(bitmap: Bitmap)","description":"io.github.thibaultbee.streampack.core.elements.sources.video.bitmap.BitmapSourceFactory.BitmapSourceFactory","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.video.bitmap/-bitmap-source-factory/-bitmap-source-factory.html","searchKeys":["BitmapSourceFactory","constructor(bitmap: Bitmap)","io.github.thibaultbee.streampack.core.elements.sources.video.bitmap.BitmapSourceFactory.BitmapSourceFactory"]},{"name":"constructor(bitrateRegulatorConfig: BitrateRegulatorConfig, onVideoTargetBitrateChange: (Int) -> Unit, onAudioTargetBitrateChange: (Int) -> Unit)","description":"io.github.thibaultbee.streampack.core.regulator.BitrateRegulator.BitrateRegulator","location":"streampack-core/io.github.thibaultbee.streampack.core.regulator/-bitrate-regulator/-bitrate-regulator.html","searchKeys":["BitrateRegulator","constructor(bitrateRegulatorConfig: BitrateRegulatorConfig, onVideoTargetBitrateChange: (Int) -> Unit, onAudioTargetBitrateChange: (Int) -> Unit)","io.github.thibaultbee.streampack.core.regulator.BitrateRegulator.BitrateRegulator"]},{"name":"constructor(bitrateRegulatorFactory: IBitrateRegulator.Factory, bitrateRegulatorConfig: BitrateRegulatorConfig = BitrateRegulatorConfig(), delayTimeInMs: Long = 500)","description":"io.github.thibaultbee.streampack.core.regulator.controllers.DummyBitrateRegulatorController.Factory.Factory","location":"streampack-core/io.github.thibaultbee.streampack.core.regulator.controllers/-dummy-bitrate-regulator-controller/-factory/-factory.html","searchKeys":["Factory","constructor(bitrateRegulatorFactory: IBitrateRegulator.Factory, bitrateRegulatorConfig: BitrateRegulatorConfig = BitrateRegulatorConfig(), delayTimeInMs: Long = 500)","io.github.thibaultbee.streampack.core.regulator.controllers.DummyBitrateRegulatorController.Factory.Factory"]},{"name":"constructor(bsAmpRes: Boolean, bsStartFreq: Byte, bsStopFreq: Byte, bsXoverBand: Byte, bsHeaderExtra1: Boolean, bsHeaderExtra2: Boolean, bsFreqScale: Byte? = null, bsAlterScale: Boolean? = null, bsNoiseBands: Byte? = null, bsLimiterBands: Byte? = null, bsLimiterGains: Byte? = null, bsInterpolFreq: Boolean? = null, bsSmoothingMode: Boolean? = null)","description":"io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.config.SbrHeader.SbrHeader","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.config/-sbr-header/-sbr-header.html","searchKeys":["SbrHeader","constructor(bsAmpRes: Boolean, bsStartFreq: Byte, bsStopFreq: Byte, bsXoverBand: Byte, bsHeaderExtra1: Boolean, bsHeaderExtra2: Boolean, bsFreqScale: Byte? = null, bsAlterScale: Boolean? = null, bsNoiseBands: Byte? = null, bsLimiterBands: Byte? = null, bsLimiterGains: Byte? = null, bsInterpolFreq: Boolean? = null, bsSmoothingMode: Boolean? = null)","io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.config.SbrHeader.SbrHeader"]},{"name":"constructor(buffer: ByteBuffer)","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.AV1CodecConfigurationBox2.AV1CodecConfigurationBox2","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-a-v1-codec-configuration-box2/-a-v1-codec-configuration-box2.html","searchKeys":["AV1CodecConfigurationBox2","constructor(buffer: ByteBuffer)","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.AV1CodecConfigurationBox2.AV1CodecConfigurationBox2"]},{"name":"constructor(buffer: ByteBuffer)","description":"io.github.thibaultbee.streampack.core.elements.utils.av.buffer.AVCCBufferWriter.AVCCBufferWriter","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.buffer/-a-v-c-c-buffer-writer/-a-v-c-c-buffer-writer.html","searchKeys":["AVCCBufferWriter","constructor(buffer: ByteBuffer)","io.github.thibaultbee.streampack.core.elements.utils.av.buffer.AVCCBufferWriter.AVCCBufferWriter"]},{"name":"constructor(buffer: ByteBuffer)","description":"io.github.thibaultbee.streampack.core.elements.utils.av.buffer.ByteBufferBitReader.ByteBufferBitReader","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.buffer/-byte-buffer-bit-reader/-byte-buffer-bit-reader.html","searchKeys":["ByteBufferBitReader","constructor(buffer: ByteBuffer)","io.github.thibaultbee.streampack.core.elements.utils.av.buffer.ByteBufferBitReader.ByteBufferBitReader"]},{"name":"constructor(buffer: ByteBuffer)","description":"io.github.thibaultbee.streampack.core.elements.utils.av.buffer.PassthroughBufferWriter.PassthroughBufferWriter","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.buffer/-passthrough-buffer-writer/-passthrough-buffer-writer.html","searchKeys":["PassthroughBufferWriter","constructor(buffer: ByteBuffer)","io.github.thibaultbee.streampack.core.elements.utils.av.buffer.PassthroughBufferWriter.PassthroughBufferWriter"]},{"name":"constructor(buffer: ByteBuffer, bitPosition: Int = buffer.position() * Byte.SIZE_BITS, bitEnd: Int = buffer.limit() * Byte.SIZE_BITS - 1)","description":"io.github.thibaultbee.streampack.core.elements.utils.av.buffer.BitBuffer.BitBuffer","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.buffer/-bit-buffer/-bit-buffer.html","searchKeys":["BitBuffer","constructor(buffer: ByteBuffer, bitPosition: Int = buffer.position() * Byte.SIZE_BITS, bitEnd: Int = buffer.limit() * Byte.SIZE_BITS - 1)","io.github.thibaultbee.streampack.core.elements.utils.av.buffer.BitBuffer.BitBuffer"]},{"name":"constructor(buffer: ByteBuffer, initialPosition: Int = buffer.position())","description":"io.github.thibaultbee.streampack.core.elements.utils.av.video.H26XBitBuffer.H26XBitBuffer","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.video/-h26-x-bit-buffer/-h26-x-bit-buffer.html","searchKeys":["H26XBitBuffer","constructor(buffer: ByteBuffer, initialPosition: Int = buffer.position())","io.github.thibaultbee.streampack.core.elements.utils.av.video.H26XBitBuffer.H26XBitBuffer"]},{"name":"constructor(buffer: ByteBuffer, isFirstPacketFrame: Boolean, isLastPacketFrame: Boolean, ts: Long, type: PacketType = PacketType.UNKNOWN)","description":"io.github.thibaultbee.streampack.core.elements.data.SrtPacket.SrtPacket","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.data/-srt-packet/-srt-packet.html","searchKeys":["SrtPacket","constructor(buffer: ByteBuffer, isFirstPacketFrame: Boolean, isLastPacketFrame: Boolean, ts: Long, type: PacketType = PacketType.UNKNOWN)","io.github.thibaultbee.streampack.core.elements.data.SrtPacket.SrtPacket"]},{"name":"constructor(buffer: ByteBuffer, ts: Long, type: PacketType = PacketType.UNKNOWN)","description":"io.github.thibaultbee.streampack.core.elements.data.Packet.Packet","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.data/-packet/-packet.html","searchKeys":["Packet","constructor(buffer: ByteBuffer, ts: Long, type: PacketType = PacketType.UNKNOWN)","io.github.thibaultbee.streampack.core.elements.data.Packet.Packet"]},{"name":"constructor(bufferPool: ByteBufferPool)","description":"io.github.thibaultbee.streampack.core.elements.utils.pool.RawFrameFactory.RawFrameFactory","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.pool/-raw-frame-factory/-raw-frame-factory.html","searchKeys":["RawFrameFactory","constructor(bufferPool: ByteBufferPool)","io.github.thibaultbee.streampack.core.elements.utils.pool.RawFrameFactory.RawFrameFactory"]},{"name":"constructor(bufferSizeDB: Int, maxBitrate: Int, avgBitrate: Int)","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.BitRateBox.BitRateBox","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-bit-rate-box/-bit-rate-box.html","searchKeys":["BitRateBox","constructor(bufferSizeDB: Int, maxBitrate: Int, avgBitrate: Int)","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.BitRateBox.BitRateBox"]},{"name":"constructor(camera: CameraDevice)","description":"io.github.thibaultbee.streampack.core.elements.sources.video.camera.controllers.CameraDeviceController.CameraDeviceController","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.video.camera.controllers/-camera-device-controller/-camera-device-controller.html","searchKeys":["CameraDeviceController","constructor(camera: CameraDevice)","io.github.thibaultbee.streampack.core.elements.sources.video.camera.controllers.CameraDeviceController.CameraDeviceController"]},{"name":"constructor(cameraId: String? = null)","description":"io.github.thibaultbee.streampack.core.elements.sources.video.camera.CameraSourceFactory.CameraSourceFactory","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.video.camera/-camera-source-factory/-camera-source-factory.html","searchKeys":["CameraSourceFactory","constructor(cameraId: String? = null)","io.github.thibaultbee.streampack.core.elements.sources.video.camera.CameraSourceFactory.CameraSourceFactory"]},{"name":"constructor(cameraManager: CameraManager, cameraController: CameraController)","description":"io.github.thibaultbee.streampack.core.elements.sources.video.camera.CameraSettings.CameraSettings","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.video.camera/-camera-settings/-camera-settings.html","searchKeys":["CameraSettings","constructor(cameraManager: CameraManager, cameraController: CameraController)","io.github.thibaultbee.streampack.core.elements.sources.video.camera.CameraSettings.CameraSettings"]},{"name":"constructor(cameraManager: CameraManager, cameraSettings: CameraSettings)","description":"io.github.thibaultbee.streampack.core.elements.sources.video.camera.CameraSettings.ColorCorrection.ColorCorrection","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.video.camera/-camera-settings/-color-correction/-color-correction.html","searchKeys":["ColorCorrection","constructor(cameraManager: CameraManager, cameraSettings: CameraSettings)","io.github.thibaultbee.streampack.core.elements.sources.video.camera.CameraSettings.ColorCorrection.ColorCorrection"]},{"name":"constructor(cameraManager: CameraManager, cameraSettings: CameraSettings)","description":"io.github.thibaultbee.streampack.core.elements.sources.video.camera.CameraSettings.Exposure.Exposure","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.video.camera/-camera-settings/-exposure/-exposure.html","searchKeys":["Exposure","constructor(cameraManager: CameraManager, cameraSettings: CameraSettings)","io.github.thibaultbee.streampack.core.elements.sources.video.camera.CameraSettings.Exposure.Exposure"]},{"name":"constructor(cameraManager: CameraManager, cameraSettings: CameraSettings)","description":"io.github.thibaultbee.streampack.core.elements.sources.video.camera.CameraSettings.Flash.Flash","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.video.camera/-camera-settings/-flash/-flash.html","searchKeys":["Flash","constructor(cameraManager: CameraManager, cameraSettings: CameraSettings)","io.github.thibaultbee.streampack.core.elements.sources.video.camera.CameraSettings.Flash.Flash"]},{"name":"constructor(cameraManager: CameraManager, cameraSettings: CameraSettings)","description":"io.github.thibaultbee.streampack.core.elements.sources.video.camera.CameraSettings.Focus.Focus","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.video.camera/-camera-settings/-focus/-focus.html","searchKeys":["Focus","constructor(cameraManager: CameraManager, cameraSettings: CameraSettings)","io.github.thibaultbee.streampack.core.elements.sources.video.camera.CameraSettings.Focus.Focus"]},{"name":"constructor(cameraManager: CameraManager, cameraSettings: CameraSettings)","description":"io.github.thibaultbee.streampack.core.elements.sources.video.camera.CameraSettings.Iso.Iso","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.video.camera/-camera-settings/-iso/-iso.html","searchKeys":["Iso","constructor(cameraManager: CameraManager, cameraSettings: CameraSettings)","io.github.thibaultbee.streampack.core.elements.sources.video.camera.CameraSettings.Iso.Iso"]},{"name":"constructor(cameraManager: CameraManager, cameraSettings: CameraSettings)","description":"io.github.thibaultbee.streampack.core.elements.sources.video.camera.CameraSettings.Stabilization.Stabilization","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.video.camera/-camera-settings/-stabilization/-stabilization.html","searchKeys":["Stabilization","constructor(cameraManager: CameraManager, cameraSettings: CameraSettings)","io.github.thibaultbee.streampack.core.elements.sources.video.camera.CameraSettings.Stabilization.Stabilization"]},{"name":"constructor(cameraManager: CameraManager, cameraSettings: CameraSettings)","description":"io.github.thibaultbee.streampack.core.elements.sources.video.camera.CameraSettings.WhiteBalance.WhiteBalance","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.video.camera/-camera-settings/-white-balance/-white-balance.html","searchKeys":["WhiteBalance","constructor(cameraManager: CameraManager, cameraSettings: CameraSettings)","io.github.thibaultbee.streampack.core.elements.sources.video.camera.CameraSettings.WhiteBalance.WhiteBalance"]},{"name":"constructor(cameraManager: CameraManager, cameraSettings: CameraSettings)","description":"io.github.thibaultbee.streampack.core.elements.sources.video.camera.CameraSettings.Zoom.CropScalerRegionZoom.CropScalerRegionZoom","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.video.camera/-camera-settings/-zoom/-crop-scaler-region-zoom/-crop-scaler-region-zoom.html","searchKeys":["CropScalerRegionZoom","constructor(cameraManager: CameraManager, cameraSettings: CameraSettings)","io.github.thibaultbee.streampack.core.elements.sources.video.camera.CameraSettings.Zoom.CropScalerRegionZoom.CropScalerRegionZoom"]},{"name":"constructor(cameraManager: CameraManager, cameraSettings: CameraSettings)","description":"io.github.thibaultbee.streampack.core.elements.sources.video.camera.CameraSettings.Zoom.RZoom.RZoom","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.video.camera/-camera-settings/-zoom/-r-zoom/-r-zoom.html","searchKeys":["RZoom","constructor(cameraManager: CameraManager, cameraSettings: CameraSettings)","io.github.thibaultbee.streampack.core.elements.sources.video.camera.CameraSettings.Zoom.RZoom.RZoom"]},{"name":"constructor(cameraManager: CameraManager, cameraSettings: CameraSettings, zoom: CameraSettings.Zoom, focus: CameraSettings.Focus, exposure: CameraSettings.Exposure, whiteBalance: CameraSettings.WhiteBalance)","description":"io.github.thibaultbee.streampack.core.elements.sources.video.camera.CameraSettings.FocusMetering.FocusMetering","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.video.camera/-camera-settings/-focus-metering/-focus-metering.html","searchKeys":["FocusMetering","constructor(cameraManager: CameraManager, cameraSettings: CameraSettings, zoom: CameraSettings.Zoom, focus: CameraSettings.Focus, exposure: CameraSettings.Exposure, whiteBalance: CameraSettings.WhiteBalance)","io.github.thibaultbee.streampack.core.elements.sources.video.camera.CameraSettings.FocusMetering.FocusMetering"]},{"name":"constructor(cause: Throwable)","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.sinks.ClosedException.ClosedException","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.sinks/-closed-exception/-closed-exception.html","searchKeys":["ClosedException","constructor(cause: Throwable)","io.github.thibaultbee.streampack.core.elements.endpoints.composites.sinks.ClosedException.ClosedException"]},{"name":"constructor(channelConfiguration: ChannelConfiguration, frameLengthFlag: Boolean, aacSectionDataResilienceFlag: Boolean, aacScaleFactorDataResilienceFlag: Boolean, aacSpectralDataResilienceFlag: Boolean, lbSbrPresentFlag: Boolean, lbSbrSamplingRate: Boolean? = null, lbSbrCrcFlag: Boolean? = null, lbSbrHeader: ELDSpecificConfig.LdSbrHeader? = null)","description":"io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.config.ELDSpecificConfig.ELDSpecificConfig","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.config/-e-l-d-specific-config/-e-l-d-specific-config.html","searchKeys":["ELDSpecificConfig","constructor(channelConfiguration: ChannelConfiguration, frameLengthFlag: Boolean, aacSectionDataResilienceFlag: Boolean, aacScaleFactorDataResilienceFlag: Boolean, aacSpectralDataResilienceFlag: Boolean, lbSbrPresentFlag: Boolean, lbSbrSamplingRate: Boolean? = null, lbSbrCrcFlag: Boolean? = null, lbSbrHeader: ELDSpecificConfig.LdSbrHeader? = null)","io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.config.ELDSpecificConfig.ELDSpecificConfig"]},{"name":"constructor(channelCount: Short, dOps: OpusSpecificBox, btrt: BitRateBox? = null)","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.OpusSampleEntry.OpusSampleEntry","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-opus-sample-entry/-opus-sample-entry.html","searchKeys":["OpusSampleEntry","constructor(channelCount: Short, dOps: OpusSpecificBox, btrt: BitRateBox? = null)","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.OpusSampleEntry.OpusSampleEntry"]},{"name":"constructor(channelCount: Short, sampleSize: Short, sampleRate: Int, esds: ESDSBox, btrt: BitRateBox? = null)","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.MP4AudioSampleEntry.MP4AudioSampleEntry","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-m-p4-audio-sample-entry/-m-p4-audio-sample-entry.html","searchKeys":["MP4AudioSampleEntry","constructor(channelCount: Short, sampleSize: Short, sampleRate: Int, esds: ESDSBox, btrt: BitRateBox? = null)","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.MP4AudioSampleEntry.MP4AudioSampleEntry"]},{"name":"constructor(chunkEntries: List<SampleToChunkBox.Entry>)","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.SampleToChunkBox.SampleToChunkBox","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-sample-to-chunk-box/-sample-to-chunk-box.html","searchKeys":["SampleToChunkBox","constructor(chunkEntries: List<SampleToChunkBox.Entry>)","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.SampleToChunkBox.SampleToChunkBox"]},{"name":"constructor(chunkOffsetEntries: List<Int>)","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.ChunkOffsetBox.ChunkOffsetBox","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-chunk-offset-box/-chunk-offset-box.html","searchKeys":["ChunkOffsetBox","constructor(chunkOffsetEntries: List<Int>)","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.ChunkOffsetBox.ChunkOffsetBox"]},{"name":"constructor(chunkOffsetEntries: List<Long>)","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.ChunkLargeOffsetBox.ChunkLargeOffsetBox","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-chunk-large-offset-box/-chunk-large-offset-box.html","searchKeys":["ChunkLargeOffsetBox","constructor(chunkOffsetEntries: List<Long>)","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.ChunkLargeOffsetBox.ChunkLargeOffsetBox"]},{"name":"constructor(chunkSize: Int)","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.sinks.ChunkedFileOutputStreamSink.ChunkedFileOutputStreamSink","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.sinks/-chunked-file-output-stream-sink/-chunked-file-output-stream-sink.html","searchKeys":["ChunkedFileOutputStreamSink","constructor(chunkSize: Int)","io.github.thibaultbee.streampack.core.elements.endpoints.composites.sinks.ChunkedFileOutputStreamSink.ChunkedFileOutputStreamSink"]},{"name":"constructor(codecID: Int?, dataRate: Int, width: Int, height: Int, frameRate: Int)","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.VideoMetadata.VideoMetadata","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags/-video-metadata/-video-metadata.html","searchKeys":["VideoMetadata","constructor(codecID: Int?, dataRate: Int, width: Int, height: Int, frameRate: Int)","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.VideoMetadata.VideoMetadata"]},{"name":"constructor(codecID: SoundFormat, dataRate: Int, sampleRate: Int, sampleSize: Int, isStereo: Boolean)","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.AudioMetadata.AudioMetadata","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags/-audio-metadata/-audio-metadata.html","searchKeys":["AudioMetadata","constructor(codecID: SoundFormat, dataRate: Int, sampleRate: Int, sampleSize: Int, isStereo: Boolean)","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.AudioMetadata.AudioMetadata"]},{"name":"constructor(codecInfo: MediaCodecInfo, mimeType: String)","description":"io.github.thibaultbee.streampack.core.elements.encoders.mediacodec.AudioEncoderInfo.AudioEncoderInfo","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.encoders.mediacodec/-audio-encoder-info/-audio-encoder-info.html","searchKeys":["AudioEncoderInfo","constructor(codecInfo: MediaCodecInfo, mimeType: String)","io.github.thibaultbee.streampack.core.elements.encoders.mediacodec.AudioEncoderInfo.AudioEncoderInfo"]},{"name":"constructor(codecInfo: MediaCodecInfo, mimeType: String)","description":"io.github.thibaultbee.streampack.core.elements.encoders.mediacodec.VideoEncoderInfo.VideoEncoderInfo","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.encoders.mediacodec/-video-encoder-info/-video-encoder-info.html","searchKeys":["VideoEncoderInfo","constructor(codecInfo: MediaCodecInfo, mimeType: String)","io.github.thibaultbee.streampack.core.elements.encoders.mediacodec.VideoEncoderInfo.VideoEncoderInfo"]},{"name":"constructor(config: AV1CodecConfigurationRecord)","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.AV1CodecConfigurationBox1.AV1CodecConfigurationBox1","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-a-v1-codec-configuration-box1/-a-v1-codec-configuration-box1.html","searchKeys":["AV1CodecConfigurationBox1","constructor(config: AV1CodecConfigurationRecord)","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.AV1CodecConfigurationBox1.AV1CodecConfigurationBox1"]},{"name":"constructor(config: AVCDecoderConfigurationRecord)","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.AVCConfigurationBox.AVCConfigurationBox","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-a-v-c-configuration-box/-a-v-c-configuration-box.html","searchKeys":["AVCConfigurationBox","constructor(config: AVCDecoderConfigurationRecord)","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.AVCConfigurationBox.AVCConfigurationBox"]},{"name":"constructor(config: CodecConfig, pid: Short, discontinuity: Boolean = false)","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.data.Stream.Stream","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.data/-stream/-stream.html","searchKeys":["Stream","constructor(config: CodecConfig, pid: Short, discontinuity: Boolean = false)","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.data.Stream.Stream"]},{"name":"constructor(config: HEVCDecoderConfigurationRecord)","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.HEVCConfigurationBox.HEVCConfigurationBox","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-h-e-v-c-configuration-box/-h-e-v-c-configuration-box.html","searchKeys":["HEVCConfigurationBox","constructor(config: HEVCDecoderConfigurationRecord)","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.HEVCConfigurationBox.HEVCConfigurationBox"]},{"name":"constructor(config: VPCodecConfigurationRecord)","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.VPCodecConfigurationBox.VPCodecConfigurationBox","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-v-p-codec-configuration-box/-v-p-codec-configuration-box.html","searchKeys":["VPCodecConfigurationBox","constructor(config: VPCodecConfigurationRecord)","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.VPCodecConfigurationBox.VPCodecConfigurationBox"]},{"name":"constructor(configurationVersion: Int = 1, generalProfileSpace: Byte, generalTierFlag: Boolean, generalProfileIdc: HEVCProfile, generalProfileCompatibilityFlags: Int, generalConstraintIndicatorFlags: Long, generalLevelIdc: Byte, minSpatialSegmentationIdc: Int = 0, parallelismType: Byte = 0, chromaFormat: ChromaFormat = ChromaFormat.YUV420, bitDepthLumaMinus8: Byte = 0, bitDepthChromaMinus8: Byte = 0, averageFrameRate: Short = 0, constantFrameRate: Byte = 0, numTemporalLayers: Byte = 0, temporalIdNested: Boolean = false, lengthSizeMinusOne: Byte = 3, parameterSets: List<HEVCDecoderConfigurationRecord.NalUnit>)","description":"io.github.thibaultbee.streampack.core.elements.utils.av.video.hevc.HEVCDecoderConfigurationRecord.HEVCDecoderConfigurationRecord","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.video.hevc/-h-e-v-c-decoder-configuration-record/-h-e-v-c-decoder-configuration-record.html","searchKeys":["HEVCDecoderConfigurationRecord","constructor(configurationVersion: Int = 1, generalProfileSpace: Byte, generalTierFlag: Boolean, generalProfileIdc: HEVCProfile, generalProfileCompatibilityFlags: Int, generalConstraintIndicatorFlags: Long, generalLevelIdc: Byte, minSpatialSegmentationIdc: Int = 0, parallelismType: Byte = 0, chromaFormat: ChromaFormat = ChromaFormat.YUV420, bitDepthLumaMinus8: Byte = 0, bitDepthChromaMinus8: Byte = 0, averageFrameRate: Short = 0, constantFrameRate: Byte = 0, numTemporalLayers: Byte = 0, temporalIdNested: Boolean = false, lengthSizeMinusOne: Byte = 3, parameterSets: List<HEVCDecoderConfigurationRecord.NalUnit>)","io.github.thibaultbee.streampack.core.elements.utils.av.video.hevc.HEVCDecoderConfigurationRecord.HEVCDecoderConfigurationRecord"]},{"name":"constructor(configurationVersion: Int = 1, profileIdc: Byte, profileCompatibility: Byte, levelIdc: Byte, chromaFormat: ChromaFormat = ChromaFormat.YUV420, sps: List<ByteBuffer>, pps: List<ByteBuffer>)","description":"io.github.thibaultbee.streampack.core.elements.utils.av.video.avc.AVCDecoderConfigurationRecord.AVCDecoderConfigurationRecord","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.video.avc/-a-v-c-decoder-configuration-record/-a-v-c-decoder-configuration-record.html","searchKeys":["AVCDecoderConfigurationRecord","constructor(configurationVersion: Int = 1, profileIdc: Byte, profileCompatibility: Byte, levelIdc: Byte, chromaFormat: ChromaFormat = ChromaFormat.YUV420, sps: List<ByteBuffer>, pps: List<ByteBuffer>)","io.github.thibaultbee.streampack.core.elements.utils.av.video.avc.AVCDecoderConfigurationRecord.AVCDecoderConfigurationRecord"]},{"name":"constructor(containerType: MediaContainerType, sinkType: MediaSinkType)","description":"io.github.thibaultbee.streampack.core.configuration.mediadescriptor.MediaDescriptor.Type.Type","location":"streampack-core/io.github.thibaultbee.streampack.core.configuration.mediadescriptor/-media-descriptor/-type/-type.html","searchKeys":["Type","constructor(containerType: MediaContainerType, sinkType: MediaSinkType)","io.github.thibaultbee.streampack.core.configuration.mediadescriptor.MediaDescriptor.Type.Type"]},{"name":"constructor(context: Context)","description":"io.github.thibaultbee.streampack.core.elements.endpoints.DynamicEndpoint.DynamicEndpoint","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints/-dynamic-endpoint/-dynamic-endpoint.html","searchKeys":["DynamicEndpoint","constructor(context: Context)","io.github.thibaultbee.streampack.core.elements.endpoints.DynamicEndpoint.DynamicEndpoint"]},{"name":"constructor(context: Context)","description":"io.github.thibaultbee.streampack.core.elements.endpoints.DynamicLocalEndpoint.DynamicLocalEndpoint","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints/-dynamic-local-endpoint/-dynamic-local-endpoint.html","searchKeys":["DynamicLocalEndpoint","constructor(context: Context)","io.github.thibaultbee.streampack.core.elements.endpoints.DynamicLocalEndpoint.DynamicLocalEndpoint"]},{"name":"constructor(context: Context)","description":"io.github.thibaultbee.streampack.core.elements.endpoints.MediaMuxerEndpoint.MediaMuxerEndpoint","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints/-media-muxer-endpoint/-media-muxer-endpoint.html","searchKeys":["MediaMuxerEndpoint","constructor(context: Context)","io.github.thibaultbee.streampack.core.elements.endpoints.MediaMuxerEndpoint.MediaMuxerEndpoint"]},{"name":"constructor(context: Context)","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.sinks.ContentSink.ContentSink","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.sinks/-content-sink/-content-sink.html","searchKeys":["ContentSink","constructor(context: Context)","io.github.thibaultbee.streampack.core.elements.endpoints.composites.sinks.ContentSink.ContentSink"]},{"name":"constructor(context: Context)","description":"io.github.thibaultbee.streampack.core.streamers.orientation.DisplayRotationProvider.DisplayRotationProvider","location":"streampack-core/io.github.thibaultbee.streampack.core.streamers.orientation/-display-rotation-provider/-display-rotation-provider.html","searchKeys":["DisplayRotationProvider","constructor(context: Context)","io.github.thibaultbee.streampack.core.streamers.orientation.DisplayRotationProvider.DisplayRotationProvider"]},{"name":"constructor(context: Context)","description":"io.github.thibaultbee.streampack.core.streamers.orientation.SensorRotationProvider.SensorRotationProvider","location":"streampack-core/io.github.thibaultbee.streampack.core.streamers.orientation/-sensor-rotation-provider/-sensor-rotation-provider.html","searchKeys":["SensorRotationProvider","constructor(context: Context)","io.github.thibaultbee.streampack.core.streamers.orientation.SensorRotationProvider.SensorRotationProvider"]},{"name":"constructor(context: Context, endpointFactory: IEndpointInternal.Factory = DynamicEndpointFactory())","description":"io.github.thibaultbee.streampack.core.streamers.single.AudioOnlySingleStreamer.AudioOnlySingleStreamer","location":"streampack-core/io.github.thibaultbee.streampack.core.streamers.single/-audio-only-single-streamer/-audio-only-single-streamer.html","searchKeys":["AudioOnlySingleStreamer","constructor(context: Context, endpointFactory: IEndpointInternal.Factory = DynamicEndpointFactory())","io.github.thibaultbee.streampack.core.streamers.single.AudioOnlySingleStreamer.AudioOnlySingleStreamer"]},{"name":"constructor(context: Context, endpointFactory: IEndpointInternal.Factory = DynamicEndpointFactory(), defaultRotation: Int = context.displayRotation)","description":"io.github.thibaultbee.streampack.core.streamers.single.VideoOnlySingleStreamer.VideoOnlySingleStreamer","location":"streampack-core/io.github.thibaultbee.streampack.core.streamers.single/-video-only-single-streamer/-video-only-single-streamer.html","searchKeys":["VideoOnlySingleStreamer","constructor(context: Context, endpointFactory: IEndpointInternal.Factory = DynamicEndpointFactory(), defaultRotation: Int = context.displayRotation)","io.github.thibaultbee.streampack.core.streamers.single.VideoOnlySingleStreamer.VideoOnlySingleStreamer"]},{"name":"constructor(context: Context, firstEndpointFactory: IEndpointInternal.Factory = DynamicEndpointFactory(), secondEndpointFactory: IEndpointInternal.Factory = DynamicEndpointFactory(), defaultRotation: Int = context.displayRotation)","description":"io.github.thibaultbee.streampack.core.streamers.dual.VideoOnlyDualStreamer.VideoOnlyDualStreamer","location":"streampack-core/io.github.thibaultbee.streampack.core.streamers.dual/-video-only-dual-streamer/-video-only-dual-streamer.html","searchKeys":["VideoOnlyDualStreamer","constructor(context: Context, firstEndpointFactory: IEndpointInternal.Factory = DynamicEndpointFactory(), secondEndpointFactory: IEndpointInternal.Factory = DynamicEndpointFactory(), defaultRotation: Int = context.displayRotation)","io.github.thibaultbee.streampack.core.streamers.dual.VideoOnlyDualStreamer.VideoOnlyDualStreamer"]},{"name":"constructor(context: Context, withAudio: Boolean = true, withVideo: Boolean = true, audioOutputMode: StreamerPipeline.AudioOutputMode = AudioOutputMode.PUSH, surfaceProcessorFactory: ISurfaceProcessorInternal.Factory = DefaultSurfaceProcessorFactory(), coroutineDispatcher: CoroutineDispatcher = Dispatchers.Default)","description":"io.github.thibaultbee.streampack.core.pipelines.StreamerPipeline.StreamerPipeline","location":"streampack-core/io.github.thibaultbee.streampack.core.pipelines/-streamer-pipeline/-streamer-pipeline.html","searchKeys":["StreamerPipeline","constructor(context: Context, withAudio: Boolean = true, withVideo: Boolean = true, audioOutputMode: StreamerPipeline.AudioOutputMode = AudioOutputMode.PUSH, surfaceProcessorFactory: ISurfaceProcessorInternal.Factory = DefaultSurfaceProcessorFactory(), coroutineDispatcher: CoroutineDispatcher = Dispatchers.Default)","io.github.thibaultbee.streampack.core.pipelines.StreamerPipeline.StreamerPipeline"]},{"name":"constructor(context: Context, withAudio: Boolean = true, withVideo: Boolean = true, endpointFactory: IEndpointInternal.Factory = DynamicEndpointFactory(), defaultRotation: Int = context.displayRotation)","description":"io.github.thibaultbee.streampack.core.streamers.single.SingleStreamer.SingleStreamer","location":"streampack-core/io.github.thibaultbee.streampack.core.streamers.single/-single-streamer/-single-streamer.html","searchKeys":["SingleStreamer","constructor(context: Context, withAudio: Boolean = true, withVideo: Boolean = true, endpointFactory: IEndpointInternal.Factory = DynamicEndpointFactory(), defaultRotation: Int = context.displayRotation)","io.github.thibaultbee.streampack.core.streamers.single.SingleStreamer.SingleStreamer"]},{"name":"constructor(context: Context, withAudio: Boolean = true, withVideo: Boolean = true, firstEndpointFactory: IEndpointInternal.Factory = DynamicEndpointFactory(), secondEndpointFactory: IEndpointInternal.Factory = DynamicEndpointFactory(), defaultRotation: Int = context.displayRotation)","description":"io.github.thibaultbee.streampack.core.streamers.dual.DualStreamer.DualStreamer","location":"streampack-core/io.github.thibaultbee.streampack.core.streamers.dual/-dual-streamer/-dual-streamer.html","searchKeys":["DualStreamer","constructor(context: Context, withAudio: Boolean = true, withVideo: Boolean = true, firstEndpointFactory: IEndpointInternal.Factory = DynamicEndpointFactory(), secondEndpointFactory: IEndpointInternal.Factory = DynamicEndpointFactory(), defaultRotation: Int = context.displayRotation)","io.github.thibaultbee.streampack.core.streamers.dual.DualStreamer.DualStreamer"]},{"name":"constructor(coroutineContext: CoroutineContext = Dispatchers.IO)","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.sinks.FileSink.FileSink","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.sinks/-file-sink/-file-sink.html","searchKeys":["FileSink","constructor(coroutineContext: CoroutineContext = Dispatchers.IO)","io.github.thibaultbee.streampack.core.elements.endpoints.composites.sinks.FileSink.FileSink"]},{"name":"constructor(coroutineContext: CoroutineContext = Dispatchers.IO)","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.sinks.OutputStreamSink.OutputStreamSink","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.sinks/-output-stream-sink/-output-stream-sink.html","searchKeys":["OutputStreamSink","constructor(coroutineContext: CoroutineContext = Dispatchers.IO)","io.github.thibaultbee.streampack.core.elements.endpoints.composites.sinks.OutputStreamSink.OutputStreamSink"]},{"name":"constructor(count: Int, delta: Int)","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.TimeToSampleBox.Entry.Entry","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-time-to-sample-box/-entry/-entry.html","searchKeys":["Entry","constructor(count: Int, delta: Int)","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.TimeToSampleBox.Entry.Entry"]},{"name":"constructor(d: Double)","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.amf.primitives.AmfNumber.AmfNumber","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.amf.primitives/-amf-number/-amf-number.html","searchKeys":["AmfNumber","constructor(d: Double)","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.amf.primitives.AmfNumber.AmfNumber"]},{"name":"constructor(dataRate: Int)","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.Metadata.Metadata","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags/-metadata/-metadata.html","searchKeys":["Metadata","constructor(dataRate: Int)","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.Metadata.Metadata"]},{"name":"constructor(dataSize: Int)","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.MediaDataBox.MediaDataBox","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-media-data-box/-media-data-box.html","searchKeys":["MediaDataBox","constructor(dataSize: Int)","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.MediaDataBox.MediaDataBox"]},{"name":"constructor(decodingTimes: List<TimeToSampleBox.Entry>)","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.TimeToSampleBox.TimeToSampleBox","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-time-to-sample-box/-time-to-sample-box.html","searchKeys":["TimeToSampleBox","constructor(decodingTimes: List<TimeToSampleBox.Entry>)","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.TimeToSampleBox.TimeToSampleBox"]},{"name":"constructor(delayTimeInMs: Long, coroutineScope: CoroutineScope = CoroutineScope(Dispatchers.Default), action: suspend CoroutineScope.() -> Unit)","description":"io.github.thibaultbee.streampack.core.elements.utils.Scheduler.Scheduler","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils/-scheduler/-scheduler.html","searchKeys":["Scheduler","constructor(delayTimeInMs: Long, coroutineScope: CoroutineScope = CoroutineScope(Dispatchers.Default), action: suspend CoroutineScope.() -> Unit)","io.github.thibaultbee.streampack.core.elements.utils.Scheduler.Scheduler"]},{"name":"constructor(descriptor: SurfaceDescriptor, isStreaming: () -> Boolean, transformationInfo: SurfaceOutput.TransformationInfo)","description":"io.github.thibaultbee.streampack.core.elements.processing.video.outputs.SurfaceOutput.SurfaceOutput","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.processing.video.outputs/-surface-output/-surface-output.html","searchKeys":["SurfaceOutput","constructor(descriptor: SurfaceDescriptor, isStreaming: () -> Boolean, transformationInfo: SurfaceOutput.TransformationInfo)","io.github.thibaultbee.streampack.core.elements.processing.video.outputs.SurfaceOutput.SurfaceOutput"]},{"name":"constructor(descriptor: SurfaceDescriptor, isStreaming: () -> Boolean, viewportRect: Rect = Rect(\n        0,\n        0,\n        descriptor.resolution.width,\n        descriptor.resolution.height\n    ))","description":"io.github.thibaultbee.streampack.core.elements.processing.video.outputs.IdentitySurfaceOutput.IdentitySurfaceOutput","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.processing.video.outputs/-identity-surface-output/-identity-surface-output.html","searchKeys":["IdentitySurfaceOutput","constructor(descriptor: SurfaceDescriptor, isStreaming: () -> Boolean, viewportRect: Rect = Rect(\n        0,\n        0,\n        descriptor.resolution.width,\n        descriptor.resolution.height\n    ))","io.github.thibaultbee.streampack.core.elements.processing.video.outputs.IdentitySurfaceOutput.IdentitySurfaceOutput"]},{"name":"constructor(descriptors: List<MediaDescriptor>)","description":"io.github.thibaultbee.streampack.core.elements.endpoints.CombineEndpoint.CombineDescriptor.CombineDescriptor","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints/-combine-endpoint/-combine-descriptor/-combine-descriptor.html","searchKeys":["CombineDescriptor","constructor(descriptors: List<MediaDescriptor>)","io.github.thibaultbee.streampack.core.elements.endpoints.CombineEndpoint.CombineDescriptor.CombineDescriptor"]},{"name":"constructor(discontinuityIndicator: Boolean = false, randomAccessIndicator: Boolean = false, elementaryStreamPriorityIndicator: Boolean = false, programClockReference: Long? = null, originalProgramClockReference: Long? = null, spliceCountdown: Byte? = null, transportPrivateData: ByteBuffer? = null, adaptationFieldExtension: ByteBuffer? = null)","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.descriptors.AdaptationField.AdaptationField","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.descriptors/-adaptation-field/-adaptation-field.html","searchKeys":["AdaptationField","constructor(discontinuityIndicator: Boolean = false, randomAccessIndicator: Boolean = false, elementaryStreamPriorityIndicator: Boolean = false, programClockReference: Long? = null, originalProgramClockReference: Long? = null, spliceCountdown: Byte? = null, transportPrivateData: ByteBuffer? = null, adaptationFieldExtension: ByteBuffer? = null)","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.descriptors.AdaptationField.AdaptationField"]},{"name":"constructor(dref: DataReferenceBox)","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.DataInformationBox.DataInformationBox","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-data-information-box/-data-information-box.html","searchKeys":["DataInformationBox","constructor(dref: DataReferenceBox)","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.DataInformationBox.DataInformationBox"]},{"name":"constructor(dynamicRange: DynamicRangeProfile, inputFormat: GLUtils.InputFormat)","description":"io.github.thibaultbee.streampack.core.elements.processing.video.utils.GLUtils.SamplerShaderProgram.SamplerShaderProgram","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.processing.video.utils/-g-l-utils/-sampler-shader-program/-sampler-shader-program.html","searchKeys":["SamplerShaderProgram","constructor(dynamicRange: DynamicRangeProfile, inputFormat: GLUtils.InputFormat)","io.github.thibaultbee.streampack.core.elements.processing.video.utils.GLUtils.SamplerShaderProgram.SamplerShaderProgram"]},{"name":"constructor(dynamicRange: DynamicRangeProfile, shaderProvider: ShaderProvider)","description":"io.github.thibaultbee.streampack.core.elements.processing.video.utils.GLUtils.SamplerShaderProgram.SamplerShaderProgram","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.processing.video.utils/-g-l-utils/-sampler-shader-program/-sampler-shader-program.html","searchKeys":["SamplerShaderProgram","constructor(dynamicRange: DynamicRangeProfile, shaderProvider: ShaderProvider)","io.github.thibaultbee.streampack.core.elements.processing.video.utils.GLUtils.SamplerShaderProgram.SamplerShaderProgram"]},{"name":"constructor(dynamicRange: Long, transferFunction: Int)","description":"io.github.thibaultbee.streampack.core.elements.utils.av.video.DynamicRangeProfile.DynamicRangeProfile","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.video/-dynamic-range-profile/-dynamic-range-profile.html","searchKeys":["DynamicRangeProfile","constructor(dynamicRange: Long, transferFunction: Int)","io.github.thibaultbee.streampack.core.elements.utils.av.video.DynamicRangeProfile.DynamicRangeProfile"]},{"name":"constructor(effects: Set<UUID> = defaultAudioEffects)","description":"io.github.thibaultbee.streampack.core.elements.sources.audio.audiorecord.MicrophoneSourceFactory.MicrophoneSourceFactory","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.audio.audiorecord/-microphone-source-factory/-microphone-source-factory.html","searchKeys":["MicrophoneSourceFactory","constructor(effects: Set<UUID> = defaultAudioEffects)","io.github.thibaultbee.streampack.core.elements.sources.audio.audiorecord.MicrophoneSourceFactory.MicrophoneSourceFactory"]},{"name":"constructor(effects: Set<UUID>)","description":"io.github.thibaultbee.streampack.core.elements.sources.audio.audiorecord.AudioRecordSourceFactory.AudioRecordSourceFactory","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.audio.audiorecord/-audio-record-source-factory/-audio-record-source-factory.html","searchKeys":["AudioRecordSourceFactory","constructor(effects: Set<UUID>)","io.github.thibaultbee.streampack.core.elements.sources.audio.audiorecord.AudioRecordSourceFactory.AudioRecordSourceFactory"]},{"name":"constructor(eglSurface: EGLSurface, viewPortRect: Rect)","description":"io.github.thibaultbee.streampack.core.elements.processing.video.utils.OutputSurface.OutputSurface","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.processing.video.utils/-output-surface/-output-surface.html","searchKeys":["OutputSurface","constructor(eglSurface: EGLSurface, viewPortRect: Rect)","io.github.thibaultbee.streampack.core.elements.processing.video.utils.OutputSurface.OutputSurface"]},{"name":"constructor(endpointInfo: IEndpoint.IEndpointInfo)","description":"io.github.thibaultbee.streampack.core.streamers.infos.CameraStreamerConfigurationInfo.CameraStreamerConfigurationInfo","location":"streampack-core/io.github.thibaultbee.streampack.core.streamers.infos/-camera-streamer-configuration-info/-camera-streamer-configuration-info.html","searchKeys":["CameraStreamerConfigurationInfo","constructor(endpointInfo: IEndpoint.IEndpointInfo)","io.github.thibaultbee.streampack.core.streamers.infos.CameraStreamerConfigurationInfo.CameraStreamerConfigurationInfo"]},{"name":"constructor(endpointInfo: IEndpoint.IEndpointInfo)","description":"io.github.thibaultbee.streampack.core.streamers.infos.StreamerConfigurationInfo.StreamerConfigurationInfo","location":"streampack-core/io.github.thibaultbee.streampack.core.streamers.infos/-streamer-configuration-info/-streamer-configuration-info.html","searchKeys":["StreamerConfigurationInfo","constructor(endpointInfo: IEndpoint.IEndpointInfo)","io.github.thibaultbee.streampack.core.streamers.infos.StreamerConfigurationInfo.StreamerConfigurationInfo"]},{"name":"constructor(endpointInternals: List<IEndpointInternal>)","description":"io.github.thibaultbee.streampack.core.elements.endpoints.CombineEndpoint.CombineEndpoint","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints/-combine-endpoint/-combine-endpoint.html","searchKeys":["CombineEndpoint","constructor(endpointInternals: List<IEndpointInternal>)","io.github.thibaultbee.streampack.core.elements.endpoints.CombineEndpoint.CombineEndpoint"]},{"name":"constructor(endpointInternals: List<IEndpointInternal>)","description":"io.github.thibaultbee.streampack.core.elements.endpoints.CombineEndpointFactory.CombineEndpointFactory","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints/-combine-endpoint-factory/-combine-endpoint-factory.html","searchKeys":["CombineEndpointFactory","constructor(endpointInternals: List<IEndpointInternal>)","io.github.thibaultbee.streampack.core.elements.endpoints.CombineEndpointFactory.CombineEndpointFactory"]},{"name":"constructor(entries: List<DataEntryBox>)","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.DataReferenceBox.DataReferenceBox","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-data-reference-box/-data-reference-box.html","searchKeys":["DataReferenceBox","constructor(entries: List<DataEntryBox>)","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.DataReferenceBox.DataReferenceBox"]},{"name":"constructor(entry: DataEntryBox)","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.DataReferenceBox.DataReferenceBox","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-data-reference-box/-data-reference-box.html","searchKeys":["DataReferenceBox","constructor(entry: DataEntryBox)","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.DataReferenceBox.DataReferenceBox"]},{"name":"constructor(esDescriptor: ESDescriptor)","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.ESDSBox.ESDSBox","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-e-s-d-s-box/-e-s-d-s-box.html","searchKeys":["ESDSBox","constructor(esDescriptor: ESDescriptor)","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.ESDSBox.ESDSBox"]},{"name":"constructor(esId: Short, streamPriority: Byte, dependsOnEsId: Short? = null, url: String? = null, ocrEsId: Short? = null, decoderConfigDescriptor: DecoderConfigDescriptor, slConfigDescriptor: SLConfigDescriptor)","description":"io.github.thibaultbee.streampack.core.elements.utils.av.descriptors.ESDescriptor.ESDescriptor","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.descriptors/-e-s-descriptor/-e-s-descriptor.html","searchKeys":["ESDescriptor","constructor(esId: Short, streamPriority: Byte, dependsOnEsId: Short? = null, url: String? = null, ocrEsId: Short? = null, decoderConfigDescriptor: DecoderConfigDescriptor, slConfigDescriptor: SLConfigDescriptor)","io.github.thibaultbee.streampack.core.elements.utils.av.descriptors.ESDescriptor.ESDescriptor"]},{"name":"constructor(features: List<VP9CodecPrivate.CodecFeature>)","description":"io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.VP9CodecPrivate.VP9CodecPrivate","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx/-v-p9-codec-private/-v-p9-codec-private.html","searchKeys":["VP9CodecPrivate","constructor(features: List<VP9CodecPrivate.CodecFeature>)","io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.VP9CodecPrivate.VP9CodecPrivate"]},{"name":"constructor(filesDir: File, chunkSize: Int, chunkNameGenerator: (Int) -> String = { id -> \"chunk_$id\" })","description":"io.github.thibaultbee.streampack.core.elements.utils.ChunkedFileOutputStream.ChunkedFileOutputStream","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils/-chunked-file-output-stream/-chunked-file-output-stream.html","searchKeys":["ChunkedFileOutputStream","constructor(filesDir: File, chunkSize: Int, chunkNameGenerator: (Int) -> String = { id -> \"chunk_$id\" })","io.github.thibaultbee.streampack.core.elements.utils.ChunkedFileOutputStream.ChunkedFileOutputStream"]},{"name":"constructor(firstChunk: Int, samplesPerChunk: Int, sampleDescriptionId: Int)","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.SampleToChunkBox.Entry.Entry","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-sample-to-chunk-box/-entry/-entry.html","searchKeys":["Entry","constructor(firstChunk: Int, samplesPerChunk: Int, sampleDescriptionId: Int)","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.SampleToChunkBox.Entry.Entry"]},{"name":"constructor(frame: Frame, config: CodecConfig, sendHeader: Boolean)","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.AVTagsFactory.AVTagsFactory","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags/-a-v-tags-factory/-a-v-tags-factory.html","searchKeys":["AVTagsFactory","constructor(frame: Frame, config: CodecConfig, sendHeader: Boolean)","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.AVTagsFactory.AVTagsFactory"]},{"name":"constructor(frameBuffer: ByteBuffer, adts: ADTS)","description":"io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.ADTSFrameWriter.ADTSFrameWriter","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac/-a-d-t-s-frame-writer/-a-d-t-s-frame-writer.html","searchKeys":["ADTSFrameWriter","constructor(frameBuffer: ByteBuffer, adts: ADTS)","io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.ADTSFrameWriter.ADTSFrameWriter"]},{"name":"constructor(frameProcessor: IFrameProcessor<RawFrame>, onFrame: (RawFrame) -> Unit, frameFactory: IRawFrameFactory)","description":"io.github.thibaultbee.streampack.core.elements.processing.RawFramePullPush.RawFramePullPush","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.processing/-raw-frame-pull-push/-raw-frame-pull-push.html","searchKeys":["RawFramePullPush","constructor(frameProcessor: IFrameProcessor<RawFrame>, onFrame: (RawFrame) -> Unit, frameFactory: IRawFrameFactory)","io.github.thibaultbee.streampack.core.elements.processing.RawFramePullPush.RawFramePullPush"]},{"name":"constructor(generalProfileSpace: Byte, generalTierFlag: Boolean, generalProfileIdc: HEVCProfile, generalProfileCompatibilityFlags: Int, generalConstraintIndicatorFlags: Long, generalLevelIdc: Byte)","description":"io.github.thibaultbee.streampack.core.elements.utils.av.video.hevc.ProfileTierLevel.ProfileTierLevel","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.video.hevc/-profile-tier-level/-profile-tier-level.html","searchKeys":["ProfileTierLevel","constructor(generalProfileSpace: Byte, generalTierFlag: Boolean, generalProfileIdc: HEVCProfile, generalProfileCompatibilityFlags: Int, generalConstraintIndicatorFlags: Long, generalLevelIdc: Byte)","io.github.thibaultbee.streampack.core.elements.utils.av.video.hevc.ProfileTierLevel.ProfileTierLevel"]},{"name":"constructor(getValue: () -> T, flow: Flow<T>)","description":"io.github.thibaultbee.streampack.core.elements.utils.DerivedStateFlow.DerivedStateFlow","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils/-derived-state-flow/-derived-state-flow.html","searchKeys":["DerivedStateFlow","constructor(getValue: () -> T, flow: Flow<T>)","io.github.thibaultbee.streampack.core.elements.utils.DerivedStateFlow.DerivedStateFlow"]},{"name":"constructor(graphicsMode: Short = 0, opColor: ShortArray = ShortArray(3))","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.VideoMediaHeaderBox.VideoMediaHeaderBox","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-video-media-header-box/-video-media-header-box.html","searchKeys":["VideoMediaHeaderBox","constructor(graphicsMode: Short = 0, opColor: ShortArray = ShortArray(3))","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.VideoMediaHeaderBox.VideoMediaHeaderBox"]},{"name":"constructor(hSpacing: Int, vSpacing: Int)","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.PixelAspectRatioBox.PixelAspectRatioBox","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-pixel-aspect-ratio-box/-pixel-aspect-ratio-box.html","searchKeys":["PixelAspectRatioBox","constructor(hSpacing: Int, vSpacing: Int)","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.PixelAspectRatioBox.PixelAspectRatioBox"]},{"name":"constructor(hasAudio: Boolean, hasVideo: Boolean)","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.FlvHeader.FlvHeader","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags/-flv-header/-flv-header.html","searchKeys":["FlvHeader","constructor(hasAudio: Boolean, hasVideo: Boolean)","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.FlvHeader.FlvHeader"]},{"name":"constructor(hasAudio: Boolean, hasVideo: Boolean)","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models.MP4Segmenter.MP4Segmenter","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models/-m-p4-segmenter/-m-p4-segmenter.html","searchKeys":["MP4Segmenter","constructor(hasAudio: Boolean, hasVideo: Boolean)","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models.MP4Segmenter.MP4Segmenter"]},{"name":"constructor(hasAudio: Boolean, hasVideo: Boolean, numOfAudioSampleInSegment: Int = DEFAULT_NUM_OF_AUDIO_SAMPLE_IN_SEGMENT)","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models.DefaultMP4Segmenter.DefaultMP4Segmenter","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models/-default-m-p4-segmenter/-default-m-p4-segmenter.html","searchKeys":["DefaultMP4Segmenter","constructor(hasAudio: Boolean, hasVideo: Boolean, numOfAudioSampleInSegment: Int = DEFAULT_NUM_OF_AUDIO_SAMPLE_IN_SEGMENT)","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models.DefaultMP4Segmenter.DefaultMP4Segmenter"]},{"name":"constructor(i: Int)","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.amf.primitives.AmfInt16.AmfInt16","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.amf.primitives/-amf-int16/-amf-int16.html","searchKeys":["AmfInt16","constructor(i: Int)","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.amf.primitives.AmfInt16.AmfInt16"]},{"name":"constructor(i: Int)","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.amf.primitives.AmfInt24.AmfInt24","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.amf.primitives/-amf-int24/-amf-int24.html","searchKeys":["AmfInt24","constructor(i: Int)","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.amf.primitives.AmfInt24.AmfInt24"]},{"name":"constructor(i: Int)","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.amf.primitives.AmfInt32.AmfInt32","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.amf.primitives/-amf-int32/-amf-int32.html","searchKeys":["AmfInt32","constructor(i: Int)","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.amf.primitives.AmfInt32.AmfInt32"]},{"name":"constructor(id: Byte, length: Byte, data: Any)","description":"io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.VP9CodecPrivate.CodecFeature.CodecFeature","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx/-v-p9-codec-private/-codec-feature/-codec-feature.html","searchKeys":["CodecFeature","constructor(id: Byte, length: Byte, data: Any)","io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.VP9CodecPrivate.CodecFeature.CodecFeature"]},{"name":"constructor(id: Int)","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models.Chunk.Chunk","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models/-chunk/-chunk.html","searchKeys":["Chunk","constructor(id: Int)","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models.Chunk.Chunk"]},{"name":"constructor(id: Int, baseDataOffset: Long? = null, sampleDescriptionIndex: Int? = null, defaultSampleDuration: Int? = null, defaultSampleSize: Int? = null, defaultSampleFlags: SampleFlags? = null, durationIsEmpty: Boolean = false)","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.TrackFragmentHeaderBox.TrackFragmentHeaderBox","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-track-fragment-header-box/-track-fragment-header-box.html","searchKeys":["TrackFragmentHeaderBox","constructor(id: Int, baseDataOffset: Long? = null, sampleDescriptionIndex: Int? = null, defaultSampleDuration: Int? = null, defaultSampleSize: Int? = null, defaultSampleFlags: SampleFlags? = null, durationIsEmpty: Boolean = false)","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.TrackFragmentHeaderBox.TrackFragmentHeaderBox"]},{"name":"constructor(id: Int, config: CodecConfig, timescale: Int = TimeUtils.TIME_SCALE)","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models.Track.Track","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models/-track/-track.html","searchKeys":["Track","constructor(id: Int, config: CodecConfig, timescale: Int = TimeUtils.TIME_SCALE)","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models.Track.Track"]},{"name":"constructor(id: Int, defaultSampleDescriptionIndex: Int = 1, defaultSampleDuration: Int = 0, defaultSampleSize: Int = 0, defaultSampleFlags: SampleFlags = SampleFlags(isNonSyncSample = false))","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.TrackExtendsBox.TrackExtendsBox","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-track-extends-box/-track-extends-box.html","searchKeys":["TrackExtendsBox","constructor(id: Int, defaultSampleDescriptionIndex: Int = 1, defaultSampleDuration: Int = 0, defaultSampleSize: Int = 0, defaultSampleFlags: SampleFlags = SampleFlags(isNonSyncSample = false))","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.TrackExtendsBox.TrackExtendsBox"]},{"name":"constructor(id: Int, entries: List<TrackFragmentRandomAccessBox.Entry>)","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.TrackFragmentRandomAccessBox.TrackFragmentRandomAccessBox","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-track-fragment-random-access-box/-track-fragment-random-access-box.html","searchKeys":["TrackFragmentRandomAccessBox","constructor(id: Int, entries: List<TrackFragmentRandomAccessBox.Entry>)","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.TrackFragmentRandomAccessBox.TrackFragmentRandomAccessBox"]},{"name":"constructor(id: Int, frame: Frame)","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models.Chunk.IndexedFrame.IndexedFrame","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models/-chunk/-indexed-frame/-indexed-frame.html","searchKeys":["IndexedFrame","constructor(id: Int, frame: Frame)","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models.Chunk.IndexedFrame.IndexedFrame"]},{"name":"constructor(info: TSServiceInfo, pmt: Pmt? = null, streams: MutableList<Stream> = mutableListOf(), pcrPid: Short? = null)","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.data.Service.Service","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.data/-service/-service.html","searchKeys":["Service","constructor(info: TSServiceInfo, pmt: Pmt? = null, streams: MutableList<Stream> = mutableListOf(), pcrPid: Short? = null)","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.data.Service.Service"]},{"name":"constructor(isDirect: Boolean)","description":"io.github.thibaultbee.streampack.core.elements.utils.pool.ByteBufferPool.ByteBufferPool","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.pool/-byte-buffer-pool/-byte-buffer-pool.html","searchKeys":["ByteBufferPool","constructor(isDirect: Boolean)","io.github.thibaultbee.streampack.core.elements.utils.pool.ByteBufferPool.ByteBufferPool"]},{"name":"constructor(isLeading: IsLeading = IsLeading.UNKNOWN, dependsOn: SampleDependsOn = SampleDependsOn.UNKNOWN, isDependedOn: SampleIsDependedOn = SampleIsDependedOn.UNKNOWN, hasRedundancy: HasRedundancy = HasRedundancy.UNKNOWN, paddingValue: Byte = 0, isNonSyncSample: Boolean, degradationPriority: Short = 0)","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models.SampleFlags.SampleFlags","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models/-sample-flags/-sample-flags.html","searchKeys":["SampleFlags","constructor(isLeading: IsLeading = IsLeading.UNKNOWN, dependsOn: SampleDependsOn = SampleDependsOn.UNKNOWN, isDependedOn: SampleIsDependedOn = SampleIsDependedOn.UNKNOWN, hasRedundancy: HasRedundancy = HasRedundancy.UNKNOWN, paddingValue: Byte = 0, isNonSyncSample: Boolean, degradationPriority: Short = 0)","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models.SampleFlags.SampleFlags"]},{"name":"constructor(isMirror: Boolean = false, rotationDegrees: Int = 0)","description":"io.github.thibaultbee.streampack.core.elements.processing.video.source.DefaultSourceInfoProvider.DefaultSourceInfoProvider","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.processing.video.source/-default-source-info-provider/-default-source-info-provider.html","searchKeys":["DefaultSourceInfoProvider","constructor(isMirror: Boolean = false, rotationDegrees: Int = 0)","io.github.thibaultbee.streampack.core.elements.processing.video.source.DefaultSourceInfoProvider.DefaultSourceInfoProvider"]},{"name":"constructor(listener: IMuxerInternal.IMuxerListener? = null)","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.utils.TSOutputCallback.TSOutputCallback","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.utils/-t-s-output-callback/-t-s-output-callback.html","searchKeys":["TSOutputCallback","constructor(listener: IMuxerInternal.IMuxerListener? = null)","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.utils.TSOutputCallback.TSOutputCallback"]},{"name":"constructor(listener: IMuxerInternal.IMuxerListener? = null, isForFile: Boolean)","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.FlvMuxer.FlvMuxer","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv/-flv-muxer/-flv-muxer.html","searchKeys":["FlvMuxer","constructor(listener: IMuxerInternal.IMuxerListener? = null, isForFile: Boolean)","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.FlvMuxer.FlvMuxer"]},{"name":"constructor(listener: IMuxerInternal.IMuxerListener? = null, pid: Short, tableId: Byte, sectionSyntaxIndicator: Boolean = false, reservedFutureUse: Boolean = false, tableIdExtension: Short = 0, versionNumber: Byte = 0, sectionNumber: Byte = 0, lastSectionNumber: Byte = 0)","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets.Psi.Psi","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets/-psi/-psi.html","searchKeys":["Psi","constructor(listener: IMuxerInternal.IMuxerListener? = null, pid: Short, tableId: Byte, sectionSyntaxIndicator: Boolean = false, reservedFutureUse: Boolean = false, tableIdExtension: Short = 0, versionNumber: Byte = 0, sectionNumber: Byte = 0, lastSectionNumber: Byte = 0)","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets.Psi.Psi"]},{"name":"constructor(listener: IMuxerInternal.IMuxerListener? = null, pid: Short, transportErrorIndicator: Boolean = false, transportPriority: Boolean = false, transportScramblingControl: Byte = 0, continuityCounter: Byte = 0)","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets.TS.TS","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets/-t-s/-t-s.html","searchKeys":["TS","constructor(listener: IMuxerInternal.IMuxerListener? = null, pid: Short, transportErrorIndicator: Boolean = false, transportPriority: Boolean = false, transportScramblingControl: Byte = 0, continuityCounter: Byte = 0)","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets.TS.TS"]},{"name":"constructor(listener: IMuxerInternal.IMuxerListener? = null, service: Service, streams: List<Stream>, pid: Short, versionNumber: Byte = 0)","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets.Pmt.Pmt","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets/-pmt/-pmt.html","searchKeys":["Pmt","constructor(listener: IMuxerInternal.IMuxerListener? = null, service: Service, streams: List<Stream>, pid: Short, versionNumber: Byte = 0)","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets.Pmt.Pmt"]},{"name":"constructor(listener: IMuxerInternal.IMuxerListener? = null, services: List<Service>, tsId: Short, originalNetworkId: Short = 0xff01.toShort(), versionNumber: Byte = 0, packetCount: Int = 0)","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets.Sdt.Sdt","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets/-sdt/-sdt.html","searchKeys":["Sdt","constructor(listener: IMuxerInternal.IMuxerListener? = null, services: List<Service>, tsId: Short, originalNetworkId: Short = 0xff01.toShort(), versionNumber: Byte = 0, packetCount: Int = 0)","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets.Sdt.Sdt"]},{"name":"constructor(listener: IMuxerInternal.IMuxerListener? = null, services: List<Service>, tsId: Short, versionNumber: Byte = 0, packetCount: Int = 0)","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets.Pat.Pat","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets/-pat/-pat.html","searchKeys":["Pat","constructor(listener: IMuxerInternal.IMuxerListener? = null, services: List<Service>, tsId: Short, versionNumber: Byte = 0, packetCount: Int = 0)","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets.Pat.Pat"]},{"name":"constructor(listener: IMuxerInternal.IMuxerListener? = null, timescale: Int = DEFAULT_TIMESCALE, segmenterFactory: MP4SegmenterFactory = DefaultMP4SegmenterFactory())","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.Mp4Muxer.Mp4Muxer","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4/-mp4-muxer/-mp4-muxer.html","searchKeys":["Mp4Muxer","constructor(listener: IMuxerInternal.IMuxerListener? = null, timescale: Int = DEFAULT_TIMESCALE, segmenterFactory: MP4SegmenterFactory = DefaultMP4SegmenterFactory())","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.Mp4Muxer.Mp4Muxer"]},{"name":"constructor(location: String? = null)","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.DataEntryUrlBox.DataEntryUrlBox","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-data-entry-url-box/-data-entry-url-box.html","searchKeys":["DataEntryUrlBox","constructor(location: String? = null)","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.DataEntryUrlBox.DataEntryUrlBox"]},{"name":"constructor(mainEndpoint: IEndpointInternal, secondEndpoint: IEndpointInternal)","description":"io.github.thibaultbee.streampack.core.elements.endpoints.DualEndpoint.DualEndpoint","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints/-dual-endpoint/-dual-endpoint.html","searchKeys":["DualEndpoint","constructor(mainEndpoint: IEndpointInternal, secondEndpoint: IEndpointInternal)","io.github.thibaultbee.streampack.core.elements.endpoints.DualEndpoint.DualEndpoint"]},{"name":"constructor(mainEndpoint: IEndpointInternal, secondEndpoint: IEndpointInternal)","description":"io.github.thibaultbee.streampack.core.elements.endpoints.DualEndpointFactory.DualEndpointFactory","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints/-dual-endpoint-factory/-dual-endpoint-factory.html","searchKeys":["DualEndpointFactory","constructor(mainEndpoint: IEndpointInternal, secondEndpoint: IEndpointInternal)","io.github.thibaultbee.streampack.core.elements.endpoints.DualEndpointFactory.DualEndpointFactory"]},{"name":"constructor(majorBrand: String = \"isom\", minorVersion: Int = 512, compatibleBrands: List<String> = listOf(\"isom\", \"iso6\", \"iso2\", \"avc1\", \"mp41\"))","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.FileTypeBox.FileTypeBox","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-file-type-box/-file-type-box.html","searchKeys":["FileTypeBox","constructor(majorBrand: String = \"isom\", minorVersion: Int = 512, compatibleBrands: List<String> = listOf(\"isom\", \"iso6\", \"iso2\", \"avc1\", \"mp41\"))","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.FileTypeBox.FileTypeBox"]},{"name":"constructor(marker: Boolean = true, version: Byte = 1, seqProfile: Byte, seqLevelIdx0: Byte, seqTier0: Boolean, highBitdepth: Boolean, twelveBit: Boolean, monochrome: Boolean, chromaSubsamplingX: Boolean, chromaSubsamplingY: Boolean, chromaSamplePosition: Byte, initialPresentationDelayMinusOne: Int?, configOBUs: ByteBuffer)","description":"io.github.thibaultbee.streampack.core.elements.utils.av.video.av1.AV1CodecConfigurationRecord.AV1CodecConfigurationRecord","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.video.av1/-a-v1-codec-configuration-record/-a-v1-codec-configuration-record.html","searchKeys":["AV1CodecConfigurationRecord","constructor(marker: Boolean = true, version: Byte = 1, seqProfile: Byte, seqLevelIdx0: Byte, seqTier0: Boolean, highBitdepth: Boolean, twelveBit: Boolean, monochrome: Boolean, chromaSubsamplingX: Boolean, chromaSubsamplingY: Boolean, chromaSamplePosition: Byte, initialPresentationDelayMinusOne: Int?, configOBUs: ByteBuffer)","io.github.thibaultbee.streampack.core.elements.utils.av.video.av1.AV1CodecConfigurationRecord.AV1CodecConfigurationRecord"]},{"name":"constructor(mdhd: MediaHeaderBox, hdlr: HandlerBox, minf: MediaInformationBox)","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.MediaBox.MediaBox","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-media-box/-media-box.html","searchKeys":["MediaBox","constructor(mdhd: MediaHeaderBox, hdlr: HandlerBox, minf: MediaInformationBox)","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.MediaBox.MediaBox"]},{"name":"constructor(mediaProjection: MediaProjection, effects: Set<UUID> = defaultAudioEffects)","description":"io.github.thibaultbee.streampack.core.elements.sources.audio.audiorecord.MediaProjectionAudioSourceFactory.MediaProjectionAudioSourceFactory","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.audio.audiorecord/-media-projection-audio-source-factory/-media-projection-audio-source-factory.html","searchKeys":["MediaProjectionAudioSourceFactory","constructor(mediaProjection: MediaProjection, effects: Set<UUID> = defaultAudioEffects)","io.github.thibaultbee.streampack.core.elements.sources.audio.audiorecord.MediaProjectionAudioSourceFactory.MediaProjectionAudioSourceFactory"]},{"name":"constructor(mediaProjection: MediaProjection, overrideRotation: Int? = null)","description":"io.github.thibaultbee.streampack.core.elements.sources.video.mediaprojection.MediaProjectionVideoSourceFactory.MediaProjectionVideoSourceFactory","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.video.mediaprojection/-media-projection-video-source-factory/-media-projection-video-source-factory.html","searchKeys":["MediaProjectionVideoSourceFactory","constructor(mediaProjection: MediaProjection, overrideRotation: Int? = null)","io.github.thibaultbee.streampack.core.elements.sources.video.mediaprojection.MediaProjectionVideoSourceFactory.MediaProjectionVideoSourceFactory"]},{"name":"constructor(message: String)","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.sinks.ClosedException.ClosedException","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.sinks/-closed-exception/-closed-exception.html","searchKeys":["ClosedException","constructor(message: String)","io.github.thibaultbee.streampack.core.elements.endpoints.composites.sinks.ClosedException.ClosedException"]},{"name":"constructor(message: String)","description":"io.github.thibaultbee.streampack.core.elements.sources.video.camera.CameraException.CameraException","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.video.camera/-camera-exception/-camera-exception.html","searchKeys":["CameraException","constructor(message: String)","io.github.thibaultbee.streampack.core.elements.sources.video.camera.CameraException.CameraException"]},{"name":"constructor(message: String, cause: Throwable)","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.sinks.ClosedException.ClosedException","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.sinks/-closed-exception/-closed-exception.html","searchKeys":["ClosedException","constructor(message: String, cause: Throwable)","io.github.thibaultbee.streampack.core.elements.endpoints.composites.sinks.ClosedException.ClosedException"]},{"name":"constructor(mfhd: MovieFragmentHeaderBox, traf: List<TrackFragmentBox> = emptyList())","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.MovieFragmentBox.MovieFragmentBox","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-movie-fragment-box/-movie-fragment-box.html","searchKeys":["MovieFragmentBox","constructor(mfhd: MovieFragmentHeaderBox, traf: List<TrackFragmentBox> = emptyList())","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.MovieFragmentBox.MovieFragmentBox"]},{"name":"constructor(mfraSize: Int, version: Byte = 0)","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.MovieFragmentRandomAccessOffsetBox.MovieFragmentRandomAccessOffsetBox","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-movie-fragment-random-access-offset-box/-movie-fragment-random-access-offset-box.html","searchKeys":["MovieFragmentRandomAccessOffsetBox","constructor(mfraSize: Int, version: Byte = 0)","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.MovieFragmentRandomAccessOffsetBox.MovieFragmentRandomAccessOffsetBox"]},{"name":"constructor(mhd: TypeMediaHeaderBox, dinf: DataInformationBox, stbl: SampleTableBox)","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.MediaInformationBox.MediaInformationBox","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-media-information-box/-media-information-box.html","searchKeys":["MediaInformationBox","constructor(mhd: TypeMediaHeaderBox, dinf: DataInformationBox, stbl: SampleTableBox)","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.MediaInformationBox.MediaInformationBox"]},{"name":"constructor(mimeType: String = MediaFormat.MIMETYPE_AUDIO_AAC, startBitrate: Int, profile: Int = getDefaultProfile(mimeType))","description":"io.github.thibaultbee.streampack.core.streamers.dual.DualStreamerAudioCodecConfig.DualStreamerAudioCodecConfig","location":"streampack-core/io.github.thibaultbee.streampack.core.streamers.dual/-dual-streamer-audio-codec-config/-dual-streamer-audio-codec-config.html","searchKeys":["DualStreamerAudioCodecConfig","constructor(mimeType: String = MediaFormat.MIMETYPE_AUDIO_AAC, startBitrate: Int, profile: Int = getDefaultProfile(mimeType))","io.github.thibaultbee.streampack.core.streamers.dual.DualStreamerAudioCodecConfig.DualStreamerAudioCodecConfig"]},{"name":"constructor(mimeType: String = MediaFormat.MIMETYPE_AUDIO_AAC, startBitrate: Int, sampleRate: Int = getDefaultSampleRate(mimeType), channelConfig: Int = AudioFormat.CHANNEL_IN_STEREO, byteFormat: Int = AudioFormat.ENCODING_PCM_16BIT, profile: Int = getDefaultProfile(mimeType))","description":"io.github.thibaultbee.streampack.core.elements.encoders.AudioCodecConfig.AudioCodecConfig","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.encoders/-audio-codec-config/-audio-codec-config.html","searchKeys":["AudioCodecConfig","constructor(mimeType: String = MediaFormat.MIMETYPE_AUDIO_AAC, startBitrate: Int, sampleRate: Int = getDefaultSampleRate(mimeType), channelConfig: Int = AudioFormat.CHANNEL_IN_STEREO, byteFormat: Int = AudioFormat.ENCODING_PCM_16BIT, profile: Int = getDefaultProfile(mimeType))","io.github.thibaultbee.streampack.core.elements.encoders.AudioCodecConfig.AudioCodecConfig"]},{"name":"constructor(mimeType: String = MediaFormat.MIMETYPE_VIDEO_AVC, resolution: Size = DEFAULT_RESOLUTION, startBitrate: Int = getBestBitrate(resolution), fps: Int = DEFAULT_FPS, profileLevel: MediaCodecInfo.CodecProfileLevel, gopDurationInS: Float = 1.0f)","description":"io.github.thibaultbee.streampack.core.elements.encoders.VideoCodecConfig.VideoCodecConfig","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.encoders/-video-codec-config/-video-codec-config.html","searchKeys":["VideoCodecConfig","constructor(mimeType: String = MediaFormat.MIMETYPE_VIDEO_AVC, resolution: Size = DEFAULT_RESOLUTION, startBitrate: Int = getBestBitrate(resolution), fps: Int = DEFAULT_FPS, profileLevel: MediaCodecInfo.CodecProfileLevel, gopDurationInS: Float = 1.0f)","io.github.thibaultbee.streampack.core.elements.encoders.VideoCodecConfig.VideoCodecConfig"]},{"name":"constructor(mimeType: String = MediaFormat.MIMETYPE_VIDEO_AVC, startBitrate: Int, resolution: Size = Size(1280, 720), fps: Int = 30, profile: Int = getBestProfile(mimeType), level: Int = getBestLevel(mimeType, profile), gopDurationInS: Float = 1.0f)","description":"io.github.thibaultbee.streampack.core.elements.encoders.VideoCodecConfig.VideoCodecConfig","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.encoders/-video-codec-config/-video-codec-config.html","searchKeys":["VideoCodecConfig","constructor(mimeType: String = MediaFormat.MIMETYPE_VIDEO_AVC, startBitrate: Int, resolution: Size = Size(1280, 720), fps: Int = 30, profile: Int = getBestProfile(mimeType), level: Int = getBestLevel(mimeType, profile), gopDurationInS: Float = 1.0f)","io.github.thibaultbee.streampack.core.elements.encoders.VideoCodecConfig.VideoCodecConfig"]},{"name":"constructor(mimeType: String = MediaFormat.MIMETYPE_VIDEO_AVC, startBitrate: Int, resolution: Size = Size(1280, 720), profile: Int = getBestProfile(mimeType), level: Int = getBestLevel(mimeType, profile), gopDurationInS: Float = 1.0f)","description":"io.github.thibaultbee.streampack.core.streamers.dual.DualStreamerVideoCodecConfig.DualStreamerVideoCodecConfig","location":"streampack-core/io.github.thibaultbee.streampack.core.streamers.dual/-dual-streamer-video-codec-config/-dual-streamer-video-codec-config.html","searchKeys":["DualStreamerVideoCodecConfig","constructor(mimeType: String = MediaFormat.MIMETYPE_VIDEO_AVC, startBitrate: Int, resolution: Size = Size(1280, 720), profile: Int = getBestProfile(mimeType), level: Int = getBestLevel(mimeType, profile), gopDurationInS: Float = 1.0f)","io.github.thibaultbee.streampack.core.streamers.dual.DualStreamerVideoCodecConfig.DualStreamerVideoCodecConfig"]},{"name":"constructor(mimeType: String, startBitrate: Int, profile: Int = 0)","description":"io.github.thibaultbee.streampack.core.elements.encoders.CodecConfig.CodecConfig","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.encoders/-codec-config/-codec-config.html","searchKeys":["CodecConfig","constructor(mimeType: String, startBitrate: Int, profile: Int = 0)","io.github.thibaultbee.streampack.core.elements.encoders.CodecConfig.CodecConfig"]},{"name":"constructor(muxConfigPresent: Boolean = true, useSameStreamMuxConfig: Boolean, streamMuxConfig: StreamMuxConfig? = null, payload: ByteBuffer? = null)","description":"io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.AudioMuxElement.AudioMuxElement","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac/-audio-mux-element/-audio-mux-element.html","searchKeys":["AudioMuxElement","constructor(muxConfigPresent: Boolean = true, useSameStreamMuxConfig: Boolean, streamMuxConfig: StreamMuxConfig? = null, payload: ByteBuffer? = null)","io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.AudioMuxElement.AudioMuxElement"]},{"name":"constructor(muxer: IMuxerInternal, sink: ISinkInternal)","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.CompositeEndpoint.CompositeEndpoint","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites/-composite-endpoint/-composite-endpoint.html","searchKeys":["CompositeEndpoint","constructor(muxer: IMuxerInternal, sink: ISinkInternal)","io.github.thibaultbee.streampack.core.elements.endpoints.composites.CompositeEndpoint.CompositeEndpoint"]},{"name":"constructor(muxer: IMuxerInternal, sink: ISinkInternal)","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.CompositeEndpointFactory.CompositeEndpointFactory","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites/-composite-endpoint-factory/-composite-endpoint-factory.html","searchKeys":["CompositeEndpointFactory","constructor(muxer: IMuxerInternal, sink: ISinkInternal)","io.github.thibaultbee.streampack.core.elements.endpoints.composites.CompositeEndpointFactory.CompositeEndpointFactory"]},{"name":"constructor(muxerInfo: IMuxer.IMuxerInfo)","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.CompositeEndpoint.EndpointInfo.EndpointInfo","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites/-composite-endpoint/-endpoint-info/-endpoint-info.html","searchKeys":["EndpointInfo","constructor(muxerInfo: IMuxer.IMuxerInfo)","io.github.thibaultbee.streampack.core.elements.endpoints.composites.CompositeEndpoint.EndpointInfo.EndpointInfo"]},{"name":"constructor(muxerListener: IMuxerInternal.IMuxerListener? = null, stream: Stream, hasPcr: Boolean)","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets.Pes.Pes","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets/-pes/-pes.html","searchKeys":["Pes","constructor(muxerListener: IMuxerInternal.IMuxerListener? = null, stream: Stream, hasPcr: Boolean)","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets.Pes.Pes"]},{"name":"constructor(mvhd: MovieHeaderBox, trak: List<TrackBox>, mvex: MovieExtendsBox? = null)","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.MovieBox.MovieBox","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-movie-box/-movie-box.html","searchKeys":["MovieBox","constructor(mvhd: MovieHeaderBox, trak: List<TrackBox>, mvex: MovieExtendsBox? = null)","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.MovieBox.MovieBox"]},{"name":"constructor(name: String, location: String? = null, flags: Int)","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.DataEntryUrnBox.DataEntryUrnBox","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-data-entry-urn-box/-data-entry-urn-box.html","searchKeys":["DataEntryUrnBox","constructor(name: String, location: String? = null, flags: Int)","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.DataEntryUrnBox.DataEntryUrnBox"]},{"name":"constructor(name: String, v: AmfParameter)","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.amf.primitives.AmfNamedParameter.AmfNamedParameter","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.amf.primitives/-amf-named-parameter/-amf-named-parameter.html","searchKeys":["AmfNamedParameter","constructor(name: String, v: AmfParameter)","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.amf.primitives.AmfNamedParameter.AmfNamedParameter"]},{"name":"constructor(name: String, v: Any)","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.amf.primitives.AmfNamedParameter.AmfNamedParameter","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.amf.primitives/-amf-named-parameter/-amf-named-parameter.html","searchKeys":["AmfNamedParameter","constructor(name: String, v: Any)","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.amf.primitives.AmfNamedParameter.AmfNamedParameter"]},{"name":"constructor(objectTypeIndication: ObjectTypeIndication, streamType: StreamType, upStream: Boolean, bufferSize: Int, maxBitrate: Int, avgBitrate: Int, decoderSpecificInfo: DecoderSpecificInfo)","description":"io.github.thibaultbee.streampack.core.elements.utils.av.descriptors.DecoderConfigDescriptor.DecoderConfigDescriptor","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.descriptors/-decoder-config-descriptor/-decoder-config-descriptor.html","searchKeys":["DecoderConfigDescriptor","constructor(objectTypeIndication: ObjectTypeIndication, streamType: StreamType, upStream: Boolean, bufferSize: Int, maxBitrate: Int, avgBitrate: Int, decoderSpecificInfo: DecoderSpecificInfo)","io.github.thibaultbee.streampack.core.elements.utils.av.descriptors.DecoderConfigDescriptor.DecoderConfigDescriptor"]},{"name":"constructor(predefined: Byte)","description":"io.github.thibaultbee.streampack.core.elements.utils.av.descriptors.SLConfigDescriptor.SLConfigDescriptor","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.descriptors/-s-l-config-descriptor/-s-l-config-descriptor.html","searchKeys":["SLConfigDescriptor","constructor(predefined: Byte)","io.github.thibaultbee.streampack.core.elements.utils.av.descriptors.SLConfigDescriptor.SLConfigDescriptor"]},{"name":"constructor(prefix: Short = 1023, payloadSize: Int, startTrim: Short? = null, endTrim: Short? = null)","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.utils.av.OpusControlHeader.OpusControlHeader","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.utils.av/-opus-control-header/-opus-control-header.html","searchKeys":["OpusControlHeader","constructor(prefix: Short = 1023, payloadSize: Int, startTrim: Short? = null, endTrim: Short? = null)","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.utils.av.OpusControlHeader.OpusControlHeader"]},{"name":"constructor(previous: T?, current: T)","description":"io.github.thibaultbee.streampack.core.elements.utils.extensions.History.History","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.extensions/-history/-history.html","searchKeys":["History","constructor(previous: T?, current: T)","io.github.thibaultbee.streampack.core.elements.utils.extensions.History.History"]},{"name":"constructor(profile: Profile, level: Level, bitDepth: Byte, chromaSubsampling: ChromaSubsampling, videoFullRangeFlag: Boolean, colorPrimaries: ColorPrimaries, transferCharacteristics: TransferCharacteristics, matrixCoefficients: MatrixCoefficients, codecInitializationData: ByteBuffer? = null)","description":"io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.VPCodecConfigurationRecord.VPCodecConfigurationRecord","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx/-v-p-codec-configuration-record/-v-p-codec-configuration-record.html","searchKeys":["VPCodecConfigurationRecord","constructor(profile: Profile, level: Level, bitDepth: Byte, chromaSubsampling: ChromaSubsampling, videoFullRangeFlag: Boolean, colorPrimaries: ColorPrimaries, transferCharacteristics: TransferCharacteristics, matrixCoefficients: MatrixCoefficients, codecInitializationData: ByteBuffer? = null)","io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.VPCodecConfigurationRecord.VPCodecConfigurationRecord"]},{"name":"constructor(protectionAbsent: Boolean, sampleRate: Int, channelCount: Int, payloadLength: Int)","description":"io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.ADTS.ADTS","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac/-a-d-t-s/-a-d-t-s.html","searchKeys":["ADTS","constructor(protectionAbsent: Boolean, sampleRate: Int, channelCount: Int, payloadLength: Int)","io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.ADTS.ADTS"]},{"name":"constructor(pts: Long, buffer: ByteBufferWriter, isKeyFrame: Boolean, packetType: AVCPacketType?, mimeType: String)","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.video.VideoTag.VideoTag","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.video/-video-tag/-video-tag.html","searchKeys":["VideoTag","constructor(pts: Long, buffer: ByteBufferWriter, isKeyFrame: Boolean, packetType: AVCPacketType?, mimeType: String)","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.video.VideoTag.VideoTag"]},{"name":"constructor(pts: Long, buffer: ByteBufferWriter, isKeyFrame: Boolean, packetType: PacketType, mimeType: String)","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.video.ExtendedVideoTag.ExtendedVideoTag","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.video/-extended-video-tag/-extended-video-tag.html","searchKeys":["ExtendedVideoTag","constructor(pts: Long, buffer: ByteBufferWriter, isKeyFrame: Boolean, packetType: PacketType, mimeType: String)","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.video.ExtendedVideoTag.ExtendedVideoTag"]},{"name":"constructor(pts: Long, buffer: ByteBufferWriter, isKeyFrame: Boolean, packetType: PacketType, mimeType: String)","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.video.VideoTagFactory.VideoTagFactory","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.video/-video-tag-factory/-video-tag-factory.html","searchKeys":["VideoTagFactory","constructor(pts: Long, buffer: ByteBufferWriter, isKeyFrame: Boolean, packetType: PacketType, mimeType: String)","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.video.VideoTagFactory.VideoTagFactory"]},{"name":"constructor(pts: Long, frameBuffer: ByteBuffer, aacPacketType: AACPacketType?, audioConfig: AudioCodecConfig)","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.AudioTag.AudioTag","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags/-audio-tag/-audio-tag.html","searchKeys":["AudioTag","constructor(pts: Long, frameBuffer: ByteBuffer, aacPacketType: AACPacketType?, audioConfig: AudioCodecConfig)","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.AudioTag.AudioTag"]},{"name":"constructor(rawBuffer: ByteBuffer, ptsInUs: Long, dtsInUs: Long? = null, isKeyFrame: Boolean = false, format: MediaFormat, onClosed: (ICloseableFrame) -> Unit = {})","description":"io.github.thibaultbee.streampack.core.elements.data.Frame.Frame","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.data/-frame/-frame.html","searchKeys":["Frame","constructor(rawBuffer: ByteBuffer, ptsInUs: Long, dtsInUs: Long? = null, isKeyFrame: Boolean = false, format: MediaFormat, onClosed: (ICloseableFrame) -> Unit = {})","io.github.thibaultbee.streampack.core.elements.data.Frame.Frame"]},{"name":"constructor(rawBuffer: ByteBuffer, timestampInUs: Long, onClosed: (ICloseableFrame) -> Unit = {})","description":"io.github.thibaultbee.streampack.core.elements.data.RawFrame.RawFrame","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.data/-raw-frame/-raw-frame.html","searchKeys":["RawFrame","constructor(rawBuffer: ByteBuffer, timestampInUs: Long, onClosed: (ICloseableFrame) -> Unit = {})","io.github.thibaultbee.streampack.core.elements.data.RawFrame.RawFrame"]},{"name":"constructor(resolution: Size = DEFAULT_RESOLUTION, fps: Int = DEFAULT_FPS, dynamicRangeProfile: DynamicRangeProfile = DynamicRangeProfile.sdr)","description":"io.github.thibaultbee.streampack.core.elements.sources.video.VideoSourceConfig.VideoSourceConfig","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.video/-video-source-config/-video-source-config.html","searchKeys":["VideoSourceConfig","constructor(resolution: Size = DEFAULT_RESOLUTION, fps: Int = DEFAULT_FPS, dynamicRangeProfile: DynamicRangeProfile = DynamicRangeProfile.sdr)","io.github.thibaultbee.streampack.core.elements.sources.video.VideoSourceConfig.VideoSourceConfig"]},{"name":"constructor(resolution: Size, horizontalResolution: Int = 72, verticalResolution: Int = 72, frameCount: Short = 1, compressorName: String? = \"AV1 Coding\", depth: Short = 24, av1C: AV1CodecConfigurationBox, btrt: BitRateBox? = null, extensionDescriptorsBox: List<Box> = emptyList(), clap: CleanApertureBox? = null, pasp: PixelAspectRatioBox? = null)","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.AV1SampleEntry.AV1SampleEntry","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-a-v1-sample-entry/-a-v1-sample-entry.html","searchKeys":["AV1SampleEntry","constructor(resolution: Size, horizontalResolution: Int = 72, verticalResolution: Int = 72, frameCount: Short = 1, compressorName: String? = \"AV1 Coding\", depth: Short = 24, av1C: AV1CodecConfigurationBox, btrt: BitRateBox? = null, extensionDescriptorsBox: List<Box> = emptyList(), clap: CleanApertureBox? = null, pasp: PixelAspectRatioBox? = null)","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.AV1SampleEntry.AV1SampleEntry"]},{"name":"constructor(resolution: Size, horizontalResolution: Int = 72, verticalResolution: Int = 72, frameCount: Short = 1, compressorName: String? = \"AVC Coding\", depth: Short = 24, avcC: AVCConfigurationBox, btrt: BitRateBox? = null, extensionDescriptorsBox: List<Box> = emptyList(), clap: CleanApertureBox? = null, pasp: PixelAspectRatioBox? = null)","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.AVCSampleEntry.AVCSampleEntry","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-a-v-c-sample-entry/-a-v-c-sample-entry.html","searchKeys":["AVCSampleEntry","constructor(resolution: Size, horizontalResolution: Int = 72, verticalResolution: Int = 72, frameCount: Short = 1, compressorName: String? = \"AVC Coding\", depth: Short = 24, avcC: AVCConfigurationBox, btrt: BitRateBox? = null, extensionDescriptorsBox: List<Box> = emptyList(), clap: CleanApertureBox? = null, pasp: PixelAspectRatioBox? = null)","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.AVCSampleEntry.AVCSampleEntry"]},{"name":"constructor(resolution: Size, horizontalResolution: Int = 72, verticalResolution: Int = 72, frameCount: Short = 1, compressorName: String? = \"HEVC Coding\", depth: Short = 24, hvcC: HEVCConfigurationBox, btrt: BitRateBox? = null, extensionDescriptorsBox: List<Box> = emptyList(), clap: CleanApertureBox? = null, pasp: PixelAspectRatioBox? = null)","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.HEVCSampleEntry.HEVCSampleEntry","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-h-e-v-c-sample-entry/-h-e-v-c-sample-entry.html","searchKeys":["HEVCSampleEntry","constructor(resolution: Size, horizontalResolution: Int = 72, verticalResolution: Int = 72, frameCount: Short = 1, compressorName: String? = \"HEVC Coding\", depth: Short = 24, hvcC: HEVCConfigurationBox, btrt: BitRateBox? = null, extensionDescriptorsBox: List<Box> = emptyList(), clap: CleanApertureBox? = null, pasp: PixelAspectRatioBox? = null)","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.HEVCSampleEntry.HEVCSampleEntry"]},{"name":"constructor(resolution: Size, horizontalResolution: Int = 72, verticalResolution: Int = 72, frameCount: Short = 1, compressorName: String? = \"VP9 Coding\", depth: Short = 24, vpcC: VPCodecConfigurationBox, btrt: BitRateBox? = null, extensionDescriptorsBox: List<Box> = emptyList(), clap: CleanApertureBox? = null, pasp: PixelAspectRatioBox? = null)","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.VP9SampleEntry.VP9SampleEntry","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-v-p9-sample-entry/-v-p9-sample-entry.html","searchKeys":["VP9SampleEntry","constructor(resolution: Size, horizontalResolution: Int = 72, verticalResolution: Int = 72, frameCount: Short = 1, compressorName: String? = \"VP9 Coding\", depth: Short = 24, vpcC: VPCodecConfigurationBox, btrt: BitRateBox? = null, extensionDescriptorsBox: List<Box> = emptyList(), clap: CleanApertureBox? = null, pasp: PixelAspectRatioBox? = null)","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.VP9SampleEntry.VP9SampleEntry"]},{"name":"constructor(rotationDegrees: Int, facingDirection: Int?)","description":"io.github.thibaultbee.streampack.core.elements.sources.video.camera.CameraInfoProvider.CameraInfoProvider","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.video.camera/-camera-info-provider/-camera-info-provider.html","searchKeys":["CameraInfoProvider","constructor(rotationDegrees: Int, facingDirection: Int?)","io.github.thibaultbee.streampack.core.elements.sources.video.camera.CameraInfoProvider.CameraInfoProvider"]},{"name":"constructor(s: Short)","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.amf.primitives.AmfInt16.AmfInt16","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.amf.primitives/-amf-int16/-amf-int16.html","searchKeys":["AmfInt16","constructor(s: Short)","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.amf.primitives.AmfInt16.AmfInt16"]},{"name":"constructor(s: String)","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.amf.primitives.AmfString.AmfString","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.amf.primitives/-amf-string/-amf-string.html","searchKeys":["AmfString","constructor(s: String)","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.amf.primitives.AmfString.AmfString"]},{"name":"constructor(sampleDuration: Int? = null, sampleSize: Int? = null, sampleFlags: Int? = null, sampleCompositionTimeOffset: Int? = null)","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.TrackRunBox.Entry.Entry","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-track-run-box/-entry/-entry.html","searchKeys":["Entry","constructor(sampleDuration: Int? = null, sampleSize: Int? = null, sampleFlags: Int? = null, sampleCompositionTimeOffset: Int? = null)","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.TrackRunBox.Entry.Entry"]},{"name":"constructor(sampleEntries: List<SampleEntry>)","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.SampleDescriptionBox.SampleDescriptionBox","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-sample-description-box/-sample-description-box.html","searchKeys":["SampleDescriptionBox","constructor(sampleEntries: List<SampleEntry>)","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.SampleDescriptionBox.SampleDescriptionBox"]},{"name":"constructor(sampleEntry: SampleEntry)","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.SampleDescriptionBox.SampleDescriptionBox","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-sample-description-box/-sample-description-box.html","searchKeys":["SampleDescriptionBox","constructor(sampleEntry: SampleEntry)","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.SampleDescriptionBox.SampleDescriptionBox"]},{"name":"constructor(sampleNumber: List<Int>)","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.SyncSampleBox.SyncSampleBox","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-sync-sample-box/-sync-sample-box.html","searchKeys":["SyncSampleBox","constructor(sampleNumber: List<Int>)","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.SyncSampleBox.SyncSampleBox"]},{"name":"constructor(sampleRate: Int, channelConfig: Int, byteFormat: Int)","description":"io.github.thibaultbee.streampack.core.elements.sources.audio.AudioSourceConfig.AudioSourceConfig","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.audio/-audio-source-config/-audio-source-config.html","searchKeys":["AudioSourceConfig","constructor(sampleRate: Int, channelConfig: Int, byteFormat: Int)","io.github.thibaultbee.streampack.core.elements.sources.audio.AudioSourceConfig.AudioSourceConfig"]},{"name":"constructor(sampleSize: Int = 0, sampleSizeEntries: List<Int>? = null)","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.SampleSizeBox.SampleSizeBox","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-sample-size-box/-sample-size-box.html","searchKeys":["SampleSizeBox","constructor(sampleSize: Int = 0, sampleSizeEntries: List<Int>? = null)","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.SampleSizeBox.SampleSizeBox"]},{"name":"constructor(sbrHeaders: List<SbrHeader>)","description":"io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.config.ELDSpecificConfig.LdSbrHeader.LdSbrHeader","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.config/-e-l-d-specific-config/-ld-sbr-header/-ld-sbr-header.html","searchKeys":["LdSbrHeader","constructor(sbrHeaders: List<SbrHeader>)","io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.config.ELDSpecificConfig.LdSbrHeader.LdSbrHeader"]},{"name":"constructor(sequenceNumber: Int)","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.MovieFragmentHeaderBox.MovieFragmentHeaderBox","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-movie-fragment-header-box/-movie-fragment-header-box.html","searchKeys":["MovieFragmentHeaderBox","constructor(sequenceNumber: Int)","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.MovieFragmentHeaderBox.MovieFragmentHeaderBox"]},{"name":"constructor(sequenceNumber: Int)","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models.MovieFragmentBoxFactory.MovieFragmentBoxFactory","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models/-movie-fragment-box-factory/-movie-fragment-box-factory.html","searchKeys":["MovieFragmentBoxFactory","constructor(sequenceNumber: Int)","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models.MovieFragmentBoxFactory.MovieFragmentBoxFactory"]},{"name":"constructor(specificConfig: ByteBuffer)","description":"io.github.thibaultbee.streampack.core.elements.utils.av.descriptors.DecoderSpecificInfo.DecoderSpecificInfo","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.descriptors/-decoder-specific-info/-decoder-specific-info.html","searchKeys":["DecoderSpecificInfo","constructor(specificConfig: ByteBuffer)","io.github.thibaultbee.streampack.core.elements.utils.av.descriptors.DecoderSpecificInfo.DecoderSpecificInfo"]},{"name":"constructor(streamConfigs: List<CodecConfig>)","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.sinks.SinkConfiguration.SinkConfiguration","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.sinks/-sink-configuration/-sink-configuration.html","searchKeys":["SinkConfiguration","constructor(streamConfigs: List<CodecConfig>)","io.github.thibaultbee.streampack.core.elements.endpoints.composites.sinks.SinkConfiguration.SinkConfiguration"]},{"name":"constructor(streamCount: Byte, coupledCount: Byte, channelMapping: ByteArray)","description":"io.github.thibaultbee.streampack.core.elements.utils.av.audio.opus.IdentificationHeader.ChannelMapping.ChannelMapping","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.audio.opus/-identification-header/-channel-mapping/-channel-mapping.html","searchKeys":["ChannelMapping","constructor(streamCount: Byte, coupledCount: Byte, channelMapping: ByteArray)","io.github.thibaultbee.streampack.core.elements.utils.av.audio.opus.IdentificationHeader.ChannelMapping.ChannelMapping"]},{"name":"constructor(streamId: Short, payloadLength: Int, esScramblingControl: Byte = 0, esPriority: Boolean = false, dataAlignmentIndicator: Boolean = false, copyright: Boolean = false, originalOrCopy: Boolean = true, pts: Long? = null, dts: Long? = null, esClockReference: Long? = null, esRate: Int? = null, dsmTrickMode: Byte? = null, additionalCopyInfo: Byte? = null, crc: Short? = null)","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets.PesHeader.PesHeader","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets/-pes-header/-pes-header.html","searchKeys":["PesHeader","constructor(streamId: Short, payloadLength: Int, esScramblingControl: Byte = 0, esPriority: Boolean = false, dataAlignmentIndicator: Boolean = false, copyright: Boolean = false, originalOrCopy: Boolean = true, pts: Long? = null, dts: Long? = null, esClockReference: Long? = null, esRate: Int? = null, dsmTrickMode: Byte? = null, additionalCopyInfo: Byte? = null, crc: Short? = null)","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets.PesHeader.PesHeader"]},{"name":"constructor(streamer: IStreamer)","description":"io.github.thibaultbee.streampack.core.streamers.lifecycle.StreamerActivityLifeCycleObserver.StreamerActivityLifeCycleObserver","location":"streampack-core/io.github.thibaultbee.streampack.core.streamers.lifecycle/-streamer-activity-life-cycle-observer/-streamer-activity-life-cycle-observer.html","searchKeys":["StreamerActivityLifeCycleObserver","constructor(streamer: IStreamer)","io.github.thibaultbee.streampack.core.streamers.lifecycle.StreamerActivityLifeCycleObserver.StreamerActivityLifeCycleObserver"]},{"name":"constructor(streamer: IStreamer)","description":"io.github.thibaultbee.streampack.core.streamers.lifecycle.StreamerViewModelLifeCycleObserver.StreamerViewModelLifeCycleObserver","location":"streampack-core/io.github.thibaultbee.streampack.core.streamers.lifecycle/-streamer-view-model-life-cycle-observer/-streamer-view-model-life-cycle-observer.html","searchKeys":["StreamerViewModelLifeCycleObserver","constructor(streamer: IStreamer)","io.github.thibaultbee.streampack.core.streamers.lifecycle.StreamerViewModelLifeCycleObserver.StreamerViewModelLifeCycleObserver"]},{"name":"constructor(streams: List<Metadata>, duration: Double = 0.0)","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.OnMetadata.OnMetadata","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags/-on-metadata/-on-metadata.html","searchKeys":["OnMetadata","constructor(streams: List<Metadata>, duration: Double = 0.0)","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.OnMetadata.OnMetadata"]},{"name":"constructor(stsd: SampleDescriptionBox, stts: TimeToSampleBox, stss: SyncSampleBox? = null, stsc: SampleToChunkBox, stsz: SampleSizeBox, co64: ChunkLargeOffsetBox)","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.SampleTableBox.SampleTableBox","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-sample-table-box/-sample-table-box.html","searchKeys":["SampleTableBox","constructor(stsd: SampleDescriptionBox, stts: TimeToSampleBox, stss: SyncSampleBox? = null, stsc: SampleToChunkBox, stsz: SampleSizeBox, co64: ChunkLargeOffsetBox)","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.SampleTableBox.SampleTableBox"]},{"name":"constructor(supportedSinkTypes: List<MediaSinkType> = MediaSinkType.entries)","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.sinks.FakeSink.FakeSink","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.sinks/-fake-sink/-fake-sink.html","searchKeys":["FakeSink","constructor(supportedSinkTypes: List<MediaSinkType> = MediaSinkType.entries)","io.github.thibaultbee.streampack.core.elements.endpoints.composites.sinks.FakeSink.FakeSink"]},{"name":"constructor(surface: Surface, resolution: Size, targetRotation: Int = 0, isEncoderInputSurface: Boolean = false)","description":"io.github.thibaultbee.streampack.core.pipelines.outputs.SurfaceDescriptor.SurfaceDescriptor","location":"streampack-core/io.github.thibaultbee.streampack.core.pipelines.outputs/-surface-descriptor/-surface-descriptor.html","searchKeys":["SurfaceDescriptor","constructor(surface: Surface, resolution: Size, targetRotation: Int = 0, isEncoderInputSurface: Boolean = false)","io.github.thibaultbee.streampack.core.pipelines.outputs.SurfaceDescriptor.SurfaceDescriptor"]},{"name":"constructor(tableId: Byte, sectionSyntaxIndicator: Boolean, reservedFutureUse: Boolean = false, payloadLength: Short, tableIdExtension: Short = 0, versionNumber: Byte, currentNextIndicator: Boolean = true, sectionNumber: Byte, lastSectionNumber: Byte)","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets.TableHeader.TableHeader","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets/-table-header/-table-header.html","searchKeys":["TableHeader","constructor(tableId: Byte, sectionSyntaxIndicator: Boolean, reservedFutureUse: Boolean = false, payloadLength: Short, tableIdExtension: Short = 0, versionNumber: Byte, currentNextIndicator: Boolean = true, sectionNumber: Byte, lastSectionNumber: Byte)","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets.TableHeader.TableHeader"]},{"name":"constructor(tag: Tags, sizeOfInstance: Int)","description":"io.github.thibaultbee.streampack.core.elements.utils.av.descriptors.BaseDescriptor.BaseDescriptor","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.descriptors/-base-descriptor/-base-descriptor.html","searchKeys":["BaseDescriptor","constructor(tag: Tags, sizeOfInstance: Int)","io.github.thibaultbee.streampack.core.elements.utils.av.descriptors.BaseDescriptor.BaseDescriptor"]},{"name":"constructor(tfhd: TrackFragmentHeaderBox, tfdt: TrackFragmentBaseMediaDecodeTimeBox? = null, trun: TrackRunBox? = null)","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.TrackFragmentBox.TrackFragmentBox","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-track-fragment-box/-track-fragment-box.html","searchKeys":["TrackFragmentBox","constructor(tfhd: TrackFragmentHeaderBox, tfdt: TrackFragmentBaseMediaDecodeTimeBox? = null, trun: TrackRunBox? = null)","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.TrackFragmentBox.TrackFragmentBox"]},{"name":"constructor(throwables: Iterable<Throwable>)","description":"io.github.thibaultbee.streampack.core.pipelines.utils.MultiException.MultiException","location":"streampack-core/io.github.thibaultbee.streampack.core.pipelines.utils/-multi-exception/-multi-exception.html","searchKeys":["MultiException","constructor(throwables: Iterable<Throwable>)","io.github.thibaultbee.streampack.core.pipelines.utils.MultiException.MultiException"]},{"name":"constructor(time: Long, isFragment: Boolean, moofOffset: Long)","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models.Track.SyncSample.SyncSample","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models/-track/-sync-sample/-sync-sample.html","searchKeys":["SyncSample","constructor(time: Long, isFragment: Boolean, moofOffset: Long)","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models.Track.SyncSample.SyncSample"]},{"name":"constructor(time: Number, moofOffset: Number, trafNumber: Byte = 1, trunNumber: Byte = 1, sampleNumber: Byte = 1)","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.TrackFragmentRandomAccessBox.Entry.Entry","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-track-fragment-random-access-box/-entry/-entry.html","searchKeys":["Entry","constructor(time: Number, moofOffset: Number, trafNumber: Byte = 1, trunNumber: Byte = 1, sampleNumber: Byte = 1)","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.TrackFragmentRandomAccessBox.Entry.Entry"]},{"name":"constructor(timescale: Int)","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models.MovieBoxFactory.MovieBoxFactory","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models/-movie-box-factory/-movie-box-factory.html","searchKeys":["MovieBoxFactory","constructor(timescale: Int)","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models.MovieBoxFactory.MovieBoxFactory"]},{"name":"constructor(tkhd: TrackHeaderBox, mdia: MediaBox)","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.TrackBox.TrackBox","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-track-box/-track-box.html","searchKeys":["TrackBox","constructor(tkhd: TrackHeaderBox, mdia: MediaBox)","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.TrackBox.TrackBox"]},{"name":"constructor(track: Track, onNewSample: (ByteBuffer) -> Unit)","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models.TrackChunks.TrackChunks","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models/-track-chunks/-track-chunks.html","searchKeys":["TrackChunks","constructor(track: Track, onNewSample: (ByteBuffer) -> Unit)","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models.TrackChunks.TrackChunks"]},{"name":"constructor(tracks: List<Track>, movieBoxFactory: AbstractMovieBoxFactory, onNewSample: (ByteBuffer) -> Unit)","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models.Segment.Segment","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models/-segment/-segment.html","searchKeys":["Segment","constructor(tracks: List<Track>, movieBoxFactory: AbstractMovieBoxFactory, onNewSample: (ByteBuffer) -> Unit)","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models.Segment.Segment"]},{"name":"constructor(traf: List<TrackFragmentRandomAccessBox>)","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.MovieFragmentRandomAccessBox.MovieFragmentRandomAccessBox","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-movie-fragment-random-access-box/-movie-fragment-random-access-box.html","searchKeys":["MovieFragmentRandomAccessBox","constructor(traf: List<TrackFragmentRandomAccessBox>)","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.MovieFragmentRandomAccessBox.MovieFragmentRandomAccessBox"]},{"name":"constructor(traf: TrackFragmentRandomAccessBox)","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.MovieFragmentRandomAccessBox.MovieFragmentRandomAccessBox","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-movie-fragment-random-access-box/-movie-fragment-random-access-box.html","searchKeys":["MovieFragmentRandomAccessBox","constructor(traf: TrackFragmentRandomAccessBox)","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.MovieFragmentRandomAccessBox.MovieFragmentRandomAccessBox"]},{"name":"constructor(trex: List<TrackExtendsBox>)","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.MovieExtendsBox.MovieExtendsBox","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-movie-extends-box/-movie-extends-box.html","searchKeys":["MovieExtendsBox","constructor(trex: List<TrackExtendsBox>)","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.MovieExtendsBox.MovieExtendsBox"]},{"name":"constructor(ts: Long, type: TagType, isEncrypted: Boolean = false)","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.FlvTag.FlvTag","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags/-flv-tag/-flv-tag.html","searchKeys":["FlvTag","constructor(ts: Long, type: TagType, isEncrypted: Boolean = false)","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.FlvTag.FlvTag"]},{"name":"constructor(type: HEVCDecoderConfigurationRecord.NalUnit.Type, data: ByteBuffer, completeness: Boolean = true)","description":"io.github.thibaultbee.streampack.core.elements.utils.av.video.hevc.HEVCDecoderConfigurationRecord.NalUnit.NalUnit","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.video.hevc/-h-e-v-c-decoder-configuration-record/-nal-unit/-nal-unit.html","searchKeys":["NalUnit","constructor(type: HEVCDecoderConfigurationRecord.NalUnit.Type, data: ByteBuffer, completeness: Boolean = true)","io.github.thibaultbee.streampack.core.elements.utils.av.video.hevc.HEVCDecoderConfigurationRecord.NalUnit.NalUnit"]},{"name":"constructor(type: HandlerBox.HandlerType, name: String)","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.HandlerBox.HandlerBox","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-handler-box/-handler-box.html","searchKeys":["HandlerBox","constructor(type: HandlerBox.HandlerType, name: String)","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.HandlerBox.HandlerBox"]},{"name":"constructor(type: MediaDescriptor.Type, customData: List<Any> = emptyList())","description":"io.github.thibaultbee.streampack.core.configuration.mediadescriptor.MediaDescriptor.MediaDescriptor","location":"streampack-core/io.github.thibaultbee.streampack.core.configuration.mediadescriptor/-media-descriptor/-media-descriptor.html","searchKeys":["MediaDescriptor","constructor(type: MediaDescriptor.Type, customData: List<Any> = emptyList())","io.github.thibaultbee.streampack.core.configuration.mediadescriptor.MediaDescriptor.MediaDescriptor"]},{"name":"constructor(type: String, chunkOffsetEntries: List<T>)","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.BaseChunkOffsetBox.BaseChunkOffsetBox","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-base-chunk-offset-box/-base-chunk-offset-box.html","searchKeys":["BaseChunkOffsetBox","constructor(type: String, chunkOffsetEntries: List<T>)","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.BaseChunkOffsetBox.BaseChunkOffsetBox"]},{"name":"constructor(type: String, resolution: Size, horizontalResolution: Int = 72, verticalResolution: Int = 72, frameCount: Short = 1, compressorName: String? = null, depth: Short = 24, otherBoxes: List<Box> = emptyList(), clap: CleanApertureBox? = null, pasp: PixelAspectRatioBox? = null)","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.VisualSampleEntry.VisualSampleEntry","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-visual-sample-entry/-visual-sample-entry.html","searchKeys":["VisualSampleEntry","constructor(type: String, resolution: Size, horizontalResolution: Int = 72, verticalResolution: Int = 72, frameCount: Short = 1, compressorName: String? = null, depth: Short = 24, otherBoxes: List<Box> = emptyList(), clap: CleanApertureBox? = null, pasp: PixelAspectRatioBox? = null)","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.VisualSampleEntry.VisualSampleEntry"]},{"name":"constructor(type: String, version: Byte, flags: Int, isCompact: Boolean = true)","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.FullBox.FullBox","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-full-box/-full-box.html","searchKeys":["FullBox","constructor(type: String, version: Byte, flags: Int, isCompact: Boolean = true)","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.FullBox.FullBox"]},{"name":"constructor(type: String, version: Int = 0, channelCount: Short, sampleSize: Short, sampleRate: Int, otherBoxes: List<Box> = emptyList())","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.AudioSampleEntry.AudioSampleEntry","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-audio-sample-entry/-audio-sample-entry.html","searchKeys":["AudioSampleEntry","constructor(type: String, version: Int = 0, channelCount: Short, sampleSize: Short, sampleRate: Int, otherBoxes: List<Box> = emptyList())","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.AudioSampleEntry.AudioSampleEntry"]},{"name":"constructor(type: TSServiceInfo.ServiceType, id: Short, name: String, providerName: String)","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.data.TSServiceInfo.TSServiceInfo","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.data/-t-s-service-info/-t-s-service-info.html","searchKeys":["TSServiceInfo","constructor(type: TSServiceInfo.ServiceType, id: Short, name: String, providerName: String)","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.data.TSServiceInfo.TSServiceInfo"]},{"name":"constructor(upStream: Boolean, bufferSize: Int, maxBitrate: Int, avgBitrate: Int, audioSpecificConfig: ByteBuffer)","description":"io.github.thibaultbee.streampack.core.elements.utils.av.descriptors.AudioSpecificConfigDescriptor.AudioSpecificConfigDescriptor","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.descriptors/-audio-specific-config-descriptor/-audio-specific-config-descriptor.html","searchKeys":["AudioSpecificConfigDescriptor","constructor(upStream: Boolean, bufferSize: Int, maxBitrate: Int, avgBitrate: Int, audioSpecificConfig: ByteBuffer)","io.github.thibaultbee.streampack.core.elements.utils.av.descriptors.AudioSpecificConfigDescriptor.AudioSpecificConfigDescriptor"]},{"name":"constructor(version: Byte = 0, outputChannelCount: Byte, preSkip: Short, inputSampleRate: Int, outputGain: Short, channelMappingFamily: Byte, channelMapping: IdentificationHeader.ChannelMapping? = null)","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.OpusSpecificBox.OpusSpecificBox","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-opus-specific-box/-opus-specific-box.html","searchKeys":["OpusSpecificBox","constructor(version: Byte = 0, outputChannelCount: Byte, preSkip: Short, inputSampleRate: Int, outputGain: Short, channelMappingFamily: Byte, channelMapping: IdentificationHeader.ChannelMapping? = null)","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.OpusSpecificBox.OpusSpecificBox"]},{"name":"constructor(version: Byte, channelCount: Byte, preSkip: Short, inputSampleRate: Int, outputGain: Short, channelMappingFamily: Byte, channelMapping: IdentificationHeader.ChannelMapping?)","description":"io.github.thibaultbee.streampack.core.elements.utils.av.audio.opus.IdentificationHeader.IdentificationHeader","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.audio.opus/-identification-header/-identification-header.html","searchKeys":["IdentificationHeader","constructor(version: Byte, channelCount: Byte, preSkip: Short, inputSampleRate: Int, outputGain: Short, channelMappingFamily: Byte, channelMapping: IdentificationHeader.ChannelMapping?)","io.github.thibaultbee.streampack.core.elements.utils.av.audio.opus.IdentificationHeader.IdentificationHeader"]},{"name":"constructor(version: Byte, creationTime: Long = TimeUtils.utcNowIsom, modificationTime: Long = TimeUtils.utcNowIsom, timescale: Int, duration: Long, language: Short = 0)","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.MediaHeaderBox.MediaHeaderBox","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-media-header-box/-media-header-box.html","searchKeys":["MediaHeaderBox","constructor(version: Byte, creationTime: Long = TimeUtils.utcNowIsom, modificationTime: Long = TimeUtils.utcNowIsom, timescale: Int, duration: Long, language: Short = 0)","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.MediaHeaderBox.MediaHeaderBox"]},{"name":"constructor(version: Byte, creationTime: Long = TimeUtils.utcNowIsom, modificationTime: Long = TimeUtils.utcNowIsom, timescale: Int, duration: Long, rate: Float = 1.0f, volume: Float = 1.0f, transformationMatrix: IntArray = intArrayOf(\n        0x10000,\n        0,\n        0,\n        0,\n        0x10000,\n        0,\n        0,\n        0,\n        0x40000000\n    ), nextTrackId: Int)","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.MovieHeaderBox.MovieHeaderBox","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-movie-header-box/-movie-header-box.html","searchKeys":["MovieHeaderBox","constructor(version: Byte, creationTime: Long = TimeUtils.utcNowIsom, modificationTime: Long = TimeUtils.utcNowIsom, timescale: Int, duration: Long, rate: Float = 1.0f, volume: Float = 1.0f, transformationMatrix: IntArray = intArrayOf(\n        0x10000,\n        0,\n        0,\n        0,\n        0x10000,\n        0,\n        0,\n        0,\n        0x40000000\n    ), nextTrackId: Int)","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.MovieHeaderBox.MovieHeaderBox"]},{"name":"constructor(version: Byte, dataOffset: Int? = null, firstSampleFlags: SampleFlags? = null, entries: List<TrackRunBox.Entry> = emptyList())","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.TrackRunBox.TrackRunBox","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-track-run-box/-track-run-box.html","searchKeys":["TrackRunBox","constructor(version: Byte, dataOffset: Int? = null, firstSampleFlags: SampleFlags? = null, entries: List<TrackRunBox.Entry> = emptyList())","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.TrackRunBox.TrackRunBox"]},{"name":"constructor(version: Byte, flags: List<TrackHeaderBox.TrackFlag>, id: Int, creationTime: Long = TimeUtils.utcNowIsom, modificationTime: Long = TimeUtils.utcNowIsom, duration: Long, layer: Short = 0, alternateGroup: Short = 0, volume: Float = 1.0f, transformationMatrix: IntArray = intArrayOf(\n        0x10000,\n        0,\n        0,\n        0,\n        0x10000,\n        0,\n        0,\n        0,\n        0x40000000\n    ), resolution: Size)","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.TrackHeaderBox.TrackHeaderBox","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-track-header-box/-track-header-box.html","searchKeys":["TrackHeaderBox","constructor(version: Byte, flags: List<TrackHeaderBox.TrackFlag>, id: Int, creationTime: Long = TimeUtils.utcNowIsom, modificationTime: Long = TimeUtils.utcNowIsom, duration: Long, layer: Short = 0, alternateGroup: Short = 0, volume: Float = 1.0f, transformationMatrix: IntArray = intArrayOf(\n        0x10000,\n        0,\n        0,\n        0,\n        0x10000,\n        0,\n        0,\n        0,\n        0x40000000\n    ), resolution: Size)","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.TrackHeaderBox.TrackHeaderBox"]},{"name":"constructor(videoBitrateRange: Range<Int> = Range(500000, 10000000), audioBitrateRange: Range<Int> = Range(128000, 128000))","description":"io.github.thibaultbee.streampack.core.configuration.BitrateRegulatorConfig.BitrateRegulatorConfig","location":"streampack-core/io.github.thibaultbee.streampack.core.configuration/-bitrate-regulator-config/-bitrate-regulator-config.html","searchKeys":["BitrateRegulatorConfig","constructor(videoBitrateRange: Range<Int> = Range(500000, 10000000), audioBitrateRange: Range<Int> = Range(128000, 128000))","io.github.thibaultbee.streampack.core.configuration.BitrateRegulatorConfig.BitrateRegulatorConfig"]},{"name":"constructor(videoConfig: VideoCodecConfig, mode: EncoderMode = EncoderMode.SURFACE)","description":"io.github.thibaultbee.streampack.core.elements.encoders.mediacodec.VideoEncoderConfig.VideoEncoderConfig","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.encoders.mediacodec/-video-encoder-config/-video-encoder-config.html","searchKeys":["VideoEncoderConfig","constructor(videoConfig: VideoCodecConfig, mode: EncoderMode = EncoderMode.SURFACE)","io.github.thibaultbee.streampack.core.elements.encoders.mediacodec.VideoEncoderConfig.VideoEncoderConfig"]},{"name":"constructor(videoEndpointInfo: IEndpoint.IEndpointInfo.IVideoEndpointInfo)","description":"io.github.thibaultbee.streampack.core.streamers.infos.VideoCameraStreamerConfigurationInfo.VideoCameraStreamerConfigurationInfo","location":"streampack-core/io.github.thibaultbee.streampack.core.streamers.infos/-video-camera-streamer-configuration-info/-video-camera-streamer-configuration-info.html","searchKeys":["VideoCameraStreamerConfigurationInfo","constructor(videoEndpointInfo: IEndpoint.IEndpointInfo.IVideoEndpointInfo)","io.github.thibaultbee.streampack.core.streamers.infos.VideoCameraStreamerConfigurationInfo.VideoCameraStreamerConfigurationInfo"]},{"name":"constructor(videoEndpointInfo: IEndpoint.IEndpointInfo.IVideoEndpointInfo)","description":"io.github.thibaultbee.streampack.core.streamers.infos.VideoStreamerConfigurationInfo.VideoStreamerConfigurationInfo","location":"streampack-core/io.github.thibaultbee.streampack.core.streamers.infos/-video-streamer-configuration-info/-video-streamer-configuration-info.html","searchKeys":["VideoStreamerConfigurationInfo","constructor(videoEndpointInfo: IEndpoint.IEndpointInfo.IVideoEndpointInfo)","io.github.thibaultbee.streampack.core.streamers.infos.VideoStreamerConfigurationInfo.VideoStreamerConfigurationInfo"]},{"name":"constructor(videoParameterSetId: Byte, maxSubLayersMinus1: Byte, temporalIdNesting: Boolean, profileTierLevel: ProfileTierLevel, seqParameterSetId: Int, chromaFormat: ChromaFormat, picWidthInLumaSamples: Int, picHeightInLumaSamples: Int, bitDepthLumaMinus8: Byte, bitDepthChromaMinus8: Byte)","description":"io.github.thibaultbee.streampack.core.elements.utils.av.video.hevc.SequenceParameterSets.SequenceParameterSets","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.video.hevc/-sequence-parameter-sets/-sequence-parameter-sets.html","searchKeys":["SequenceParameterSets","constructor(videoParameterSetId: Byte, maxSubLayersMinus1: Byte, temporalIdNesting: Boolean, profileTierLevel: ProfileTierLevel, seqParameterSetId: Int, chromaFormat: ChromaFormat, picWidthInLumaSamples: Int, picHeightInLumaSamples: Int, bitDepthLumaMinus8: Byte, bitDepthChromaMinus8: Byte)","io.github.thibaultbee.streampack.core.elements.utils.av.video.hevc.SequenceParameterSets.SequenceParameterSets"]},{"name":"data class ADTS(val protectionAbsent: Boolean, val sampleRate: Int, val channelCount: Int, val payloadLength: Int) : ByteBufferWriter","description":"io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.ADTS","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac/-a-d-t-s/index.html","searchKeys":["ADTS","data class ADTS(val protectionAbsent: Boolean, val sampleRate: Int, val channelCount: Int, val payloadLength: Int) : ByteBufferWriter","io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.ADTS"]},{"name":"data class AVCDecoderConfigurationRecord(configurationVersion: Int = 1, profileIdc: Byte, profileCompatibility: Byte, levelIdc: Byte, chromaFormat: ChromaFormat = ChromaFormat.YUV420, sps: List<ByteBuffer>, pps: List<ByteBuffer>) : ByteBufferWriter","description":"io.github.thibaultbee.streampack.core.elements.utils.av.video.avc.AVCDecoderConfigurationRecord","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.video.avc/-a-v-c-decoder-configuration-record/index.html","searchKeys":["AVCDecoderConfigurationRecord","data class AVCDecoderConfigurationRecord(configurationVersion: Int = 1, profileIdc: Byte, profileCompatibility: Byte, levelIdc: Byte, chromaFormat: ChromaFormat = ChromaFormat.YUV420, sps: List<ByteBuffer>, pps: List<ByteBuffer>) : ByteBufferWriter","io.github.thibaultbee.streampack.core.elements.utils.av.video.avc.AVCDecoderConfigurationRecord"]},{"name":"data class AudioSourceConfig(val sampleRate: Int, val channelConfig: Int, val byteFormat: Int)","description":"io.github.thibaultbee.streampack.core.elements.sources.audio.AudioSourceConfig","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.audio/-audio-source-config/index.html","searchKeys":["AudioSourceConfig","data class AudioSourceConfig(val sampleRate: Int, val channelConfig: Int, val byteFormat: Int)","io.github.thibaultbee.streampack.core.elements.sources.audio.AudioSourceConfig"]},{"name":"data class AudioSpecificConfig(val audioObjectType: AudioObjectType, val sampleRate: Int, val channelConfiguration: ChannelConfiguration, val extension: AudioSpecificConfig.AudioSpecificConfigExtension? = null, val specificConfig: SpecificConfig? = null, val epConfig: Int? = null) : BitBufferWriter","description":"io.github.thibaultbee.streampack.core.elements.utils.av.audio.AudioSpecificConfig","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.audio/-audio-specific-config/index.html","searchKeys":["AudioSpecificConfig","data class AudioSpecificConfig(val audioObjectType: AudioObjectType, val sampleRate: Int, val channelConfiguration: ChannelConfiguration, val extension: AudioSpecificConfig.AudioSpecificConfigExtension? = null, val specificConfig: SpecificConfig? = null, val epConfig: Int? = null) : BitBufferWriter","io.github.thibaultbee.streampack.core.elements.utils.av.audio.AudioSpecificConfig"]},{"name":"data class AudioSpecificConfigExtension(val audioObjectType: AudioObjectType, val sampleRate: Int, val channelConfiguration: ChannelConfiguration?, val extensionAudioObjectType: AudioObjectType = AudioObjectType.SBR) : BitBufferWriter","description":"io.github.thibaultbee.streampack.core.elements.utils.av.audio.AudioSpecificConfig.AudioSpecificConfigExtension","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.audio/-audio-specific-config/-audio-specific-config-extension/index.html","searchKeys":["AudioSpecificConfigExtension","data class AudioSpecificConfigExtension(val audioObjectType: AudioObjectType, val sampleRate: Int, val channelConfiguration: ChannelConfiguration?, val extensionAudioObjectType: AudioObjectType = AudioObjectType.SBR) : BitBufferWriter","io.github.thibaultbee.streampack.core.elements.utils.av.audio.AudioSpecificConfig.AudioSpecificConfigExtension"]},{"name":"data class BitrateRegulatorConfig(val videoBitrateRange: Range<Int> = Range(500000, 10000000), val audioBitrateRange: Range<Int> = Range(128000, 128000))","description":"io.github.thibaultbee.streampack.core.configuration.BitrateRegulatorConfig","location":"streampack-core/io.github.thibaultbee.streampack.core.configuration/-bitrate-regulator-config/index.html","searchKeys":["BitrateRegulatorConfig","data class BitrateRegulatorConfig(val videoBitrateRange: Range<Int> = Range(500000, 10000000), val audioBitrateRange: Range<Int> = Range(128000, 128000))","io.github.thibaultbee.streampack.core.configuration.BitrateRegulatorConfig"]},{"name":"data class CameraDeviceController(val camera: CameraDevice) : Closeable","description":"io.github.thibaultbee.streampack.core.elements.sources.video.camera.controllers.CameraDeviceController","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.video.camera.controllers/-camera-device-controller/index.html","searchKeys":["CameraDeviceController","data class CameraDeviceController(val camera: CameraDevice) : Closeable","io.github.thibaultbee.streampack.core.elements.sources.video.camera.controllers.CameraDeviceController"]},{"name":"data class DualStreamerAudioCodecConfig(val mimeType: String = MediaFormat.MIMETYPE_AUDIO_AAC, val startBitrate: Int, val profile: Int = getDefaultProfile(mimeType))","description":"io.github.thibaultbee.streampack.core.streamers.dual.DualStreamerAudioCodecConfig","location":"streampack-core/io.github.thibaultbee.streampack.core.streamers.dual/-dual-streamer-audio-codec-config/index.html","searchKeys":["DualStreamerAudioCodecConfig","data class DualStreamerAudioCodecConfig(val mimeType: String = MediaFormat.MIMETYPE_AUDIO_AAC, val startBitrate: Int, val profile: Int = getDefaultProfile(mimeType))","io.github.thibaultbee.streampack.core.streamers.dual.DualStreamerAudioCodecConfig"]},{"name":"data class DualStreamerVideoCodecConfig(val mimeType: String = MediaFormat.MIMETYPE_VIDEO_AVC, val startBitrate: Int, val resolution: Size = Size(1280, 720), val profile: Int = getBestProfile(mimeType), val level: Int = getBestLevel(mimeType, profile), val gopDurationInS: Float = 1.0f)","description":"io.github.thibaultbee.streampack.core.streamers.dual.DualStreamerVideoCodecConfig","location":"streampack-core/io.github.thibaultbee.streampack.core.streamers.dual/-dual-streamer-video-codec-config/index.html","searchKeys":["DualStreamerVideoCodecConfig","data class DualStreamerVideoCodecConfig(val mimeType: String = MediaFormat.MIMETYPE_VIDEO_AVC, val startBitrate: Int, val resolution: Size = Size(1280, 720), val profile: Int = getBestProfile(mimeType), val level: Int = getBestLevel(mimeType, profile), val gopDurationInS: Float = 1.0f)","io.github.thibaultbee.streampack.core.streamers.dual.DualStreamerVideoCodecConfig"]},{"name":"data class DynamicRangeProfile(val dynamicRange: Long, val transferFunction: Int)","description":"io.github.thibaultbee.streampack.core.elements.utils.av.video.DynamicRangeProfile","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.video/-dynamic-range-profile/index.html","searchKeys":["DynamicRangeProfile","data class DynamicRangeProfile(val dynamicRange: Long, val transferFunction: Int)","io.github.thibaultbee.streampack.core.elements.utils.av.video.DynamicRangeProfile"]},{"name":"data class ELDSpecificConfig(val channelConfiguration: ChannelConfiguration, val frameLengthFlag: Boolean, val aacSectionDataResilienceFlag: Boolean, val aacScaleFactorDataResilienceFlag: Boolean, val aacSpectralDataResilienceFlag: Boolean, val lbSbrPresentFlag: Boolean, val lbSbrSamplingRate: Boolean? = null, val lbSbrCrcFlag: Boolean? = null, val lbSbrHeader: ELDSpecificConfig.LdSbrHeader? = null) : SpecificConfig","description":"io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.config.ELDSpecificConfig","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.config/-e-l-d-specific-config/index.html","searchKeys":["ELDSpecificConfig","data class ELDSpecificConfig(val channelConfiguration: ChannelConfiguration, val frameLengthFlag: Boolean, val aacSectionDataResilienceFlag: Boolean, val aacScaleFactorDataResilienceFlag: Boolean, val aacSpectralDataResilienceFlag: Boolean, val lbSbrPresentFlag: Boolean, val lbSbrSamplingRate: Boolean? = null, val lbSbrCrcFlag: Boolean? = null, val lbSbrHeader: ELDSpecificConfig.LdSbrHeader? = null) : SpecificConfig","io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.config.ELDSpecificConfig"]},{"name":"data class Entry(count: Int, val delta: Int) : ByteBufferWriter","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.TimeToSampleBox.Entry","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-time-to-sample-box/-entry/index.html","searchKeys":["Entry","data class Entry(count: Int, val delta: Int) : ByteBufferWriter","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.TimeToSampleBox.Entry"]},{"name":"data class Entry(val time: Number, val moofOffset: Number, trafNumber: Byte = 1, trunNumber: Byte = 1, sampleNumber: Byte = 1) : ByteBufferWriter","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.TrackFragmentRandomAccessBox.Entry","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-track-fragment-random-access-box/-entry/index.html","searchKeys":["Entry","data class Entry(val time: Number, val moofOffset: Number, trafNumber: Byte = 1, trunNumber: Byte = 1, sampleNumber: Byte = 1) : ByteBufferWriter","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.TrackFragmentRandomAccessBox.Entry"]},{"name":"data class FourCC(val a: Char, val b: Char, val c: Char, val d: Char, val mimeType: String?)","description":"io.github.thibaultbee.streampack.core.elements.utils.av.FourCC","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av/-four-c-c/index.html","searchKeys":["FourCC","data class FourCC(val a: Char, val b: Char, val c: Char, val d: Char, val mimeType: String?)","io.github.thibaultbee.streampack.core.elements.utils.av.FourCC"]},{"name":"data class Frame(val rawBuffer: ByteBuffer, var ptsInUs: Long, var dtsInUs: Long? = null, val isKeyFrame: Boolean = false, val format: MediaFormat, val onClosed: (ICloseableFrame) -> Unit = {}) : ICloseableFrame","description":"io.github.thibaultbee.streampack.core.elements.data.Frame","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.data/-frame/index.html","searchKeys":["Frame","data class Frame(val rawBuffer: ByteBuffer, var ptsInUs: Long, var dtsInUs: Long? = null, val isKeyFrame: Boolean = false, val format: MediaFormat, val onClosed: (ICloseableFrame) -> Unit = {}) : ICloseableFrame","io.github.thibaultbee.streampack.core.elements.data.Frame"]},{"name":"data class GASpecificConfig(val audioObjectType: AudioObjectType, val channelConfiguration: ChannelConfiguration, val frameLengthFlag: Boolean, val dependsOnCoreCoder: Boolean, val extensionFlag: Boolean, val coreCoderDelay: Short? = null, val programConfigElement: ProgramConfigElement? = null, val layerNr: Byte? = null, val numOfSubFrame: Short? = null, val layerLength: Short? = null, val aacSectionDataResilienceFlag: Boolean? = null, val aacScaleFactorDataResilienceFlag: Boolean? = null, val aacSpectralDataResilienceFlag: Boolean? = null, val extensionFlag3: Boolean? = null) : SpecificConfig","description":"io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.config.GASpecificConfig","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.config/-g-a-specific-config/index.html","searchKeys":["GASpecificConfig","data class GASpecificConfig(val audioObjectType: AudioObjectType, val channelConfiguration: ChannelConfiguration, val frameLengthFlag: Boolean, val dependsOnCoreCoder: Boolean, val extensionFlag: Boolean, val coreCoderDelay: Short? = null, val programConfigElement: ProgramConfigElement? = null, val layerNr: Byte? = null, val numOfSubFrame: Short? = null, val layerLength: Short? = null, val aacSectionDataResilienceFlag: Boolean? = null, val aacScaleFactorDataResilienceFlag: Boolean? = null, val aacSpectralDataResilienceFlag: Boolean? = null, val extensionFlag3: Boolean? = null) : SpecificConfig","io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.config.GASpecificConfig"]},{"name":"data class HEVCDecoderConfigurationRecord(configurationVersion: Int = 1, generalProfileSpace: Byte, generalTierFlag: Boolean, generalProfileIdc: HEVCProfile, generalProfileCompatibilityFlags: Int, generalConstraintIndicatorFlags: Long, generalLevelIdc: Byte, minSpatialSegmentationIdc: Int = 0, parallelismType: Byte = 0, chromaFormat: ChromaFormat = ChromaFormat.YUV420, bitDepthLumaMinus8: Byte = 0, bitDepthChromaMinus8: Byte = 0, averageFrameRate: Short = 0, constantFrameRate: Byte = 0, numTemporalLayers: Byte = 0, temporalIdNested: Boolean = false, lengthSizeMinusOne: Byte = 3, parameterSets: List<HEVCDecoderConfigurationRecord.NalUnit>) : ByteBufferWriter","description":"io.github.thibaultbee.streampack.core.elements.utils.av.video.hevc.HEVCDecoderConfigurationRecord","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.video.hevc/-h-e-v-c-decoder-configuration-record/index.html","searchKeys":["HEVCDecoderConfigurationRecord","data class HEVCDecoderConfigurationRecord(configurationVersion: Int = 1, generalProfileSpace: Byte, generalTierFlag: Boolean, generalProfileIdc: HEVCProfile, generalProfileCompatibilityFlags: Int, generalConstraintIndicatorFlags: Long, generalLevelIdc: Byte, minSpatialSegmentationIdc: Int = 0, parallelismType: Byte = 0, chromaFormat: ChromaFormat = ChromaFormat.YUV420, bitDepthLumaMinus8: Byte = 0, bitDepthChromaMinus8: Byte = 0, averageFrameRate: Short = 0, constantFrameRate: Byte = 0, numTemporalLayers: Byte = 0, temporalIdNested: Boolean = false, lengthSizeMinusOne: Byte = 3, parameterSets: List<HEVCDecoderConfigurationRecord.NalUnit>) : ByteBufferWriter","io.github.thibaultbee.streampack.core.elements.utils.av.video.hevc.HEVCDecoderConfigurationRecord"]},{"name":"data class History<T>(val previous: T?, val current: T)","description":"io.github.thibaultbee.streampack.core.elements.utils.extensions.History","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.extensions/-history/index.html","searchKeys":["History","data class History<T>(val previous: T?, val current: T)","io.github.thibaultbee.streampack.core.elements.utils.extensions.History"]},{"name":"data class NalUnit(val type: HEVCDecoderConfigurationRecord.NalUnit.Type, val data: ByteBuffer, val completeness: Boolean = true)","description":"io.github.thibaultbee.streampack.core.elements.utils.av.video.hevc.HEVCDecoderConfigurationRecord.NalUnit","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.video.hevc/-h-e-v-c-decoder-configuration-record/-nal-unit/index.html","searchKeys":["NalUnit","data class NalUnit(val type: HEVCDecoderConfigurationRecord.NalUnit.Type, val data: ByteBuffer, val completeness: Boolean = true)","io.github.thibaultbee.streampack.core.elements.utils.av.video.hevc.HEVCDecoderConfigurationRecord.NalUnit"]},{"name":"data class OpusControlHeader(prefix: Short = 1023, payloadSize: Int, startTrim: Short? = null, endTrim: Short? = null) : ByteBufferWriter","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.utils.av.OpusControlHeader","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.utils.av/-opus-control-header/index.html","searchKeys":["OpusControlHeader","data class OpusControlHeader(prefix: Short = 1023, payloadSize: Int, startTrim: Short? = null, endTrim: Short? = null) : ByteBufferWriter","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.utils.av.OpusControlHeader"]},{"name":"data class OutputSurface(val eglSurface: EGLSurface, val viewPortRect: Rect)","description":"io.github.thibaultbee.streampack.core.elements.processing.video.utils.OutputSurface","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.processing.video.utils/-output-surface/index.html","searchKeys":["OutputSurface","data class OutputSurface(val eglSurface: EGLSurface, val viewPortRect: Rect)","io.github.thibaultbee.streampack.core.elements.processing.video.utils.OutputSurface"]},{"name":"data class ProfileTierLevel(val generalProfileSpace: Byte, val generalTierFlag: Boolean, val generalProfileIdc: HEVCProfile, val generalProfileCompatibilityFlags: Int, val generalConstraintIndicatorFlags: Long, val generalLevelIdc: Byte)","description":"io.github.thibaultbee.streampack.core.elements.utils.av.video.hevc.ProfileTierLevel","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.video.hevc/-profile-tier-level/index.html","searchKeys":["ProfileTierLevel","data class ProfileTierLevel(val generalProfileSpace: Byte, val generalTierFlag: Boolean, val generalProfileIdc: HEVCProfile, val generalProfileCompatibilityFlags: Int, val generalConstraintIndicatorFlags: Long, val generalLevelIdc: Byte)","io.github.thibaultbee.streampack.core.elements.utils.av.video.hevc.ProfileTierLevel"]},{"name":"data class RawFrame(val rawBuffer: ByteBuffer, var timestampInUs: Long, val onClosed: (ICloseableFrame) -> Unit = {}) : ICloseableFrame","description":"io.github.thibaultbee.streampack.core.elements.data.RawFrame","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.data/-raw-frame/index.html","searchKeys":["RawFrame","data class RawFrame(val rawBuffer: ByteBuffer, var timestampInUs: Long, val onClosed: (ICloseableFrame) -> Unit = {}) : ICloseableFrame","io.github.thibaultbee.streampack.core.elements.data.RawFrame"]},{"name":"data class SampleFlags(val isLeading: IsLeading = IsLeading.UNKNOWN, val dependsOn: SampleDependsOn = SampleDependsOn.UNKNOWN, val isDependedOn: SampleIsDependedOn = SampleIsDependedOn.UNKNOWN, val hasRedundancy: HasRedundancy = HasRedundancy.UNKNOWN, val paddingValue: Byte = 0, val isNonSyncSample: Boolean, val degradationPriority: Short = 0)","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models.SampleFlags","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models/-sample-flags/index.html","searchKeys":["SampleFlags","data class SampleFlags(val isLeading: IsLeading = IsLeading.UNKNOWN, val dependsOn: SampleDependsOn = SampleDependsOn.UNKNOWN, val isDependedOn: SampleIsDependedOn = SampleIsDependedOn.UNKNOWN, val hasRedundancy: HasRedundancy = HasRedundancy.UNKNOWN, val paddingValue: Byte = 0, val isNonSyncSample: Boolean, val degradationPriority: Short = 0)","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models.SampleFlags"]},{"name":"data class SbrHeader(val bsAmpRes: Boolean, val bsStartFreq: Byte, val bsStopFreq: Byte, val bsXoverBand: Byte, val bsHeaderExtra1: Boolean, val bsHeaderExtra2: Boolean, val bsFreqScale: Byte? = null, val bsAlterScale: Boolean? = null, val bsNoiseBands: Byte? = null, val bsLimiterBands: Byte? = null, val bsLimiterGains: Byte? = null, val bsInterpolFreq: Boolean? = null, val bsSmoothingMode: Boolean? = null) : BitBufferWriter","description":"io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.config.SbrHeader","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.config/-sbr-header/index.html","searchKeys":["SbrHeader","data class SbrHeader(val bsAmpRes: Boolean, val bsStartFreq: Byte, val bsStopFreq: Byte, val bsXoverBand: Byte, val bsHeaderExtra1: Boolean, val bsHeaderExtra2: Boolean, val bsFreqScale: Byte? = null, val bsAlterScale: Boolean? = null, val bsNoiseBands: Byte? = null, val bsLimiterBands: Byte? = null, val bsLimiterGains: Byte? = null, val bsInterpolFreq: Boolean? = null, val bsSmoothingMode: Boolean? = null) : BitBufferWriter","io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.config.SbrHeader"]},{"name":"data class SequenceParameterSets(val videoParameterSetId: Byte, val maxSubLayersMinus1: Byte, val temporalIdNesting: Boolean, val profileTierLevel: ProfileTierLevel, val seqParameterSetId: Int, val chromaFormat: ChromaFormat, val picWidthInLumaSamples: Int, val picHeightInLumaSamples: Int, val bitDepthLumaMinus8: Byte, val bitDepthChromaMinus8: Byte)","description":"io.github.thibaultbee.streampack.core.elements.utils.av.video.hevc.SequenceParameterSets","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.video.hevc/-sequence-parameter-sets/index.html","searchKeys":["SequenceParameterSets","data class SequenceParameterSets(val videoParameterSetId: Byte, val maxSubLayersMinus1: Byte, val temporalIdNesting: Boolean, val profileTierLevel: ProfileTierLevel, val seqParameterSetId: Int, val chromaFormat: ChromaFormat, val picWidthInLumaSamples: Int, val picHeightInLumaSamples: Int, val bitDepthLumaMinus8: Byte, val bitDepthChromaMinus8: Byte)","io.github.thibaultbee.streampack.core.elements.utils.av.video.hevc.SequenceParameterSets"]},{"name":"data class SinkConfiguration(val streamConfigs: List<CodecConfig>)","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.sinks.SinkConfiguration","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.sinks/-sink-configuration/index.html","searchKeys":["SinkConfiguration","data class SinkConfiguration(val streamConfigs: List<CodecConfig>)","io.github.thibaultbee.streampack.core.elements.endpoints.composites.sinks.SinkConfiguration"]},{"name":"data class Stream(val config: CodecConfig, val pid: Short, val discontinuity: Boolean = false)","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.data.Stream","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.data/-stream/index.html","searchKeys":["Stream","data class Stream(val config: CodecConfig, val pid: Short, val discontinuity: Boolean = false)","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.data.Stream"]},{"name":"data class SurfaceDescriptor(val surface: Surface, val resolution: Size, val targetRotation: Int = 0, val isEncoderInputSurface: Boolean = false)","description":"io.github.thibaultbee.streampack.core.pipelines.outputs.SurfaceDescriptor","location":"streampack-core/io.github.thibaultbee.streampack.core.pipelines.outputs/-surface-descriptor/index.html","searchKeys":["SurfaceDescriptor","data class SurfaceDescriptor(val surface: Surface, val resolution: Size, val targetRotation: Int = 0, val isEncoderInputSurface: Boolean = false)","io.github.thibaultbee.streampack.core.pipelines.outputs.SurfaceDescriptor"]},{"name":"data class TSServiceInfo(val type: TSServiceInfo.ServiceType, val id: Short, val name: String, val providerName: String)","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.data.TSServiceInfo","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.data/-t-s-service-info/index.html","searchKeys":["TSServiceInfo","data class TSServiceInfo(val type: TSServiceInfo.ServiceType, val id: Short, val name: String, val providerName: String)","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.data.TSServiceInfo"]},{"name":"data class TransformationInfo(val aspectRatioMode: AspectRatioMode, val targetRotation: Int, val cropRect: Rect, val needMirroring: Boolean, val infoProvider: ISourceInfoProvider)","description":"io.github.thibaultbee.streampack.core.elements.processing.video.outputs.SurfaceOutput.TransformationInfo","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.processing.video.outputs/-surface-output/-transformation-info/index.html","searchKeys":["TransformationInfo","data class TransformationInfo(val aspectRatioMode: AspectRatioMode, val targetRotation: Int, val cropRect: Rect, val needMirroring: Boolean, val infoProvider: ISourceInfoProvider)","io.github.thibaultbee.streampack.core.elements.processing.video.outputs.SurfaceOutput.TransformationInfo"]},{"name":"data class Type(val containerType: MediaContainerType, val sinkType: MediaSinkType)","description":"io.github.thibaultbee.streampack.core.configuration.mediadescriptor.MediaDescriptor.Type","location":"streampack-core/io.github.thibaultbee.streampack.core.configuration.mediadescriptor/-media-descriptor/-type/index.html","searchKeys":["Type","data class Type(val containerType: MediaContainerType, val sinkType: MediaSinkType)","io.github.thibaultbee.streampack.core.configuration.mediadescriptor.MediaDescriptor.Type"]},{"name":"data class VP9CodecPrivate(val features: List<VP9CodecPrivate.CodecFeature>)","description":"io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.VP9CodecPrivate","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx/-v-p9-codec-private/index.html","searchKeys":["VP9CodecPrivate","data class VP9CodecPrivate(val features: List<VP9CodecPrivate.CodecFeature>)","io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.VP9CodecPrivate"]},{"name":"data class VPCodecConfigurationRecord(profile: Profile, level: Level, bitDepth: Byte, chromaSubsampling: ChromaSubsampling, videoFullRangeFlag: Boolean, colorPrimaries: ColorPrimaries, transferCharacteristics: TransferCharacteristics, matrixCoefficients: MatrixCoefficients, codecInitializationData: ByteBuffer? = null) : ByteBufferWriter","description":"io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.VPCodecConfigurationRecord","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx/-v-p-codec-configuration-record/index.html","searchKeys":["VPCodecConfigurationRecord","data class VPCodecConfigurationRecord(profile: Profile, level: Level, bitDepth: Byte, chromaSubsampling: ChromaSubsampling, videoFullRangeFlag: Boolean, colorPrimaries: ColorPrimaries, transferCharacteristics: TransferCharacteristics, matrixCoefficients: MatrixCoefficients, codecInitializationData: ByteBuffer? = null) : ByteBufferWriter","io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.VPCodecConfigurationRecord"]},{"name":"data class VideoSourceConfig(val resolution: Size = DEFAULT_RESOLUTION, val fps: Int = DEFAULT_FPS, val dynamicRangeProfile: DynamicRangeProfile = DynamicRangeProfile.sdr)","description":"io.github.thibaultbee.streampack.core.elements.sources.video.VideoSourceConfig","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.video/-video-source-config/index.html","searchKeys":["VideoSourceConfig","data class VideoSourceConfig(val resolution: Size = DEFAULT_RESOLUTION, val fps: Int = DEFAULT_FPS, val dynamicRangeProfile: DynamicRangeProfile = DynamicRangeProfile.sdr)","io.github.thibaultbee.streampack.core.elements.sources.video.VideoSourceConfig"]},{"name":"enum AACPacketType : Enum<AACPacketType> ","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.AACPacketType","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags/-a-a-c-packet-type/index.html","searchKeys":["AACPacketType","enum AACPacketType : Enum<AACPacketType> ","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.AACPacketType"]},{"name":"enum AVCPacketType : Enum<AVCPacketType> ","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.video.AVCPacketType","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.video/-a-v-c-packet-type/index.html","searchKeys":["AVCPacketType","enum AVCPacketType : Enum<AVCPacketType> ","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.video.AVCPacketType"]},{"name":"enum AmfType : Enum<AmfType> ","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.amf.AmfType","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.amf/-amf-type/index.html","searchKeys":["AmfType","enum AmfType : Enum<AmfType> ","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.amf.AmfType"]},{"name":"enum AspectRatioMode : Enum<AspectRatioMode> ","description":"io.github.thibaultbee.streampack.core.elements.processing.video.outputs.AspectRatioMode","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.processing.video.outputs/-aspect-ratio-mode/index.html","searchKeys":["AspectRatioMode","enum AspectRatioMode : Enum<AspectRatioMode> ","io.github.thibaultbee.streampack.core.elements.processing.video.outputs.AspectRatioMode"]},{"name":"enum AudioObjectType : Enum<AudioObjectType> ","description":"io.github.thibaultbee.streampack.core.elements.utils.av.audio.AudioObjectType","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.audio/-audio-object-type/index.html","searchKeys":["AudioObjectType","enum AudioObjectType : Enum<AudioObjectType> ","io.github.thibaultbee.streampack.core.elements.utils.av.audio.AudioObjectType"]},{"name":"enum AudioOutputMode : Enum<StreamerPipeline.AudioOutputMode> ","description":"io.github.thibaultbee.streampack.core.pipelines.StreamerPipeline.AudioOutputMode","location":"streampack-core/io.github.thibaultbee.streampack.core.pipelines/-streamer-pipeline/-audio-output-mode/index.html","searchKeys":["AudioOutputMode","enum AudioOutputMode : Enum<StreamerPipeline.AudioOutputMode> ","io.github.thibaultbee.streampack.core.pipelines.StreamerPipeline.AudioOutputMode"]},{"name":"enum ChannelConfiguration : Enum<ChannelConfiguration> ","description":"io.github.thibaultbee.streampack.core.elements.utils.av.audio.ChannelConfiguration","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.audio/-channel-configuration/index.html","searchKeys":["ChannelConfiguration","enum ChannelConfiguration : Enum<ChannelConfiguration> ","io.github.thibaultbee.streampack.core.elements.utils.av.audio.ChannelConfiguration"]},{"name":"enum ChromaFormat : Enum<ChromaFormat> ","description":"io.github.thibaultbee.streampack.core.elements.utils.av.video.ChromaFormat","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.video/-chroma-format/index.html","searchKeys":["ChromaFormat","enum ChromaFormat : Enum<ChromaFormat> ","io.github.thibaultbee.streampack.core.elements.utils.av.video.ChromaFormat"]},{"name":"enum ChromaSubsampling : Enum<ChromaSubsampling> ","description":"io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.ChromaSubsampling","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx/-chroma-subsampling/index.html","searchKeys":["ChromaSubsampling","enum ChromaSubsampling : Enum<ChromaSubsampling> ","io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.ChromaSubsampling"]},{"name":"enum CodecID : Enum<CodecID> ","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.video.CodecID","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.video/-codec-i-d/index.html","searchKeys":["CodecID","enum CodecID : Enum<CodecID> ","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.video.CodecID"]},{"name":"enum ColorPrimaries : Enum<ColorPrimaries> ","description":"io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.ColorPrimaries","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx/-color-primaries/index.html","searchKeys":["ColorPrimaries","enum ColorPrimaries : Enum<ColorPrimaries> ","io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.ColorPrimaries"]},{"name":"enum Descriptor : Enum<Pmt.Descriptor> ","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets.Pmt.Descriptor","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets/-pmt/-descriptor/index.html","searchKeys":["Descriptor","enum Descriptor : Enum<Pmt.Descriptor> ","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets.Pmt.Descriptor"]},{"name":"enum EncoderMode : Enum<EncoderMode> ","description":"io.github.thibaultbee.streampack.core.elements.encoders.EncoderMode","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.encoders/-encoder-mode/index.html","searchKeys":["EncoderMode","enum EncoderMode : Enum<EncoderMode> ","io.github.thibaultbee.streampack.core.elements.encoders.EncoderMode"]},{"name":"enum FourCCs : Enum<FourCCs> ","description":"io.github.thibaultbee.streampack.core.elements.utils.av.FourCCs","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av/-four-c-cs/index.html","searchKeys":["FourCCs","enum FourCCs : Enum<FourCCs> ","io.github.thibaultbee.streampack.core.elements.utils.av.FourCCs"]},{"name":"enum FrameType : Enum<FrameType> ","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.video.FrameType","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.video/-frame-type/index.html","searchKeys":["FrameType","enum FrameType : Enum<FrameType> ","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.video.FrameType"]},{"name":"enum HEVCProfile : Enum<HEVCProfile> ","description":"io.github.thibaultbee.streampack.core.elements.utils.av.video.hevc.HEVCProfile","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.video.hevc/-h-e-v-c-profile/index.html","searchKeys":["HEVCProfile","enum HEVCProfile : Enum<HEVCProfile> ","io.github.thibaultbee.streampack.core.elements.utils.av.video.hevc.HEVCProfile"]},{"name":"enum HandlerType : Enum<HandlerBox.HandlerType> ","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.HandlerBox.HandlerType","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-handler-box/-handler-type/index.html","searchKeys":["HandlerType","enum HandlerType : Enum<HandlerBox.HandlerType> ","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.HandlerBox.HandlerType"]},{"name":"enum HasRedundancy : Enum<HasRedundancy> ","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models.HasRedundancy","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models/-has-redundancy/index.html","searchKeys":["HasRedundancy","enum HasRedundancy : Enum<HasRedundancy> ","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models.HasRedundancy"]},{"name":"enum Ids : Enum<VP9CodecPrivate.CodecFeature.Ids> ","description":"io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.VP9CodecPrivate.CodecFeature.Ids","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx/-v-p9-codec-private/-codec-feature/-ids/index.html","searchKeys":["Ids","enum Ids : Enum<VP9CodecPrivate.CodecFeature.Ids> ","io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.VP9CodecPrivate.CodecFeature.Ids"]},{"name":"enum InputFormat : Enum<GLUtils.InputFormat> ","description":"io.github.thibaultbee.streampack.core.elements.processing.video.utils.GLUtils.InputFormat","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.processing.video.utils/-g-l-utils/-input-format/index.html","searchKeys":["InputFormat","enum InputFormat : Enum<GLUtils.InputFormat> ","io.github.thibaultbee.streampack.core.elements.processing.video.utils.GLUtils.InputFormat"]},{"name":"enum IsLeading : Enum<IsLeading> ","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models.IsLeading","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models/-is-leading/index.html","searchKeys":["IsLeading","enum IsLeading : Enum<IsLeading> ","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models.IsLeading"]},{"name":"enum Level : Enum<Level> ","description":"io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.Level","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx/-level/index.html","searchKeys":["Level","enum Level : Enum<Level> ","io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.Level"]},{"name":"enum MatrixCoefficients : Enum<MatrixCoefficients> ","description":"io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.MatrixCoefficients","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx/-matrix-coefficients/index.html","searchKeys":["MatrixCoefficients","enum MatrixCoefficients : Enum<MatrixCoefficients> ","io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.MatrixCoefficients"]},{"name":"enum MediaContainerType : Enum<MediaContainerType> ","description":"io.github.thibaultbee.streampack.core.elements.endpoints.MediaContainerType","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints/-media-container-type/index.html","searchKeys":["MediaContainerType","enum MediaContainerType : Enum<MediaContainerType> ","io.github.thibaultbee.streampack.core.elements.endpoints.MediaContainerType"]},{"name":"enum MediaSinkType : Enum<MediaSinkType> ","description":"io.github.thibaultbee.streampack.core.elements.endpoints.MediaSinkType","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints/-media-sink-type/index.html","searchKeys":["MediaSinkType","enum MediaSinkType : Enum<MediaSinkType> ","io.github.thibaultbee.streampack.core.elements.endpoints.MediaSinkType"]},{"name":"enum ObjectTypeIndication : Enum<ObjectTypeIndication> ","description":"io.github.thibaultbee.streampack.core.elements.utils.av.descriptors.ObjectTypeIndication","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.descriptors/-object-type-indication/index.html","searchKeys":["ObjectTypeIndication","enum ObjectTypeIndication : Enum<ObjectTypeIndication> ","io.github.thibaultbee.streampack.core.elements.utils.av.descriptors.ObjectTypeIndication"]},{"name":"enum PacketType : Enum<PacketType> ","description":"io.github.thibaultbee.streampack.core.elements.data.PacketType","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.data/-packet-type/index.html","searchKeys":["PacketType","enum PacketType : Enum<PacketType> ","io.github.thibaultbee.streampack.core.elements.data.PacketType"]},{"name":"enum PacketType : Enum<PacketType> ","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.video.PacketType","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.video/-packet-type/index.html","searchKeys":["PacketType","enum PacketType : Enum<PacketType> ","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.video.PacketType"]},{"name":"enum Profile : Enum<Profile> ","description":"io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.Profile","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx/-profile/index.html","searchKeys":["Profile","enum Profile : Enum<Profile> ","io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.Profile"]},{"name":"enum SampleDependsOn : Enum<SampleDependsOn> ","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models.SampleDependsOn","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models/-sample-depends-on/index.html","searchKeys":["SampleDependsOn","enum SampleDependsOn : Enum<SampleDependsOn> ","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models.SampleDependsOn"]},{"name":"enum SampleIsDependedOn : Enum<SampleIsDependedOn> ","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models.SampleIsDependedOn","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models/-sample-is-depended-on/index.html","searchKeys":["SampleIsDependedOn","enum SampleIsDependedOn : Enum<SampleIsDependedOn> ","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models.SampleIsDependedOn"]},{"name":"enum SamplingFrequencyIndex : Enum<SamplingFrequencyIndex> ","description":"io.github.thibaultbee.streampack.core.elements.utils.av.audio.SamplingFrequencyIndex","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.audio/-sampling-frequency-index/index.html","searchKeys":["SamplingFrequencyIndex","enum SamplingFrequencyIndex : Enum<SamplingFrequencyIndex> ","io.github.thibaultbee.streampack.core.elements.utils.av.audio.SamplingFrequencyIndex"]},{"name":"enum ServiceType : Enum<TSServiceInfo.ServiceType> ","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.data.TSServiceInfo.ServiceType","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.data/-t-s-service-info/-service-type/index.html","searchKeys":["ServiceType","enum ServiceType : Enum<TSServiceInfo.ServiceType> ","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.data.TSServiceInfo.ServiceType"]},{"name":"enum SoundFormat : Enum<SoundFormat> ","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.SoundFormat","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags/-sound-format/index.html","searchKeys":["SoundFormat","enum SoundFormat : Enum<SoundFormat> ","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.SoundFormat"]},{"name":"enum SoundRate : Enum<SoundRate> ","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.SoundRate","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags/-sound-rate/index.html","searchKeys":["SoundRate","enum SoundRate : Enum<SoundRate> ","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.SoundRate"]},{"name":"enum SoundSize : Enum<SoundSize> ","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.SoundSize","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags/-sound-size/index.html","searchKeys":["SoundSize","enum SoundSize : Enum<SoundSize> ","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.SoundSize"]},{"name":"enum SoundType : Enum<SoundType> ","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.SoundType","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags/-sound-type/index.html","searchKeys":["SoundType","enum SoundType : Enum<SoundType> ","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.SoundType"]},{"name":"enum StreamId : Enum<Pes.StreamId> ","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets.Pes.StreamId","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets/-pes/-stream-id/index.html","searchKeys":["StreamId","enum StreamId : Enum<Pes.StreamId> ","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets.Pes.StreamId"]},{"name":"enum StreamType : Enum<Pmt.StreamType> ","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets.Pmt.StreamType","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets/-pmt/-stream-type/index.html","searchKeys":["StreamType","enum StreamType : Enum<Pmt.StreamType> ","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets.Pmt.StreamType"]},{"name":"enum StreamType : Enum<StreamType> ","description":"io.github.thibaultbee.streampack.core.elements.utils.av.descriptors.StreamType","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.descriptors/-stream-type/index.html","searchKeys":["StreamType","enum StreamType : Enum<StreamType> ","io.github.thibaultbee.streampack.core.elements.utils.av.descriptors.StreamType"]},{"name":"enum TagType : Enum<TagType> ","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.TagType","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags/-tag-type/index.html","searchKeys":["TagType","enum TagType : Enum<TagType> ","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.TagType"]},{"name":"enum Tags : Enum<Tags> ","description":"io.github.thibaultbee.streampack.core.elements.utils.av.descriptors.Tags","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.descriptors/-tags/index.html","searchKeys":["Tags","enum Tags : Enum<Tags> ","io.github.thibaultbee.streampack.core.elements.utils.av.descriptors.Tags"]},{"name":"enum TrackFlag : Enum<TrackHeaderBox.TrackFlag> ","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.TrackHeaderBox.TrackFlag","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-track-header-box/-track-flag/index.html","searchKeys":["TrackFlag","enum TrackFlag : Enum<TrackHeaderBox.TrackFlag> ","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.TrackHeaderBox.TrackFlag"]},{"name":"enum TrackFragmentFlag : Enum<TrackFragmentHeaderBox.TrackFragmentFlag> ","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.TrackFragmentHeaderBox.TrackFragmentFlag","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-track-fragment-header-box/-track-fragment-flag/index.html","searchKeys":["TrackFragmentFlag","enum TrackFragmentFlag : Enum<TrackFragmentHeaderBox.TrackFragmentFlag> ","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.TrackFragmentHeaderBox.TrackFragmentFlag"]},{"name":"enum TrackRunFlag : Enum<TrackRunBox.TrackRunFlag> ","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.TrackRunBox.TrackRunFlag","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-track-run-box/-track-run-flag/index.html","searchKeys":["TrackRunFlag","enum TrackRunFlag : Enum<TrackRunBox.TrackRunFlag> ","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.TrackRunBox.TrackRunFlag"]},{"name":"enum TransferCharacteristics : Enum<TransferCharacteristics> ","description":"io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.TransferCharacteristics","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx/-transfer-characteristics/index.html","searchKeys":["TransferCharacteristics","enum TransferCharacteristics : Enum<TransferCharacteristics> ","io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.TransferCharacteristics"]},{"name":"enum Type : Enum<HEVCDecoderConfigurationRecord.NalUnit.Type> ","description":"io.github.thibaultbee.streampack.core.elements.utils.av.video.hevc.HEVCDecoderConfigurationRecord.NalUnit.Type","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.video.hevc/-h-e-v-c-decoder-configuration-record/-nal-unit/-type/index.html","searchKeys":["Type","enum Type : Enum<HEVCDecoderConfigurationRecord.NalUnit.Type> ","io.github.thibaultbee.streampack.core.elements.utils.av.video.hevc.HEVCDecoderConfigurationRecord.NalUnit.Type"]},{"name":"fun <T : Any> CameraManager.getCameraOutputSizes(klass: Class<T>, cameraId: String): List<Size>","description":"io.github.thibaultbee.streampack.core.elements.sources.video.camera.extensions.getCameraOutputSizes","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.video.camera.extensions/get-camera-output-sizes.html","searchKeys":["getCameraOutputSizes","fun <T : Any> CameraManager.getCameraOutputSizes(klass: Class<T>, cameraId: String): List<Size>","io.github.thibaultbee.streampack.core.elements.sources.video.camera.extensions.getCameraOutputSizes"]},{"name":"fun <T : Any> Context.getCameraOutputSizes(klass: Class<T>, cameraId: String): List<Size>","description":"io.github.thibaultbee.streampack.core.elements.sources.video.camera.extensions.getCameraOutputSizes","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.video.camera.extensions/get-camera-output-sizes.html","searchKeys":["getCameraOutputSizes","fun <T : Any> Context.getCameraOutputSizes(klass: Class<T>, cameraId: String): List<Size>","io.github.thibaultbee.streampack.core.elements.sources.video.camera.extensions.getCameraOutputSizes"]},{"name":"fun <T : IPipelineOutput> addOutput(output: T): T","description":"io.github.thibaultbee.streampack.core.pipelines.StreamerPipeline.addOutput","location":"streampack-core/io.github.thibaultbee.streampack.core.pipelines/-streamer-pipeline/add-output.html","searchKeys":["addOutput","fun <T : IPipelineOutput> addOutput(output: T): T","io.github.thibaultbee.streampack.core.pipelines.StreamerPipeline.addOutput"]},{"name":"fun <T1, R> StateFlow<T1>.mapState(transform: (a: T1) -> R): StateFlow<R>","description":"io.github.thibaultbee.streampack.core.elements.utils.mapState","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils/map-state.html","searchKeys":["mapState","fun <T1, R> StateFlow<T1>.mapState(transform: (a: T1) -> R): StateFlow<R>","io.github.thibaultbee.streampack.core.elements.utils.mapState"]},{"name":"fun <T> Iterable<List<T>>.unzip(): List<List<T>>","description":"io.github.thibaultbee.streampack.core.elements.utils.extensions.unzip","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.extensions/unzip.html","searchKeys":["unzip","fun <T> Iterable<List<T>>.unzip(): List<List<T>>","io.github.thibaultbee.streampack.core.elements.utils.extensions.unzip"]},{"name":"fun <T> SharedFlow<T>.runningHistory(): Flow<History<T>?>","description":"io.github.thibaultbee.streampack.core.elements.utils.extensions.runningHistory","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.extensions/running-history.html","searchKeys":["runningHistory","fun <T> SharedFlow<T>.runningHistory(): Flow<History<T>?>","io.github.thibaultbee.streampack.core.elements.utils.extensions.runningHistory"]},{"name":"fun <T> SharedFlow<T>.runningHistoryNotNull(): Flow<History<T>>","description":"io.github.thibaultbee.streampack.core.elements.utils.extensions.runningHistoryNotNull","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.extensions/running-history-not-null.html","searchKeys":["runningHistoryNotNull","fun <T> SharedFlow<T>.runningHistoryNotNull(): Flow<History<T>>","io.github.thibaultbee.streampack.core.elements.utils.extensions.runningHistoryNotNull"]},{"name":"fun <T> get(key: CaptureRequest.Key<T?>): T?","description":"io.github.thibaultbee.streampack.core.elements.sources.video.camera.CameraSettings.get","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.video.camera/-camera-settings/get.html","searchKeys":["get","fun <T> get(key: CaptureRequest.Key<T?>): T?","io.github.thibaultbee.streampack.core.elements.sources.video.camera.CameraSettings.get"]},{"name":"fun <T> getCustomData(clazz: Class<T>): T?","description":"io.github.thibaultbee.streampack.core.configuration.mediadescriptor.MediaDescriptor.getCustomData","location":"streampack-core/io.github.thibaultbee.streampack.core.configuration.mediadescriptor/-media-descriptor/get-custom-data.html","searchKeys":["getCustomData","fun <T> getCustomData(clazz: Class<T>): T?","io.github.thibaultbee.streampack.core.configuration.mediadescriptor.MediaDescriptor.getCustomData"]},{"name":"fun <T> getPreviewOutputSize(characteristics: CameraCharacteristics, targetSize: Size, targetClass: Class<T>): Size","description":"io.github.thibaultbee.streampack.core.elements.sources.video.camera.utils.CameraSizes.getPreviewOutputSize","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.video.camera.utils/-camera-sizes/get-preview-output-size.html","searchKeys":["getPreviewOutputSize","fun <T> getPreviewOutputSize(characteristics: CameraCharacteristics, targetSize: Size, targetClass: Class<T>): Size","io.github.thibaultbee.streampack.core.elements.sources.video.camera.utils.CameraSizes.getPreviewOutputSize"]},{"name":"fun <T> getSetting(key: CaptureRequest.Key<T?>): T?","description":"io.github.thibaultbee.streampack.core.elements.sources.video.camera.controllers.CameraController.getSetting","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.video.camera.controllers/-camera-controller/get-setting.html","searchKeys":["getSetting","fun <T> getSetting(key: CaptureRequest.Key<T?>): T?","io.github.thibaultbee.streampack.core.elements.sources.video.camera.controllers.CameraController.getSetting"]},{"name":"fun <T> getSetting(key: CaptureRequest.Key<T?>): T?","description":"io.github.thibaultbee.streampack.core.elements.sources.video.camera.controllers.CameraSessionController.getSetting","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.video.camera.controllers/-camera-session-controller/get-setting.html","searchKeys":["getSetting","fun <T> getSetting(key: CaptureRequest.Key<T?>): T?","io.github.thibaultbee.streampack.core.elements.sources.video.camera.controllers.CameraSessionController.getSetting"]},{"name":"fun <T> set(key: CaptureRequest.Key<T>, value: T)","description":"io.github.thibaultbee.streampack.core.elements.sources.video.camera.CameraSettings.set","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.video.camera/-camera-settings/set.html","searchKeys":["set","fun <T> set(key: CaptureRequest.Key<T>, value: T)","io.github.thibaultbee.streampack.core.elements.sources.video.camera.CameraSettings.set"]},{"name":"fun <T> setRepeatingSetting(key: CaptureRequest.Key<T>, value: T)","description":"io.github.thibaultbee.streampack.core.elements.sources.video.camera.controllers.CameraSessionController.setRepeatingSetting","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.video.camera.controllers/-camera-session-controller/set-repeating-setting.html","searchKeys":["setRepeatingSetting","fun <T> setRepeatingSetting(key: CaptureRequest.Key<T>, value: T)","io.github.thibaultbee.streampack.core.elements.sources.video.camera.controllers.CameraSessionController.setRepeatingSetting"]},{"name":"fun <T> setSetting(key: CaptureRequest.Key<T>, value: T)","description":"io.github.thibaultbee.streampack.core.elements.sources.video.camera.controllers.CameraController.setSetting","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.video.camera.controllers/-camera-controller/set-setting.html","searchKeys":["setSetting","fun <T> setSetting(key: CaptureRequest.Key<T>, value: T)","io.github.thibaultbee.streampack.core.elements.sources.video.camera.controllers.CameraController.setSetting"]},{"name":"fun <T> setSetting(key: CaptureRequest.Key<T>, value: T)","description":"io.github.thibaultbee.streampack.core.elements.sources.video.camera.controllers.CameraSessionController.setSetting","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.video.camera.controllers/-camera-session-controller/set-setting.html","searchKeys":["setSetting","fun <T> setSetting(key: CaptureRequest.Key<T>, value: T)","io.github.thibaultbee.streampack.core.elements.sources.video.camera.controllers.CameraSessionController.setSetting"]},{"name":"fun <T> stateFlow(getValue: () -> T, flow: Flow<T>): StateFlow<T>","description":"io.github.thibaultbee.streampack.core.elements.utils.stateFlow","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils/state-flow.html","searchKeys":["stateFlow","fun <T> stateFlow(getValue: () -> T, flow: Flow<T>): StateFlow<T>","io.github.thibaultbee.streampack.core.elements.utils.stateFlow"]},{"name":"fun AudioCodecConfig.isCompatibleWith(sourceConfig: AudioSourceConfig): Boolean","description":"io.github.thibaultbee.streampack.core.elements.utils.extensions.isCompatibleWith","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.extensions/is-compatible-with.html","searchKeys":["isCompatibleWith","fun AudioCodecConfig.isCompatibleWith(sourceConfig: AudioSourceConfig): Boolean","io.github.thibaultbee.streampack.core.elements.utils.extensions.isCompatibleWith"]},{"name":"fun AudioSourceConfig.isCompatibleWith(sourceConfig: AudioSourceConfig): Boolean","description":"io.github.thibaultbee.streampack.core.elements.utils.extensions.isCompatibleWith","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.extensions/is-compatible-with.html","searchKeys":["isCompatibleWith","fun AudioSourceConfig.isCompatibleWith(sourceConfig: AudioSourceConfig): Boolean","io.github.thibaultbee.streampack.core.elements.utils.extensions.isCompatibleWith"]},{"name":"fun Boolean.toByte(): Byte","description":"io.github.thibaultbee.streampack.core.elements.utils.extensions.toByte","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.extensions/to-byte.html","searchKeys":["toByte","fun Boolean.toByte(): Byte","io.github.thibaultbee.streampack.core.elements.utils.extensions.toByte"]},{"name":"fun Boolean.toInt(): Int","description":"io.github.thibaultbee.streampack.core.elements.utils.extensions.toInt","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.extensions/to-int.html","searchKeys":["toInt","fun Boolean.toInt(): Int","io.github.thibaultbee.streampack.core.elements.utils.extensions.toInt"]},{"name":"fun Byte.toBoolean(): Boolean","description":"io.github.thibaultbee.streampack.core.elements.utils.extensions.toBoolean","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.extensions/to-boolean.html","searchKeys":["toBoolean","fun Byte.toBoolean(): Boolean","io.github.thibaultbee.streampack.core.elements.utils.extensions.toBoolean"]},{"name":"fun ByteBuffer.clone(): ByteBuffer","description":"io.github.thibaultbee.streampack.core.elements.utils.extensions.clone","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.extensions/clone.html","searchKeys":["clone","fun ByteBuffer.clone(): ByteBuffer","io.github.thibaultbee.streampack.core.elements.utils.extensions.clone"]},{"name":"fun ByteBuffer.extractRbsp(headerLength: Int): ByteBuffer","description":"io.github.thibaultbee.streampack.core.elements.utils.extensions.extractRbsp","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.extensions/extract-rbsp.html","searchKeys":["extractRbsp","fun ByteBuffer.extractRbsp(headerLength: Int): ByteBuffer","io.github.thibaultbee.streampack.core.elements.utils.extensions.extractRbsp"]},{"name":"fun ByteBuffer.getLong(isLittleEndian: Boolean): Long","description":"io.github.thibaultbee.streampack.core.elements.utils.extensions.getLong","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.extensions/get-long.html","searchKeys":["getLong","fun ByteBuffer.getLong(isLittleEndian: Boolean): Long","io.github.thibaultbee.streampack.core.elements.utils.extensions.getLong"]},{"name":"fun ByteBuffer.getString(size: Int = this.remaining()): String","description":"io.github.thibaultbee.streampack.core.elements.utils.extensions.getString","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.extensions/get-string.html","searchKeys":["getString","fun ByteBuffer.getString(size: Int = this.remaining()): String","io.github.thibaultbee.streampack.core.elements.utils.extensions.getString"]},{"name":"fun ByteBuffer.indicesOf(prefix: ByteArray): List<Int>","description":"io.github.thibaultbee.streampack.core.elements.utils.extensions.indicesOf","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.extensions/indices-of.html","searchKeys":["indicesOf","fun ByteBuffer.indicesOf(prefix: ByteArray): List<Int>","io.github.thibaultbee.streampack.core.elements.utils.extensions.indicesOf"]},{"name":"fun ByteBuffer.put(buffer: ByteBuffer, offset: Int, length: Int)","description":"io.github.thibaultbee.streampack.core.elements.utils.extensions.put","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.extensions/put.html","searchKeys":["put","fun ByteBuffer.put(buffer: ByteBuffer, offset: Int, length: Int)","io.github.thibaultbee.streampack.core.elements.utils.extensions.put"]},{"name":"fun ByteBuffer.put(i: Int)","description":"io.github.thibaultbee.streampack.core.elements.utils.extensions.put","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.extensions/put.html","searchKeys":["put","fun ByteBuffer.put(i: Int)","io.github.thibaultbee.streampack.core.elements.utils.extensions.put"]},{"name":"fun ByteBuffer.put(i: Int, i1: Int)","description":"io.github.thibaultbee.streampack.core.elements.utils.extensions.put","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.extensions/put.html","searchKeys":["put","fun ByteBuffer.put(i: Int, i1: Int)","io.github.thibaultbee.streampack.core.elements.utils.extensions.put"]},{"name":"fun ByteBuffer.put(s: Short)","description":"io.github.thibaultbee.streampack.core.elements.utils.extensions.put","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.extensions/put.html","searchKeys":["put","fun ByteBuffer.put(s: Short)","io.github.thibaultbee.streampack.core.elements.utils.extensions.put"]},{"name":"fun ByteBuffer.put3x3Matrix(matrix: IntArray)","description":"io.github.thibaultbee.streampack.core.elements.utils.extensions.put3x3Matrix","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.extensions/put3x3-matrix.html","searchKeys":["put3x3Matrix","fun ByteBuffer.put3x3Matrix(matrix: IntArray)","io.github.thibaultbee.streampack.core.elements.utils.extensions.put3x3Matrix"]},{"name":"fun ByteBuffer.putFixed1616(f: Float)","description":"io.github.thibaultbee.streampack.core.elements.utils.extensions.putFixed1616","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.extensions/put-fixed1616.html","searchKeys":["putFixed1616","fun ByteBuffer.putFixed1616(f: Float)","io.github.thibaultbee.streampack.core.elements.utils.extensions.putFixed1616"]},{"name":"fun ByteBuffer.putFixed1616(i: Int)","description":"io.github.thibaultbee.streampack.core.elements.utils.extensions.putFixed1616","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.extensions/put-fixed1616.html","searchKeys":["putFixed1616","fun ByteBuffer.putFixed1616(i: Int)","io.github.thibaultbee.streampack.core.elements.utils.extensions.putFixed1616"]},{"name":"fun ByteBuffer.putFixed88(f: Float)","description":"io.github.thibaultbee.streampack.core.elements.utils.extensions.putFixed88","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.extensions/put-fixed88.html","searchKeys":["putFixed88","fun ByteBuffer.putFixed88(f: Float)","io.github.thibaultbee.streampack.core.elements.utils.extensions.putFixed88"]},{"name":"fun ByteBuffer.putInt(d: Double)","description":"io.github.thibaultbee.streampack.core.elements.utils.extensions.putInt","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.extensions/put-int.html","searchKeys":["putInt","fun ByteBuffer.putInt(d: Double)","io.github.thibaultbee.streampack.core.elements.utils.extensions.putInt"]},{"name":"fun ByteBuffer.putInt(f: SampleFlags)","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models.putInt","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models/put-int.html","searchKeys":["putInt","fun ByteBuffer.putInt(f: SampleFlags)","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models.putInt"]},{"name":"fun ByteBuffer.putInt(l: Long)","description":"io.github.thibaultbee.streampack.core.elements.utils.extensions.putInt","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.extensions/put-int.html","searchKeys":["putInt","fun ByteBuffer.putInt(l: Long)","io.github.thibaultbee.streampack.core.elements.utils.extensions.putInt"]},{"name":"fun ByteBuffer.putInt24(i: Int)","description":"io.github.thibaultbee.streampack.core.elements.utils.extensions.putInt24","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.extensions/put-int24.html","searchKeys":["putInt24","fun ByteBuffer.putInt24(i: Int)","io.github.thibaultbee.streampack.core.elements.utils.extensions.putInt24"]},{"name":"fun ByteBuffer.putLong48(i: Long)","description":"io.github.thibaultbee.streampack.core.elements.utils.extensions.putLong48","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.extensions/put-long48.html","searchKeys":["putLong48","fun ByteBuffer.putLong48(i: Long)","io.github.thibaultbee.streampack.core.elements.utils.extensions.putLong48"]},{"name":"fun ByteBuffer.putShort(d: Double)","description":"io.github.thibaultbee.streampack.core.elements.utils.extensions.putShort","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.extensions/put-short.html","searchKeys":["putShort","fun ByteBuffer.putShort(d: Double)","io.github.thibaultbee.streampack.core.elements.utils.extensions.putShort"]},{"name":"fun ByteBuffer.putShort(f: Float)","description":"io.github.thibaultbee.streampack.core.elements.utils.extensions.putShort","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.extensions/put-short.html","searchKeys":["putShort","fun ByteBuffer.putShort(f: Float)","io.github.thibaultbee.streampack.core.elements.utils.extensions.putShort"]},{"name":"fun ByteBuffer.putShort(i: Int)","description":"io.github.thibaultbee.streampack.core.elements.utils.extensions.putShort","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.extensions/put-short.html","searchKeys":["putShort","fun ByteBuffer.putShort(i: Int)","io.github.thibaultbee.streampack.core.elements.utils.extensions.putShort"]},{"name":"fun ByteBuffer.putShort(l: Long)","description":"io.github.thibaultbee.streampack.core.elements.utils.extensions.putShort","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.extensions/put-short.html","searchKeys":["putShort","fun ByteBuffer.putShort(l: Long)","io.github.thibaultbee.streampack.core.elements.utils.extensions.putShort"]},{"name":"fun ByteBuffer.putString(s: String)","description":"io.github.thibaultbee.streampack.core.elements.utils.extensions.putString","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.extensions/put-string.html","searchKeys":["putString","fun ByteBuffer.putString(s: String)","io.github.thibaultbee.streampack.core.elements.utils.extensions.putString"]},{"name":"fun ByteBuffer.removePrefixes(prefixes: List<ByteBuffer>): ByteBuffer","description":"io.github.thibaultbee.streampack.core.elements.utils.extensions.removePrefixes","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.extensions/remove-prefixes.html","searchKeys":["removePrefixes","fun ByteBuffer.removePrefixes(prefixes: List<ByteBuffer>): ByteBuffer","io.github.thibaultbee.streampack.core.elements.utils.extensions.removePrefixes"]},{"name":"fun ByteBuffer.removeStartCode(): ByteBuffer","description":"io.github.thibaultbee.streampack.core.elements.utils.extensions.removeStartCode","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.extensions/remove-start-code.html","searchKeys":["removeStartCode","fun ByteBuffer.removeStartCode(): ByteBuffer","io.github.thibaultbee.streampack.core.elements.utils.extensions.removeStartCode"]},{"name":"fun ByteBuffer.slices(prefix: ByteArray): List<ByteBuffer>","description":"io.github.thibaultbee.streampack.core.elements.utils.extensions.slices","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.extensions/slices.html","searchKeys":["slices","fun ByteBuffer.slices(prefix: ByteArray): List<ByteBuffer>","io.github.thibaultbee.streampack.core.elements.utils.extensions.slices"]},{"name":"fun ByteBuffer.startsWith(prefix: ByteArray, prefixSkip: Int = 0): Boolean","description":"io.github.thibaultbee.streampack.core.elements.utils.extensions.startsWith","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.extensions/starts-with.html","searchKeys":["startsWith","fun ByteBuffer.startsWith(prefix: ByteArray, prefixSkip: Int = 0): Boolean","io.github.thibaultbee.streampack.core.elements.utils.extensions.startsWith"]},{"name":"fun ByteBuffer.startsWith(prefix: ByteBuffer, prefixSkip: Int = 0): Boolean","description":"io.github.thibaultbee.streampack.core.elements.utils.extensions.startsWith","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.extensions/starts-with.html","searchKeys":["startsWith","fun ByteBuffer.startsWith(prefix: ByteBuffer, prefixSkip: Int = 0): Boolean","io.github.thibaultbee.streampack.core.elements.utils.extensions.startsWith"]},{"name":"fun ByteBuffer.startsWith(prefix: String): Boolean","description":"io.github.thibaultbee.streampack.core.elements.utils.extensions.startsWith","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.extensions/starts-with.html","searchKeys":["startsWith","fun ByteBuffer.startsWith(prefix: String): Boolean","io.github.thibaultbee.streampack.core.elements.utils.extensions.startsWith"]},{"name":"fun ByteBuffer.startsWith(prefixes: List<ByteBuffer>): Pair<Boolean, Int>","description":"io.github.thibaultbee.streampack.core.elements.utils.extensions.startsWith","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.extensions/starts-with.html","searchKeys":["startsWith","fun ByteBuffer.startsWith(prefixes: List<ByteBuffer>): Pair<Boolean, Int>","io.github.thibaultbee.streampack.core.elements.utils.extensions.startsWith"]},{"name":"fun ByteBuffer.toByteArray(): ByteArray","description":"io.github.thibaultbee.streampack.core.elements.utils.extensions.toByteArray","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.extensions/to-byte-array.html","searchKeys":["toByteArray","fun ByteBuffer.toByteArray(): ByteArray","io.github.thibaultbee.streampack.core.elements.utils.extensions.toByteArray"]},{"name":"fun CameraManager.get10BitSupportedProfiles(cameraId: String): Set<Long>","description":"io.github.thibaultbee.streampack.core.elements.sources.video.camera.extensions.get10BitSupportedProfiles","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.video.camera.extensions/get10-bit-supported-profiles.html","searchKeys":["get10BitSupportedProfiles","fun CameraManager.get10BitSupportedProfiles(cameraId: String): Set<Long>","io.github.thibaultbee.streampack.core.elements.sources.video.camera.extensions.get10BitSupportedProfiles"]},{"name":"fun CameraManager.getAutoExposureModes(cameraId: String): List<Int>","description":"io.github.thibaultbee.streampack.core.elements.sources.video.camera.extensions.getAutoExposureModes","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.video.camera.extensions/get-auto-exposure-modes.html","searchKeys":["getAutoExposureModes","fun CameraManager.getAutoExposureModes(cameraId: String): List<Int>","io.github.thibaultbee.streampack.core.elements.sources.video.camera.extensions.getAutoExposureModes"]},{"name":"fun CameraManager.getAutoFocusModes(cameraId: String): List<Int>","description":"io.github.thibaultbee.streampack.core.elements.sources.video.camera.extensions.getAutoFocusModes","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.video.camera.extensions/get-auto-focus-modes.html","searchKeys":["getAutoFocusModes","fun CameraManager.getAutoFocusModes(cameraId: String): List<Int>","io.github.thibaultbee.streampack.core.elements.sources.video.camera.extensions.getAutoFocusModes"]},{"name":"fun CameraManager.getAutoWhiteBalanceModes(cameraId: String): List<Int>","description":"io.github.thibaultbee.streampack.core.elements.sources.video.camera.extensions.getAutoWhiteBalanceModes","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.video.camera.extensions/get-auto-white-balance-modes.html","searchKeys":["getAutoWhiteBalanceModes","fun CameraManager.getAutoWhiteBalanceModes(cameraId: String): List<Int>","io.github.thibaultbee.streampack.core.elements.sources.video.camera.extensions.getAutoWhiteBalanceModes"]},{"name":"fun CameraManager.getCameraFps(cameraId: String): List<Range<Int>>","description":"io.github.thibaultbee.streampack.core.elements.sources.video.camera.extensions.getCameraFps","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.video.camera.extensions/get-camera-fps.html","searchKeys":["getCameraFps","fun CameraManager.getCameraFps(cameraId: String): List<Range<Int>>","io.github.thibaultbee.streampack.core.elements.sources.video.camera.extensions.getCameraFps"]},{"name":"fun CameraManager.getCameraOutputStreamSizes(): List<Size>","description":"io.github.thibaultbee.streampack.core.elements.sources.video.camera.extensions.getCameraOutputStreamSizes","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.video.camera.extensions/get-camera-output-stream-sizes.html","searchKeys":["getCameraOutputStreamSizes","fun CameraManager.getCameraOutputStreamSizes(): List<Size>","io.github.thibaultbee.streampack.core.elements.sources.video.camera.extensions.getCameraOutputStreamSizes"]},{"name":"fun CameraManager.getCameraOutputStreamSizes(cameraId: String, imageFormat: Int = ImageFormat.YUV_420_888): List<Size>","description":"io.github.thibaultbee.streampack.core.elements.sources.video.camera.extensions.getCameraOutputStreamSizes","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.video.camera.extensions/get-camera-output-stream-sizes.html","searchKeys":["getCameraOutputStreamSizes","fun CameraManager.getCameraOutputStreamSizes(cameraId: String, imageFormat: Int = ImageFormat.YUV_420_888): List<Size>","io.github.thibaultbee.streampack.core.elements.sources.video.camera.extensions.getCameraOutputStreamSizes"]},{"name":"fun CameraManager.getExposureMaxMeteringRegionsSupported(cameraId: String): Int?","description":"io.github.thibaultbee.streampack.core.elements.sources.video.camera.extensions.getExposureMaxMeteringRegionsSupported","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.video.camera.extensions/get-exposure-max-metering-regions-supported.html","searchKeys":["getExposureMaxMeteringRegionsSupported","fun CameraManager.getExposureMaxMeteringRegionsSupported(cameraId: String): Int?","io.github.thibaultbee.streampack.core.elements.sources.video.camera.extensions.getExposureMaxMeteringRegionsSupported"]},{"name":"fun CameraManager.getExposureRange(cameraId: String): Range<Int>?","description":"io.github.thibaultbee.streampack.core.elements.sources.video.camera.extensions.getExposureRange","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.video.camera.extensions/get-exposure-range.html","searchKeys":["getExposureRange","fun CameraManager.getExposureRange(cameraId: String): Range<Int>?","io.github.thibaultbee.streampack.core.elements.sources.video.camera.extensions.getExposureRange"]},{"name":"fun CameraManager.getExposureStep(cameraId: String): Rational?","description":"io.github.thibaultbee.streampack.core.elements.sources.video.camera.extensions.getExposureStep","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.video.camera.extensions/get-exposure-step.html","searchKeys":["getExposureStep","fun CameraManager.getExposureStep(cameraId: String): Rational?","io.github.thibaultbee.streampack.core.elements.sources.video.camera.extensions.getExposureStep"]},{"name":"fun CameraManager.getFacingDirection(cameraId: String): Int?","description":"io.github.thibaultbee.streampack.core.elements.sources.video.camera.extensions.getFacingDirection","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.video.camera.extensions/get-facing-direction.html","searchKeys":["getFacingDirection","fun CameraManager.getFacingDirection(cameraId: String): Int?","io.github.thibaultbee.streampack.core.elements.sources.video.camera.extensions.getFacingDirection"]},{"name":"fun CameraManager.getFocusMaxMeteringRegionsSupported(cameraId: String): Int?","description":"io.github.thibaultbee.streampack.core.elements.sources.video.camera.extensions.getFocusMaxMeteringRegionsSupported","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.video.camera.extensions/get-focus-max-metering-regions-supported.html","searchKeys":["getFocusMaxMeteringRegionsSupported","fun CameraManager.getFocusMaxMeteringRegionsSupported(cameraId: String): Int?","io.github.thibaultbee.streampack.core.elements.sources.video.camera.extensions.getFocusMaxMeteringRegionsSupported"]},{"name":"fun CameraManager.getLensDistanceRange(cameraId: String): Range<Float>","description":"io.github.thibaultbee.streampack.core.elements.sources.video.camera.extensions.getLensDistanceRange","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.video.camera.extensions/get-lens-distance-range.html","searchKeys":["getLensDistanceRange","fun CameraManager.getLensDistanceRange(cameraId: String): Range<Float>","io.github.thibaultbee.streampack.core.elements.sources.video.camera.extensions.getLensDistanceRange"]},{"name":"fun CameraManager.getScalerMaxZoom(cameraId: String): Float","description":"io.github.thibaultbee.streampack.core.elements.sources.video.camera.extensions.getScalerMaxZoom","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.video.camera.extensions/get-scaler-max-zoom.html","searchKeys":["getScalerMaxZoom","fun CameraManager.getScalerMaxZoom(cameraId: String): Float","io.github.thibaultbee.streampack.core.elements.sources.video.camera.extensions.getScalerMaxZoom"]},{"name":"fun CameraManager.getSensitivityRange(cameraId: String): Range<Int>?","description":"io.github.thibaultbee.streampack.core.elements.sources.video.camera.extensions.getSensitivityRange","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.video.camera.extensions/get-sensitivity-range.html","searchKeys":["getSensitivityRange","fun CameraManager.getSensitivityRange(cameraId: String): Range<Int>?","io.github.thibaultbee.streampack.core.elements.sources.video.camera.extensions.getSensitivityRange"]},{"name":"fun CameraManager.getWhiteBalanceMeteringRegionsSupported(cameraId: String): Int?","description":"io.github.thibaultbee.streampack.core.elements.sources.video.camera.extensions.getWhiteBalanceMeteringRegionsSupported","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.video.camera.extensions/get-white-balance-metering-regions-supported.html","searchKeys":["getWhiteBalanceMeteringRegionsSupported","fun CameraManager.getWhiteBalanceMeteringRegionsSupported(cameraId: String): Int?","io.github.thibaultbee.streampack.core.elements.sources.video.camera.extensions.getWhiteBalanceMeteringRegionsSupported"]},{"name":"fun CameraManager.getZoomRatioRange(cameraId: String): Range<Float>?","description":"io.github.thibaultbee.streampack.core.elements.sources.video.camera.extensions.getZoomRatioRange","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.video.camera.extensions/get-zoom-ratio-range.html","searchKeys":["getZoomRatioRange","fun CameraManager.getZoomRatioRange(cameraId: String): Range<Float>?","io.github.thibaultbee.streampack.core.elements.sources.video.camera.extensions.getZoomRatioRange"]},{"name":"fun CameraManager.is10BitProfileSupported(cameraId: String): Boolean","description":"io.github.thibaultbee.streampack.core.elements.sources.video.camera.extensions.is10BitProfileSupported","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.video.camera.extensions/is10-bit-profile-supported.html","searchKeys":["is10BitProfileSupported","fun CameraManager.is10BitProfileSupported(cameraId: String): Boolean","io.github.thibaultbee.streampack.core.elements.sources.video.camera.extensions.is10BitProfileSupported"]},{"name":"fun CameraManager.isBackCamera(cameraId: String): Boolean","description":"io.github.thibaultbee.streampack.core.elements.sources.video.camera.extensions.isBackCamera","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.video.camera.extensions/is-back-camera.html","searchKeys":["isBackCamera","fun CameraManager.isBackCamera(cameraId: String): Boolean","io.github.thibaultbee.streampack.core.elements.sources.video.camera.extensions.isBackCamera"]},{"name":"fun CameraManager.isExternalCamera(cameraId: String): Boolean","description":"io.github.thibaultbee.streampack.core.elements.sources.video.camera.extensions.isExternalCamera","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.video.camera.extensions/is-external-camera.html","searchKeys":["isExternalCamera","fun CameraManager.isExternalCamera(cameraId: String): Boolean","io.github.thibaultbee.streampack.core.elements.sources.video.camera.extensions.isExternalCamera"]},{"name":"fun CameraManager.isFlashAvailable(cameraId: String): Boolean","description":"io.github.thibaultbee.streampack.core.elements.sources.video.camera.extensions.isFlashAvailable","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.video.camera.extensions/is-flash-available.html","searchKeys":["isFlashAvailable","fun CameraManager.isFlashAvailable(cameraId: String): Boolean","io.github.thibaultbee.streampack.core.elements.sources.video.camera.extensions.isFlashAvailable"]},{"name":"fun CameraManager.isFrameRateSupported(cameraId: String, fps: Int): Boolean","description":"io.github.thibaultbee.streampack.core.elements.sources.video.camera.extensions.isFrameRateSupported","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.video.camera.extensions/is-frame-rate-supported.html","searchKeys":["isFrameRateSupported","fun CameraManager.isFrameRateSupported(cameraId: String, fps: Int): Boolean","io.github.thibaultbee.streampack.core.elements.sources.video.camera.extensions.isFrameRateSupported"]},{"name":"fun CameraManager.isFrontCamera(cameraId: String): Boolean","description":"io.github.thibaultbee.streampack.core.elements.sources.video.camera.extensions.isFrontCamera","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.video.camera.extensions/is-front-camera.html","searchKeys":["isFrontCamera","fun CameraManager.isFrontCamera(cameraId: String): Boolean","io.github.thibaultbee.streampack.core.elements.sources.video.camera.extensions.isFrontCamera"]},{"name":"fun CameraManager.isOpticalStabilizationAvailable(cameraId: String): Boolean","description":"io.github.thibaultbee.streampack.core.elements.sources.video.camera.extensions.isOpticalStabilizationAvailable","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.video.camera.extensions/is-optical-stabilization-available.html","searchKeys":["isOpticalStabilizationAvailable","fun CameraManager.isOpticalStabilizationAvailable(cameraId: String): Boolean","io.github.thibaultbee.streampack.core.elements.sources.video.camera.extensions.isOpticalStabilizationAvailable"]},{"name":"fun CodecConfig.createHandlerBox(): HandlerBox","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.utils.createHandlerBox","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.utils/create-handler-box.html","searchKeys":["createHandlerBox","fun CodecConfig.createHandlerBox(): HandlerBox","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.utils.createHandlerBox"]},{"name":"fun CodecConfig.createTypeMediaHeaderBox(): TypeMediaHeaderBox","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.utils.createTypeMediaHeaderBox","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.utils/create-type-media-header-box.html","searchKeys":["createTypeMediaHeaderBox","fun CodecConfig.createTypeMediaHeaderBox(): TypeMediaHeaderBox","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.utils.createTypeMediaHeaderBox"]},{"name":"fun CombineEndpoint(vararg endpoints: IEndpointInternal): CombineEndpoint","description":"io.github.thibaultbee.streampack.core.elements.endpoints.CombineEndpoint","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints/-combine-endpoint.html","searchKeys":["CombineEndpoint","fun CombineEndpoint(vararg endpoints: IEndpointInternal): CombineEndpoint","io.github.thibaultbee.streampack.core.elements.endpoints.CombineEndpoint"]},{"name":"fun CombineEndpointFactory(context: Context, endpointFactory: List<IEndpointInternal.Factory>): CombineEndpointFactory","description":"io.github.thibaultbee.streampack.core.elements.endpoints.CombineEndpointFactory","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints/-combine-endpoint-factory.html","searchKeys":["CombineEndpointFactory","fun CombineEndpointFactory(context: Context, endpointFactory: List<IEndpointInternal.Factory>): CombineEndpointFactory","io.github.thibaultbee.streampack.core.elements.endpoints.CombineEndpointFactory"]},{"name":"fun CombineEndpointFactory(context: Context, vararg endpointFactory: IEndpointInternal.Factory): CombineEndpointFactory","description":"io.github.thibaultbee.streampack.core.elements.endpoints.CombineEndpointFactory","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints/-combine-endpoint-factory.html","searchKeys":["CombineEndpointFactory","fun CombineEndpointFactory(context: Context, vararg endpointFactory: IEndpointInternal.Factory): CombineEndpointFactory","io.github.thibaultbee.streampack.core.elements.endpoints.CombineEndpointFactory"]},{"name":"fun CombineEndpointFactory(vararg endpoints: IEndpointInternal): CombineEndpointFactory","description":"io.github.thibaultbee.streampack.core.elements.endpoints.CombineEndpointFactory","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints/-combine-endpoint-factory.html","searchKeys":["CombineEndpointFactory","fun CombineEndpointFactory(vararg endpoints: IEndpointInternal): CombineEndpointFactory","io.github.thibaultbee.streampack.core.elements.endpoints.CombineEndpointFactory"]},{"name":"fun Context.get10BitSupportedProfiles(cameraId: String): Set<Long>","description":"io.github.thibaultbee.streampack.core.elements.sources.video.camera.extensions.get10BitSupportedProfiles","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.video.camera.extensions/get10-bit-supported-profiles.html","searchKeys":["get10BitSupportedProfiles","fun Context.get10BitSupportedProfiles(cameraId: String): Set<Long>","io.github.thibaultbee.streampack.core.elements.sources.video.camera.extensions.get10BitSupportedProfiles"]},{"name":"fun Context.getAutoExposureModes(cameraId: String): List<Int>","description":"io.github.thibaultbee.streampack.core.elements.sources.video.camera.extensions.getAutoExposureModes","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.video.camera.extensions/get-auto-exposure-modes.html","searchKeys":["getAutoExposureModes","fun Context.getAutoExposureModes(cameraId: String): List<Int>","io.github.thibaultbee.streampack.core.elements.sources.video.camera.extensions.getAutoExposureModes"]},{"name":"fun Context.getAutoFocusModes(cameraId: String): List<Int>","description":"io.github.thibaultbee.streampack.core.elements.sources.video.camera.extensions.getAutoFocusModes","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.video.camera.extensions/get-auto-focus-modes.html","searchKeys":["getAutoFocusModes","fun Context.getAutoFocusModes(cameraId: String): List<Int>","io.github.thibaultbee.streampack.core.elements.sources.video.camera.extensions.getAutoFocusModes"]},{"name":"fun Context.getAutoWhiteBalanceModes(cameraId: String): List<Int>","description":"io.github.thibaultbee.streampack.core.elements.sources.video.camera.extensions.getAutoWhiteBalanceModes","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.video.camera.extensions/get-auto-white-balance-modes.html","searchKeys":["getAutoWhiteBalanceModes","fun Context.getAutoWhiteBalanceModes(cameraId: String): List<Int>","io.github.thibaultbee.streampack.core.elements.sources.video.camera.extensions.getAutoWhiteBalanceModes"]},{"name":"fun Context.getCameraCharacteristics(cameraId: String): CameraCharacteristics","description":"io.github.thibaultbee.streampack.core.elements.sources.video.camera.extensions.getCameraCharacteristics","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.video.camera.extensions/get-camera-characteristics.html","searchKeys":["getCameraCharacteristics","fun Context.getCameraCharacteristics(cameraId: String): CameraCharacteristics","io.github.thibaultbee.streampack.core.elements.sources.video.camera.extensions.getCameraCharacteristics"]},{"name":"fun Context.getCameraFps(cameraId: String): List<Range<Int>>","description":"io.github.thibaultbee.streampack.core.elements.sources.video.camera.extensions.getCameraFps","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.video.camera.extensions/get-camera-fps.html","searchKeys":["getCameraFps","fun Context.getCameraFps(cameraId: String): List<Range<Int>>","io.github.thibaultbee.streampack.core.elements.sources.video.camera.extensions.getCameraFps"]},{"name":"fun Context.getCameraOutputStreamSizes(): List<Size>","description":"io.github.thibaultbee.streampack.core.elements.sources.video.camera.extensions.getCameraOutputStreamSizes","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.video.camera.extensions/get-camera-output-stream-sizes.html","searchKeys":["getCameraOutputStreamSizes","fun Context.getCameraOutputStreamSizes(): List<Size>","io.github.thibaultbee.streampack.core.elements.sources.video.camera.extensions.getCameraOutputStreamSizes"]},{"name":"fun Context.getCameraOutputStreamSizes(cameraId: String, imageFormat: Int = ImageFormat.YUV_420_888): List<Size>","description":"io.github.thibaultbee.streampack.core.elements.sources.video.camera.extensions.getCameraOutputStreamSizes","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.video.camera.extensions/get-camera-output-stream-sizes.html","searchKeys":["getCameraOutputStreamSizes","fun Context.getCameraOutputStreamSizes(cameraId: String, imageFormat: Int = ImageFormat.YUV_420_888): List<Size>","io.github.thibaultbee.streampack.core.elements.sources.video.camera.extensions.getCameraOutputStreamSizes"]},{"name":"fun Context.getExposureMaxMeteringRegionsSupported(cameraId: String): Int?","description":"io.github.thibaultbee.streampack.core.elements.sources.video.camera.extensions.getExposureMaxMeteringRegionsSupported","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.video.camera.extensions/get-exposure-max-metering-regions-supported.html","searchKeys":["getExposureMaxMeteringRegionsSupported","fun Context.getExposureMaxMeteringRegionsSupported(cameraId: String): Int?","io.github.thibaultbee.streampack.core.elements.sources.video.camera.extensions.getExposureMaxMeteringRegionsSupported"]},{"name":"fun Context.getExposureRange(cameraId: String): Range<Int>?","description":"io.github.thibaultbee.streampack.core.elements.sources.video.camera.extensions.getExposureRange","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.video.camera.extensions/get-exposure-range.html","searchKeys":["getExposureRange","fun Context.getExposureRange(cameraId: String): Range<Int>?","io.github.thibaultbee.streampack.core.elements.sources.video.camera.extensions.getExposureRange"]},{"name":"fun Context.getExposureStep(cameraId: String): Rational?","description":"io.github.thibaultbee.streampack.core.elements.sources.video.camera.extensions.getExposureStep","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.video.camera.extensions/get-exposure-step.html","searchKeys":["getExposureStep","fun Context.getExposureStep(cameraId: String): Rational?","io.github.thibaultbee.streampack.core.elements.sources.video.camera.extensions.getExposureStep"]},{"name":"fun Context.getFacingDirection(cameraId: String): Int?","description":"io.github.thibaultbee.streampack.core.elements.sources.video.camera.extensions.getFacingDirection","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.video.camera.extensions/get-facing-direction.html","searchKeys":["getFacingDirection","fun Context.getFacingDirection(cameraId: String): Int?","io.github.thibaultbee.streampack.core.elements.sources.video.camera.extensions.getFacingDirection"]},{"name":"fun Context.getFocusMaxMeteringRegionsSupported(cameraId: String): Int?","description":"io.github.thibaultbee.streampack.core.elements.sources.video.camera.extensions.getFocusMaxMeteringRegionsSupported","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.video.camera.extensions/get-focus-max-metering-regions-supported.html","searchKeys":["getFocusMaxMeteringRegionsSupported","fun Context.getFocusMaxMeteringRegionsSupported(cameraId: String): Int?","io.github.thibaultbee.streampack.core.elements.sources.video.camera.extensions.getFocusMaxMeteringRegionsSupported"]},{"name":"fun Context.getLensDistanceRange(cameraId: String): Range<Float>","description":"io.github.thibaultbee.streampack.core.elements.sources.video.camera.extensions.getLensDistanceRange","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.video.camera.extensions/get-lens-distance-range.html","searchKeys":["getLensDistanceRange","fun Context.getLensDistanceRange(cameraId: String): Range<Float>","io.github.thibaultbee.streampack.core.elements.sources.video.camera.extensions.getLensDistanceRange"]},{"name":"fun Context.getMediaProjection(resultCode: Int, resultData: Intent): MediaProjection","description":"io.github.thibaultbee.streampack.core.utils.extensions.getMediaProjection","location":"streampack-core/io.github.thibaultbee.streampack.core.utils.extensions/get-media-projection.html","searchKeys":["getMediaProjection","fun Context.getMediaProjection(resultCode: Int, resultData: Intent): MediaProjection","io.github.thibaultbee.streampack.core.utils.extensions.getMediaProjection"]},{"name":"fun Context.getScalerMaxZoom(cameraId: String): Float","description":"io.github.thibaultbee.streampack.core.elements.sources.video.camera.extensions.getScalerMaxZoom","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.video.camera.extensions/get-scaler-max-zoom.html","searchKeys":["getScalerMaxZoom","fun Context.getScalerMaxZoom(cameraId: String): Float","io.github.thibaultbee.streampack.core.elements.sources.video.camera.extensions.getScalerMaxZoom"]},{"name":"fun Context.getSensitivityRange(cameraId: String): Range<Int>?","description":"io.github.thibaultbee.streampack.core.elements.sources.video.camera.extensions.getSensitivityRange","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.video.camera.extensions/get-sensitivity-range.html","searchKeys":["getSensitivityRange","fun Context.getSensitivityRange(cameraId: String): Range<Int>?","io.github.thibaultbee.streampack.core.elements.sources.video.camera.extensions.getSensitivityRange"]},{"name":"fun Context.getWhiteBalanceMeteringRegionsSupported(cameraId: String): Int?","description":"io.github.thibaultbee.streampack.core.elements.sources.video.camera.extensions.getWhiteBalanceMeteringRegionsSupported","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.video.camera.extensions/get-white-balance-metering-regions-supported.html","searchKeys":["getWhiteBalanceMeteringRegionsSupported","fun Context.getWhiteBalanceMeteringRegionsSupported(cameraId: String): Int?","io.github.thibaultbee.streampack.core.elements.sources.video.camera.extensions.getWhiteBalanceMeteringRegionsSupported"]},{"name":"fun Context.getZoomRatioRange(cameraId: String): Range<Float>?","description":"io.github.thibaultbee.streampack.core.elements.sources.video.camera.extensions.getZoomRatioRange","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.video.camera.extensions/get-zoom-ratio-range.html","searchKeys":["getZoomRatioRange","fun Context.getZoomRatioRange(cameraId: String): Range<Float>?","io.github.thibaultbee.streampack.core.elements.sources.video.camera.extensions.getZoomRatioRange"]},{"name":"fun Context.hasExternalCamera(): Boolean","description":"io.github.thibaultbee.streampack.core.utils.extensions.hasExternalCamera","location":"streampack-core/io.github.thibaultbee.streampack.core.utils.extensions/has-external-camera.html","searchKeys":["hasExternalCamera","fun Context.hasExternalCamera(): Boolean","io.github.thibaultbee.streampack.core.utils.extensions.hasExternalCamera"]},{"name":"fun Context.hasSystemFeature(featureName: String): Boolean","description":"io.github.thibaultbee.streampack.core.utils.extensions.hasSystemFeature","location":"streampack-core/io.github.thibaultbee.streampack.core.utils.extensions/has-system-feature.html","searchKeys":["hasSystemFeature","fun Context.hasSystemFeature(featureName: String): Boolean","io.github.thibaultbee.streampack.core.utils.extensions.hasSystemFeature"]},{"name":"fun Context.is10BitProfileSupported(cameraId: String): Boolean","description":"io.github.thibaultbee.streampack.core.elements.sources.video.camera.extensions.is10BitProfileSupported","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.video.camera.extensions/is10-bit-profile-supported.html","searchKeys":["is10BitProfileSupported","fun Context.is10BitProfileSupported(cameraId: String): Boolean","io.github.thibaultbee.streampack.core.elements.sources.video.camera.extensions.is10BitProfileSupported"]},{"name":"fun Context.isBackCamera(cameraId: String): Boolean","description":"io.github.thibaultbee.streampack.core.elements.sources.video.camera.extensions.isBackCamera","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.video.camera.extensions/is-back-camera.html","searchKeys":["isBackCamera","fun Context.isBackCamera(cameraId: String): Boolean","io.github.thibaultbee.streampack.core.elements.sources.video.camera.extensions.isBackCamera"]},{"name":"fun Context.isExternalCamera(cameraId: String): Boolean","description":"io.github.thibaultbee.streampack.core.elements.sources.video.camera.extensions.isExternalCamera","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.video.camera.extensions/is-external-camera.html","searchKeys":["isExternalCamera","fun Context.isExternalCamera(cameraId: String): Boolean","io.github.thibaultbee.streampack.core.elements.sources.video.camera.extensions.isExternalCamera"]},{"name":"fun Context.isFlashAvailable(cameraId: String): Boolean","description":"io.github.thibaultbee.streampack.core.elements.sources.video.camera.extensions.isFlashAvailable","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.video.camera.extensions/is-flash-available.html","searchKeys":["isFlashAvailable","fun Context.isFlashAvailable(cameraId: String): Boolean","io.github.thibaultbee.streampack.core.elements.sources.video.camera.extensions.isFlashAvailable"]},{"name":"fun Context.isFrameRateSupported(cameraId: String, fps: Int): Boolean","description":"io.github.thibaultbee.streampack.core.elements.sources.video.camera.extensions.isFrameRateSupported","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.video.camera.extensions/is-frame-rate-supported.html","searchKeys":["isFrameRateSupported","fun Context.isFrameRateSupported(cameraId: String, fps: Int): Boolean","io.github.thibaultbee.streampack.core.elements.sources.video.camera.extensions.isFrameRateSupported"]},{"name":"fun Context.isFrontCamera(cameraId: String): Boolean","description":"io.github.thibaultbee.streampack.core.elements.sources.video.camera.extensions.isFrontCamera","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.video.camera.extensions/is-front-camera.html","searchKeys":["isFrontCamera","fun Context.isFrontCamera(cameraId: String): Boolean","io.github.thibaultbee.streampack.core.elements.sources.video.camera.extensions.isFrontCamera"]},{"name":"fun Context.isOpticalStabilizationAvailable(cameraId: String): Boolean","description":"io.github.thibaultbee.streampack.core.elements.sources.video.camera.extensions.isOpticalStabilizationAvailable","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.video.camera.extensions/is-optical-stabilization-available.html","searchKeys":["isOpticalStabilizationAvailable","fun Context.isOpticalStabilizationAvailable(cameraId: String): Boolean","io.github.thibaultbee.streampack.core.elements.sources.video.camera.extensions.isOpticalStabilizationAvailable"]},{"name":"fun Context.isRotationDegreesPortrait(rotationDegrees: Int): Boolean","description":"io.github.thibaultbee.streampack.core.elements.utils.extensions.isRotationDegreesPortrait","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.extensions/is-rotation-degrees-portrait.html","searchKeys":["isRotationDegreesPortrait","fun Context.isRotationDegreesPortrait(rotationDegrees: Int): Boolean","io.github.thibaultbee.streampack.core.elements.utils.extensions.isRotationDegreesPortrait"]},{"name":"fun Context.isRotationPortrait(rotation: Int): Boolean","description":"io.github.thibaultbee.streampack.core.elements.utils.extensions.isRotationPortrait","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.extensions/is-rotation-portrait.html","searchKeys":["isRotationPortrait","fun Context.isRotationPortrait(rotation: Int): Boolean","io.github.thibaultbee.streampack.core.elements.utils.extensions.isRotationPortrait"]},{"name":"fun DualEndpointFactory(context: Context, mainEndpointFactory: IEndpointInternal.Factory, secondEndpointFactory: IEndpointInternal.Factory): DualEndpointFactory","description":"io.github.thibaultbee.streampack.core.elements.endpoints.DualEndpointFactory","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints/-dual-endpoint-factory.html","searchKeys":["DualEndpointFactory","fun DualEndpointFactory(context: Context, mainEndpointFactory: IEndpointInternal.Factory, secondEndpointFactory: IEndpointInternal.Factory): DualEndpointFactory","io.github.thibaultbee.streampack.core.elements.endpoints.DualEndpointFactory"]},{"name":"fun DualStreamerAudioConfig(config: AudioConfig): DualStreamerAudioConfig","description":"io.github.thibaultbee.streampack.core.streamers.dual.DualStreamerAudioConfig","location":"streampack-core/io.github.thibaultbee.streampack.core.streamers.dual/-dual-streamer-audio-config.html","searchKeys":["DualStreamerAudioConfig","fun DualStreamerAudioConfig(config: AudioConfig): DualStreamerAudioConfig","io.github.thibaultbee.streampack.core.streamers.dual.DualStreamerAudioConfig"]},{"name":"fun DualStreamerAudioConfig(firstAudioCodecConfig: DualStreamerAudioCodecConfig = DualStreamerAudioCodecConfig(), secondAudioCodecConfig: DualStreamerAudioCodecConfig = DualStreamerAudioCodecConfig(), sampleRate: Int = DualStreamerAudioCodecConfig.getDefaultSampleRate(\n        listOf(\n            firstAudioCodecConfig.mimeType,\n            secondAudioCodecConfig.mimeType\n        )\n    ), channelConfig: Int = AudioFormat.CHANNEL_IN_STEREO, byteFormat: Int = AudioFormat.ENCODING_PCM_16BIT): DualStreamerAudioConfig","description":"io.github.thibaultbee.streampack.core.streamers.dual.DualStreamerAudioConfig","location":"streampack-core/io.github.thibaultbee.streampack.core.streamers.dual/-dual-streamer-audio-config.html","searchKeys":["DualStreamerAudioConfig","fun DualStreamerAudioConfig(firstAudioCodecConfig: DualStreamerAudioCodecConfig = DualStreamerAudioCodecConfig(), secondAudioCodecConfig: DualStreamerAudioCodecConfig = DualStreamerAudioCodecConfig(), sampleRate: Int = DualStreamerAudioCodecConfig.getDefaultSampleRate(\n        listOf(\n            firstAudioCodecConfig.mimeType,\n            secondAudioCodecConfig.mimeType\n        )\n    ), channelConfig: Int = AudioFormat.CHANNEL_IN_STEREO, byteFormat: Int = AudioFormat.ENCODING_PCM_16BIT): DualStreamerAudioConfig","io.github.thibaultbee.streampack.core.streamers.dual.DualStreamerAudioConfig"]},{"name":"fun DualStreamerVideoConfig(config: VideoConfig): DualStreamerVideoConfig","description":"io.github.thibaultbee.streampack.core.streamers.dual.DualStreamerVideoConfig","location":"streampack-core/io.github.thibaultbee.streampack.core.streamers.dual/-dual-streamer-video-config.html","searchKeys":["DualStreamerVideoConfig","fun DualStreamerVideoConfig(config: VideoConfig): DualStreamerVideoConfig","io.github.thibaultbee.streampack.core.streamers.dual.DualStreamerVideoConfig"]},{"name":"fun DualStreamerVideoConfig(fps: Int = 30, firstVideoCodecConfig: DualStreamerVideoCodecConfig = DualStreamerVideoCodecConfig(), secondVideoCodecConfig: DualStreamerVideoCodecConfig = DualStreamerVideoCodecConfig()): DualStreamerVideoConfig","description":"io.github.thibaultbee.streampack.core.streamers.dual.DualStreamerVideoConfig","location":"streampack-core/io.github.thibaultbee.streampack.core.streamers.dual/-dual-streamer-video-config.html","searchKeys":["DualStreamerVideoConfig","fun DualStreamerVideoConfig(fps: Int = 30, firstVideoCodecConfig: DualStreamerVideoCodecConfig = DualStreamerVideoCodecConfig(), secondVideoCodecConfig: DualStreamerVideoCodecConfig = DualStreamerVideoCodecConfig()): DualStreamerVideoConfig","io.github.thibaultbee.streampack.core.streamers.dual.DualStreamerVideoConfig"]},{"name":"fun FloatArray.preRotate(degrees: Float, px: Float, py: Float)","description":"io.github.thibaultbee.streampack.core.elements.processing.video.utils.extensions.preRotate","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.processing.video.utils.extensions/pre-rotate.html","searchKeys":["preRotate","fun FloatArray.preRotate(degrees: Float, px: Float, py: Float)","io.github.thibaultbee.streampack.core.elements.processing.video.utils.extensions.preRotate"]},{"name":"fun FloatArray.preVerticalFlip(y: Float)","description":"io.github.thibaultbee.streampack.core.elements.processing.video.utils.extensions.preVerticalFlip","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.processing.video.utils.extensions/pre-vertical-flip.html","searchKeys":["preVerticalFlip","fun FloatArray.preVerticalFlip(y: Float)","io.github.thibaultbee.streampack.core.elements.processing.video.utils.extensions.preVerticalFlip"]},{"name":"fun IPipelineOutput.releaseBlocking()","description":"io.github.thibaultbee.streampack.core.pipelines.outputs.releaseBlocking","location":"streampack-core/io.github.thibaultbee.streampack.core.pipelines.outputs/release-blocking.html","searchKeys":["releaseBlocking","fun IPipelineOutput.releaseBlocking()","io.github.thibaultbee.streampack.core.pipelines.outputs.releaseBlocking"]},{"name":"fun IStreamer.releaseBlocking()","description":"io.github.thibaultbee.streampack.core.interfaces.releaseBlocking","location":"streampack-core/io.github.thibaultbee.streampack.core.interfaces/release-blocking.html","searchKeys":["releaseBlocking","fun IStreamer.releaseBlocking()","io.github.thibaultbee.streampack.core.interfaces.releaseBlocking"]},{"name":"fun Int.toBitList(): List<Boolean>","description":"io.github.thibaultbee.streampack.core.elements.utils.extensions.toBitList","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.extensions/to-bit-list.html","searchKeys":["toBitList","fun Int.toBitList(): List<Boolean>","io.github.thibaultbee.streampack.core.elements.utils.extensions.toBitList"]},{"name":"fun Int.toBoolean(): Boolean","description":"io.github.thibaultbee.streampack.core.elements.utils.extensions.toBoolean","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.extensions/to-boolean.html","searchKeys":["toBoolean","fun Int.toBoolean(): Boolean","io.github.thibaultbee.streampack.core.elements.utils.extensions.toBoolean"]},{"name":"fun List<Size>.closestTo(size: Size): Size","description":"io.github.thibaultbee.streampack.core.elements.utils.extensions.closestTo","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.extensions/closest-to.html","searchKeys":["closestTo","fun List<Size>.closestTo(size: Size): Size","io.github.thibaultbee.streampack.core.elements.utils.extensions.closestTo"]},{"name":"fun MediaType(context: Context, uri: Uri): MediaDescriptor.Type","description":"io.github.thibaultbee.streampack.core.configuration.mediadescriptor.MediaType","location":"streampack-core/io.github.thibaultbee.streampack.core.configuration.mediadescriptor/-media-type.html","searchKeys":["MediaType","fun MediaType(context: Context, uri: Uri): MediaDescriptor.Type","io.github.thibaultbee.streampack.core.configuration.mediadescriptor.MediaType"]},{"name":"fun MediaType(uri: Uri): MediaDescriptor.Type","description":"io.github.thibaultbee.streampack.core.configuration.mediadescriptor.MediaType","location":"streampack-core/io.github.thibaultbee.streampack.core.configuration.mediadescriptor/-media-type.html","searchKeys":["MediaType","fun MediaType(uri: Uri): MediaDescriptor.Type","io.github.thibaultbee.streampack.core.configuration.mediadescriptor.MediaType"]},{"name":"fun MultiException(vararg throwables: Throwable): MultiException","description":"io.github.thibaultbee.streampack.core.pipelines.utils.MultiException","location":"streampack-core/io.github.thibaultbee.streampack.core.pipelines.utils/-multi-exception.html","searchKeys":["MultiException","fun MultiException(vararg throwables: Throwable): MultiException","io.github.thibaultbee.streampack.core.pipelines.utils.MultiException"]},{"name":"fun OutputSurface(eglSurface: EGLSurface, width: Int, height: Int): OutputSurface","description":"io.github.thibaultbee.streampack.core.elements.processing.video.utils.OutputSurface","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.processing.video.utils/-output-surface.html","searchKeys":["OutputSurface","fun OutputSurface(eglSurface: EGLSurface, width: Int, height: Int): OutputSurface","io.github.thibaultbee.streampack.core.elements.processing.video.utils.OutputSurface"]},{"name":"fun RawFrameFactory(isDirect: Boolean): RawFrameFactory","description":"io.github.thibaultbee.streampack.core.elements.utils.pool.RawFrameFactory","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.pool/-raw-frame-factory.html","searchKeys":["RawFrameFactory","fun RawFrameFactory(isDirect: Boolean): RawFrameFactory","io.github.thibaultbee.streampack.core.elements.utils.pool.RawFrameFactory"]},{"name":"fun RawFramePullPush(frameProcessor: IFrameProcessor<RawFrame>, onFrame: (RawFrame) -> Unit, isDirect: Boolean = true): RawFramePullPush","description":"io.github.thibaultbee.streampack.core.elements.processing.RawFramePullPush","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.processing/-raw-frame-pull-push.html","searchKeys":["RawFramePullPush","fun RawFramePullPush(frameProcessor: IFrameProcessor<RawFrame>, onFrame: (RawFrame) -> Unit, isDirect: Boolean = true): RawFramePullPush","io.github.thibaultbee.streampack.core.elements.processing.RawFramePullPush"]},{"name":"fun RotationProvider.asFlowProvider(): IRotationFlowProvider","description":"io.github.thibaultbee.streampack.core.streamers.orientation.asFlowProvider","location":"streampack-core/io.github.thibaultbee.streampack.core.streamers.orientation/as-flow-provider.html","searchKeys":["asFlowProvider","fun RotationProvider.asFlowProvider(): IRotationFlowProvider","io.github.thibaultbee.streampack.core.streamers.orientation.asFlowProvider"]},{"name":"fun Size.rotate(rotationDegrees: Int): Size","description":"io.github.thibaultbee.streampack.core.elements.utils.extensions.rotate","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.extensions/rotate.html","searchKeys":["rotate","fun Size.rotate(rotationDegrees: Int): Size","io.github.thibaultbee.streampack.core.elements.utils.extensions.rotate"]},{"name":"fun Size.rotateFromNaturalOrientation(context: Context, rotationDegrees: Int): Size","description":"io.github.thibaultbee.streampack.core.elements.utils.extensions.rotateFromNaturalOrientation","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.extensions/rotate-from-natural-orientation.html","searchKeys":["rotateFromNaturalOrientation","fun Size.rotateFromNaturalOrientation(context: Context, rotationDegrees: Int): Size","io.github.thibaultbee.streampack.core.elements.utils.extensions.rotateFromNaturalOrientation"]},{"name":"fun Size.toRectF(): RectF","description":"io.github.thibaultbee.streampack.core.elements.processing.video.utils.extensions.toRectF","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.processing.video.utils.extensions/to-rect-f.html","searchKeys":["toRectF","fun Size.toRectF(): RectF","io.github.thibaultbee.streampack.core.elements.processing.video.utils.extensions.toRectF"]},{"name":"fun Size.toRectF(left: Int, top: Int): RectF","description":"io.github.thibaultbee.streampack.core.elements.processing.video.utils.extensions.toRectF","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.processing.video.utils.extensions/to-rect-f.html","searchKeys":["toRectF","fun Size.toRectF(left: Int, top: Int): RectF","io.github.thibaultbee.streampack.core.elements.processing.video.utils.extensions.toRectF"]},{"name":"fun StreamerPipeline.releaseBlocking()","description":"io.github.thibaultbee.streampack.core.pipelines.releaseBlocking","location":"streampack-core/io.github.thibaultbee.streampack.core.pipelines/release-blocking.html","searchKeys":["releaseBlocking","fun StreamerPipeline.releaseBlocking()","io.github.thibaultbee.streampack.core.pipelines.releaseBlocking"]},{"name":"fun UriMediaDescriptor(context: Context, uri: Uri, customData: List<Any> = emptyList()): UriMediaDescriptor","description":"io.github.thibaultbee.streampack.core.configuration.mediadescriptor.UriMediaDescriptor","location":"streampack-core/io.github.thibaultbee.streampack.core.configuration.mediadescriptor/-uri-media-descriptor.html","searchKeys":["UriMediaDescriptor","fun UriMediaDescriptor(context: Context, uri: Uri, customData: List<Any> = emptyList()): UriMediaDescriptor","io.github.thibaultbee.streampack.core.configuration.mediadescriptor.UriMediaDescriptor"]},{"name":"fun UriMediaDescriptor(context: Context, uriString: String, customData: List<Any> = emptyList()): UriMediaDescriptor","description":"io.github.thibaultbee.streampack.core.configuration.mediadescriptor.UriMediaDescriptor","location":"streampack-core/io.github.thibaultbee.streampack.core.configuration.mediadescriptor/-uri-media-descriptor.html","searchKeys":["UriMediaDescriptor","fun UriMediaDescriptor(context: Context, uriString: String, customData: List<Any> = emptyList()): UriMediaDescriptor","io.github.thibaultbee.streampack.core.configuration.mediadescriptor.UriMediaDescriptor"]},{"name":"fun UriMediaDescriptor(uri: Uri, customData: List<Any> = emptyList()): UriMediaDescriptor","description":"io.github.thibaultbee.streampack.core.configuration.mediadescriptor.UriMediaDescriptor","location":"streampack-core/io.github.thibaultbee.streampack.core.configuration.mediadescriptor/-uri-media-descriptor.html","searchKeys":["UriMediaDescriptor","fun UriMediaDescriptor(uri: Uri, customData: List<Any> = emptyList()): UriMediaDescriptor","io.github.thibaultbee.streampack.core.configuration.mediadescriptor.UriMediaDescriptor"]},{"name":"fun UriMediaDescriptor(uriString: String, customData: List<Any> = emptyList()): UriMediaDescriptor","description":"io.github.thibaultbee.streampack.core.configuration.mediadescriptor.UriMediaDescriptor","location":"streampack-core/io.github.thibaultbee.streampack.core.configuration.mediadescriptor/-uri-media-descriptor.html","searchKeys":["UriMediaDescriptor","fun UriMediaDescriptor(uriString: String, customData: List<Any> = emptyList()): UriMediaDescriptor","io.github.thibaultbee.streampack.core.configuration.mediadescriptor.UriMediaDescriptor"]},{"name":"fun VideoCodecConfig.isCompatibleWith(sourceConfig: VideoSourceConfig): Boolean","description":"io.github.thibaultbee.streampack.core.elements.utils.extensions.isCompatibleWith","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.extensions/is-compatible-with.html","searchKeys":["isCompatibleWith","fun VideoCodecConfig.isCompatibleWith(sourceConfig: VideoSourceConfig): Boolean","io.github.thibaultbee.streampack.core.elements.utils.extensions.isCompatibleWith"]},{"name":"fun VideoCodecConfig.rotateDegreesFromNaturalOrientation(context: Context, rotationDegrees: Int): VideoCodecConfig","description":"io.github.thibaultbee.streampack.core.elements.encoders.rotateDegreesFromNaturalOrientation","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.encoders/rotate-degrees-from-natural-orientation.html","searchKeys":["rotateDegreesFromNaturalOrientation","fun VideoCodecConfig.rotateDegreesFromNaturalOrientation(context: Context, rotationDegrees: Int): VideoCodecConfig","io.github.thibaultbee.streampack.core.elements.encoders.rotateDegreesFromNaturalOrientation"]},{"name":"fun VideoCodecConfig.rotateFromNaturalOrientation(context: Context, rotation: Int): VideoCodecConfig","description":"io.github.thibaultbee.streampack.core.elements.encoders.rotateFromNaturalOrientation","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.encoders/rotate-from-natural-orientation.html","searchKeys":["rotateFromNaturalOrientation","fun VideoCodecConfig.rotateFromNaturalOrientation(context: Context, rotation: Int): VideoCodecConfig","io.github.thibaultbee.streampack.core.elements.encoders.rotateFromNaturalOrientation"]},{"name":"fun VideoSourceConfig.isCompatibleWith(sourceConfig: VideoSourceConfig): Boolean","description":"io.github.thibaultbee.streampack.core.elements.utils.extensions.isCompatibleWith","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.extensions/is-compatible-with.html","searchKeys":["isCompatibleWith","fun VideoSourceConfig.isCompatibleWith(sourceConfig: VideoSourceConfig): Boolean","io.github.thibaultbee.streampack.core.elements.utils.extensions.isCompatibleWith"]},{"name":"fun add(amfParameter: AmfParameter)","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.amf.containers.AmfContainer.add","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.amf.containers/-amf-container/add.html","searchKeys":["add","fun add(amfParameter: AmfParameter)","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.amf.containers.AmfContainer.add"]},{"name":"fun add(frame: Frame)","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models.TrackChunks.add","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models/-track-chunks/add.html","searchKeys":["add","fun add(frame: Frame)","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models.TrackChunks.add"]},{"name":"fun add(frame: Frame, streamPid: Int)","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models.Segment.add","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models/-segment/add.html","searchKeys":["add","fun add(frame: Frame, streamPid: Int)","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models.Segment.add"]},{"name":"fun add(id: Int, frame: Frame)","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models.Chunk.add","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models/-chunk/add.html","searchKeys":["add","fun add(id: Int, frame: Frame)","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models.Chunk.add"]},{"name":"fun add(name: String, v: Any)","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.amf.containers.AmfContainer.add","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.amf.containers/-amf-container/add.html","searchKeys":["add","fun add(name: String, v: Any)","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.amf.containers.AmfContainer.add"]},{"name":"fun add(v: Any)","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.amf.containers.AmfContainer.add","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.amf.containers/-amf-container/add.html","searchKeys":["add","fun add(v: Any)","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.amf.containers.AmfContainer.add"]},{"name":"fun addListener(listener: ChunkedFileOutputStream.Listener)","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.sinks.ChunkedFileOutputStreamSink.addListener","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.sinks/-chunked-file-output-stream-sink/add-listener.html","searchKeys":["addListener","fun addListener(listener: ChunkedFileOutputStream.Listener)","io.github.thibaultbee.streampack.core.elements.endpoints.composites.sinks.ChunkedFileOutputStreamSink.addListener"]},{"name":"fun addListener(listener: ChunkedFileOutputStream.Listener)","description":"io.github.thibaultbee.streampack.core.elements.utils.ChunkedFileOutputStream.addListener","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils/-chunked-file-output-stream/add-listener.html","searchKeys":["addListener","fun addListener(listener: ChunkedFileOutputStream.Listener)","io.github.thibaultbee.streampack.core.elements.utils.ChunkedFileOutputStream.addListener"]},{"name":"fun addService(tsServiceInfo: TSServiceInfo)","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.TsMuxer.addService","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts/-ts-muxer/add-service.html","searchKeys":["addService","fun addService(tsServiceInfo: TSServiceInfo)","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.TsMuxer.addService"]},{"name":"fun addStreams(tsServiceInfo: TSServiceInfo, streamsConfig: List<CodecConfig>): Map<CodecConfig, Int>","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.TsMuxer.addStreams","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts/-ts-muxer/add-streams.html","searchKeys":["addStreams","fun addStreams(tsServiceInfo: TSServiceInfo, streamsConfig: List<CodecConfig>): Map<CodecConfig, Int>","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.TsMuxer.addStreams"]},{"name":"fun align(): Int","description":"io.github.thibaultbee.streampack.core.elements.utils.av.buffer.BitBuffer.align","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.buffer/-bit-buffer/align.html","searchKeys":["align","fun align(): Int","io.github.thibaultbee.streampack.core.elements.utils.av.buffer.BitBuffer.align"]},{"name":"fun applyBurstSession()","description":"io.github.thibaultbee.streampack.core.elements.sources.video.camera.CameraSettings.applyBurstSession","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.video.camera/-camera-settings/apply-burst-session.html","searchKeys":["applyBurstSession","fun applyBurstSession()","io.github.thibaultbee.streampack.core.elements.sources.video.camera.CameraSettings.applyBurstSession"]},{"name":"fun applyRepeatingSession()","description":"io.github.thibaultbee.streampack.core.elements.sources.video.camera.CameraSettings.applyRepeatingSession","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.video.camera/-camera-settings/apply-repeating-session.html","searchKeys":["applyRepeatingSession","fun applyRepeatingSession()","io.github.thibaultbee.streampack.core.elements.sources.video.camera.CameraSettings.applyRepeatingSession"]},{"name":"fun build(): FlvTag","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.video.VideoTagFactory.build","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.video/-video-tag-factory/build.html","searchKeys":["build","fun build(): FlvTag","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.video.VideoTagFactory.build"]},{"name":"fun build(): GraphicDeviceInfo","description":"io.github.thibaultbee.streampack.core.elements.processing.video.utils.GraphicDeviceInfo.Builder.build","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.processing.video.utils/-graphic-device-info/-builder/build.html","searchKeys":["build","fun build(): GraphicDeviceInfo","io.github.thibaultbee.streampack.core.elements.processing.video.utils.GraphicDeviceInfo.Builder.build"]},{"name":"fun build(): List<FlvTag>","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.AVTagsFactory.build","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags/-a-v-tags-factory/build.html","searchKeys":["build","fun build(): List<FlvTag>","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.AVTagsFactory.build"]},{"name":"fun build(cameraManager: CameraManager, cameraSettings: CameraSettings): CameraSettings.Zoom","description":"io.github.thibaultbee.streampack.core.elements.sources.video.camera.CameraSettings.Zoom.Companion.build","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.video.camera/-camera-settings/-zoom/-companion/build.html","searchKeys":["build","fun build(cameraManager: CameraManager, cameraSettings: CameraSettings): CameraSettings.Zoom","io.github.thibaultbee.streampack.core.elements.sources.video.camera.CameraSettings.Zoom.Companion.build"]},{"name":"fun build(codecInfo: MediaCodecInfo, mimeType: String): EncoderInfo","description":"io.github.thibaultbee.streampack.core.elements.encoders.mediacodec.EncoderInfo.Companion.build","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.encoders.mediacodec/-encoder-info/-companion/build.html","searchKeys":["build","fun build(codecInfo: MediaCodecInfo, mimeType: String): EncoderInfo","io.github.thibaultbee.streampack.core.elements.encoders.mediacodec.EncoderInfo.Companion.build"]},{"name":"fun build(v: Any): AmfParameter","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.amf.AmfParameter.Companion.build","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.amf/-amf-parameter/-companion/build.html","searchKeys":["build","fun build(v: Any): AmfParameter","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.amf.AmfParameter.Companion.build"]},{"name":"fun buildAudioSourceConfig(audioSourceConfigs: Set<AudioSourceConfig>): AudioSourceConfig","description":"io.github.thibaultbee.streampack.core.pipelines.utils.SourceConfigUtils.buildAudioSourceConfig","location":"streampack-core/io.github.thibaultbee.streampack.core.pipelines.utils/-source-config-utils/build-audio-source-config.html","searchKeys":["buildAudioSourceConfig","fun buildAudioSourceConfig(audioSourceConfigs: Set<AudioSourceConfig>): AudioSourceConfig","io.github.thibaultbee.streampack.core.pipelines.utils.SourceConfigUtils.buildAudioSourceConfig"]},{"name":"fun buildVideoSourceConfig(videoSourceConfigs: Set<VideoSourceConfig>): VideoSourceConfig","description":"io.github.thibaultbee.streampack.core.pipelines.utils.SourceConfigUtils.buildVideoSourceConfig","location":"streampack-core/io.github.thibaultbee.streampack.core.pipelines.utils/-source-config-utils/build-video-source-config.html","searchKeys":["buildVideoSourceConfig","fun buildVideoSourceConfig(videoSourceConfigs: Set<VideoSourceConfig>): VideoSourceConfig","io.github.thibaultbee.streampack.core.pipelines.utils.SourceConfigUtils.buildVideoSourceConfig"]},{"name":"fun calculateViewportRect(aspectRatioMode: AspectRatioMode, sourceSize: Size, targetSize: Size): Rect","description":"io.github.thibaultbee.streampack.core.elements.processing.video.outputs.ViewPortUtils.calculateViewportRect","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.processing.video.outputs/-view-port-utils/calculate-viewport-rect.html","searchKeys":["calculateViewportRect","fun calculateViewportRect(aspectRatioMode: AspectRatioMode, sourceSize: Size, targetSize: Size): Rect","io.github.thibaultbee.streampack.core.elements.processing.video.outputs.ViewPortUtils.calculateViewportRect"]},{"name":"fun calculateViewportRect(aspectRatioMode: AspectRatioMode, sourceWidth: Int, sourceHeight: Int, targetWidth: Int, targetHeight: Int): Rect","description":"io.github.thibaultbee.streampack.core.elements.processing.video.outputs.ViewPortUtils.calculateViewportRect","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.processing.video.outputs/-view-port-utils/calculate-viewport-rect.html","searchKeys":["calculateViewportRect","fun calculateViewportRect(aspectRatioMode: AspectRatioMode, sourceWidth: Int, sourceHeight: Int, targetWidth: Int, targetHeight: Int): Rect","io.github.thibaultbee.streampack.core.elements.processing.video.outputs.ViewPortUtils.calculateViewportRect"]},{"name":"fun cancel()","description":"io.github.thibaultbee.streampack.core.elements.utils.ConflatedJob.cancel","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils/-conflated-job/cancel.html","searchKeys":["cancel","fun cancel()","io.github.thibaultbee.streampack.core.elements.utils.ConflatedJob.cancel"]},{"name":"fun cancelFocusAndMetering()","description":"io.github.thibaultbee.streampack.core.elements.sources.video.camera.CameraSettings.FocusMetering.cancelFocusAndMetering","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.video.camera/-camera-settings/-focus-metering/cancel-focus-and-metering.html","searchKeys":["cancelFocusAndMetering","fun cancelFocusAndMetering()","io.github.thibaultbee.streampack.core.elements.sources.video.camera.CameraSettings.FocusMetering.cancelFocusAndMetering"]},{"name":"fun checkEglErrorOrLog(op: String)","description":"io.github.thibaultbee.streampack.core.elements.processing.video.utils.GLUtils.checkEglErrorOrLog","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.processing.video.utils/-g-l-utils/check-egl-error-or-log.html","searchKeys":["checkEglErrorOrLog","fun checkEglErrorOrLog(op: String)","io.github.thibaultbee.streampack.core.elements.processing.video.utils.GLUtils.checkEglErrorOrLog"]},{"name":"fun checkEglErrorOrThrow(op: String)","description":"io.github.thibaultbee.streampack.core.elements.processing.video.utils.GLUtils.checkEglErrorOrThrow","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.processing.video.utils/-g-l-utils/check-egl-error-or-throw.html","searchKeys":["checkEglErrorOrThrow","fun checkEglErrorOrThrow(op: String)","io.github.thibaultbee.streampack.core.elements.processing.video.utils.GLUtils.checkEglErrorOrThrow"]},{"name":"fun checkGlErrorOrThrow(op: String)","description":"io.github.thibaultbee.streampack.core.elements.processing.video.utils.GLUtils.checkGlErrorOrThrow","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.processing.video.utils/-g-l-utils/check-gl-error-or-throw.html","searchKeys":["checkGlErrorOrThrow","fun checkGlErrorOrThrow(op: String)","io.github.thibaultbee.streampack.core.elements.processing.video.utils.GLUtils.checkGlErrorOrThrow"]},{"name":"fun checkGlThreadOrThrow(thread: Thread?)","description":"io.github.thibaultbee.streampack.core.elements.processing.video.utils.GLUtils.checkGlThreadOrThrow","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.processing.video.utils/-g-l-utils/check-gl-thread-or-throw.html","searchKeys":["checkGlThreadOrThrow","fun checkGlThreadOrThrow(thread: Thread?)","io.github.thibaultbee.streampack.core.elements.processing.video.utils.GLUtils.checkGlThreadOrThrow"]},{"name":"fun checkInitializedOrThrow(initialized: AtomicBoolean, shouldInitialized: Boolean)","description":"io.github.thibaultbee.streampack.core.elements.processing.video.utils.GLUtils.checkInitializedOrThrow","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.processing.video.utils/-g-l-utils/check-initialized-or-throw.html","searchKeys":["checkInitializedOrThrow","fun checkInitializedOrThrow(initialized: AtomicBoolean, shouldInitialized: Boolean)","io.github.thibaultbee.streampack.core.elements.processing.video.utils.GLUtils.checkInitializedOrThrow"]},{"name":"fun checkLocationOrThrow(location: Int, label: String)","description":"io.github.thibaultbee.streampack.core.elements.processing.video.utils.GLUtils.checkLocationOrThrow","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.processing.video.utils/-g-l-utils/check-location-or-throw.html","searchKeys":["checkLocationOrThrow","fun checkLocationOrThrow(location: Int, label: String)","io.github.thibaultbee.streampack.core.elements.processing.video.utils.GLUtils.checkLocationOrThrow"]},{"name":"fun chooseSurfaceAttrib(eglExtensions: String, dynamicRange: DynamicRangeProfile): IntArray","description":"io.github.thibaultbee.streampack.core.elements.processing.video.utils.GLUtils.chooseSurfaceAttrib","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.processing.video.utils/-g-l-utils/choose-surface-attrib.html","searchKeys":["chooseSurfaceAttrib","fun chooseSurfaceAttrib(eglExtensions: String, dynamicRange: DynamicRangeProfile): IntArray","io.github.thibaultbee.streampack.core.elements.processing.video.utils.GLUtils.chooseSurfaceAttrib"]},{"name":"fun copy(mimeType: String = this.mimeType, startBitrate: Int = this.startBitrate, resolution: Size = this.resolution, fps: Int = this.fps, profile: Int = this.profile, level: Int = this.level, gopDuration: Float = this.gopDurationInS): VideoCodecConfig","description":"io.github.thibaultbee.streampack.core.elements.encoders.VideoCodecConfig.copy","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.encoders/-video-codec-config/copy.html","searchKeys":["copy","fun copy(mimeType: String = this.mimeType, startBitrate: Int = this.startBitrate, resolution: Size = this.resolution, fps: Int = this.fps, profile: Int = this.profile, level: Int = this.level, gopDuration: Float = this.gopDurationInS): VideoCodecConfig","io.github.thibaultbee.streampack.core.elements.encoders.VideoCodecConfig.copy"]},{"name":"fun copy(mimeType: String = this.mimeType, startBitrate: Int = this.startBitrate, sampleRate: Int = this.sampleRate, channelConfig: Int = this.channelConfig, byteFormat: Int = this.byteFormat, profile: Int = this.profile): AudioCodecConfig","description":"io.github.thibaultbee.streampack.core.elements.encoders.AudioCodecConfig.copy","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.encoders/-audio-codec-config/copy.html","searchKeys":["copy","fun copy(mimeType: String = this.mimeType, startBitrate: Int = this.startBitrate, sampleRate: Int = this.sampleRate, channelConfig: Int = this.channelConfig, byteFormat: Int = this.byteFormat, profile: Int = this.profile): AudioCodecConfig","io.github.thibaultbee.streampack.core.elements.encoders.AudioCodecConfig.copy"]},{"name":"fun create4x4IdentityMatrix(): FloatArray","description":"io.github.thibaultbee.streampack.core.elements.processing.video.utils.GLUtils.create4x4IdentityMatrix","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.processing.video.utils/-g-l-utils/create4x4-identity-matrix.html","searchKeys":["create4x4IdentityMatrix","fun create4x4IdentityMatrix(): FloatArray","io.github.thibaultbee.streampack.core.elements.processing.video.utils.GLUtils.create4x4IdentityMatrix"]},{"name":"fun createDefaultTsServiceInfo(): TSServiceInfo","description":"io.github.thibaultbee.streampack.core.configuration.mediadescriptor.createDefaultTsServiceInfo","location":"streampack-core/io.github.thibaultbee.streampack.core.configuration.mediadescriptor/create-default-ts-service-info.html","searchKeys":["createDefaultTsServiceInfo","fun createDefaultTsServiceInfo(): TSServiceInfo","io.github.thibaultbee.streampack.core.configuration.mediadescriptor.createDefaultTsServiceInfo"]},{"name":"fun createEncodingOutput(withAudio: Boolean = this.withAudio, withVideo: Boolean = this.withVideo, endpointFactory: IEndpointInternal.Factory = DynamicEndpointFactory(), targetRotation: Int = context.displayRotation): IConfigurableAudioVideoEncodingPipelineOutput","description":"io.github.thibaultbee.streampack.core.pipelines.StreamerPipeline.createEncodingOutput","location":"streampack-core/io.github.thibaultbee.streampack.core.pipelines/-streamer-pipeline/create-encoding-output.html","searchKeys":["createEncodingOutput","fun createEncodingOutput(withAudio: Boolean = this.withAudio, withVideo: Boolean = this.withVideo, endpointFactory: IEndpointInternal.Factory = DynamicEndpointFactory(), targetRotation: Int = context.displayRotation): IConfigurableAudioVideoEncodingPipelineOutput","io.github.thibaultbee.streampack.core.pipelines.StreamerPipeline.createEncodingOutput"]},{"name":"fun createFloatBuffer(coords: FloatArray): FloatBuffer","description":"io.github.thibaultbee.streampack.core.elements.processing.video.utils.GLUtils.createFloatBuffer","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.processing.video.utils/-g-l-utils/create-float-buffer.html","searchKeys":["createFloatBuffer","fun createFloatBuffer(coords: FloatArray): FloatBuffer","io.github.thibaultbee.streampack.core.elements.processing.video.utils.GLUtils.createFloatBuffer"]},{"name":"fun createPBufferSurface(eglDisplay: EGLDisplay, eglConfig: EGLConfig, width: Int, height: Int): EGLSurface","description":"io.github.thibaultbee.streampack.core.elements.processing.video.utils.GLUtils.createPBufferSurface","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.processing.video.utils/-g-l-utils/create-p-buffer-surface.html","searchKeys":["createPBufferSurface","fun createPBufferSurface(eglDisplay: EGLDisplay, eglConfig: EGLConfig, width: Int, height: Int): EGLSurface","io.github.thibaultbee.streampack.core.elements.processing.video.utils.GLUtils.createPBufferSurface"]},{"name":"fun createPrograms(dynamicRange: DynamicRangeProfile, shaderProviderOverrides: Map<GLUtils.InputFormat?, ShaderProvider?>): Map<GLUtils.InputFormat, GLUtils.Program2D>","description":"io.github.thibaultbee.streampack.core.elements.processing.video.utils.GLUtils.createPrograms","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.processing.video.utils/-g-l-utils/create-programs.html","searchKeys":["createPrograms","fun createPrograms(dynamicRange: DynamicRangeProfile, shaderProviderOverrides: Map<GLUtils.InputFormat?, ShaderProvider?>): Map<GLUtils.InputFormat, GLUtils.Program2D>","io.github.thibaultbee.streampack.core.elements.processing.video.utils.GLUtils.createPrograms"]},{"name":"fun createScreenCaptureIntent(context: Context): Intent","description":"io.github.thibaultbee.streampack.core.streamers.utils.MediaProjectionUtils.createScreenCaptureIntent","location":"streampack-core/io.github.thibaultbee.streampack.core.streamers.utils/-media-projection-utils/create-screen-capture-intent.html","searchKeys":["createScreenCaptureIntent","fun createScreenCaptureIntent(context: Context): Intent","io.github.thibaultbee.streampack.core.streamers.utils.MediaProjectionUtils.createScreenCaptureIntent"]},{"name":"fun createTexture(): Int","description":"io.github.thibaultbee.streampack.core.elements.processing.video.utils.GLUtils.createTexture","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.processing.video.utils/-g-l-utils/create-texture.html","searchKeys":["createTexture","fun createTexture(): Int","io.github.thibaultbee.streampack.core.elements.processing.video.utils.GLUtils.createTexture"]},{"name":"fun createTraf(baseDataOffset: Long, moofSize: Int): TrackFragmentBox","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models.TrackChunks.createTraf","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models/-track-chunks/create-traf.html","searchKeys":["createTraf","fun createTraf(baseDataOffset: Long, moofSize: Int): TrackFragmentBox","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models.TrackChunks.createTraf"]},{"name":"fun createTrak(firstChunkOffset: Long): TrackBox","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models.TrackChunks.createTrak","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models/-track-chunks/create-trak.html","searchKeys":["createTrak","fun createTrak(firstChunkOffset: Long): TrackBox","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models.TrackChunks.createTrak"]},{"name":"fun createTref(): TrackExtendsBox","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models.TrackChunks.createTref","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models/-track-chunks/create-tref.html","searchKeys":["createTref","fun createTref(): TrackExtendsBox","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models.TrackChunks.createTref"]},{"name":"fun createWindowSurface(eglDisplay: EGLDisplay, eglConfig: EGLConfig, surface: Surface, surfaceAttrib: IntArray): EGLSurface","description":"io.github.thibaultbee.streampack.core.elements.processing.video.utils.GLUtils.createWindowSurface","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.processing.video.utils/-g-l-utils/create-window-surface.html","searchKeys":["createWindowSurface","fun createWindowSurface(eglDisplay: EGLDisplay, eglConfig: EGLConfig, surface: Surface, surfaceAttrib: IntArray): EGLSurface","io.github.thibaultbee.streampack.core.elements.processing.video.utils.GLUtils.createWindowSurface"]},{"name":"fun currentTime(): Long","description":"io.github.thibaultbee.streampack.core.elements.utils.TimeUtils.currentTime","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils/-time-utils/current-time.html","searchKeys":["currentTime","fun currentTime(): Long","io.github.thibaultbee.streampack.core.elements.utils.TimeUtils.currentTime"]},{"name":"fun delete()","description":"io.github.thibaultbee.streampack.core.elements.processing.video.utils.GLUtils.Program2D.delete","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.processing.video.utils/-g-l-utils/-program2-d/delete.html","searchKeys":["delete","fun delete()","io.github.thibaultbee.streampack.core.elements.processing.video.utils.GLUtils.Program2D.delete"]},{"name":"fun deleteFbo(fbo: Int)","description":"io.github.thibaultbee.streampack.core.elements.processing.video.utils.GLUtils.deleteFbo","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.processing.video.utils/-g-l-utils/delete-fbo.html","searchKeys":["deleteFbo","fun deleteFbo(fbo: Int)","io.github.thibaultbee.streampack.core.elements.processing.video.utils.GLUtils.deleteFbo"]},{"name":"fun deleteTexture(texture: Int)","description":"io.github.thibaultbee.streampack.core.elements.processing.video.utils.GLUtils.deleteTexture","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.processing.video.utils/-g-l-utils/delete-texture.html","searchKeys":["deleteTexture","fun deleteTexture(texture: Int)","io.github.thibaultbee.streampack.core.elements.processing.video.utils.GLUtils.deleteTexture"]},{"name":"fun encode(): ByteBuffer","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.amf.AmfParameter.encode","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.amf/-amf-parameter/encode.html","searchKeys":["encode","fun encode(): ByteBuffer","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.amf.AmfParameter.encode"]},{"name":"fun entryOf(profileIdc: Short): HEVCProfile","description":"io.github.thibaultbee.streampack.core.elements.utils.av.video.hevc.HEVCProfile.Companion.entryOf","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.video.hevc/-h-e-v-c-profile/-companion/entry-of.html","searchKeys":["entryOf","fun entryOf(profileIdc: Short): HEVCProfile","io.github.thibaultbee.streampack.core.elements.utils.av.video.hevc.HEVCProfile.Companion.entryOf"]},{"name":"fun findEncoder(format: MediaFormat): String","description":"io.github.thibaultbee.streampack.core.elements.encoders.mediacodec.MediaCodecHelper.findEncoder","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.encoders.mediacodec/-media-codec-helper/find-encoder.html","searchKeys":["findEncoder","fun findEncoder(format: MediaFormat): String","io.github.thibaultbee.streampack.core.elements.encoders.mediacodec.MediaCodecHelper.findEncoder"]},{"name":"fun findEncoder(mimeType: String): String","description":"io.github.thibaultbee.streampack.core.elements.encoders.mediacodec.MediaCodecHelper.findEncoder","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.encoders.mediacodec/-media-codec-helper/find-encoder.html","searchKeys":["findEncoder","fun findEncoder(mimeType: String): String","io.github.thibaultbee.streampack.core.elements.encoders.mediacodec.MediaCodecHelper.findEncoder"]},{"name":"fun from(tag: Byte): Tags","description":"io.github.thibaultbee.streampack.core.elements.utils.av.descriptors.Tags.Companion.from","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.descriptors/-tags/-companion/from.html","searchKeys":["from","fun from(tag: Byte): Tags","io.github.thibaultbee.streampack.core.elements.utils.av.descriptors.Tags.Companion.from"]},{"name":"fun fromAudioConfig(config: AudioCodecConfig): AudioMetadata","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.AudioMetadata.Companion.fromAudioConfig","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags/-audio-metadata/-companion/from-audio-config.html","searchKeys":["fromAudioConfig","fun fromAudioConfig(config: AudioCodecConfig): AudioMetadata","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.AudioMetadata.Companion.fromAudioConfig"]},{"name":"fun fromAudioConfig(config: AudioCodecConfig): AudioSpecificConfig","description":"io.github.thibaultbee.streampack.core.elements.utils.av.audio.AudioSpecificConfig.Companion.fromAudioConfig","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.audio/-audio-specific-config/-companion/from-audio-config.html","searchKeys":["fromAudioConfig","fun fromAudioConfig(config: AudioCodecConfig): AudioSpecificConfig","io.github.thibaultbee.streampack.core.elements.utils.av.audio.AudioSpecificConfig.Companion.fromAudioConfig"]},{"name":"fun fromAudioConfig(config: AudioCodecConfig, payloadLength: Int): ADTS","description":"io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.ADTS.Companion.fromAudioConfig","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac/-a-d-t-s/-companion/from-audio-config.html","searchKeys":["fromAudioConfig","fun fromAudioConfig(config: AudioCodecConfig, payloadLength: Int): ADTS","io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.ADTS.Companion.fromAudioConfig"]},{"name":"fun fromAudioConfig(frameBuffer: ByteBuffer, audioConfig: AudioCodecConfig): ADTSFrameWriter","description":"io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.ADTSFrameWriter.Companion.fromAudioConfig","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac/-a-d-t-s-frame-writer/-companion/from-audio-config.html","searchKeys":["fromAudioConfig","fun fromAudioConfig(frameBuffer: ByteBuffer, audioConfig: AudioCodecConfig): ADTSFrameWriter","io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.ADTSFrameWriter.Companion.fromAudioConfig"]},{"name":"fun fromByteFormat(byteFormat: Int): SoundSize","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.SoundSize.Companion.fromByteFormat","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags/-sound-size/-companion/from-byte-format.html","searchKeys":["fromByteFormat","fun fromByteFormat(byteFormat: Int): SoundSize","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.SoundSize.Companion.fromByteFormat"]},{"name":"fun fromChannelConfig(channelConfig: Int): ChannelConfiguration","description":"io.github.thibaultbee.streampack.core.elements.utils.av.audio.ChannelConfiguration.Companion.fromChannelConfig","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.audio/-channel-configuration/-companion/from-channel-config.html","searchKeys":["fromChannelConfig","fun fromChannelConfig(channelConfig: Int): ChannelConfiguration","io.github.thibaultbee.streampack.core.elements.utils.av.audio.ChannelConfiguration.Companion.fromChannelConfig"]},{"name":"fun fromChannelConfig(channelConfig: Int): SoundType","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.SoundType.Companion.fromChannelConfig","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags/-sound-type/-companion/from-channel-config.html","searchKeys":["fromChannelConfig","fun fromChannelConfig(channelConfig: Int): SoundType","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.SoundType.Companion.fromChannelConfig"]},{"name":"fun fromChannelCount(channelCount: Int): ChannelConfiguration","description":"io.github.thibaultbee.streampack.core.elements.utils.av.audio.ChannelConfiguration.Companion.fromChannelCount","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.audio/-channel-configuration/-companion/from-channel-count.html","searchKeys":["fromChannelCount","fun fromChannelCount(channelCount: Int): ChannelConfiguration","io.github.thibaultbee.streampack.core.elements.utils.av.audio.ChannelConfiguration.Companion.fromChannelCount"]},{"name":"fun fromChromaIdc(chromaIdc: Byte): ChromaFormat","description":"io.github.thibaultbee.streampack.core.elements.utils.av.video.ChromaFormat.Companion.fromChromaIdc","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.video/-chroma-format/-companion/from-chroma-idc.html","searchKeys":["fromChromaIdc","fun fromChromaIdc(chromaIdc: Byte): ChromaFormat","io.github.thibaultbee.streampack.core.elements.utils.av.video.ChromaFormat.Companion.fromChromaIdc"]},{"name":"fun fromColorStandard(colorStandard: Int): ColorPrimaries","description":"io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.ColorPrimaries.Companion.fromColorStandard","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx/-color-primaries/-companion/from-color-standard.html","searchKeys":["fromColorStandard","fun fromColorStandard(colorStandard: Int): ColorPrimaries","io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.ColorPrimaries.Companion.fromColorStandard"]},{"name":"fun fromColorStandard(colorStandard: Int): MatrixCoefficients","description":"io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.MatrixCoefficients.Companion.fromColorStandard","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx/-matrix-coefficients/-companion/from-color-standard.html","searchKeys":["fromColorStandard","fun fromColorStandard(colorStandard: Int): MatrixCoefficients","io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.MatrixCoefficients.Companion.fromColorStandard"]},{"name":"fun fromColorTransfer(colorTransfer: Int): TransferCharacteristics","description":"io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.TransferCharacteristics.Companion.fromColorTransfer","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx/-transfer-characteristics/-companion/from-color-transfer.html","searchKeys":["fromColorTransfer","fun fromColorTransfer(colorTransfer: Int): TransferCharacteristics","io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.TransferCharacteristics.Companion.fromColorTransfer"]},{"name":"fun fromConfig(config: CodecConfig): Metadata","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.Metadata.Companion.fromConfig","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags/-metadata/-companion/from-config.html","searchKeys":["fromConfig","fun fromConfig(config: CodecConfig): Metadata","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.Metadata.Companion.fromConfig"]},{"name":"fun fromConfigs(configs: List<CodecConfig>): OnMetadata","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.OnMetadata.Companion.fromConfigs","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags/-on-metadata/-companion/from-configs.html","searchKeys":["fromConfigs","fun fromConfigs(configs: List<CodecConfig>): OnMetadata","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.OnMetadata.Companion.fromConfigs"]},{"name":"fun fromDecoderSpecificInfo(decoderSpecificInfo: ByteBuffer): StreamMuxConfig","description":"io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.StreamMuxConfig.Companion.fromDecoderSpecificInfo","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac/-stream-mux-config/-companion/from-decoder-specific-info.html","searchKeys":["fromDecoderSpecificInfo","fun fromDecoderSpecificInfo(decoderSpecificInfo: ByteBuffer): StreamMuxConfig","io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.StreamMuxConfig.Companion.fromDecoderSpecificInfo"]},{"name":"fun fromDecoderSpecificInfo(frameBuffer: ByteBuffer, decoderSpecificInfo: ByteBuffer): LATMFrameWriter","description":"io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.LATMFrameWriter.Companion.fromDecoderSpecificInfo","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac/-l-a-t-m-frame-writer/-companion/from-decoder-specific-info.html","searchKeys":["fromDecoderSpecificInfo","fun fromDecoderSpecificInfo(frameBuffer: ByteBuffer, decoderSpecificInfo: ByteBuffer): LATMFrameWriter","io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.LATMFrameWriter.Companion.fromDecoderSpecificInfo"]},{"name":"fun fromDecoderSpecificInfo(payload: ByteBuffer, decoderSpecificInfo: ByteBuffer): AudioMuxElement","description":"io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.AudioMuxElement.Companion.fromDecoderSpecificInfo","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac/-audio-mux-element/-companion/from-decoder-specific-info.html","searchKeys":["fromDecoderSpecificInfo","fun fromDecoderSpecificInfo(payload: ByteBuffer, decoderSpecificInfo: ByteBuffer): AudioMuxElement","io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.AudioMuxElement.Companion.fromDecoderSpecificInfo"]},{"name":"fun fromDts(dtsList: List<Long>, hasUnknownLastDelta: Boolean): TimeToSampleBox","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.TimeToSampleBox.Companion.fromDts","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-time-to-sample-box/-companion/from-dts.html","searchKeys":["fromDts","fun fromDts(dtsList: List<Long>, hasUnknownLastDelta: Boolean): TimeToSampleBox","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.TimeToSampleBox.Companion.fromDts"]},{"name":"fun fromId(id: Byte): VP9CodecPrivate.CodecFeature.Ids","description":"io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.VP9CodecPrivate.CodecFeature.Ids.Companion.fromId","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx/-v-p9-codec-private/-codec-feature/-ids/-companion/from-id.html","searchKeys":["fromId","fun fromId(id: Byte): VP9CodecPrivate.CodecFeature.Ids","io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.VP9CodecPrivate.CodecFeature.Ids.Companion.fromId"]},{"name":"fun fromMediaFormat(format: Int): Level","description":"io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.Level.Companion.fromMediaFormat","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx/-level/-companion/from-media-format.html","searchKeys":["fromMediaFormat","fun fromMediaFormat(format: Int): Level","io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.Level.Companion.fromMediaFormat"]},{"name":"fun fromMediaFormat(format: MediaFormat): AudioSpecificConfig","description":"io.github.thibaultbee.streampack.core.elements.utils.av.audio.AudioSpecificConfig.Companion.fromMediaFormat","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.audio/-audio-specific-config/-companion/from-media-format.html","searchKeys":["fromMediaFormat","fun fromMediaFormat(format: MediaFormat): AudioSpecificConfig","io.github.thibaultbee.streampack.core.elements.utils.av.audio.AudioSpecificConfig.Companion.fromMediaFormat"]},{"name":"fun fromMediaFormat(format: MediaFormat): VPCodecConfigurationRecord","description":"io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.VPCodecConfigurationRecord.Companion.fromMediaFormat","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx/-v-p-codec-configuration-record/-companion/from-media-format.html","searchKeys":["fromMediaFormat","fun fromMediaFormat(format: MediaFormat): VPCodecConfigurationRecord","io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.VPCodecConfigurationRecord.Companion.fromMediaFormat"]},{"name":"fun fromMediaFormat(format: MediaFormat, payloadLength: Int): ADTS","description":"io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.ADTS.Companion.fromMediaFormat","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac/-a-d-t-s/-companion/from-media-format.html","searchKeys":["fromMediaFormat","fun fromMediaFormat(format: MediaFormat, payloadLength: Int): ADTS","io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.ADTS.Companion.fromMediaFormat"]},{"name":"fun fromMediaFormat(mediaCodecProfile: Int): Profile","description":"io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.Profile.Companion.fromMediaFormat","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx/-profile/-companion/from-media-format.html","searchKeys":["fromMediaFormat","fun fromMediaFormat(mediaCodecProfile: Int): Profile","io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.Profile.Companion.fromMediaFormat"]},{"name":"fun fromMediaFormat(mediaFormat: MediaFormat): AV1CodecConfigurationRecord","description":"io.github.thibaultbee.streampack.core.elements.utils.av.video.av1.AV1CodecConfigurationRecord.Companion.fromMediaFormat","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.video.av1/-a-v1-codec-configuration-record/-companion/from-media-format.html","searchKeys":["fromMediaFormat","fun fromMediaFormat(mediaFormat: MediaFormat): AV1CodecConfigurationRecord","io.github.thibaultbee.streampack.core.elements.utils.av.video.av1.AV1CodecConfigurationRecord.Companion.fromMediaFormat"]},{"name":"fun fromMimeType(mimeType: String): CodecID","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.video.CodecID.Companion.fromMimeType","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.video/-codec-i-d/-companion/from-mime-type.html","searchKeys":["fromMimeType","fun fromMimeType(mimeType: String): CodecID","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.video.CodecID.Companion.fromMimeType"]},{"name":"fun fromMimeType(mimeType: String): FourCCs","description":"io.github.thibaultbee.streampack.core.elements.utils.av.FourCCs.Companion.fromMimeType","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av/-four-c-cs/-companion/from-mime-type.html","searchKeys":["fromMimeType","fun fromMimeType(mimeType: String): FourCCs","io.github.thibaultbee.streampack.core.elements.utils.av.FourCCs.Companion.fromMimeType"]},{"name":"fun fromMimeType(mimeType: String): Pes.StreamId","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets.Pes.StreamId.Companion.fromMimeType","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets/-pes/-stream-id/-companion/from-mime-type.html","searchKeys":["fromMimeType","fun fromMimeType(mimeType: String): Pes.StreamId","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets.Pes.StreamId.Companion.fromMimeType"]},{"name":"fun fromMimeType(mimeType: String): SoundFormat","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.SoundFormat.Companion.fromMimeType","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags/-sound-format/-companion/from-mime-type.html","searchKeys":["fromMimeType","fun fromMimeType(mimeType: String): SoundFormat","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.SoundFormat.Companion.fromMimeType"]},{"name":"fun fromMimeType(mimeType: String, profile: Int): Pmt.StreamType","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets.Pmt.StreamType.Companion.fromMimeType","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets/-pmt/-stream-type/-companion/from-mime-type.html","searchKeys":["fromMimeType","fun fromMimeType(mimeType: String, profile: Int): Pmt.StreamType","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets.Pmt.StreamType.Companion.fromMimeType"]},{"name":"fun fromParameterSets(parameterSets: List<ByteBuffer>): HEVCDecoderConfigurationRecord","description":"io.github.thibaultbee.streampack.core.elements.utils.av.video.hevc.HEVCDecoderConfigurationRecord.Companion.fromParameterSets","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.video.hevc/-h-e-v-c-decoder-configuration-record/-companion/from-parameter-sets.html","searchKeys":["fromParameterSets","fun fromParameterSets(parameterSets: List<ByteBuffer>): HEVCDecoderConfigurationRecord","io.github.thibaultbee.streampack.core.elements.utils.av.video.hevc.HEVCDecoderConfigurationRecord.Companion.fromParameterSets"]},{"name":"fun fromParameterSets(sps: ByteBuffer, pps: ByteBuffer): AVCDecoderConfigurationRecord","description":"io.github.thibaultbee.streampack.core.elements.utils.av.video.avc.AVCDecoderConfigurationRecord.Companion.fromParameterSets","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.video.avc/-a-v-c-decoder-configuration-record/-companion/from-parameter-sets.html","searchKeys":["fromParameterSets","fun fromParameterSets(sps: ByteBuffer, pps: ByteBuffer): AVCDecoderConfigurationRecord","io.github.thibaultbee.streampack.core.elements.utils.av.video.avc.AVCDecoderConfigurationRecord.Companion.fromParameterSets"]},{"name":"fun fromParameterSets(sps: ByteBuffer, pps: ByteBuffer, vps: ByteBuffer): HEVCDecoderConfigurationRecord","description":"io.github.thibaultbee.streampack.core.elements.utils.av.video.hevc.HEVCDecoderConfigurationRecord.Companion.fromParameterSets","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.video.hevc/-h-e-v-c-decoder-configuration-record/-companion/from-parameter-sets.html","searchKeys":["fromParameterSets","fun fromParameterSets(sps: ByteBuffer, pps: ByteBuffer, vps: ByteBuffer): HEVCDecoderConfigurationRecord","io.github.thibaultbee.streampack.core.elements.utils.av.video.hevc.HEVCDecoderConfigurationRecord.Companion.fromParameterSets"]},{"name":"fun fromParameterSets(sps: List<ByteBuffer>, pps: List<ByteBuffer>): AVCDecoderConfigurationRecord","description":"io.github.thibaultbee.streampack.core.elements.utils.av.video.avc.AVCDecoderConfigurationRecord.Companion.fromParameterSets","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.video.avc/-a-v-c-decoder-configuration-record/-companion/from-parameter-sets.html","searchKeys":["fromParameterSets","fun fromParameterSets(sps: List<ByteBuffer>, pps: List<ByteBuffer>): AVCDecoderConfigurationRecord","io.github.thibaultbee.streampack.core.elements.utils.av.video.avc.AVCDecoderConfigurationRecord.Companion.fromParameterSets"]},{"name":"fun fromParameterSets(sps: List<ByteBuffer>, pps: List<ByteBuffer>, vps: List<ByteBuffer>): HEVCDecoderConfigurationRecord","description":"io.github.thibaultbee.streampack.core.elements.utils.av.video.hevc.HEVCDecoderConfigurationRecord.Companion.fromParameterSets","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.video.hevc/-h-e-v-c-decoder-configuration-record/-companion/from-parameter-sets.html","searchKeys":["fromParameterSets","fun fromParameterSets(sps: List<ByteBuffer>, pps: List<ByteBuffer>, vps: List<ByteBuffer>): HEVCDecoderConfigurationRecord","io.github.thibaultbee.streampack.core.elements.utils.av.video.hevc.HEVCDecoderConfigurationRecord.Companion.fromParameterSets"]},{"name":"fun fromProfile(mimeType: String, profile: Int): AudioObjectType","description":"io.github.thibaultbee.streampack.core.elements.utils.av.audio.AudioObjectType.Companion.fromProfile","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.audio/-audio-object-type/-companion/from-profile.html","searchKeys":["fromProfile","fun fromProfile(mimeType: String, profile: Int): AudioObjectType","io.github.thibaultbee.streampack.core.elements.utils.av.audio.AudioObjectType.Companion.fromProfile"]},{"name":"fun fromProfile(mimetype: String, profile: Int): DynamicRangeProfile","description":"io.github.thibaultbee.streampack.core.elements.utils.av.video.DynamicRangeProfile.Companion.fromProfile","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.video/-dynamic-range-profile/-companion/from-profile.html","searchKeys":["fromProfile","fun fromProfile(mimetype: String, profile: Int): DynamicRangeProfile","io.github.thibaultbee.streampack.core.elements.utils.av.video.DynamicRangeProfile.Companion.fromProfile"]},{"name":"fun fromSampleRate(sampleRate: Int): SamplingFrequencyIndex","description":"io.github.thibaultbee.streampack.core.elements.utils.av.audio.SamplingFrequencyIndex.Companion.fromSampleRate","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.audio/-sampling-frequency-index/-companion/from-sample-rate.html","searchKeys":["fromSampleRate","fun fromSampleRate(sampleRate: Int): SamplingFrequencyIndex","io.github.thibaultbee.streampack.core.elements.utils.av.audio.SamplingFrequencyIndex.Companion.fromSampleRate"]},{"name":"fun fromSampleRate(sampleRate: Int): SoundRate","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.SoundRate.Companion.fromSampleRate","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags/-sound-rate/-companion/from-sample-rate.html","searchKeys":["fromSampleRate","fun fromSampleRate(sampleRate: Int): SoundRate","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.SoundRate.Companion.fromSampleRate"]},{"name":"fun fromValue(value: Byte): ChromaSubsampling","description":"io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.ChromaSubsampling.Companion.fromValue","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx/-chroma-subsampling/-companion/from-value.html","searchKeys":["fromValue","fun fromValue(value: Byte): ChromaSubsampling","io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.ChromaSubsampling.Companion.fromValue"]},{"name":"fun fromValue(value: Byte): HEVCDecoderConfigurationRecord.NalUnit.Type","description":"io.github.thibaultbee.streampack.core.elements.utils.av.video.hevc.HEVCDecoderConfigurationRecord.NalUnit.Type.Companion.fromValue","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.video.hevc/-h-e-v-c-decoder-configuration-record/-nal-unit/-type/-companion/from-value.html","searchKeys":["fromValue","fun fromValue(value: Byte): HEVCDecoderConfigurationRecord.NalUnit.Type","io.github.thibaultbee.streampack.core.elements.utils.av.video.hevc.HEVCDecoderConfigurationRecord.NalUnit.Type.Companion.fromValue"]},{"name":"fun fromValue(value: Byte): ObjectTypeIndication","description":"io.github.thibaultbee.streampack.core.elements.utils.av.descriptors.ObjectTypeIndication.Companion.fromValue","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.descriptors/-object-type-indication/-companion/from-value.html","searchKeys":["fromValue","fun fromValue(value: Byte): ObjectTypeIndication","io.github.thibaultbee.streampack.core.elements.utils.av.descriptors.ObjectTypeIndication.Companion.fromValue"]},{"name":"fun fromValue(value: Byte): StreamType","description":"io.github.thibaultbee.streampack.core.elements.utils.av.descriptors.StreamType.Companion.fromValue","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.descriptors/-stream-type/-companion/from-value.html","searchKeys":["fromValue","fun fromValue(value: Byte): StreamType","io.github.thibaultbee.streampack.core.elements.utils.av.descriptors.StreamType.Companion.fromValue"]},{"name":"fun fromValue(value: Int): AudioObjectType","description":"io.github.thibaultbee.streampack.core.elements.utils.av.audio.AudioObjectType.Companion.fromValue","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.audio/-audio-object-type/-companion/from-value.html","searchKeys":["fromValue","fun fromValue(value: Int): AudioObjectType","io.github.thibaultbee.streampack.core.elements.utils.av.audio.AudioObjectType.Companion.fromValue"]},{"name":"fun fromValue(value: Int): ColorPrimaries","description":"io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.ColorPrimaries.Companion.fromValue","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx/-color-primaries/-companion/from-value.html","searchKeys":["fromValue","fun fromValue(value: Int): ColorPrimaries","io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.ColorPrimaries.Companion.fromValue"]},{"name":"fun fromValue(value: Int): Level","description":"io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.Level.Companion.fromValue","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx/-level/-companion/from-value.html","searchKeys":["fromValue","fun fromValue(value: Int): Level","io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.Level.Companion.fromValue"]},{"name":"fun fromValue(value: Int): MatrixCoefficients","description":"io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.MatrixCoefficients.Companion.fromValue","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx/-matrix-coefficients/-companion/from-value.html","searchKeys":["fromValue","fun fromValue(value: Int): MatrixCoefficients","io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.MatrixCoefficients.Companion.fromValue"]},{"name":"fun fromValue(value: Int): Profile","description":"io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.Profile.Companion.fromValue","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx/-profile/-companion/from-value.html","searchKeys":["fromValue","fun fromValue(value: Int): Profile","io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.Profile.Companion.fromValue"]},{"name":"fun fromValue(value: Int): SamplingFrequencyIndex","description":"io.github.thibaultbee.streampack.core.elements.utils.av.audio.SamplingFrequencyIndex.Companion.fromValue","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.audio/-sampling-frequency-index/-companion/from-value.html","searchKeys":["fromValue","fun fromValue(value: Int): SamplingFrequencyIndex","io.github.thibaultbee.streampack.core.elements.utils.av.audio.SamplingFrequencyIndex.Companion.fromValue"]},{"name":"fun fromValue(value: Int): TransferCharacteristics","description":"io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.TransferCharacteristics.Companion.fromValue","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx/-transfer-characteristics/-companion/from-value.html","searchKeys":["fromValue","fun fromValue(value: Int): TransferCharacteristics","io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.TransferCharacteristics.Companion.fromValue"]},{"name":"fun fromValue(value: Short): ChannelConfiguration","description":"io.github.thibaultbee.streampack.core.elements.utils.av.audio.ChannelConfiguration.Companion.fromValue","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.audio/-channel-configuration/-companion/from-value.html","searchKeys":["fromValue","fun fromValue(value: Short): ChannelConfiguration","io.github.thibaultbee.streampack.core.elements.utils.av.audio.ChannelConfiguration.Companion.fromValue"]},{"name":"fun fromVideoConfig(config: VideoCodecConfig): VideoMetadata","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.VideoMetadata.Companion.fromVideoConfig","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags/-video-metadata/-companion/from-video-config.html","searchKeys":["fromVideoConfig","fun fromVideoConfig(config: VideoCodecConfig): VideoMetadata","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.VideoMetadata.Companion.fromVideoConfig"]},{"name":"fun generateFbo(): Int","description":"io.github.thibaultbee.streampack.core.elements.processing.video.utils.GLUtils.generateFbo","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.processing.video.utils/-g-l-utils/generate-fbo.html","searchKeys":["generateFbo","fun generateFbo(): Int","io.github.thibaultbee.streampack.core.elements.processing.video.utils.GLUtils.generateFbo"]},{"name":"fun generateRandomString(length: Int): String","description":"io.github.thibaultbee.streampack.core.elements.utils.ListUtils.generateRandomString","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils/-list-utils/generate-random-string.html","searchKeys":["generateRandomString","fun generateRandomString(length: Int): String","io.github.thibaultbee.streampack.core.elements.utils.ListUtils.generateRandomString"]},{"name":"fun generateTexture(): Int","description":"io.github.thibaultbee.streampack.core.elements.processing.video.utils.GLUtils.generateTexture","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.processing.video.utils/-g-l-utils/generate-texture.html","searchKeys":["generateTexture","fun generateTexture(): Int","io.github.thibaultbee.streampack.core.elements.processing.video.utils.GLUtils.generateTexture"]},{"name":"fun get(): Byte","description":"io.github.thibaultbee.streampack.core.elements.utils.av.buffer.ByteBufferBitReader.get","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.buffer/-byte-buffer-bit-reader/get.html","searchKeys":["get","fun get(): Byte","io.github.thibaultbee.streampack.core.elements.utils.av.buffer.ByteBufferBitReader.get"]},{"name":"fun get(buffer: ByteBuffer, offset: Int, length: Int): Int","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.utils.CRC32.get","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.utils/-c-r-c32/get.html","searchKeys":["get","fun get(buffer: ByteBuffer, offset: Int, length: Int): Int","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.utils.CRC32.get"]},{"name":"fun get(i: Int): Byte","description":"io.github.thibaultbee.streampack.core.elements.utils.av.buffer.BitBuffer.get","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.buffer/-bit-buffer/get.html","searchKeys":["get","fun get(i: Int): Byte","io.github.thibaultbee.streampack.core.elements.utils.av.buffer.BitBuffer.get"]},{"name":"fun getBestBitrate(resolution: Size): Int","description":"io.github.thibaultbee.streampack.core.elements.encoders.VideoCodecConfig.Companion.getBestBitrate","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.encoders/-video-codec-config/-companion/get-best-bitrate.html","searchKeys":["getBestBitrate","fun getBestBitrate(resolution: Size): Int","io.github.thibaultbee.streampack.core.elements.encoders.VideoCodecConfig.Companion.getBestBitrate"]},{"name":"fun getBestLevel(mimeType: String, profile: Int): Int","description":"io.github.thibaultbee.streampack.core.elements.encoders.VideoCodecConfig.Companion.getBestLevel","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.encoders/-video-codec-config/-companion/get-best-level.html","searchKeys":["getBestLevel","fun getBestLevel(mimeType: String, profile: Int): Int","io.github.thibaultbee.streampack.core.elements.encoders.VideoCodecConfig.Companion.getBestLevel"]},{"name":"fun getBestProfile(mimeType: String): Int","description":"io.github.thibaultbee.streampack.core.elements.encoders.VideoCodecConfig.Companion.getBestProfile","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.encoders/-video-codec-config/-companion/get-best-profile.html","searchKeys":["getBestProfile","fun getBestProfile(mimeType: String): Int","io.github.thibaultbee.streampack.core.elements.encoders.VideoCodecConfig.Companion.getBestProfile"]},{"name":"fun getBitrateRange(mimeType: String): Range<Int>","description":"io.github.thibaultbee.streampack.core.elements.encoders.mediacodec.MediaCodecHelper.Audio.getBitrateRange","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.encoders.mediacodec/-media-codec-helper/-audio/get-bitrate-range.html","searchKeys":["getBitrateRange","fun getBitrateRange(mimeType: String): Range<Int>","io.github.thibaultbee.streampack.core.elements.encoders.mediacodec.MediaCodecHelper.Audio.getBitrateRange"]},{"name":"fun getBitrateRange(mimeType: String): Range<Int>","description":"io.github.thibaultbee.streampack.core.elements.encoders.mediacodec.MediaCodecHelper.Video.getBitrateRange","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.encoders.mediacodec/-media-codec-helper/-video/get-bitrate-range.html","searchKeys":["getBitrateRange","fun getBitrateRange(mimeType: String): Range<Int>","io.github.thibaultbee.streampack.core.elements.encoders.mediacodec.MediaCodecHelper.Video.getBitrateRange"]},{"name":"fun getBitrateRange(mimeType: String, name: String): Range<Int>","description":"io.github.thibaultbee.streampack.core.elements.encoders.mediacodec.MediaCodecHelper.Audio.getBitrateRange","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.encoders.mediacodec/-media-codec-helper/-audio/get-bitrate-range.html","searchKeys":["getBitrateRange","fun getBitrateRange(mimeType: String, name: String): Range<Int>","io.github.thibaultbee.streampack.core.elements.encoders.mediacodec.MediaCodecHelper.Audio.getBitrateRange"]},{"name":"fun getBitrateRange(mimeType: String, name: String): Range<Int>","description":"io.github.thibaultbee.streampack.core.elements.encoders.mediacodec.MediaCodecHelper.Video.getBitrateRange","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.encoders.mediacodec/-media-codec-helper/-video/get-bitrate-range.html","searchKeys":["getBitrateRange","fun getBitrateRange(mimeType: String, name: String): Range<Int>","io.github.thibaultbee.streampack.core.elements.encoders.mediacodec.MediaCodecHelper.Video.getBitrateRange"]},{"name":"fun getBoolean(): Boolean","description":"io.github.thibaultbee.streampack.core.elements.utils.av.buffer.BitBuffer.getBoolean","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.buffer/-bit-buffer/get-boolean.html","searchKeys":["getBoolean","fun getBoolean(): Boolean","io.github.thibaultbee.streampack.core.elements.utils.av.buffer.BitBuffer.getBoolean"]},{"name":"fun getChannelConfig(nChannel: Int): Int","description":"io.github.thibaultbee.streampack.core.elements.encoders.AudioCodecConfig.Companion.getChannelConfig","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.encoders/-audio-codec-config/-companion/get-channel-config.html","searchKeys":["getChannelConfig","fun getChannelConfig(nChannel: Int): Int","io.github.thibaultbee.streampack.core.elements.encoders.AudioCodecConfig.Companion.getChannelConfig"]},{"name":"fun getCodecInfo(name: String): MediaCodecInfo","description":"io.github.thibaultbee.streampack.core.elements.encoders.mediacodec.MediaCodecHelper.getCodecInfo","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.encoders.mediacodec/-media-codec-helper/get-codec-info.html","searchKeys":["getCodecInfo","fun getCodecInfo(name: String): MediaCodecInfo","io.github.thibaultbee.streampack.core.elements.encoders.mediacodec.MediaCodecHelper.getCodecInfo"]},{"name":"fun getContainerType(context: Context?, uri: Uri): MediaContainerType","description":"io.github.thibaultbee.streampack.core.configuration.mediadescriptor.MediaDescriptor.Type.Companion.getContainerType","location":"streampack-core/io.github.thibaultbee.streampack.core.configuration.mediadescriptor/-media-descriptor/-type/-companion/get-container-type.html","searchKeys":["getContainerType","fun getContainerType(context: Context?, uri: Uri): MediaContainerType","io.github.thibaultbee.streampack.core.configuration.mediadescriptor.MediaDescriptor.Type.Companion.getContainerType"]},{"name":"fun getDataSize(process: (ByteBuffer) -> Int): Int","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models.Chunk.getDataSize","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models/-chunk/get-data-size.html","searchKeys":["getDataSize","fun getDataSize(process: (ByteBuffer) -> Int): Int","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models.Chunk.getDataSize"]},{"name":"fun getFeature(id: VP9CodecPrivate.CodecFeature.Ids): VP9CodecPrivate.CodecFeature","description":"io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.VP9CodecPrivate.getFeature","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx/-v-p9-codec-private/get-feature.html","searchKeys":["getFeature","fun getFeature(id: VP9CodecPrivate.CodecFeature.Ids): VP9CodecPrivate.CodecFeature","io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.VP9CodecPrivate.getFeature"]},{"name":"fun getFirstTimestamp(streamPid: Int): Long","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models.Segment.getFirstTimestamp","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models/-segment/get-first-timestamp.html","searchKeys":["getFirstTimestamp","fun getFirstTimestamp(streamPid: Int): Long","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models.Segment.getFirstTimestamp"]},{"name":"fun getFramerateRange(mimeType: String): Range<Int>","description":"io.github.thibaultbee.streampack.core.elements.encoders.mediacodec.MediaCodecHelper.Video.getFramerateRange","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.encoders.mediacodec/-media-codec-helper/-video/get-framerate-range.html","searchKeys":["getFramerateRange","fun getFramerateRange(mimeType: String): Range<Int>","io.github.thibaultbee.streampack.core.elements.encoders.mediacodec.MediaCodecHelper.Video.getFramerateRange"]},{"name":"fun getFramerateRange(mimeType: String, name: String): Range<Int>","description":"io.github.thibaultbee.streampack.core.elements.encoders.mediacodec.MediaCodecHelper.Video.getFramerateRange","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.encoders.mediacodec/-media-codec-helper/-video/get-framerate-range.html","searchKeys":["getFramerateRange","fun getFramerateRange(mimeType: String, name: String): Range<Int>","io.github.thibaultbee.streampack.core.elements.encoders.mediacodec.MediaCodecHelper.Video.getFramerateRange"]},{"name":"fun getInputChannelRange(mimeType: String): Range<Int>","description":"io.github.thibaultbee.streampack.core.elements.encoders.mediacodec.MediaCodecHelper.Audio.getInputChannelRange","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.encoders.mediacodec/-media-codec-helper/-audio/get-input-channel-range.html","searchKeys":["getInputChannelRange","fun getInputChannelRange(mimeType: String): Range<Int>","io.github.thibaultbee.streampack.core.elements.encoders.mediacodec.MediaCodecHelper.Audio.getInputChannelRange"]},{"name":"fun getInputChannelRange(mimeType: String, name: String): Range<Int>","description":"io.github.thibaultbee.streampack.core.elements.encoders.mediacodec.MediaCodecHelper.Audio.getInputChannelRange","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.encoders.mediacodec/-media-codec-helper/-audio/get-input-channel-range.html","searchKeys":["getInputChannelRange","fun getInputChannelRange(mimeType: String, name: String): Range<Int>","io.github.thibaultbee.streampack.core.elements.encoders.mediacodec.MediaCodecHelper.Audio.getInputChannelRange"]},{"name":"fun getInt(i: Int): Int","description":"io.github.thibaultbee.streampack.core.elements.utils.av.buffer.BitBuffer.getInt","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.buffer/-bit-buffer/get-int.html","searchKeys":["getInt","fun getInt(i: Int): Int","io.github.thibaultbee.streampack.core.elements.utils.av.buffer.BitBuffer.getInt"]},{"name":"fun getLong(i: Int): Long","description":"io.github.thibaultbee.streampack.core.elements.utils.av.buffer.BitBuffer.getLong","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.buffer/-bit-buffer/get-long.html","searchKeys":["getLong","fun getLong(i: Int): Long","io.github.thibaultbee.streampack.core.elements.utils.av.buffer.BitBuffer.getLong"]},{"name":"fun getMaxLevel(mimeType: String, name: String, profile: Int): Int","description":"io.github.thibaultbee.streampack.core.elements.encoders.mediacodec.MediaCodecHelper.getMaxLevel","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.encoders.mediacodec/-media-codec-helper/get-max-level.html","searchKeys":["getMaxLevel","fun getMaxLevel(mimeType: String, name: String, profile: Int): Int","io.github.thibaultbee.streampack.core.elements.encoders.mediacodec.MediaCodecHelper.getMaxLevel"]},{"name":"fun getMaxLevel(mimeType: String, profile: Int): Int","description":"io.github.thibaultbee.streampack.core.elements.encoders.mediacodec.MediaCodecHelper.getMaxLevel","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.encoders.mediacodec/-media-codec-helper/get-max-level.html","searchKeys":["getMaxLevel","fun getMaxLevel(mimeType: String, profile: Int): Int","io.github.thibaultbee.streampack.core.elements.encoders.mediacodec.MediaCodecHelper.getMaxLevel"]},{"name":"fun getNamesForType(mimeType: String): List<String>","description":"io.github.thibaultbee.streampack.core.elements.encoders.mediacodec.MediaCodecHelper.getNamesForType","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.encoders.mediacodec/-media-codec-helper/get-names-for-type.html","searchKeys":["getNamesForType","fun getNamesForType(mimeType: String): List<String>","io.github.thibaultbee.streampack.core.elements.encoders.mediacodec.MediaCodecHelper.getNamesForType"]},{"name":"fun getNumOfBytesPerSample(byteFormat: Int): Int","description":"io.github.thibaultbee.streampack.core.elements.encoders.AudioCodecConfig.Companion.getNumOfBytesPerSample","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.encoders/-audio-codec-config/-companion/get-num-of-bytes-per-sample.html","searchKeys":["getNumOfBytesPerSample","fun getNumOfBytesPerSample(byteFormat: Int): Int","io.github.thibaultbee.streampack.core.elements.encoders.AudioCodecConfig.Companion.getNumOfBytesPerSample"]},{"name":"fun getNumberOfChannels(channelConfig: Int): Int","description":"io.github.thibaultbee.streampack.core.elements.encoders.AudioCodecConfig.Companion.getNumberOfChannels","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.encoders/-audio-codec-config/-companion/get-number-of-channels.html","searchKeys":["getNumberOfChannels","fun getNumberOfChannels(channelConfig: Int): Int","io.github.thibaultbee.streampack.core.elements.encoders.AudioCodecConfig.Companion.getNumberOfChannels"]},{"name":"fun getProfileLevel(mimeType: String): List<MediaCodecInfo.CodecProfileLevel>","description":"io.github.thibaultbee.streampack.core.elements.encoders.mediacodec.MediaCodecHelper.getProfileLevel","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.encoders.mediacodec/-media-codec-helper/get-profile-level.html","searchKeys":["getProfileLevel","fun getProfileLevel(mimeType: String): List<MediaCodecInfo.CodecProfileLevel>","io.github.thibaultbee.streampack.core.elements.encoders.mediacodec.MediaCodecHelper.getProfileLevel"]},{"name":"fun getProfileLevel(mimeType: String, name: String): List<MediaCodecInfo.CodecProfileLevel>","description":"io.github.thibaultbee.streampack.core.elements.encoders.mediacodec.MediaCodecHelper.getProfileLevel","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.encoders.mediacodec/-media-codec-helper/get-profile-level.html","searchKeys":["getProfileLevel","fun getProfileLevel(mimeType: String, name: String): List<MediaCodecInfo.CodecProfileLevel>","io.github.thibaultbee.streampack.core.elements.encoders.mediacodec.MediaCodecHelper.getProfileLevel"]},{"name":"fun getProfiles(mimeType: String): List<Int>","description":"io.github.thibaultbee.streampack.core.elements.encoders.mediacodec.MediaCodecHelper.getProfiles","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.encoders.mediacodec/-media-codec-helper/get-profiles.html","searchKeys":["getProfiles","fun getProfiles(mimeType: String): List<Int>","io.github.thibaultbee.streampack.core.elements.encoders.mediacodec.MediaCodecHelper.getProfiles"]},{"name":"fun getProfiles(mimeType: String, name: String): List<Int>","description":"io.github.thibaultbee.streampack.core.elements.encoders.mediacodec.MediaCodecHelper.getProfiles","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.encoders.mediacodec/-media-codec-helper/get-profiles.html","searchKeys":["getProfiles","fun getProfiles(mimeType: String, name: String): List<Int>","io.github.thibaultbee.streampack.core.elements.encoders.mediacodec.MediaCodecHelper.getProfiles"]},{"name":"fun getRectToRect(source: RectF, target: RectF, rotationDegrees: Int, mirroring: Boolean): Matrix","description":"io.github.thibaultbee.streampack.core.elements.processing.video.utils.TransformUtils.getRectToRect","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.processing.video.utils/-transform-utils/get-rect-to-rect.html","searchKeys":["getRectToRect","fun getRectToRect(source: RectF, target: RectF, rotationDegrees: Int, mirroring: Boolean): Matrix","io.github.thibaultbee.streampack.core.elements.processing.video.utils.TransformUtils.getRectToRect"]},{"name":"fun getRelativeRotation(destRotationDegrees: Int, sourceRotationDegrees: Int, isOppositeFacing: Boolean): Int","description":"io.github.thibaultbee.streampack.core.elements.sources.video.camera.utils.CameraOrientationUtils.getRelativeRotation","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.video.camera.utils/-camera-orientation-utils/get-relative-rotation.html","searchKeys":["getRelativeRotation","fun getRelativeRotation(destRotationDegrees: Int, sourceRotationDegrees: Int, isOppositeFacing: Boolean): Int","io.github.thibaultbee.streampack.core.elements.sources.video.camera.utils.CameraOrientationUtils.getRelativeRotation"]},{"name":"fun getSampleSizes(process: (ByteBuffer) -> Int): List<Int>","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models.Chunk.getSampleSizes","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models/-chunk/get-sample-sizes.html","searchKeys":["getSampleSizes","fun getSampleSizes(process: (ByteBuffer) -> Int): List<Int>","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models.Chunk.getSampleSizes"]},{"name":"fun getScreenRect(context: Context): Rect","description":"io.github.thibaultbee.streampack.core.elements.utils.WindowUtils.getScreenRect","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils/-window-utils/get-screen-rect.html","searchKeys":["getScreenRect","fun getScreenRect(context: Context): Rect","io.github.thibaultbee.streampack.core.elements.utils.WindowUtils.getScreenRect"]},{"name":"fun getServices(): List<TSServiceInfo>","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.TsMuxer.getServices","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts/-ts-muxer/get-services.html","searchKeys":["getServices","fun getServices(): List<TSServiceInfo>","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.TsMuxer.getServices"]},{"name":"fun getShort(i: Int): Short","description":"io.github.thibaultbee.streampack.core.elements.utils.av.buffer.BitBuffer.getShort","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.buffer/-bit-buffer/get-short.html","searchKeys":["getShort","fun getShort(i: Int): Short","io.github.thibaultbee.streampack.core.elements.utils.av.buffer.BitBuffer.getShort"]},{"name":"fun getSize(): Int","description":"io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.VPCodecConfigurationRecord.Companion.getSize","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx/-v-p-codec-configuration-record/-companion/get-size.html","searchKeys":["getSize","fun getSize(): Int","io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.VPCodecConfigurationRecord.Companion.getSize"]},{"name":"fun getSize(parameterSets: List<HEVCDecoderConfigurationRecord.NalUnit>): Int","description":"io.github.thibaultbee.streampack.core.elements.utils.av.video.hevc.HEVCDecoderConfigurationRecord.Companion.getSize","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.video.hevc/-h-e-v-c-decoder-configuration-record/-companion/get-size.html","searchKeys":["getSize","fun getSize(parameterSets: List<HEVCDecoderConfigurationRecord.NalUnit>): Int","io.github.thibaultbee.streampack.core.elements.utils.av.video.hevc.HEVCDecoderConfigurationRecord.Companion.getSize"]},{"name":"fun getSize(sps: ByteBuffer, pps: ByteBuffer): Int","description":"io.github.thibaultbee.streampack.core.elements.utils.av.video.avc.AVCDecoderConfigurationRecord.Companion.getSize","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.video.avc/-a-v-c-decoder-configuration-record/-companion/get-size.html","searchKeys":["getSize","fun getSize(sps: ByteBuffer, pps: ByteBuffer): Int","io.github.thibaultbee.streampack.core.elements.utils.av.video.avc.AVCDecoderConfigurationRecord.Companion.getSize"]},{"name":"fun getSize(sps: ByteBuffer, pps: ByteBuffer, vps: ByteBuffer): Int","description":"io.github.thibaultbee.streampack.core.elements.utils.av.video.hevc.HEVCDecoderConfigurationRecord.Companion.getSize","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.video.hevc/-h-e-v-c-decoder-configuration-record/-companion/get-size.html","searchKeys":["getSize","fun getSize(sps: ByteBuffer, pps: ByteBuffer, vps: ByteBuffer): Int","io.github.thibaultbee.streampack.core.elements.utils.av.video.hevc.HEVCDecoderConfigurationRecord.Companion.getSize"]},{"name":"fun getSize(sps: List<ByteBuffer>, pps: List<ByteBuffer>): Int","description":"io.github.thibaultbee.streampack.core.elements.utils.av.video.avc.AVCDecoderConfigurationRecord.Companion.getSize","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.video.avc/-a-v-c-decoder-configuration-record/-companion/get-size.html","searchKeys":["getSize","fun getSize(sps: List<ByteBuffer>, pps: List<ByteBuffer>): Int","io.github.thibaultbee.streampack.core.elements.utils.av.video.avc.AVCDecoderConfigurationRecord.Companion.getSize"]},{"name":"fun getSize(sps: List<ByteBuffer>, pps: List<ByteBuffer>, vps: List<ByteBuffer>): Int","description":"io.github.thibaultbee.streampack.core.elements.utils.av.video.hevc.HEVCDecoderConfigurationRecord.Companion.getSize","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.video.hevc/-h-e-v-c-decoder-configuration-record/-companion/get-size.html","searchKeys":["getSize","fun getSize(sps: List<ByteBuffer>, pps: List<ByteBuffer>, vps: List<ByteBuffer>): Int","io.github.thibaultbee.streampack.core.elements.utils.av.video.hevc.HEVCDecoderConfigurationRecord.Companion.getSize"]},{"name":"fun getStreams(mimeType: String): List<Stream>","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.TsMuxer.getStreams","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts/-ts-muxer/get-streams.html","searchKeys":["getStreams","fun getStreams(mimeType: String): List<Stream>","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.TsMuxer.getStreams"]},{"name":"fun getStreamsId(mimeType: String): List<Short>","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.TsMuxer.getStreamsId","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts/-ts-muxer/get-streams-id.html","searchKeys":["getStreamsId","fun getStreamsId(mimeType: String): List<Short>","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.TsMuxer.getStreamsId"]},{"name":"fun getSupportedAllProfiles(context: Context, mimeType: String, cameraId: String): List<Int>","description":"io.github.thibaultbee.streampack.core.streamers.infos.VideoCameraStreamerConfigurationInfo.getSupportedAllProfiles","location":"streampack-core/io.github.thibaultbee.streampack.core.streamers.infos/-video-camera-streamer-configuration-info/get-supported-all-profiles.html","searchKeys":["getSupportedAllProfiles","fun getSupportedAllProfiles(context: Context, mimeType: String, cameraId: String): List<Int>","io.github.thibaultbee.streampack.core.streamers.infos.VideoCameraStreamerConfigurationInfo.getSupportedAllProfiles"]},{"name":"fun getSupportedAllProfiles(mimeType: String): List<Int>","description":"io.github.thibaultbee.streampack.core.streamers.infos.VideoStreamerConfigurationInfo.getSupportedAllProfiles","location":"streampack-core/io.github.thibaultbee.streampack.core.streamers.infos/-video-streamer-configuration-info/get-supported-all-profiles.html","searchKeys":["getSupportedAllProfiles","fun getSupportedAllProfiles(mimeType: String): List<Int>","io.github.thibaultbee.streampack.core.streamers.infos.VideoStreamerConfigurationInfo.getSupportedAllProfiles"]},{"name":"fun getSupportedFramerate(mimeType: String): Range<Int>","description":"io.github.thibaultbee.streampack.core.streamers.infos.VideoStreamerConfigurationInfo.getSupportedFramerate","location":"streampack-core/io.github.thibaultbee.streampack.core.streamers.infos/-video-streamer-configuration-info/get-supported-framerate.html","searchKeys":["getSupportedFramerate","fun getSupportedFramerate(mimeType: String): Range<Int>","io.github.thibaultbee.streampack.core.streamers.infos.VideoStreamerConfigurationInfo.getSupportedFramerate"]},{"name":"fun getSupportedFramerates(context: Context, mimeType: String, cameraId: String): List<Range<Int>>","description":"io.github.thibaultbee.streampack.core.streamers.infos.VideoCameraStreamerConfigurationInfo.getSupportedFramerates","location":"streampack-core/io.github.thibaultbee.streampack.core.streamers.infos/-video-camera-streamer-configuration-info/get-supported-framerates.html","searchKeys":["getSupportedFramerates","fun getSupportedFramerates(context: Context, mimeType: String, cameraId: String): List<Range<Int>>","io.github.thibaultbee.streampack.core.streamers.infos.VideoCameraStreamerConfigurationInfo.getSupportedFramerates"]},{"name":"fun getSupportedHdrProfiles(mimeType: String): List<Int>","description":"io.github.thibaultbee.streampack.core.streamers.infos.VideoStreamerConfigurationInfo.getSupportedHdrProfiles","location":"streampack-core/io.github.thibaultbee.streampack.core.streamers.infos/-video-streamer-configuration-info/get-supported-hdr-profiles.html","searchKeys":["getSupportedHdrProfiles","fun getSupportedHdrProfiles(mimeType: String): List<Int>","io.github.thibaultbee.streampack.core.streamers.infos.VideoStreamerConfigurationInfo.getSupportedHdrProfiles"]},{"name":"fun getSupportedHeights(mimeType: String): Range<Int>","description":"io.github.thibaultbee.streampack.core.elements.encoders.mediacodec.MediaCodecHelper.Video.getSupportedHeights","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.encoders.mediacodec/-media-codec-helper/-video/get-supported-heights.html","searchKeys":["getSupportedHeights","fun getSupportedHeights(mimeType: String): Range<Int>","io.github.thibaultbee.streampack.core.elements.encoders.mediacodec.MediaCodecHelper.Video.getSupportedHeights"]},{"name":"fun getSupportedHeights(mimeType: String, name: String): Range<Int>","description":"io.github.thibaultbee.streampack.core.elements.encoders.mediacodec.MediaCodecHelper.Video.getSupportedHeights","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.encoders.mediacodec/-media-codec-helper/-video/get-supported-heights.html","searchKeys":["getSupportedHeights","fun getSupportedHeights(mimeType: String, name: String): Range<Int>","io.github.thibaultbee.streampack.core.elements.encoders.mediacodec.MediaCodecHelper.Video.getSupportedHeights"]},{"name":"fun getSupportedProfiles(mimeType: String): List<Int>","description":"io.github.thibaultbee.streampack.core.streamers.infos.AudioStreamerConfigurationInfo.getSupportedProfiles","location":"streampack-core/io.github.thibaultbee.streampack.core.streamers.infos/-audio-streamer-configuration-info/get-supported-profiles.html","searchKeys":["getSupportedProfiles","fun getSupportedProfiles(mimeType: String): List<Int>","io.github.thibaultbee.streampack.core.streamers.infos.AudioStreamerConfigurationInfo.getSupportedProfiles"]},{"name":"fun getSupportedProfiles(mimeType: String): List<Int>","description":"io.github.thibaultbee.streampack.core.streamers.infos.VideoStreamerConfigurationInfo.getSupportedProfiles","location":"streampack-core/io.github.thibaultbee.streampack.core.streamers.infos/-video-streamer-configuration-info/get-supported-profiles.html","searchKeys":["getSupportedProfiles","fun getSupportedProfiles(mimeType: String): List<Int>","io.github.thibaultbee.streampack.core.streamers.infos.VideoStreamerConfigurationInfo.getSupportedProfiles"]},{"name":"fun getSupportedResolutions(context: Context, mimeType: String): List<Size>","description":"io.github.thibaultbee.streampack.core.streamers.infos.VideoCameraStreamerConfigurationInfo.getSupportedResolutions","location":"streampack-core/io.github.thibaultbee.streampack.core.streamers.infos/-video-camera-streamer-configuration-info/get-supported-resolutions.html","searchKeys":["getSupportedResolutions","fun getSupportedResolutions(context: Context, mimeType: String): List<Size>","io.github.thibaultbee.streampack.core.streamers.infos.VideoCameraStreamerConfigurationInfo.getSupportedResolutions"]},{"name":"fun getSupportedSampleRates(mimeType: String): IntArray","description":"io.github.thibaultbee.streampack.core.elements.encoders.mediacodec.MediaCodecHelper.Audio.getSupportedSampleRates","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.encoders.mediacodec/-media-codec-helper/-audio/get-supported-sample-rates.html","searchKeys":["getSupportedSampleRates","fun getSupportedSampleRates(mimeType: String): IntArray","io.github.thibaultbee.streampack.core.elements.encoders.mediacodec.MediaCodecHelper.Audio.getSupportedSampleRates"]},{"name":"fun getSupportedSampleRates(mimeType: String, name: String): IntArray","description":"io.github.thibaultbee.streampack.core.elements.encoders.mediacodec.MediaCodecHelper.Audio.getSupportedSampleRates","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.encoders.mediacodec/-media-codec-helper/-audio/get-supported-sample-rates.html","searchKeys":["getSupportedSampleRates","fun getSupportedSampleRates(mimeType: String, name: String): IntArray","io.github.thibaultbee.streampack.core.elements.encoders.mediacodec.MediaCodecHelper.Audio.getSupportedSampleRates"]},{"name":"fun getSupportedSdrProfiles(mimeType: String): List<Int>","description":"io.github.thibaultbee.streampack.core.streamers.infos.VideoStreamerConfigurationInfo.getSupportedSdrProfiles","location":"streampack-core/io.github.thibaultbee.streampack.core.streamers.infos/-video-streamer-configuration-info/get-supported-sdr-profiles.html","searchKeys":["getSupportedSdrProfiles","fun getSupportedSdrProfiles(mimeType: String): List<Int>","io.github.thibaultbee.streampack.core.streamers.infos.VideoStreamerConfigurationInfo.getSupportedSdrProfiles"]},{"name":"fun getSupportedWidths(mimeType: String): Range<Int>","description":"io.github.thibaultbee.streampack.core.elements.encoders.mediacodec.MediaCodecHelper.Video.getSupportedWidths","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.encoders.mediacodec/-media-codec-helper/-video/get-supported-widths.html","searchKeys":["getSupportedWidths","fun getSupportedWidths(mimeType: String): Range<Int>","io.github.thibaultbee.streampack.core.elements.encoders.mediacodec.MediaCodecHelper.Video.getSupportedWidths"]},{"name":"fun getSupportedWidths(mimeType: String, name: String): Range<Int>","description":"io.github.thibaultbee.streampack.core.elements.encoders.mediacodec.MediaCodecHelper.Video.getSupportedWidths","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.encoders.mediacodec/-media-codec-helper/-video/get-supported-widths.html","searchKeys":["getSupportedWidths","fun getSupportedWidths(mimeType: String, name: String): Range<Int>","io.github.thibaultbee.streampack.core.elements.encoders.mediacodec.MediaCodecHelper.Video.getSupportedWidths"]},{"name":"fun getSurfaceRotationDegrees(surfaceOrientation: Int): Int","description":"io.github.thibaultbee.streampack.core.elements.utils.OrientationUtils.getSurfaceRotationDegrees","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils/-orientation-utils/get-surface-rotation-degrees.html","searchKeys":["getSurfaceRotationDegrees","fun getSurfaceRotationDegrees(surfaceOrientation: Int): Int","io.github.thibaultbee.streampack.core.elements.utils.OrientationUtils.getSurfaceRotationDegrees"]},{"name":"fun getSurfaceSize(eglDisplay: EGLDisplay, eglSurface: EGLSurface): Size","description":"io.github.thibaultbee.streampack.core.elements.processing.video.utils.GLUtils.getSurfaceSize","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.processing.video.utils/-g-l-utils/get-surface-size.html","searchKeys":["getSurfaceSize","fun getSurfaceSize(eglDisplay: EGLDisplay, eglSurface: EGLSurface): Size","io.github.thibaultbee.streampack.core.elements.processing.video.utils.GLUtils.getSurfaceSize"]},{"name":"fun getTypesForName(name: String): List<String>","description":"io.github.thibaultbee.streampack.core.elements.encoders.mediacodec.MediaCodecHelper.getTypesForName","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.encoders.mediacodec/-media-codec-helper/get-types-for-name.html","searchKeys":["getTypesForName","fun getTypesForName(name: String): List<String>","io.github.thibaultbee.streampack.core.elements.encoders.mediacodec.MediaCodecHelper.getTypesForName"]},{"name":"fun hasOutput(surface: Surface): Boolean","description":"io.github.thibaultbee.streampack.core.elements.sources.video.camera.controllers.CameraSessionController.hasOutput","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.video.camera.controllers/-camera-session-controller/has-output.html","searchKeys":["hasOutput","fun hasOutput(surface: Surface): Boolean","io.github.thibaultbee.streampack.core.elements.sources.video.camera.controllers.CameraSessionController.hasOutput"]},{"name":"fun inferFromScheme(scheme: String?): MediaSinkType","description":"io.github.thibaultbee.streampack.core.elements.endpoints.MediaSinkType.Companion.inferFromScheme","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints/-media-sink-type/-companion/infer-from-scheme.html","searchKeys":["inferFromScheme","fun inferFromScheme(scheme: String?): MediaSinkType","io.github.thibaultbee.streampack.core.elements.endpoints.MediaSinkType.Companion.inferFromScheme"]},{"name":"fun inferFromUri(uri: Uri): MediaSinkType","description":"io.github.thibaultbee.streampack.core.elements.endpoints.MediaSinkType.Companion.inferFromUri","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints/-media-sink-type/-companion/infer-from-uri.html","searchKeys":["inferFromUri","fun inferFromUri(uri: Uri): MediaSinkType","io.github.thibaultbee.streampack.core.elements.endpoints.MediaSinkType.Companion.inferFromUri"]},{"name":"fun init(dynamicRange: DynamicRangeProfile): GraphicDeviceInfo","description":"io.github.thibaultbee.streampack.core.elements.processing.video.OpenGlRenderer.init","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.processing.video/-open-gl-renderer/init.html","searchKeys":["init","fun init(dynamicRange: DynamicRangeProfile): GraphicDeviceInfo","io.github.thibaultbee.streampack.core.elements.processing.video.OpenGlRenderer.init"]},{"name":"fun init(dynamicRange: DynamicRangeProfile, shaderOverrides: Map<GLUtils.InputFormat?, ShaderProvider?>): GraphicDeviceInfo","description":"io.github.thibaultbee.streampack.core.elements.processing.video.OpenGlRenderer.init","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.processing.video/-open-gl-renderer/init.html","searchKeys":["init","fun init(dynamicRange: DynamicRangeProfile, shaderOverrides: Map<GLUtils.InputFormat?, ShaderProvider?>): GraphicDeviceInfo","io.github.thibaultbee.streampack.core.elements.processing.video.OpenGlRenderer.init"]},{"name":"fun isCsdSyntax(buffer: ByteBuffer): Boolean","description":"io.github.thibaultbee.streampack.core.elements.utils.av.audio.opus.OpusCsdParser.Companion.isCsdSyntax","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.audio.opus/-opus-csd-parser/-companion/is-csd-syntax.html","searchKeys":["isCsdSyntax","fun isCsdSyntax(buffer: ByteBuffer): Boolean","io.github.thibaultbee.streampack.core.elements.utils.av.audio.opus.OpusCsdParser.Companion.isCsdSyntax"]},{"name":"fun isFeatureSupported(mimeType: String, feature: String): Boolean","description":"io.github.thibaultbee.streampack.core.elements.encoders.mediacodec.MediaCodecHelper.isFeatureSupported","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.encoders.mediacodec/-media-codec-helper/is-feature-supported.html","searchKeys":["isFeatureSupported","fun isFeatureSupported(mimeType: String, feature: String): Boolean","io.github.thibaultbee.streampack.core.elements.encoders.mediacodec.MediaCodecHelper.isFeatureSupported"]},{"name":"fun isFeatureSupported(mimeType: String, name: String, feature: String): Boolean","description":"io.github.thibaultbee.streampack.core.elements.encoders.mediacodec.MediaCodecHelper.isFeatureSupported","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.encoders.mediacodec/-media-codec-helper/is-feature-supported.html","searchKeys":["isFeatureSupported","fun isFeatureSupported(mimeType: String, name: String, feature: String): Boolean","io.github.thibaultbee.streampack.core.elements.encoders.mediacodec.MediaCodecHelper.isFeatureSupported"]},{"name":"fun isFormatSupported(format: MediaFormat): Boolean","description":"io.github.thibaultbee.streampack.core.elements.encoders.mediacodec.MediaCodecHelper.isFormatSupported","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.encoders.mediacodec/-media-codec-helper/is-format-supported.html","searchKeys":["isFormatSupported","fun isFormatSupported(format: MediaFormat): Boolean","io.github.thibaultbee.streampack.core.elements.encoders.mediacodec.MediaCodecHelper.isFormatSupported"]},{"name":"fun isFormatSupported(format: MediaFormat, name: String): Boolean","description":"io.github.thibaultbee.streampack.core.elements.encoders.mediacodec.MediaCodecHelper.isFormatSupported","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.encoders.mediacodec/-media-codec-helper/is-format-supported.html","searchKeys":["isFormatSupported","fun isFormatSupported(format: MediaFormat, name: String): Boolean","io.github.thibaultbee.streampack.core.elements.encoders.mediacodec.MediaCodecHelper.isFormatSupported"]},{"name":"fun isFormatSupportedForEncoder(name: String): Boolean","description":"io.github.thibaultbee.streampack.core.elements.encoders.CodecConfig.isFormatSupportedForEncoder","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.encoders/-codec-config/is-format-supported-for-encoder.html","searchKeys":["isFormatSupportedForEncoder","fun isFormatSupportedForEncoder(name: String): Boolean","io.github.thibaultbee.streampack.core.elements.encoders.CodecConfig.isFormatSupportedForEncoder"]},{"name":"fun isHardwareAccelerated(codecInfo: MediaCodecInfo): Boolean","description":"io.github.thibaultbee.streampack.core.elements.encoders.mediacodec.MediaCodecHelper.isHardwareAccelerated","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.encoders.mediacodec/-media-codec-helper/is-hardware-accelerated.html","searchKeys":["isHardwareAccelerated","fun isHardwareAccelerated(codecInfo: MediaCodecInfo): Boolean","io.github.thibaultbee.streampack.core.elements.encoders.mediacodec.MediaCodecHelper.isHardwareAccelerated"]},{"name":"fun isIdentificationHeader(buffer: ByteBuffer): Boolean","description":"io.github.thibaultbee.streampack.core.elements.utils.av.audio.opus.IdentificationHeader.Companion.isIdentificationHeader","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.audio.opus/-identification-header/-companion/is-identification-header.html","searchKeys":["isIdentificationHeader","fun isIdentificationHeader(buffer: ByteBuffer): Boolean","io.github.thibaultbee.streampack.core.elements.utils.av.audio.opus.IdentificationHeader.Companion.isIdentificationHeader"]},{"name":"fun isSoftwareOnly(codecInfo: MediaCodecInfo): Boolean","description":"io.github.thibaultbee.streampack.core.elements.encoders.mediacodec.MediaCodecHelper.isSoftwareOnly","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.encoders.mediacodec/-media-codec-helper/is-software-only.html","searchKeys":["isSoftwareOnly","fun isSoftwareOnly(codecInfo: MediaCodecInfo): Boolean","io.github.thibaultbee.streampack.core.elements.encoders.mediacodec.MediaCodecHelper.isSoftwareOnly"]},{"name":"fun isSupportedCodec(mimeType: String): Boolean","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.video.ExtendedVideoTag.Companion.isSupportedCodec","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.video/-extended-video-tag/-companion/is-supported-codec.html","searchKeys":["isSupportedCodec","fun isSupportedCodec(mimeType: String): Boolean","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.video.ExtendedVideoTag.Companion.isSupportedCodec"]},{"name":"fun isSupportedCodec(mimeType: String): Boolean","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.video.VideoTag.Companion.isSupportedCodec","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.video/-video-tag/-companion/is-supported-codec.html","searchKeys":["isSupportedCodec","fun isSupportedCodec(mimeType: String): Boolean","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.video.VideoTag.Companion.isSupportedCodec"]},{"name":"fun loadShader(shaderType: Int, source: String): Int","description":"io.github.thibaultbee.streampack.core.elements.processing.video.utils.GLUtils.loadShader","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.processing.video.utils/-g-l-utils/load-shader.html","searchKeys":["loadShader","fun loadShader(shaderType: Int, source: String): Int","io.github.thibaultbee.streampack.core.elements.processing.video.utils.GLUtils.loadShader"]},{"name":"fun moreRBSPData(): Boolean","description":"io.github.thibaultbee.streampack.core.elements.utils.av.buffer.ByteBufferBitReader.moreRBSPData","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.buffer/-byte-buffer-bit-reader/more-r-b-s-p-data.html","searchKeys":["moreRBSPData","fun moreRBSPData(): Boolean","io.github.thibaultbee.streampack.core.elements.utils.av.buffer.ByteBufferBitReader.moreRBSPData"]},{"name":"fun muteVibrationAndSound()","description":"io.github.thibaultbee.streampack.core.elements.sources.video.camera.controllers.CameraController.muteVibrationAndSound","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.video.camera.controllers/-camera-controller/mute-vibration-and-sound.html","searchKeys":["muteVibrationAndSound","fun muteVibrationAndSound()","io.github.thibaultbee.streampack.core.elements.sources.video.camera.controllers.CameraController.muteVibrationAndSound"]},{"name":"fun onPinch(scale: Float)","description":"io.github.thibaultbee.streampack.core.elements.sources.video.camera.CameraSettings.Zoom.onPinch","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.video.camera/-camera-settings/-zoom/on-pinch.html","searchKeys":["onPinch","fun onPinch(scale: Float)","io.github.thibaultbee.streampack.core.elements.sources.video.camera.CameraSettings.Zoom.onPinch"]},{"name":"fun onTap(context: Context, afPoints: List<PointF> = emptyList(), aePoints: List<PointF> = emptyList(), awbPoints: List<PointF> = emptyList(), fovRect: Rect, fovRotationDegree: Int)","description":"io.github.thibaultbee.streampack.core.elements.sources.video.camera.CameraSettings.FocusMetering.onTap","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.video.camera/-camera-settings/-focus-metering/on-tap.html","searchKeys":["onTap","fun onTap(context: Context, afPoints: List<PointF> = emptyList(), aePoints: List<PointF> = emptyList(), awbPoints: List<PointF> = emptyList(), fovRect: Rect, fovRotationDegree: Int)","io.github.thibaultbee.streampack.core.elements.sources.video.camera.CameraSettings.FocusMetering.onTap"]},{"name":"fun onTap(context: Context, point: PointF, fovRect: Rect, fovRotationDegree: Int)","description":"io.github.thibaultbee.streampack.core.elements.sources.video.camera.CameraSettings.FocusMetering.onTap","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.video.camera/-camera-settings/-focus-metering/on-tap.html","searchKeys":["onTap","fun onTap(context: Context, point: PointF, fovRect: Rect, fovRotationDegree: Int)","io.github.thibaultbee.streampack.core.elements.sources.video.camera.CameraSettings.FocusMetering.onTap"]},{"name":"fun parse(bitBuffer: BitBuffer): AudioSpecificConfig","description":"io.github.thibaultbee.streampack.core.elements.utils.av.audio.AudioSpecificConfig.Companion.parse","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.audio/-audio-specific-config/-companion/parse.html","searchKeys":["parse","fun parse(bitBuffer: BitBuffer): AudioSpecificConfig","io.github.thibaultbee.streampack.core.elements.utils.av.audio.AudioSpecificConfig.Companion.parse"]},{"name":"fun parse(bitBuffer: BitBuffer): StreamMuxConfig","description":"io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.StreamMuxConfig.Companion.parse","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac/-stream-mux-config/-companion/parse.html","searchKeys":["parse","fun parse(bitBuffer: BitBuffer): StreamMuxConfig","io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.StreamMuxConfig.Companion.parse"]},{"name":"fun parse(buffer: ByteBuffer): AudioMuxElement","description":"io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.AudioMuxElement.Companion.parse","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac/-audio-mux-element/-companion/parse.html","searchKeys":["parse","fun parse(buffer: ByteBuffer): AudioMuxElement","io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.AudioMuxElement.Companion.parse"]},{"name":"fun parse(buffer: ByteBuffer): AudioSpecificConfig","description":"io.github.thibaultbee.streampack.core.elements.utils.av.audio.AudioSpecificConfig.Companion.parse","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.audio/-audio-specific-config/-companion/parse.html","searchKeys":["parse","fun parse(buffer: ByteBuffer): AudioSpecificConfig","io.github.thibaultbee.streampack.core.elements.utils.av.audio.AudioSpecificConfig.Companion.parse"]},{"name":"fun parse(buffer: ByteBuffer): IdentificationHeader","description":"io.github.thibaultbee.streampack.core.elements.utils.av.audio.opus.IdentificationHeader.Companion.parse","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.audio.opus/-identification-header/-companion/parse.html","searchKeys":["parse","fun parse(buffer: ByteBuffer): IdentificationHeader","io.github.thibaultbee.streampack.core.elements.utils.av.audio.opus.IdentificationHeader.Companion.parse"]},{"name":"fun parse(buffer: ByteBuffer): SequenceParameterSets","description":"io.github.thibaultbee.streampack.core.elements.utils.av.video.hevc.SequenceParameterSets.Companion.parse","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.video.hevc/-sequence-parameter-sets/-companion/parse.html","searchKeys":["parse","fun parse(buffer: ByteBuffer): SequenceParameterSets","io.github.thibaultbee.streampack.core.elements.utils.av.video.hevc.SequenceParameterSets.Companion.parse"]},{"name":"fun parse(buffer: ByteBuffer): StreamMuxConfig","description":"io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.StreamMuxConfig.Companion.parse","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac/-stream-mux-config/-companion/parse.html","searchKeys":["parse","fun parse(buffer: ByteBuffer): StreamMuxConfig","io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.StreamMuxConfig.Companion.parse"]},{"name":"fun parse(buffer: ByteBuffer): Triple<IdentificationHeader, ByteBuffer?, ByteBuffer?>","description":"io.github.thibaultbee.streampack.core.elements.utils.av.audio.opus.OpusCsdParser.Companion.parse","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.audio.opus/-opus-csd-parser/-companion/parse.html","searchKeys":["parse","fun parse(buffer: ByteBuffer): Triple<IdentificationHeader, ByteBuffer?, ByteBuffer?>","io.github.thibaultbee.streampack.core.elements.utils.av.audio.opus.OpusCsdParser.Companion.parse"]},{"name":"fun parse(buffer: ByteBuffer): VP9CodecPrivate","description":"io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.VP9CodecPrivate.Companion.parse","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx/-v-p9-codec-private/-companion/parse.html","searchKeys":["parse","fun parse(buffer: ByteBuffer): VP9CodecPrivate","io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.VP9CodecPrivate.Companion.parse"]},{"name":"fun parse(buffer: ByteBuffer): VP9CodecPrivate.CodecFeature","description":"io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.VP9CodecPrivate.CodecFeature.Companion.parse","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx/-v-p9-codec-private/-codec-feature/-companion/parse.html","searchKeys":["parse","fun parse(buffer: ByteBuffer): VP9CodecPrivate.CodecFeature","io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.VP9CodecPrivate.CodecFeature.Companion.parse"]},{"name":"fun parse(buffer: ByteBuffer, maxNumSubLayersMinus1: Byte): ProfileTierLevel","description":"io.github.thibaultbee.streampack.core.elements.utils.av.video.hevc.ProfileTierLevel.Companion.parse","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.video.hevc/-profile-tier-level/-companion/parse.html","searchKeys":["parse","fun parse(buffer: ByteBuffer, maxNumSubLayersMinus1: Byte): ProfileTierLevel","io.github.thibaultbee.streampack.core.elements.utils.av.video.hevc.ProfileTierLevel.Companion.parse"]},{"name":"fun parse(buffer: ByteBuffer, outputChannelCount: Byte): IdentificationHeader.ChannelMapping","description":"io.github.thibaultbee.streampack.core.elements.utils.av.audio.opus.IdentificationHeader.ChannelMapping.Companion.parse","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.audio.opus/-identification-header/-channel-mapping/-companion/parse.html","searchKeys":["parse","fun parse(buffer: ByteBuffer, outputChannelCount: Byte): IdentificationHeader.ChannelMapping","io.github.thibaultbee.streampack.core.elements.utils.av.audio.opus.IdentificationHeader.ChannelMapping.Companion.parse"]},{"name":"fun parse(reader: BitBuffer): AudioSpecificConfig.AudioSpecificConfigExtension","description":"io.github.thibaultbee.streampack.core.elements.utils.av.audio.AudioSpecificConfig.AudioSpecificConfigExtension.Companion.parse","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.audio/-audio-specific-config/-audio-specific-config-extension/-companion/parse.html","searchKeys":["parse","fun parse(reader: BitBuffer): AudioSpecificConfig.AudioSpecificConfigExtension","io.github.thibaultbee.streampack.core.elements.utils.av.audio.AudioSpecificConfig.AudioSpecificConfigExtension.Companion.parse"]},{"name":"fun parse(reader: BitBuffer): ProgramConfigElement","description":"io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.ProgramConfigElement.Companion.parse","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac/-program-config-element/-companion/parse.html","searchKeys":["parse","fun parse(reader: BitBuffer): ProgramConfigElement","io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.ProgramConfigElement.Companion.parse"]},{"name":"fun parse(reader: BitBuffer): SbrHeader","description":"io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.config.SbrHeader.Companion.parse","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.config/-sbr-header/-companion/parse.html","searchKeys":["parse","fun parse(reader: BitBuffer): SbrHeader","io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.config.SbrHeader.Companion.parse"]},{"name":"fun parse(reader: BitBuffer, channelConfiguration: ChannelConfiguration): ELDSpecificConfig","description":"io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.config.ELDSpecificConfig.Companion.parse","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.config/-e-l-d-specific-config/-companion/parse.html","searchKeys":["parse","fun parse(reader: BitBuffer, channelConfiguration: ChannelConfiguration): ELDSpecificConfig","io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.config.ELDSpecificConfig.Companion.parse"]},{"name":"fun parse(reader: BitBuffer, channelConfiguration: ChannelConfiguration): ELDSpecificConfig.LdSbrHeader","description":"io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.config.ELDSpecificConfig.LdSbrHeader.Companion.parse","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.config/-e-l-d-specific-config/-ld-sbr-header/-companion/parse.html","searchKeys":["parse","fun parse(reader: BitBuffer, channelConfiguration: ChannelConfiguration): ELDSpecificConfig.LdSbrHeader","io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.config.ELDSpecificConfig.LdSbrHeader.Companion.parse"]},{"name":"fun parse(reader: BitBuffer, channelConfiguration: ChannelConfiguration, audioObjectType: AudioObjectType): GASpecificConfig","description":"io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.config.GASpecificConfig.Companion.parse","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.config/-g-a-specific-config/-companion/parse.html","searchKeys":["parse","fun parse(reader: BitBuffer, channelConfiguration: ChannelConfiguration, audioObjectType: AudioObjectType): GASpecificConfig","io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.config.GASpecificConfig.Companion.parse"]},{"name":"fun parse(reader: BitBuffer, maxNumSubLayersMinus1: Byte): ProfileTierLevel","description":"io.github.thibaultbee.streampack.core.elements.utils.av.video.hevc.ProfileTierLevel.Companion.parse","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.video.hevc/-profile-tier-level/-companion/parse.html","searchKeys":["parse","fun parse(reader: BitBuffer, maxNumSubLayersMinus1: Byte): ProfileTierLevel","io.github.thibaultbee.streampack.core.elements.utils.av.video.hevc.ProfileTierLevel.Companion.parse"]},{"name":"fun put(b: Boolean)","description":"io.github.thibaultbee.streampack.core.elements.utils.av.buffer.BitBuffer.put","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.buffer/-bit-buffer/put.html","searchKeys":["put","fun put(b: Boolean)","io.github.thibaultbee.streampack.core.elements.utils.av.buffer.BitBuffer.put"]},{"name":"fun put(b: Byte, numBits: Int = Byte.SIZE_BITS)","description":"io.github.thibaultbee.streampack.core.elements.utils.av.buffer.BitBuffer.put","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.buffer/-bit-buffer/put.html","searchKeys":["put","fun put(b: Byte, numBits: Int = Byte.SIZE_BITS)","io.github.thibaultbee.streampack.core.elements.utils.av.buffer.BitBuffer.put"]},{"name":"fun put(b: Short, numBits: Int = Byte.SIZE_BITS)","description":"io.github.thibaultbee.streampack.core.elements.utils.av.buffer.BitBuffer.put","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.buffer/-bit-buffer/put.html","searchKeys":["put","fun put(b: Short, numBits: Int = Byte.SIZE_BITS)","io.github.thibaultbee.streampack.core.elements.utils.av.buffer.BitBuffer.put"]},{"name":"fun put(buffer: BitBuffer)","description":"io.github.thibaultbee.streampack.core.elements.utils.av.buffer.BitBuffer.put","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.buffer/-bit-buffer/put.html","searchKeys":["put","fun put(buffer: BitBuffer)","io.github.thibaultbee.streampack.core.elements.utils.av.buffer.BitBuffer.put"]},{"name":"fun put(buffer: ByteBuffer)","description":"io.github.thibaultbee.streampack.core.elements.utils.av.buffer.BitBuffer.put","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.buffer/-bit-buffer/put.html","searchKeys":["put","fun put(buffer: ByteBuffer)","io.github.thibaultbee.streampack.core.elements.utils.av.buffer.BitBuffer.put"]},{"name":"fun put(i: Int, numBits: Int = Int.SIZE_BITS)","description":"io.github.thibaultbee.streampack.core.elements.utils.av.buffer.BitBuffer.put","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.buffer/-bit-buffer/put.html","searchKeys":["put","fun put(i: Int, numBits: Int = Int.SIZE_BITS)","io.github.thibaultbee.streampack.core.elements.utils.av.buffer.BitBuffer.put"]},{"name":"fun querySurface(eglDisplay: EGLDisplay, eglSurface: EGLSurface, what: Int): Int","description":"io.github.thibaultbee.streampack.core.elements.processing.video.utils.GLUtils.querySurface","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.processing.video.utils/-g-l-utils/query-surface.html","searchKeys":["querySurface","fun querySurface(eglDisplay: EGLDisplay, eglSurface: EGLSurface, what: Int): Int","io.github.thibaultbee.streampack.core.elements.processing.video.utils.GLUtils.querySurface"]},{"name":"fun read1Bit(): Int","description":"io.github.thibaultbee.streampack.core.elements.utils.av.buffer.ByteBufferBitReader.read1Bit","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.buffer/-byte-buffer-bit-reader/read1-bit.html","searchKeys":["read1Bit","fun read1Bit(): Int","io.github.thibaultbee.streampack.core.elements.utils.av.buffer.ByteBufferBitReader.read1Bit"]},{"name":"fun readBoolean(): Boolean","description":"io.github.thibaultbee.streampack.core.elements.utils.av.buffer.ByteBufferBitReader.readBoolean","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.buffer/-byte-buffer-bit-reader/read-boolean.html","searchKeys":["readBoolean","fun readBoolean(): Boolean","io.github.thibaultbee.streampack.core.elements.utils.av.buffer.ByteBufferBitReader.readBoolean"]},{"name":"fun readNBit(n: Int): Long","description":"io.github.thibaultbee.streampack.core.elements.utils.av.buffer.ByteBufferBitReader.readNBit","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.buffer/-byte-buffer-bit-reader/read-n-bit.html","searchKeys":["readNBit","fun readNBit(n: Int): Long","io.github.thibaultbee.streampack.core.elements.utils.av.buffer.ByteBufferBitReader.readNBit"]},{"name":"fun readSE(): Int","description":"io.github.thibaultbee.streampack.core.elements.utils.av.buffer.ByteBufferBitReader.readSE","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.buffer/-byte-buffer-bit-reader/read-s-e.html","searchKeys":["readSE","fun readSE(): Int","io.github.thibaultbee.streampack.core.elements.utils.av.buffer.ByteBufferBitReader.readSE"]},{"name":"fun readSE(): Int","description":"io.github.thibaultbee.streampack.core.elements.utils.av.video.H26XBitBuffer.readSE","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.video/-h26-x-bit-buffer/read-s-e.html","searchKeys":["readSE","fun readSE(): Int","io.github.thibaultbee.streampack.core.elements.utils.av.video.H26XBitBuffer.readSE"]},{"name":"fun readUE(): Int","description":"io.github.thibaultbee.streampack.core.elements.utils.av.buffer.ByteBufferBitReader.readUE","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.buffer/-byte-buffer-bit-reader/read-u-e.html","searchKeys":["readUE","fun readUE(): Int","io.github.thibaultbee.streampack.core.elements.utils.av.buffer.ByteBufferBitReader.readUE"]},{"name":"fun readUE(): Int","description":"io.github.thibaultbee.streampack.core.elements.utils.av.video.H26XBitBuffer.readUE","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.video/-h26-x-bit-buffer/read-u-e.html","searchKeys":["readUE","fun readUE(): Int","io.github.thibaultbee.streampack.core.elements.utils.av.video.H26XBitBuffer.readUE"]},{"name":"fun registerOutputSurface(surface: Surface)","description":"io.github.thibaultbee.streampack.core.elements.processing.video.OpenGlRenderer.registerOutputSurface","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.processing.video/-open-gl-renderer/register-output-surface.html","searchKeys":["registerOutputSurface","fun registerOutputSurface(surface: Surface)","io.github.thibaultbee.streampack.core.elements.processing.video.OpenGlRenderer.registerOutputSurface"]},{"name":"fun release()","description":"io.github.thibaultbee.streampack.core.elements.processing.RawFramePullPush.release","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.processing/-raw-frame-pull-push/release.html","searchKeys":["release","fun release()","io.github.thibaultbee.streampack.core.elements.processing.RawFramePullPush.release"]},{"name":"fun release()","description":"io.github.thibaultbee.streampack.core.elements.processing.video.OpenGlRenderer.release","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.processing.video/-open-gl-renderer/release.html","searchKeys":["release","fun release()","io.github.thibaultbee.streampack.core.elements.processing.video.OpenGlRenderer.release"]},{"name":"fun release()","description":"io.github.thibaultbee.streampack.core.elements.sources.video.camera.controllers.CameraController.release","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.video.camera.controllers/-camera-controller/release.html","searchKeys":["release","fun release()","io.github.thibaultbee.streampack.core.elements.sources.video.camera.controllers.CameraController.release"]},{"name":"fun release()","description":"io.github.thibaultbee.streampack.core.elements.sources.video.camera.controllers.CameraSessionController.release","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.video.camera.controllers/-camera-session-controller/release.html","searchKeys":["release","fun release()","io.github.thibaultbee.streampack.core.elements.sources.video.camera.controllers.CameraSessionController.release"]},{"name":"fun removeInput()","description":"io.github.thibaultbee.streampack.core.elements.processing.RawFramePullPush.removeInput","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.processing/-raw-frame-pull-push/remove-input.html","searchKeys":["removeInput","fun removeInput()","io.github.thibaultbee.streampack.core.elements.processing.RawFramePullPush.removeInput"]},{"name":"fun removeListener(listener: ChunkedFileOutputStream.Listener)","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.sinks.ChunkedFileOutputStreamSink.removeListener","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.sinks/-chunked-file-output-stream-sink/remove-listener.html","searchKeys":["removeListener","fun removeListener(listener: ChunkedFileOutputStream.Listener)","io.github.thibaultbee.streampack.core.elements.endpoints.composites.sinks.ChunkedFileOutputStreamSink.removeListener"]},{"name":"fun removeListener(listener: ChunkedFileOutputStream.Listener)","description":"io.github.thibaultbee.streampack.core.elements.utils.ChunkedFileOutputStream.removeListener","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils/-chunked-file-output-stream/remove-listener.html","searchKeys":["removeListener","fun removeListener(listener: ChunkedFileOutputStream.Listener)","io.github.thibaultbee.streampack.core.elements.utils.ChunkedFileOutputStream.removeListener"]},{"name":"fun removeListeners()","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.sinks.ChunkedFileOutputStreamSink.removeListeners","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.sinks/-chunked-file-output-stream-sink/remove-listeners.html","searchKeys":["removeListeners","fun removeListeners()","io.github.thibaultbee.streampack.core.elements.endpoints.composites.sinks.ChunkedFileOutputStreamSink.removeListeners"]},{"name":"fun removeListeners()","description":"io.github.thibaultbee.streampack.core.elements.utils.ChunkedFileOutputStream.removeListeners","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils/-chunked-file-output-stream/remove-listeners.html","searchKeys":["removeListeners","fun removeListeners()","io.github.thibaultbee.streampack.core.elements.utils.ChunkedFileOutputStream.removeListeners"]},{"name":"fun removeService(tsServiceInfo: TSServiceInfo)","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.TsMuxer.removeService","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts/-ts-muxer/remove-service.html","searchKeys":["removeService","fun removeService(tsServiceInfo: TSServiceInfo)","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.TsMuxer.removeService"]},{"name":"fun removeServices()","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.TsMuxer.removeServices","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts/-ts-muxer/remove-services.html","searchKeys":["removeServices","fun removeServices()","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.TsMuxer.removeServices"]},{"name":"fun removeStreams(tsServiceInfo: TSServiceInfo, streamsPid: List<Short>)","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.TsMuxer.removeStreams","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts/-ts-muxer/remove-streams.html","searchKeys":["removeStreams","fun removeStreams(tsServiceInfo: TSServiceInfo, streamsPid: List<Short>)","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.TsMuxer.removeStreams"]},{"name":"fun render(timestampNs: Long, textureTransform: FloatArray, surface: Surface, viewportRect: Rect)","description":"io.github.thibaultbee.streampack.core.elements.processing.video.OpenGlRenderer.render","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.processing.video/-open-gl-renderer/render.html","searchKeys":["render","fun render(timestampNs: Long, textureTransform: FloatArray, surface: Surface, viewportRect: Rect)","io.github.thibaultbee.streampack.core.elements.processing.video.OpenGlRenderer.render"]},{"name":"fun setBurstSession(cameraCaptureCallback: CameraCaptureSession.CaptureCallback = captureCallback)","description":"io.github.thibaultbee.streampack.core.elements.sources.video.camera.controllers.CameraController.setBurstSession","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.video.camera.controllers/-camera-controller/set-burst-session.html","searchKeys":["setBurstSession","fun setBurstSession(cameraCaptureCallback: CameraCaptureSession.CaptureCallback = captureCallback)","io.github.thibaultbee.streampack.core.elements.sources.video.camera.controllers.CameraController.setBurstSession"]},{"name":"fun setBurstSession(cameraCaptureCallback: CameraCaptureSession.CaptureCallback = captureCallback)","description":"io.github.thibaultbee.streampack.core.elements.sources.video.camera.controllers.CameraSessionController.setBurstSession","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.video.camera.controllers/-camera-session-controller/set-burst-session.html","searchKeys":["setBurstSession","fun setBurstSession(cameraCaptureCallback: CameraCaptureSession.CaptureCallback = captureCallback)","io.github.thibaultbee.streampack.core.elements.sources.video.camera.controllers.CameraSessionController.setBurstSession"]},{"name":"fun setEglExtensions(eglExtensions: String): GraphicDeviceInfo.Builder","description":"io.github.thibaultbee.streampack.core.elements.processing.video.utils.GraphicDeviceInfo.Builder.setEglExtensions","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.processing.video.utils/-graphic-device-info/-builder/set-egl-extensions.html","searchKeys":["setEglExtensions","fun setEglExtensions(eglExtensions: String): GraphicDeviceInfo.Builder","io.github.thibaultbee.streampack.core.elements.processing.video.utils.GraphicDeviceInfo.Builder.setEglExtensions"]},{"name":"fun setEglVersion(eglVersion: String): GraphicDeviceInfo.Builder","description":"io.github.thibaultbee.streampack.core.elements.processing.video.utils.GraphicDeviceInfo.Builder.setEglVersion","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.processing.video.utils/-graphic-device-info/-builder/set-egl-version.html","searchKeys":["setEglVersion","fun setEglVersion(eglVersion: String): GraphicDeviceInfo.Builder","io.github.thibaultbee.streampack.core.elements.processing.video.utils.GraphicDeviceInfo.Builder.setEglVersion"]},{"name":"fun setGlExtensions(glExtensions: String): GraphicDeviceInfo.Builder","description":"io.github.thibaultbee.streampack.core.elements.processing.video.utils.GraphicDeviceInfo.Builder.setGlExtensions","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.processing.video.utils/-graphic-device-info/-builder/set-gl-extensions.html","searchKeys":["setGlExtensions","fun setGlExtensions(glExtensions: String): GraphicDeviceInfo.Builder","io.github.thibaultbee.streampack.core.elements.processing.video.utils.GraphicDeviceInfo.Builder.setGlExtensions"]},{"name":"fun setGlVersion(glVersion: String): GraphicDeviceInfo.Builder","description":"io.github.thibaultbee.streampack.core.elements.processing.video.utils.GraphicDeviceInfo.Builder.setGlVersion","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.processing.video.utils/-graphic-device-info/-builder/set-gl-version.html","searchKeys":["setGlVersion","fun setGlVersion(glVersion: String): GraphicDeviceInfo.Builder","io.github.thibaultbee.streampack.core.elements.processing.video.utils.GraphicDeviceInfo.Builder.setGlVersion"]},{"name":"fun setInput(getFrame: (frameFactory: IRawFrameFactory) -> RawFrame)","description":"io.github.thibaultbee.streampack.core.elements.processing.RawFramePullPush.setInput","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.processing/-raw-frame-pull-push/set-input.html","searchKeys":["setInput","fun setInput(getFrame: (frameFactory: IRawFrameFactory) -> RawFrame)","io.github.thibaultbee.streampack.core.elements.processing.RawFramePullPush.setInput"]},{"name":"fun setInputFormat(inputFormat: GLUtils.InputFormat)","description":"io.github.thibaultbee.streampack.core.elements.processing.video.OpenGlRenderer.setInputFormat","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.processing.video/-open-gl-renderer/set-input-format.html","searchKeys":["setInputFormat","fun setInputFormat(inputFormat: GLUtils.InputFormat)","io.github.thibaultbee.streampack.core.elements.processing.video.OpenGlRenderer.setInputFormat"]},{"name":"fun setRepeatingSession(cameraCaptureCallback: CameraCaptureSession.CaptureCallback = captureCallback)","description":"io.github.thibaultbee.streampack.core.elements.sources.video.camera.controllers.CameraController.setRepeatingSession","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.video.camera.controllers/-camera-controller/set-repeating-session.html","searchKeys":["setRepeatingSession","fun setRepeatingSession(cameraCaptureCallback: CameraCaptureSession.CaptureCallback = captureCallback)","io.github.thibaultbee.streampack.core.elements.sources.video.camera.controllers.CameraController.setRepeatingSession"]},{"name":"fun setRepeatingSession(cameraCaptureCallback: CameraCaptureSession.CaptureCallback = captureCallback)","description":"io.github.thibaultbee.streampack.core.elements.sources.video.camera.controllers.CameraSessionController.setRepeatingSession","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.video.camera.controllers/-camera-session-controller/set-repeating-session.html","searchKeys":["setRepeatingSession","fun setRepeatingSession(cameraCaptureCallback: CameraCaptureSession.CaptureCallback = captureCallback)","io.github.thibaultbee.streampack.core.elements.sources.video.camera.controllers.CameraSessionController.setRepeatingSession"]},{"name":"fun start()","description":"io.github.thibaultbee.streampack.core.elements.utils.ConflatedJob.start","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils/-conflated-job/start.html","searchKeys":["start","fun start()","io.github.thibaultbee.streampack.core.elements.utils.ConflatedJob.start"]},{"name":"fun start()","description":"io.github.thibaultbee.streampack.core.elements.utils.Scheduler.start","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils/-scheduler/start.html","searchKeys":["start","fun start()","io.github.thibaultbee.streampack.core.elements.utils.Scheduler.start"]},{"name":"fun startStream()","description":"io.github.thibaultbee.streampack.core.elements.processing.RawFramePullPush.startStream","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.processing/-raw-frame-pull-push/start-stream.html","searchKeys":["startStream","fun startStream()","io.github.thibaultbee.streampack.core.elements.processing.RawFramePullPush.startStream"]},{"name":"fun stop()","description":"io.github.thibaultbee.streampack.core.elements.utils.Scheduler.stop","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils/-scheduler/stop.html","searchKeys":["stop","fun stop()","io.github.thibaultbee.streampack.core.elements.utils.Scheduler.stop"]},{"name":"fun stopStream()","description":"io.github.thibaultbee.streampack.core.elements.processing.RawFramePullPush.stopStream","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.processing/-raw-frame-pull-push/stop-stream.html","searchKeys":["stopStream","fun stopStream()","io.github.thibaultbee.streampack.core.elements.processing.RawFramePullPush.stopStream"]},{"name":"fun toBitBuffer(): BitBuffer","description":"io.github.thibaultbee.streampack.core.elements.utils.av.buffer.BitBufferWriter.toBitBuffer","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.buffer/-bit-buffer-writer/to-bit-buffer.html","searchKeys":["toBitBuffer","fun toBitBuffer(): BitBuffer","io.github.thibaultbee.streampack.core.elements.utils.av.buffer.BitBufferWriter.toBitBuffer"]},{"name":"fun toByteBuffer(payload: ByteBuffer): ByteBuffer","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets.Psi.toByteBuffer","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets/-psi/to-byte-buffer.html","searchKeys":["toByteBuffer","fun toByteBuffer(payload: ByteBuffer): ByteBuffer","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets.Psi.toByteBuffer"]},{"name":"fun toByteFormat(): Int","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.SoundSize.toByteFormat","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags/-sound-size/to-byte-format.html","searchKeys":["toByteFormat","fun toByteFormat(): Int","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.SoundSize.toByteFormat"]},{"name":"fun toChannelConfig(): Int","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.SoundType.toChannelConfig","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags/-sound-type/to-channel-config.html","searchKeys":["toChannelConfig","fun toChannelConfig(): Int","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.SoundType.toChannelConfig"]},{"name":"fun toMimeType(): String","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.SoundFormat.toMimeType","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags/-sound-format/to-mime-type.html","searchKeys":["toMimeType","fun toMimeType(): String","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.SoundFormat.toMimeType"]},{"name":"fun toMimeType(): String","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.video.CodecID.toMimeType","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.video/-codec-i-d/to-mime-type.html","searchKeys":["toMimeType","fun toMimeType(): String","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.video.CodecID.toMimeType"]},{"name":"fun toSampleRate(): Int","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.SoundRate.toSampleRate","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags/-sound-rate/to-sample-rate.html","searchKeys":["toSampleRate","fun toSampleRate(): Int","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.SoundRate.toSampleRate"]},{"name":"fun toSampleRate(): Int","description":"io.github.thibaultbee.streampack.core.elements.utils.av.audio.SamplingFrequencyIndex.toSampleRate","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.audio/-sampling-frequency-index/to-sample-rate.html","searchKeys":["toSampleRate","fun toSampleRate(): Int","io.github.thibaultbee.streampack.core.elements.utils.av.audio.SamplingFrequencyIndex.toSampleRate"]},{"name":"fun unmuteVibrationAndSound()","description":"io.github.thibaultbee.streampack.core.elements.sources.video.camera.controllers.CameraController.unmuteVibrationAndSound","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.video.camera.controllers/-camera-controller/unmute-vibration-and-sound.html","searchKeys":["unmuteVibrationAndSound","fun unmuteVibrationAndSound()","io.github.thibaultbee.streampack.core.elements.sources.video.camera.controllers.CameraController.unmuteVibrationAndSound"]},{"name":"fun unregisterOutputSurface(surface: Surface)","description":"io.github.thibaultbee.streampack.core.elements.processing.video.OpenGlRenderer.unregisterOutputSurface","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.processing.video/-open-gl-renderer/unregister-output-surface.html","searchKeys":["unregisterOutputSurface","fun unregisterOutputSurface(surface: Surface)","io.github.thibaultbee.streampack.core.elements.processing.video.OpenGlRenderer.unregisterOutputSurface"]},{"name":"fun updateAlpha(alpha: Float)","description":"io.github.thibaultbee.streampack.core.elements.processing.video.utils.GLUtils.Program2D.updateAlpha","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.processing.video.utils/-g-l-utils/-program2-d/update-alpha.html","searchKeys":["updateAlpha","fun updateAlpha(alpha: Float)","io.github.thibaultbee.streampack.core.elements.processing.video.utils.GLUtils.Program2D.updateAlpha"]},{"name":"fun updateTextureMatrix(textureMat: FloatArray)","description":"io.github.thibaultbee.streampack.core.elements.processing.video.utils.GLUtils.SamplerShaderProgram.updateTextureMatrix","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.processing.video.utils/-g-l-utils/-sampler-shader-program/update-texture-matrix.html","searchKeys":["updateTextureMatrix","fun updateTextureMatrix(textureMat: FloatArray)","io.github.thibaultbee.streampack.core.elements.processing.video.utils.GLUtils.SamplerShaderProgram.updateTextureMatrix"]},{"name":"fun updateTransformMatrix(transformMat: FloatArray)","description":"io.github.thibaultbee.streampack.core.elements.processing.video.utils.GLUtils.Program2D.updateTransformMatrix","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.processing.video.utils/-g-l-utils/-program2-d/update-transform-matrix.html","searchKeys":["updateTransformMatrix","fun updateTransformMatrix(transformMat: FloatArray)","io.github.thibaultbee.streampack.core.elements.processing.video.utils.GLUtils.Program2D.updateTransformMatrix"]},{"name":"fun valueOf(value: String): AACPacketType","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.AACPacketType.valueOf","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags/-a-a-c-packet-type/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): AACPacketType","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.AACPacketType.valueOf"]},{"name":"fun valueOf(value: String): AVCPacketType","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.video.AVCPacketType.valueOf","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.video/-a-v-c-packet-type/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): AVCPacketType","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.video.AVCPacketType.valueOf"]},{"name":"fun valueOf(value: String): AmfType","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.amf.AmfType.valueOf","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.amf/-amf-type/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): AmfType","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.amf.AmfType.valueOf"]},{"name":"fun valueOf(value: String): AspectRatioMode","description":"io.github.thibaultbee.streampack.core.elements.processing.video.outputs.AspectRatioMode.valueOf","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.processing.video.outputs/-aspect-ratio-mode/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): AspectRatioMode","io.github.thibaultbee.streampack.core.elements.processing.video.outputs.AspectRatioMode.valueOf"]},{"name":"fun valueOf(value: String): AudioObjectType","description":"io.github.thibaultbee.streampack.core.elements.utils.av.audio.AudioObjectType.valueOf","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.audio/-audio-object-type/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): AudioObjectType","io.github.thibaultbee.streampack.core.elements.utils.av.audio.AudioObjectType.valueOf"]},{"name":"fun valueOf(value: String): ChannelConfiguration","description":"io.github.thibaultbee.streampack.core.elements.utils.av.audio.ChannelConfiguration.valueOf","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.audio/-channel-configuration/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): ChannelConfiguration","io.github.thibaultbee.streampack.core.elements.utils.av.audio.ChannelConfiguration.valueOf"]},{"name":"fun valueOf(value: String): ChromaFormat","description":"io.github.thibaultbee.streampack.core.elements.utils.av.video.ChromaFormat.valueOf","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.video/-chroma-format/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): ChromaFormat","io.github.thibaultbee.streampack.core.elements.utils.av.video.ChromaFormat.valueOf"]},{"name":"fun valueOf(value: String): ChromaSubsampling","description":"io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.ChromaSubsampling.valueOf","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx/-chroma-subsampling/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): ChromaSubsampling","io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.ChromaSubsampling.valueOf"]},{"name":"fun valueOf(value: String): CodecID","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.video.CodecID.valueOf","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.video/-codec-i-d/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): CodecID","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.video.CodecID.valueOf"]},{"name":"fun valueOf(value: String): ColorPrimaries","description":"io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.ColorPrimaries.valueOf","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx/-color-primaries/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): ColorPrimaries","io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.ColorPrimaries.valueOf"]},{"name":"fun valueOf(value: String): EncoderMode","description":"io.github.thibaultbee.streampack.core.elements.encoders.EncoderMode.valueOf","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.encoders/-encoder-mode/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): EncoderMode","io.github.thibaultbee.streampack.core.elements.encoders.EncoderMode.valueOf"]},{"name":"fun valueOf(value: String): FourCCs","description":"io.github.thibaultbee.streampack.core.elements.utils.av.FourCCs.valueOf","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av/-four-c-cs/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): FourCCs","io.github.thibaultbee.streampack.core.elements.utils.av.FourCCs.valueOf"]},{"name":"fun valueOf(value: String): FrameType","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.video.FrameType.valueOf","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.video/-frame-type/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): FrameType","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.video.FrameType.valueOf"]},{"name":"fun valueOf(value: String): GLUtils.InputFormat","description":"io.github.thibaultbee.streampack.core.elements.processing.video.utils.GLUtils.InputFormat.valueOf","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.processing.video.utils/-g-l-utils/-input-format/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): GLUtils.InputFormat","io.github.thibaultbee.streampack.core.elements.processing.video.utils.GLUtils.InputFormat.valueOf"]},{"name":"fun valueOf(value: String): HEVCDecoderConfigurationRecord.NalUnit.Type","description":"io.github.thibaultbee.streampack.core.elements.utils.av.video.hevc.HEVCDecoderConfigurationRecord.NalUnit.Type.valueOf","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.video.hevc/-h-e-v-c-decoder-configuration-record/-nal-unit/-type/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): HEVCDecoderConfigurationRecord.NalUnit.Type","io.github.thibaultbee.streampack.core.elements.utils.av.video.hevc.HEVCDecoderConfigurationRecord.NalUnit.Type.valueOf"]},{"name":"fun valueOf(value: String): HEVCProfile","description":"io.github.thibaultbee.streampack.core.elements.utils.av.video.hevc.HEVCProfile.valueOf","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.video.hevc/-h-e-v-c-profile/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): HEVCProfile","io.github.thibaultbee.streampack.core.elements.utils.av.video.hevc.HEVCProfile.valueOf"]},{"name":"fun valueOf(value: String): HandlerBox.HandlerType","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.HandlerBox.HandlerType.valueOf","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-handler-box/-handler-type/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): HandlerBox.HandlerType","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.HandlerBox.HandlerType.valueOf"]},{"name":"fun valueOf(value: String): HasRedundancy","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models.HasRedundancy.valueOf","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models/-has-redundancy/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): HasRedundancy","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models.HasRedundancy.valueOf"]},{"name":"fun valueOf(value: String): IsLeading","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models.IsLeading.valueOf","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models/-is-leading/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): IsLeading","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models.IsLeading.valueOf"]},{"name":"fun valueOf(value: String): Level","description":"io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.Level.valueOf","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx/-level/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): Level","io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.Level.valueOf"]},{"name":"fun valueOf(value: String): MatrixCoefficients","description":"io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.MatrixCoefficients.valueOf","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx/-matrix-coefficients/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): MatrixCoefficients","io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.MatrixCoefficients.valueOf"]},{"name":"fun valueOf(value: String): MediaContainerType","description":"io.github.thibaultbee.streampack.core.elements.endpoints.MediaContainerType.valueOf","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints/-media-container-type/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): MediaContainerType","io.github.thibaultbee.streampack.core.elements.endpoints.MediaContainerType.valueOf"]},{"name":"fun valueOf(value: String): MediaSinkType","description":"io.github.thibaultbee.streampack.core.elements.endpoints.MediaSinkType.valueOf","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints/-media-sink-type/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): MediaSinkType","io.github.thibaultbee.streampack.core.elements.endpoints.MediaSinkType.valueOf"]},{"name":"fun valueOf(value: String): ObjectTypeIndication","description":"io.github.thibaultbee.streampack.core.elements.utils.av.descriptors.ObjectTypeIndication.valueOf","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.descriptors/-object-type-indication/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): ObjectTypeIndication","io.github.thibaultbee.streampack.core.elements.utils.av.descriptors.ObjectTypeIndication.valueOf"]},{"name":"fun valueOf(value: String): PacketType","description":"io.github.thibaultbee.streampack.core.elements.data.PacketType.valueOf","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.data/-packet-type/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): PacketType","io.github.thibaultbee.streampack.core.elements.data.PacketType.valueOf"]},{"name":"fun valueOf(value: String): PacketType","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.video.PacketType.valueOf","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.video/-packet-type/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): PacketType","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.video.PacketType.valueOf"]},{"name":"fun valueOf(value: String): Pes.StreamId","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets.Pes.StreamId.valueOf","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets/-pes/-stream-id/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): Pes.StreamId","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets.Pes.StreamId.valueOf"]},{"name":"fun valueOf(value: String): Pmt.Descriptor","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets.Pmt.Descriptor.valueOf","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets/-pmt/-descriptor/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): Pmt.Descriptor","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets.Pmt.Descriptor.valueOf"]},{"name":"fun valueOf(value: String): Pmt.StreamType","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets.Pmt.StreamType.valueOf","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets/-pmt/-stream-type/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): Pmt.StreamType","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets.Pmt.StreamType.valueOf"]},{"name":"fun valueOf(value: String): Profile","description":"io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.Profile.valueOf","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx/-profile/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): Profile","io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.Profile.valueOf"]},{"name":"fun valueOf(value: String): SampleDependsOn","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models.SampleDependsOn.valueOf","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models/-sample-depends-on/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): SampleDependsOn","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models.SampleDependsOn.valueOf"]},{"name":"fun valueOf(value: String): SampleIsDependedOn","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models.SampleIsDependedOn.valueOf","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models/-sample-is-depended-on/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): SampleIsDependedOn","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models.SampleIsDependedOn.valueOf"]},{"name":"fun valueOf(value: String): SamplingFrequencyIndex","description":"io.github.thibaultbee.streampack.core.elements.utils.av.audio.SamplingFrequencyIndex.valueOf","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.audio/-sampling-frequency-index/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): SamplingFrequencyIndex","io.github.thibaultbee.streampack.core.elements.utils.av.audio.SamplingFrequencyIndex.valueOf"]},{"name":"fun valueOf(value: String): SoundFormat","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.SoundFormat.valueOf","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags/-sound-format/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): SoundFormat","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.SoundFormat.valueOf"]},{"name":"fun valueOf(value: String): SoundRate","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.SoundRate.valueOf","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags/-sound-rate/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): SoundRate","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.SoundRate.valueOf"]},{"name":"fun valueOf(value: String): SoundSize","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.SoundSize.valueOf","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags/-sound-size/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): SoundSize","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.SoundSize.valueOf"]},{"name":"fun valueOf(value: String): SoundType","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.SoundType.valueOf","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags/-sound-type/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): SoundType","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.SoundType.valueOf"]},{"name":"fun valueOf(value: String): StreamType","description":"io.github.thibaultbee.streampack.core.elements.utils.av.descriptors.StreamType.valueOf","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.descriptors/-stream-type/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): StreamType","io.github.thibaultbee.streampack.core.elements.utils.av.descriptors.StreamType.valueOf"]},{"name":"fun valueOf(value: String): StreamerPipeline.AudioOutputMode","description":"io.github.thibaultbee.streampack.core.pipelines.StreamerPipeline.AudioOutputMode.valueOf","location":"streampack-core/io.github.thibaultbee.streampack.core.pipelines/-streamer-pipeline/-audio-output-mode/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): StreamerPipeline.AudioOutputMode","io.github.thibaultbee.streampack.core.pipelines.StreamerPipeline.AudioOutputMode.valueOf"]},{"name":"fun valueOf(value: String): TSServiceInfo.ServiceType","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.data.TSServiceInfo.ServiceType.valueOf","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.data/-t-s-service-info/-service-type/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): TSServiceInfo.ServiceType","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.data.TSServiceInfo.ServiceType.valueOf"]},{"name":"fun valueOf(value: String): TagType","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.TagType.valueOf","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags/-tag-type/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): TagType","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.TagType.valueOf"]},{"name":"fun valueOf(value: String): Tags","description":"io.github.thibaultbee.streampack.core.elements.utils.av.descriptors.Tags.valueOf","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.descriptors/-tags/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): Tags","io.github.thibaultbee.streampack.core.elements.utils.av.descriptors.Tags.valueOf"]},{"name":"fun valueOf(value: String): TrackFragmentHeaderBox.TrackFragmentFlag","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.TrackFragmentHeaderBox.TrackFragmentFlag.valueOf","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-track-fragment-header-box/-track-fragment-flag/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): TrackFragmentHeaderBox.TrackFragmentFlag","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.TrackFragmentHeaderBox.TrackFragmentFlag.valueOf"]},{"name":"fun valueOf(value: String): TrackHeaderBox.TrackFlag","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.TrackHeaderBox.TrackFlag.valueOf","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-track-header-box/-track-flag/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): TrackHeaderBox.TrackFlag","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.TrackHeaderBox.TrackFlag.valueOf"]},{"name":"fun valueOf(value: String): TrackRunBox.TrackRunFlag","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.TrackRunBox.TrackRunFlag.valueOf","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-track-run-box/-track-run-flag/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): TrackRunBox.TrackRunFlag","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.TrackRunBox.TrackRunFlag.valueOf"]},{"name":"fun valueOf(value: String): TransferCharacteristics","description":"io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.TransferCharacteristics.valueOf","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx/-transfer-characteristics/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): TransferCharacteristics","io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.TransferCharacteristics.valueOf"]},{"name":"fun valueOf(value: String): VP9CodecPrivate.CodecFeature.Ids","description":"io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.VP9CodecPrivate.CodecFeature.Ids.valueOf","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx/-v-p9-codec-private/-codec-feature/-ids/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): VP9CodecPrivate.CodecFeature.Ids","io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.VP9CodecPrivate.CodecFeature.Ids.valueOf"]},{"name":"fun values(): Array<AACPacketType>","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.AACPacketType.values","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags/-a-a-c-packet-type/values.html","searchKeys":["values","fun values(): Array<AACPacketType>","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.AACPacketType.values"]},{"name":"fun values(): Array<AVCPacketType>","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.video.AVCPacketType.values","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.video/-a-v-c-packet-type/values.html","searchKeys":["values","fun values(): Array<AVCPacketType>","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.video.AVCPacketType.values"]},{"name":"fun values(): Array<AmfType>","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.amf.AmfType.values","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.amf/-amf-type/values.html","searchKeys":["values","fun values(): Array<AmfType>","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.amf.AmfType.values"]},{"name":"fun values(): Array<AspectRatioMode>","description":"io.github.thibaultbee.streampack.core.elements.processing.video.outputs.AspectRatioMode.values","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.processing.video.outputs/-aspect-ratio-mode/values.html","searchKeys":["values","fun values(): Array<AspectRatioMode>","io.github.thibaultbee.streampack.core.elements.processing.video.outputs.AspectRatioMode.values"]},{"name":"fun values(): Array<AudioObjectType>","description":"io.github.thibaultbee.streampack.core.elements.utils.av.audio.AudioObjectType.values","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.audio/-audio-object-type/values.html","searchKeys":["values","fun values(): Array<AudioObjectType>","io.github.thibaultbee.streampack.core.elements.utils.av.audio.AudioObjectType.values"]},{"name":"fun values(): Array<ChannelConfiguration>","description":"io.github.thibaultbee.streampack.core.elements.utils.av.audio.ChannelConfiguration.values","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.audio/-channel-configuration/values.html","searchKeys":["values","fun values(): Array<ChannelConfiguration>","io.github.thibaultbee.streampack.core.elements.utils.av.audio.ChannelConfiguration.values"]},{"name":"fun values(): Array<ChromaFormat>","description":"io.github.thibaultbee.streampack.core.elements.utils.av.video.ChromaFormat.values","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.video/-chroma-format/values.html","searchKeys":["values","fun values(): Array<ChromaFormat>","io.github.thibaultbee.streampack.core.elements.utils.av.video.ChromaFormat.values"]},{"name":"fun values(): Array<ChromaSubsampling>","description":"io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.ChromaSubsampling.values","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx/-chroma-subsampling/values.html","searchKeys":["values","fun values(): Array<ChromaSubsampling>","io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.ChromaSubsampling.values"]},{"name":"fun values(): Array<CodecID>","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.video.CodecID.values","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.video/-codec-i-d/values.html","searchKeys":["values","fun values(): Array<CodecID>","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.video.CodecID.values"]},{"name":"fun values(): Array<ColorPrimaries>","description":"io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.ColorPrimaries.values","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx/-color-primaries/values.html","searchKeys":["values","fun values(): Array<ColorPrimaries>","io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.ColorPrimaries.values"]},{"name":"fun values(): Array<EncoderMode>","description":"io.github.thibaultbee.streampack.core.elements.encoders.EncoderMode.values","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.encoders/-encoder-mode/values.html","searchKeys":["values","fun values(): Array<EncoderMode>","io.github.thibaultbee.streampack.core.elements.encoders.EncoderMode.values"]},{"name":"fun values(): Array<FourCCs>","description":"io.github.thibaultbee.streampack.core.elements.utils.av.FourCCs.values","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av/-four-c-cs/values.html","searchKeys":["values","fun values(): Array<FourCCs>","io.github.thibaultbee.streampack.core.elements.utils.av.FourCCs.values"]},{"name":"fun values(): Array<FrameType>","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.video.FrameType.values","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.video/-frame-type/values.html","searchKeys":["values","fun values(): Array<FrameType>","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.video.FrameType.values"]},{"name":"fun values(): Array<GLUtils.InputFormat>","description":"io.github.thibaultbee.streampack.core.elements.processing.video.utils.GLUtils.InputFormat.values","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.processing.video.utils/-g-l-utils/-input-format/values.html","searchKeys":["values","fun values(): Array<GLUtils.InputFormat>","io.github.thibaultbee.streampack.core.elements.processing.video.utils.GLUtils.InputFormat.values"]},{"name":"fun values(): Array<HEVCDecoderConfigurationRecord.NalUnit.Type>","description":"io.github.thibaultbee.streampack.core.elements.utils.av.video.hevc.HEVCDecoderConfigurationRecord.NalUnit.Type.values","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.video.hevc/-h-e-v-c-decoder-configuration-record/-nal-unit/-type/values.html","searchKeys":["values","fun values(): Array<HEVCDecoderConfigurationRecord.NalUnit.Type>","io.github.thibaultbee.streampack.core.elements.utils.av.video.hevc.HEVCDecoderConfigurationRecord.NalUnit.Type.values"]},{"name":"fun values(): Array<HEVCProfile>","description":"io.github.thibaultbee.streampack.core.elements.utils.av.video.hevc.HEVCProfile.values","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.video.hevc/-h-e-v-c-profile/values.html","searchKeys":["values","fun values(): Array<HEVCProfile>","io.github.thibaultbee.streampack.core.elements.utils.av.video.hevc.HEVCProfile.values"]},{"name":"fun values(): Array<HandlerBox.HandlerType>","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.HandlerBox.HandlerType.values","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-handler-box/-handler-type/values.html","searchKeys":["values","fun values(): Array<HandlerBox.HandlerType>","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.HandlerBox.HandlerType.values"]},{"name":"fun values(): Array<HasRedundancy>","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models.HasRedundancy.values","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models/-has-redundancy/values.html","searchKeys":["values","fun values(): Array<HasRedundancy>","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models.HasRedundancy.values"]},{"name":"fun values(): Array<IsLeading>","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models.IsLeading.values","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models/-is-leading/values.html","searchKeys":["values","fun values(): Array<IsLeading>","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models.IsLeading.values"]},{"name":"fun values(): Array<Level>","description":"io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.Level.values","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx/-level/values.html","searchKeys":["values","fun values(): Array<Level>","io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.Level.values"]},{"name":"fun values(): Array<MatrixCoefficients>","description":"io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.MatrixCoefficients.values","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx/-matrix-coefficients/values.html","searchKeys":["values","fun values(): Array<MatrixCoefficients>","io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.MatrixCoefficients.values"]},{"name":"fun values(): Array<MediaContainerType>","description":"io.github.thibaultbee.streampack.core.elements.endpoints.MediaContainerType.values","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints/-media-container-type/values.html","searchKeys":["values","fun values(): Array<MediaContainerType>","io.github.thibaultbee.streampack.core.elements.endpoints.MediaContainerType.values"]},{"name":"fun values(): Array<MediaSinkType>","description":"io.github.thibaultbee.streampack.core.elements.endpoints.MediaSinkType.values","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints/-media-sink-type/values.html","searchKeys":["values","fun values(): Array<MediaSinkType>","io.github.thibaultbee.streampack.core.elements.endpoints.MediaSinkType.values"]},{"name":"fun values(): Array<ObjectTypeIndication>","description":"io.github.thibaultbee.streampack.core.elements.utils.av.descriptors.ObjectTypeIndication.values","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.descriptors/-object-type-indication/values.html","searchKeys":["values","fun values(): Array<ObjectTypeIndication>","io.github.thibaultbee.streampack.core.elements.utils.av.descriptors.ObjectTypeIndication.values"]},{"name":"fun values(): Array<PacketType>","description":"io.github.thibaultbee.streampack.core.elements.data.PacketType.values","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.data/-packet-type/values.html","searchKeys":["values","fun values(): Array<PacketType>","io.github.thibaultbee.streampack.core.elements.data.PacketType.values"]},{"name":"fun values(): Array<PacketType>","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.video.PacketType.values","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.video/-packet-type/values.html","searchKeys":["values","fun values(): Array<PacketType>","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.video.PacketType.values"]},{"name":"fun values(): Array<Pes.StreamId>","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets.Pes.StreamId.values","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets/-pes/-stream-id/values.html","searchKeys":["values","fun values(): Array<Pes.StreamId>","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets.Pes.StreamId.values"]},{"name":"fun values(): Array<Pmt.Descriptor>","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets.Pmt.Descriptor.values","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets/-pmt/-descriptor/values.html","searchKeys":["values","fun values(): Array<Pmt.Descriptor>","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets.Pmt.Descriptor.values"]},{"name":"fun values(): Array<Pmt.StreamType>","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets.Pmt.StreamType.values","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets/-pmt/-stream-type/values.html","searchKeys":["values","fun values(): Array<Pmt.StreamType>","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets.Pmt.StreamType.values"]},{"name":"fun values(): Array<Profile>","description":"io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.Profile.values","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx/-profile/values.html","searchKeys":["values","fun values(): Array<Profile>","io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.Profile.values"]},{"name":"fun values(): Array<SampleDependsOn>","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models.SampleDependsOn.values","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models/-sample-depends-on/values.html","searchKeys":["values","fun values(): Array<SampleDependsOn>","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models.SampleDependsOn.values"]},{"name":"fun values(): Array<SampleIsDependedOn>","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models.SampleIsDependedOn.values","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models/-sample-is-depended-on/values.html","searchKeys":["values","fun values(): Array<SampleIsDependedOn>","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models.SampleIsDependedOn.values"]},{"name":"fun values(): Array<SamplingFrequencyIndex>","description":"io.github.thibaultbee.streampack.core.elements.utils.av.audio.SamplingFrequencyIndex.values","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.audio/-sampling-frequency-index/values.html","searchKeys":["values","fun values(): Array<SamplingFrequencyIndex>","io.github.thibaultbee.streampack.core.elements.utils.av.audio.SamplingFrequencyIndex.values"]},{"name":"fun values(): Array<SoundFormat>","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.SoundFormat.values","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags/-sound-format/values.html","searchKeys":["values","fun values(): Array<SoundFormat>","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.SoundFormat.values"]},{"name":"fun values(): Array<SoundRate>","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.SoundRate.values","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags/-sound-rate/values.html","searchKeys":["values","fun values(): Array<SoundRate>","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.SoundRate.values"]},{"name":"fun values(): Array<SoundSize>","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.SoundSize.values","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags/-sound-size/values.html","searchKeys":["values","fun values(): Array<SoundSize>","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.SoundSize.values"]},{"name":"fun values(): Array<SoundType>","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.SoundType.values","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags/-sound-type/values.html","searchKeys":["values","fun values(): Array<SoundType>","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.SoundType.values"]},{"name":"fun values(): Array<StreamType>","description":"io.github.thibaultbee.streampack.core.elements.utils.av.descriptors.StreamType.values","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.descriptors/-stream-type/values.html","searchKeys":["values","fun values(): Array<StreamType>","io.github.thibaultbee.streampack.core.elements.utils.av.descriptors.StreamType.values"]},{"name":"fun values(): Array<StreamerPipeline.AudioOutputMode>","description":"io.github.thibaultbee.streampack.core.pipelines.StreamerPipeline.AudioOutputMode.values","location":"streampack-core/io.github.thibaultbee.streampack.core.pipelines/-streamer-pipeline/-audio-output-mode/values.html","searchKeys":["values","fun values(): Array<StreamerPipeline.AudioOutputMode>","io.github.thibaultbee.streampack.core.pipelines.StreamerPipeline.AudioOutputMode.values"]},{"name":"fun values(): Array<TSServiceInfo.ServiceType>","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.data.TSServiceInfo.ServiceType.values","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.data/-t-s-service-info/-service-type/values.html","searchKeys":["values","fun values(): Array<TSServiceInfo.ServiceType>","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.data.TSServiceInfo.ServiceType.values"]},{"name":"fun values(): Array<TagType>","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.TagType.values","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags/-tag-type/values.html","searchKeys":["values","fun values(): Array<TagType>","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.TagType.values"]},{"name":"fun values(): Array<Tags>","description":"io.github.thibaultbee.streampack.core.elements.utils.av.descriptors.Tags.values","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.descriptors/-tags/values.html","searchKeys":["values","fun values(): Array<Tags>","io.github.thibaultbee.streampack.core.elements.utils.av.descriptors.Tags.values"]},{"name":"fun values(): Array<TrackFragmentHeaderBox.TrackFragmentFlag>","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.TrackFragmentHeaderBox.TrackFragmentFlag.values","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-track-fragment-header-box/-track-fragment-flag/values.html","searchKeys":["values","fun values(): Array<TrackFragmentHeaderBox.TrackFragmentFlag>","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.TrackFragmentHeaderBox.TrackFragmentFlag.values"]},{"name":"fun values(): Array<TrackHeaderBox.TrackFlag>","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.TrackHeaderBox.TrackFlag.values","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-track-header-box/-track-flag/values.html","searchKeys":["values","fun values(): Array<TrackHeaderBox.TrackFlag>","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.TrackHeaderBox.TrackFlag.values"]},{"name":"fun values(): Array<TrackRunBox.TrackRunFlag>","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.TrackRunBox.TrackRunFlag.values","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-track-run-box/-track-run-flag/values.html","searchKeys":["values","fun values(): Array<TrackRunBox.TrackRunFlag>","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.TrackRunBox.TrackRunFlag.values"]},{"name":"fun values(): Array<TransferCharacteristics>","description":"io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.TransferCharacteristics.values","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx/-transfer-characteristics/values.html","searchKeys":["values","fun values(): Array<TransferCharacteristics>","io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.TransferCharacteristics.values"]},{"name":"fun values(): Array<VP9CodecPrivate.CodecFeature.Ids>","description":"io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.VP9CodecPrivate.CodecFeature.Ids.values","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx/-v-p9-codec-private/-codec-feature/-ids/values.html","searchKeys":["values","fun values(): Array<VP9CodecPrivate.CodecFeature.Ids>","io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.VP9CodecPrivate.CodecFeature.Ids.values"]},{"name":"fun write()","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models.TrackChunks.write","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models/-track-chunks/write.html","searchKeys":["write","fun write()","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models.TrackChunks.write"]},{"name":"fun write()","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets.Pat.write","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets/-pat/write.html","searchKeys":["write","fun write()","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets.Pat.write"]},{"name":"fun write()","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets.Pmt.write","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets/-pmt/write.html","searchKeys":["write","fun write()","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets.Pmt.write"]},{"name":"fun write()","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets.Sdt.write","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets/-sdt/write.html","searchKeys":["write","fun write()","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets.Sdt.write"]},{"name":"fun write(): ByteBuffer","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.FlvHeader.write","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags/-flv-header/write.html","searchKeys":["write","fun write(): ByteBuffer","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.FlvHeader.write"]},{"name":"fun write(): ByteBuffer","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.FlvTag.write","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags/-flv-tag/write.html","searchKeys":["write","fun write(): ByteBuffer","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.FlvTag.write"]},{"name":"fun write(buffer: ByteBuffer)","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.FlvHeader.write","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags/-flv-header/write.html","searchKeys":["write","fun write(buffer: ByteBuffer)","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.FlvHeader.write"]},{"name":"fun write(buffer: ByteBuffer)","description":"io.github.thibaultbee.streampack.core.elements.utils.av.video.hevc.HEVCDecoderConfigurationRecord.NalUnit.write","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.video.hevc/-h-e-v-c-decoder-configuration-record/-nal-unit/write.html","searchKeys":["write","fun write(buffer: ByteBuffer)","io.github.thibaultbee.streampack.core.elements.utils.av.video.hevc.HEVCDecoderConfigurationRecord.NalUnit.write"]},{"name":"fun write(dataOffset: Long)","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models.Segment.write","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models/-segment/write.html","searchKeys":["write","fun write(dataOffset: Long)","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models.Segment.write"]},{"name":"fun write(frame: Frame)","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets.Pes.write","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets/-pes/write.html","searchKeys":["write","fun write(frame: Frame)","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets.Pes.write"]},{"name":"fun write(output: ByteBuffer)","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models.Chunk.write","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models/-chunk/write.html","searchKeys":["write","fun write(output: ByteBuffer)","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models.Chunk.write"]},{"name":"fun writeFromByteBuffer(buffer: ByteBuffer, decoderSpecificInfo: ByteBuffer, audioConfig: AudioCodecConfig)","description":"io.github.thibaultbee.streampack.core.elements.utils.av.audio.AudioSpecificConfig.Companion.writeFromByteBuffer","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.audio/-audio-specific-config/-companion/write-from-byte-buffer.html","searchKeys":["writeFromByteBuffer","fun writeFromByteBuffer(buffer: ByteBuffer, decoderSpecificInfo: ByteBuffer, audioConfig: AudioCodecConfig)","io.github.thibaultbee.streampack.core.elements.utils.av.audio.AudioSpecificConfig.Companion.writeFromByteBuffer"]},{"name":"fun writeHeader(): ByteBuffer","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.MediaDataBox.writeHeader","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-media-data-box/write-header.html","searchKeys":["writeHeader","fun writeHeader(): ByteBuffer","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.MediaDataBox.writeHeader"]},{"name":"fun writeTo(action: (Frame) -> Unit)","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models.Chunk.writeTo","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models/-chunk/write-to.html","searchKeys":["writeTo","fun writeTo(action: (Frame) -> Unit)","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models.Chunk.writeTo"]},{"name":"infix fun Boolean.shl(i: Int): Int","description":"io.github.thibaultbee.streampack.core.elements.utils.extensions.shl","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.extensions/shl.html","searchKeys":["shl","infix fun Boolean.shl(i: Int): Int","io.github.thibaultbee.streampack.core.elements.utils.extensions.shl"]},{"name":"infix fun Byte.or(b: Byte): Int","description":"io.github.thibaultbee.streampack.core.elements.utils.extensions.or","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.extensions/or.html","searchKeys":["or","infix fun Byte.or(b: Byte): Int","io.github.thibaultbee.streampack.core.elements.utils.extensions.or"]},{"name":"infix fun Byte.or(other: Int): Int","description":"io.github.thibaultbee.streampack.core.elements.utils.extensions.or","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.extensions/or.html","searchKeys":["or","infix fun Byte.or(other: Int): Int","io.github.thibaultbee.streampack.core.elements.utils.extensions.or"]},{"name":"infix fun Byte.shl(i: Int): Int","description":"io.github.thibaultbee.streampack.core.elements.utils.extensions.shl","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.extensions/shl.html","searchKeys":["shl","infix fun Byte.shl(i: Int): Int","io.github.thibaultbee.streampack.core.elements.utils.extensions.shl"]},{"name":"infix fun Byte.shr(i: Int): Int","description":"io.github.thibaultbee.streampack.core.elements.utils.extensions.shr","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.extensions/shr.html","searchKeys":["shr","infix fun Byte.shr(i: Int): Int","io.github.thibaultbee.streampack.core.elements.utils.extensions.shr"]},{"name":"infix fun Short.shl(i: Int): Int","description":"io.github.thibaultbee.streampack.core.elements.utils.extensions.shl","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.extensions/shl.html","searchKeys":["shl","infix fun Short.shl(i: Int): Int","io.github.thibaultbee.streampack.core.elements.utils.extensions.shl"]},{"name":"inline fun <T, R> combineStates(vararg stateFlows: StateFlow<T>, crossinline transform: (Array<T>) -> R): StateFlow<R>","description":"io.github.thibaultbee.streampack.core.elements.utils.combineStates","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils/combine-states.html","searchKeys":["combineStates","inline fun <T, R> combineStates(vararg stateFlows: StateFlow<T>, crossinline transform: (Array<T>) -> R): StateFlow<R>","io.github.thibaultbee.streampack.core.elements.utils.combineStates"]},{"name":"interface Configurable<T>","description":"io.github.thibaultbee.streampack.core.elements.interfaces.Configurable","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.interfaces/-configurable/index.html","searchKeys":["Configurable","interface Configurable<T>","io.github.thibaultbee.streampack.core.elements.interfaces.Configurable"]},{"name":"interface Factory","description":"io.github.thibaultbee.streampack.core.elements.endpoints.IEndpointInternal.Factory","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints/-i-endpoint-internal/-factory/index.html","searchKeys":["Factory","interface Factory","io.github.thibaultbee.streampack.core.elements.endpoints.IEndpointInternal.Factory"]},{"name":"interface Factory","description":"io.github.thibaultbee.streampack.core.elements.processing.video.ISurfaceProcessorInternal.Factory","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.processing.video/-i-surface-processor-internal/-factory/index.html","searchKeys":["Factory","interface Factory","io.github.thibaultbee.streampack.core.elements.processing.video.ISurfaceProcessorInternal.Factory"]},{"name":"interface Factory","description":"io.github.thibaultbee.streampack.core.elements.sources.audio.IAudioSourceInternal.Factory","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.audio/-i-audio-source-internal/-factory/index.html","searchKeys":["Factory","interface Factory","io.github.thibaultbee.streampack.core.elements.sources.audio.IAudioSourceInternal.Factory"]},{"name":"interface Factory","description":"io.github.thibaultbee.streampack.core.elements.sources.video.IVideoSourceInternal.Factory","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.video/-i-video-source-internal/-factory/index.html","searchKeys":["Factory","interface Factory","io.github.thibaultbee.streampack.core.elements.sources.video.IVideoSourceInternal.Factory"]},{"name":"interface Factory","description":"io.github.thibaultbee.streampack.core.regulator.IBitrateRegulator.Factory","location":"streampack-core/io.github.thibaultbee.streampack.core.regulator/-i-bitrate-regulator/-factory/index.html","searchKeys":["Factory","interface Factory","io.github.thibaultbee.streampack.core.regulator.IBitrateRegulator.Factory"]},{"name":"interface Factory","description":"io.github.thibaultbee.streampack.core.regulator.controllers.IBitrateRegulatorController.Factory","location":"streampack-core/io.github.thibaultbee.streampack.core.regulator.controllers/-i-bitrate-regulator-controller/-factory/index.html","searchKeys":["Factory","interface Factory","io.github.thibaultbee.streampack.core.regulator.controllers.IBitrateRegulatorController.Factory"]},{"name":"interface IAVConfigurationInfo","description":"io.github.thibaultbee.streampack.core.streamers.infos.IAVConfigurationInfo","location":"streampack-core/io.github.thibaultbee.streampack.core.streamers.infos/-i-a-v-configuration-info/index.html","searchKeys":["IAVConfigurationInfo","interface IAVConfigurationInfo","io.github.thibaultbee.streampack.core.streamers.infos.IAVConfigurationInfo"]},{"name":"interface IAsyncByteBufferInput : IEncoderInternal.IEncoderInput","description":"io.github.thibaultbee.streampack.core.elements.encoders.IEncoderInternal.IAsyncByteBufferInput","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.encoders/-i-encoder-internal/-i-async-byte-buffer-input/index.html","searchKeys":["IAsyncByteBufferInput","interface IAsyncByteBufferInput : IEncoderInternal.IEncoderInput","io.github.thibaultbee.streampack.core.elements.encoders.IEncoderInternal.IAsyncByteBufferInput"]},{"name":"interface IAudioCallbackPipelineOutputInternal : IAudioPipelineOutputInternal","description":"io.github.thibaultbee.streampack.core.pipelines.outputs.IAudioCallbackPipelineOutputInternal","location":"streampack-core/io.github.thibaultbee.streampack.core.pipelines.outputs/-i-audio-callback-pipeline-output-internal/index.html","searchKeys":["IAudioCallbackPipelineOutputInternal","interface IAudioCallbackPipelineOutputInternal : IAudioPipelineOutputInternal","io.github.thibaultbee.streampack.core.pipelines.outputs.IAudioCallbackPipelineOutputInternal"]},{"name":"interface IAudioConfigurationInfo : IAVConfigurationInfo","description":"io.github.thibaultbee.streampack.core.streamers.infos.IAudioConfigurationInfo","location":"streampack-core/io.github.thibaultbee.streampack.core.streamers.infos/-i-audio-configuration-info/index.html","searchKeys":["IAudioConfigurationInfo","interface IAudioConfigurationInfo : IAVConfigurationInfo","io.github.thibaultbee.streampack.core.streamers.infos.IAudioConfigurationInfo"]},{"name":"interface IAudioDualStreamer : IAudioStreamer<DualStreamerAudioConfig> ","description":"io.github.thibaultbee.streampack.core.streamers.dual.IAudioDualStreamer","location":"streampack-core/io.github.thibaultbee.streampack.core.streamers.dual/-i-audio-dual-streamer/index.html","searchKeys":["IAudioDualStreamer","interface IAudioDualStreamer : IAudioStreamer<DualStreamerAudioConfig> ","io.github.thibaultbee.streampack.core.streamers.dual.IAudioDualStreamer"]},{"name":"interface IAudioEffect : IFrameProcessor<RawFrame> , Closeable","description":"io.github.thibaultbee.streampack.core.elements.processing.audio.IAudioEffect","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.processing.audio/-i-audio-effect/index.html","searchKeys":["IAudioEffect","interface IAudioEffect : IFrameProcessor<RawFrame> , Closeable","io.github.thibaultbee.streampack.core.elements.processing.audio.IAudioEffect"]},{"name":"interface IAudioEndpointInfo","description":"io.github.thibaultbee.streampack.core.elements.endpoints.IEndpoint.IEndpointInfo.IAudioEndpointInfo","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints/-i-endpoint/-i-endpoint-info/-i-audio-endpoint-info/index.html","searchKeys":["IAudioEndpointInfo","interface IAudioEndpointInfo","io.github.thibaultbee.streampack.core.elements.endpoints.IEndpoint.IEndpointInfo.IAudioEndpointInfo"]},{"name":"interface IAudioFrameProcessor","description":"io.github.thibaultbee.streampack.core.elements.processing.audio.IAudioFrameProcessor","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.processing.audio/-i-audio-frame-processor/index.html","searchKeys":["IAudioFrameProcessor","interface IAudioFrameProcessor","io.github.thibaultbee.streampack.core.elements.processing.audio.IAudioFrameProcessor"]},{"name":"interface IAudioFrameSourceInternal","description":"io.github.thibaultbee.streampack.core.elements.sources.audio.IAudioFrameSourceInternal","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.audio/-i-audio-frame-source-internal/index.html","searchKeys":["IAudioFrameSourceInternal","interface IAudioFrameSourceInternal","io.github.thibaultbee.streampack.core.elements.sources.audio.IAudioFrameSourceInternal"]},{"name":"interface IAudioInput","description":"io.github.thibaultbee.streampack.core.pipelines.inputs.IAudioInput","location":"streampack-core/io.github.thibaultbee.streampack.core.pipelines.inputs/-i-audio-input/index.html","searchKeys":["IAudioInput","interface IAudioInput","io.github.thibaultbee.streampack.core.pipelines.inputs.IAudioInput"]},{"name":"interface IAudioMuxerInfo","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.IMuxer.IMuxerInfo.IAudioMuxerInfo","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers/-i-muxer/-i-muxer-info/-i-audio-muxer-info/index.html","searchKeys":["IAudioMuxerInfo","interface IAudioMuxerInfo","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.IMuxer.IMuxerInfo.IAudioMuxerInfo"]},{"name":"interface IAudioRecordSource : IAudioSource","description":"io.github.thibaultbee.streampack.core.elements.sources.audio.audiorecord.IAudioRecordSource","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.audio.audiorecord/-i-audio-record-source/index.html","searchKeys":["IAudioRecordSource","interface IAudioRecordSource : IAudioSource","io.github.thibaultbee.streampack.core.elements.sources.audio.audiorecord.IAudioRecordSource"]},{"name":"interface IAudioSingleStreamer : IAudioStreamer<AudioConfig> ","description":"io.github.thibaultbee.streampack.core.streamers.single.IAudioSingleStreamer","location":"streampack-core/io.github.thibaultbee.streampack.core.streamers.single/-i-audio-single-streamer/index.html","searchKeys":["IAudioSingleStreamer","interface IAudioSingleStreamer : IAudioStreamer<AudioConfig> ","io.github.thibaultbee.streampack.core.streamers.single.IAudioSingleStreamer"]},{"name":"interface IAudioSource","description":"io.github.thibaultbee.streampack.core.elements.sources.audio.IAudioSource","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.audio/-i-audio-source/index.html","searchKeys":["IAudioSource","interface IAudioSource","io.github.thibaultbee.streampack.core.elements.sources.audio.IAudioSource"]},{"name":"interface IAudioSourceInternal : IAudioSource, IAudioFrameSourceInternal, SuspendStreamable, SuspendConfigurable<AudioSourceConfig> , Releasable","description":"io.github.thibaultbee.streampack.core.elements.sources.audio.IAudioSourceInternal","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.audio/-i-audio-source-internal/index.html","searchKeys":["IAudioSourceInternal","interface IAudioSourceInternal : IAudioSource, IAudioFrameSourceInternal, SuspendStreamable, SuspendConfigurable<AudioSourceConfig> , Releasable","io.github.thibaultbee.streampack.core.elements.sources.audio.IAudioSourceInternal"]},{"name":"interface IAudioStreamer<T> : IConfigurableAudioStreamer<T> , IWithAudioSource, ICloseableStreamer","description":"io.github.thibaultbee.streampack.core.streamers.IAudioStreamer","location":"streampack-core/io.github.thibaultbee.streampack.core.streamers/-i-audio-streamer/index.html","searchKeys":["IAudioStreamer","interface IAudioStreamer<T> : IConfigurableAudioStreamer<T> , IWithAudioSource, ICloseableStreamer","io.github.thibaultbee.streampack.core.streamers.IAudioStreamer"]},{"name":"interface IAudioSyncPipelineOutputInternal : IAudioPipelineOutputInternal","description":"io.github.thibaultbee.streampack.core.pipelines.outputs.IAudioSyncPipelineOutputInternal","location":"streampack-core/io.github.thibaultbee.streampack.core.pipelines.outputs/-i-audio-sync-pipeline-output-internal/index.html","searchKeys":["IAudioSyncPipelineOutputInternal","interface IAudioSyncPipelineOutputInternal : IAudioPipelineOutputInternal","io.github.thibaultbee.streampack.core.pipelines.outputs.IAudioSyncPipelineOutputInternal"]},{"name":"interface IBitmapSource : IPreviewableSource","description":"io.github.thibaultbee.streampack.core.elements.sources.video.bitmap.IBitmapSource","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.video.bitmap/-i-bitmap-source/index.html","searchKeys":["IBitmapSource","interface IBitmapSource : IPreviewableSource","io.github.thibaultbee.streampack.core.elements.sources.video.bitmap.IBitmapSource"]},{"name":"interface IBitrateRegulator","description":"io.github.thibaultbee.streampack.core.regulator.IBitrateRegulator","location":"streampack-core/io.github.thibaultbee.streampack.core.regulator/-i-bitrate-regulator/index.html","searchKeys":["IBitrateRegulator","interface IBitrateRegulator","io.github.thibaultbee.streampack.core.regulator.IBitrateRegulator"]},{"name":"interface IBitrateRegulatorController","description":"io.github.thibaultbee.streampack.core.regulator.controllers.IBitrateRegulatorController","location":"streampack-core/io.github.thibaultbee.streampack.core.regulator.controllers/-i-bitrate-regulator-controller/index.html","searchKeys":["IBitrateRegulatorController","interface IBitrateRegulatorController","io.github.thibaultbee.streampack.core.regulator.controllers.IBitrateRegulatorController"]},{"name":"interface IBufferPool<T : Buffer> : IGetOnlyBufferPool<T> ","description":"io.github.thibaultbee.streampack.core.elements.utils.pool.IBufferPool","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.pool/-i-buffer-pool/index.html","searchKeys":["IBufferPool","interface IBufferPool<T : Buffer> : IGetOnlyBufferPool<T> ","io.github.thibaultbee.streampack.core.elements.utils.pool.IBufferPool"]},{"name":"interface ICameraSource : IVideoSource, IPreviewableSource","description":"io.github.thibaultbee.streampack.core.elements.sources.video.camera.ICameraSource","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.video.camera/-i-camera-source/index.html","searchKeys":["ICameraSource","interface ICameraSource : IVideoSource, IPreviewableSource","io.github.thibaultbee.streampack.core.elements.sources.video.camera.ICameraSource"]},{"name":"interface ICameraSourceInternal : IVideoSourceInternal","description":"io.github.thibaultbee.streampack.core.elements.sources.video.camera.ICameraSourceInternal","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.video.camera/-i-camera-source-internal/index.html","searchKeys":["ICameraSourceInternal","interface ICameraSourceInternal : IVideoSourceInternal","io.github.thibaultbee.streampack.core.elements.sources.video.camera.ICameraSourceInternal"]},{"name":"interface ICloseableFrame : Closeable","description":"io.github.thibaultbee.streampack.core.elements.data.ICloseableFrame","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.data/-i-closeable-frame/index.html","searchKeys":["ICloseableFrame","interface ICloseableFrame : Closeable","io.github.thibaultbee.streampack.core.elements.data.ICloseableFrame"]},{"name":"interface ICloseableStreamer : IStreamer","description":"io.github.thibaultbee.streampack.core.interfaces.ICloseableStreamer","location":"streampack-core/io.github.thibaultbee.streampack.core.interfaces/-i-closeable-streamer/index.html","searchKeys":["ICloseableStreamer","interface ICloseableStreamer : IStreamer","io.github.thibaultbee.streampack.core.interfaces.ICloseableStreamer"]},{"name":"interface ICompositeEndpoint : IEndpoint","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.ICompositeEndpoint","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites/-i-composite-endpoint/index.html","searchKeys":["ICompositeEndpoint","interface ICompositeEndpoint : IEndpoint","io.github.thibaultbee.streampack.core.elements.endpoints.composites.ICompositeEndpoint"]},{"name":"interface ICompositeEndpointInternal : IEndpointInternal, ICompositeEndpoint","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.ICompositeEndpointInternal","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites/-i-composite-endpoint-internal/index.html","searchKeys":["ICompositeEndpointInternal","interface ICompositeEndpointInternal : IEndpointInternal, ICompositeEndpoint","io.github.thibaultbee.streampack.core.elements.endpoints.composites.ICompositeEndpointInternal"]},{"name":"interface IConfigurableAudioEncodingPipelineOutput : IEncodingPipelineOutput, IConfigurableAudioPipelineOutput","description":"io.github.thibaultbee.streampack.core.pipelines.outputs.encoding.IConfigurableAudioEncodingPipelineOutput","location":"streampack-core/io.github.thibaultbee.streampack.core.pipelines.outputs.encoding/-i-configurable-audio-encoding-pipeline-output/index.html","searchKeys":["IConfigurableAudioEncodingPipelineOutput","interface IConfigurableAudioEncodingPipelineOutput : IEncodingPipelineOutput, IConfigurableAudioPipelineOutput","io.github.thibaultbee.streampack.core.pipelines.outputs.encoding.IConfigurableAudioEncodingPipelineOutput"]},{"name":"interface IConfigurableAudioPipelineOutput","description":"io.github.thibaultbee.streampack.core.pipelines.outputs.IConfigurableAudioPipelineOutput","location":"streampack-core/io.github.thibaultbee.streampack.core.pipelines.outputs/-i-configurable-audio-pipeline-output/index.html","searchKeys":["IConfigurableAudioPipelineOutput","interface IConfigurableAudioPipelineOutput","io.github.thibaultbee.streampack.core.pipelines.outputs.IConfigurableAudioPipelineOutput"]},{"name":"interface IConfigurableAudioPipelineOutputInternal : IConfigurableAudioPipelineOutput","description":"io.github.thibaultbee.streampack.core.pipelines.outputs.IConfigurableAudioPipelineOutputInternal","location":"streampack-core/io.github.thibaultbee.streampack.core.pipelines.outputs/-i-configurable-audio-pipeline-output-internal/index.html","searchKeys":["IConfigurableAudioPipelineOutputInternal","interface IConfigurableAudioPipelineOutputInternal : IConfigurableAudioPipelineOutput","io.github.thibaultbee.streampack.core.pipelines.outputs.IConfigurableAudioPipelineOutputInternal"]},{"name":"interface IConfigurableAudioStreamer<T>","description":"io.github.thibaultbee.streampack.core.streamers.IConfigurableAudioStreamer","location":"streampack-core/io.github.thibaultbee.streampack.core.streamers/-i-configurable-audio-streamer/index.html","searchKeys":["IConfigurableAudioStreamer","interface IConfigurableAudioStreamer<T>","io.github.thibaultbee.streampack.core.streamers.IConfigurableAudioStreamer"]},{"name":"interface IConfigurableAudioVideoEncodingPipelineOutput : IConfigurableAudioEncodingPipelineOutput, IConfigurableVideoEncodingPipelineOutput","description":"io.github.thibaultbee.streampack.core.pipelines.outputs.encoding.IConfigurableAudioVideoEncodingPipelineOutput","location":"streampack-core/io.github.thibaultbee.streampack.core.pipelines.outputs.encoding/-i-configurable-audio-video-encoding-pipeline-output/index.html","searchKeys":["IConfigurableAudioVideoEncodingPipelineOutput","interface IConfigurableAudioVideoEncodingPipelineOutput : IConfigurableAudioEncodingPipelineOutput, IConfigurableVideoEncodingPipelineOutput","io.github.thibaultbee.streampack.core.pipelines.outputs.encoding.IConfigurableAudioVideoEncodingPipelineOutput"]},{"name":"interface IConfigurableVideoEncodingPipelineOutput : IEncodingPipelineOutput, IConfigurableVideoPipelineOutput, IWithVideoRotation","description":"io.github.thibaultbee.streampack.core.pipelines.outputs.encoding.IConfigurableVideoEncodingPipelineOutput","location":"streampack-core/io.github.thibaultbee.streampack.core.pipelines.outputs.encoding/-i-configurable-video-encoding-pipeline-output/index.html","searchKeys":["IConfigurableVideoEncodingPipelineOutput","interface IConfigurableVideoEncodingPipelineOutput : IEncodingPipelineOutput, IConfigurableVideoPipelineOutput, IWithVideoRotation","io.github.thibaultbee.streampack.core.pipelines.outputs.encoding.IConfigurableVideoEncodingPipelineOutput"]},{"name":"interface IConfigurableVideoPipelineOutput","description":"io.github.thibaultbee.streampack.core.pipelines.outputs.IConfigurableVideoPipelineOutput","location":"streampack-core/io.github.thibaultbee.streampack.core.pipelines.outputs/-i-configurable-video-pipeline-output/index.html","searchKeys":["IConfigurableVideoPipelineOutput","interface IConfigurableVideoPipelineOutput","io.github.thibaultbee.streampack.core.pipelines.outputs.IConfigurableVideoPipelineOutput"]},{"name":"interface IConfigurableVideoPipelineOutputInternal : IConfigurableVideoPipelineOutput","description":"io.github.thibaultbee.streampack.core.pipelines.outputs.IConfigurableVideoPipelineOutputInternal","location":"streampack-core/io.github.thibaultbee.streampack.core.pipelines.outputs/-i-configurable-video-pipeline-output-internal/index.html","searchKeys":["IConfigurableVideoPipelineOutputInternal","interface IConfigurableVideoPipelineOutputInternal : IConfigurableVideoPipelineOutput","io.github.thibaultbee.streampack.core.pipelines.outputs.IConfigurableVideoPipelineOutputInternal"]},{"name":"interface IConfigurableVideoStreamer<T>","description":"io.github.thibaultbee.streampack.core.streamers.IConfigurableVideoStreamer","location":"streampack-core/io.github.thibaultbee.streampack.core.streamers/-i-configurable-video-streamer/index.html","searchKeys":["IConfigurableVideoStreamer","interface IConfigurableVideoStreamer<T>","io.github.thibaultbee.streampack.core.streamers.IConfigurableVideoStreamer"]},{"name":"interface IConfigurationInfo","description":"io.github.thibaultbee.streampack.core.streamers.infos.IConfigurationInfo","location":"streampack-core/io.github.thibaultbee.streampack.core.streamers.infos/-i-configuration-info/index.html","searchKeys":["IConfigurationInfo","interface IConfigurationInfo","io.github.thibaultbee.streampack.core.streamers.infos.IConfigurationInfo"]},{"name":"interface IDualStreamer : ICloseableStreamer","description":"io.github.thibaultbee.streampack.core.streamers.dual.IDualStreamer","location":"streampack-core/io.github.thibaultbee.streampack.core.streamers.dual/-i-dual-streamer/index.html","searchKeys":["IDualStreamer","interface IDualStreamer : ICloseableStreamer","io.github.thibaultbee.streampack.core.streamers.dual.IDualStreamer"]},{"name":"interface IEncoder","description":"io.github.thibaultbee.streampack.core.elements.encoders.IEncoder","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.encoders/-i-encoder/index.html","searchKeys":["IEncoder","interface IEncoder","io.github.thibaultbee.streampack.core.elements.encoders.IEncoder"]},{"name":"interface IEncoderInfo","description":"io.github.thibaultbee.streampack.core.elements.encoders.IEncoder.IEncoderInfo","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.encoders/-i-encoder/-i-encoder-info/index.html","searchKeys":["IEncoderInfo","interface IEncoderInfo","io.github.thibaultbee.streampack.core.elements.encoders.IEncoder.IEncoderInfo"]},{"name":"interface IEncoderInput","description":"io.github.thibaultbee.streampack.core.elements.encoders.IEncoderInternal.IEncoderInput","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.encoders/-i-encoder-internal/-i-encoder-input/index.html","searchKeys":["IEncoderInput","interface IEncoderInput","io.github.thibaultbee.streampack.core.elements.encoders.IEncoderInternal.IEncoderInput"]},{"name":"interface IEncoderInternal : SuspendStreamable, Releasable, IEncoder","description":"io.github.thibaultbee.streampack.core.elements.encoders.IEncoderInternal","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.encoders/-i-encoder-internal/index.html","searchKeys":["IEncoderInternal","interface IEncoderInternal : SuspendStreamable, Releasable, IEncoder","io.github.thibaultbee.streampack.core.elements.encoders.IEncoderInternal"]},{"name":"interface IEncodingPipelineOutput : IPipelineOutput, IOpenableStreamer","description":"io.github.thibaultbee.streampack.core.pipelines.outputs.encoding.IEncodingPipelineOutput","location":"streampack-core/io.github.thibaultbee.streampack.core.pipelines.outputs.encoding/-i-encoding-pipeline-output/index.html","searchKeys":["IEncodingPipelineOutput","interface IEncodingPipelineOutput : IPipelineOutput, IOpenableStreamer","io.github.thibaultbee.streampack.core.pipelines.outputs.encoding.IEncodingPipelineOutput"]},{"name":"interface IEndpoint","description":"io.github.thibaultbee.streampack.core.elements.endpoints.IEndpoint","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints/-i-endpoint/index.html","searchKeys":["IEndpoint","interface IEndpoint","io.github.thibaultbee.streampack.core.elements.endpoints.IEndpoint"]},{"name":"interface IEndpointInfo","description":"io.github.thibaultbee.streampack.core.elements.endpoints.IEndpoint.IEndpointInfo","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints/-i-endpoint/-i-endpoint-info/index.html","searchKeys":["IEndpointInfo","interface IEndpointInfo","io.github.thibaultbee.streampack.core.elements.endpoints.IEndpoint.IEndpointInfo"]},{"name":"interface IEndpointInternal : IEndpoint, SuspendStreamable, SuspendCloseable, Releasable","description":"io.github.thibaultbee.streampack.core.elements.endpoints.IEndpointInternal","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints/-i-endpoint-internal/index.html","searchKeys":["IEndpointInternal","interface IEndpointInternal : IEndpoint, SuspendStreamable, SuspendCloseable, Releasable","io.github.thibaultbee.streampack.core.elements.endpoints.IEndpointInternal"]},{"name":"interface IFrameProcessor<T>","description":"io.github.thibaultbee.streampack.core.elements.processing.IFrameProcessor","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.processing/-i-frame-processor/index.html","searchKeys":["IFrameProcessor","interface IFrameProcessor<T>","io.github.thibaultbee.streampack.core.elements.processing.IFrameProcessor"]},{"name":"interface IGetOnlyBufferPool<T : Buffer>","description":"io.github.thibaultbee.streampack.core.elements.utils.pool.IGetOnlyBufferPool","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.pool/-i-get-only-buffer-pool/index.html","searchKeys":["IGetOnlyBufferPool","interface IGetOnlyBufferPool<T : Buffer>","io.github.thibaultbee.streampack.core.elements.utils.pool.IGetOnlyBufferPool"]},{"name":"interface IListener","description":"io.github.thibaultbee.streampack.core.elements.encoders.IEncoderInternal.IListener","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.encoders/-i-encoder-internal/-i-listener/index.html","searchKeys":["IListener","interface IListener","io.github.thibaultbee.streampack.core.elements.encoders.IEncoderInternal.IListener"]},{"name":"interface ILogger","description":"io.github.thibaultbee.streampack.core.logger.ILogger","location":"streampack-core/io.github.thibaultbee.streampack.core.logger/-i-logger/index.html","searchKeys":["ILogger","interface ILogger","io.github.thibaultbee.streampack.core.logger.ILogger"]},{"name":"interface IMediaProjectionSource","description":"io.github.thibaultbee.streampack.core.elements.sources.IMediaProjectionSource","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources/-i-media-projection-source/index.html","searchKeys":["IMediaProjectionSource","interface IMediaProjectionSource","io.github.thibaultbee.streampack.core.elements.sources.IMediaProjectionSource"]},{"name":"interface IMuxer","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.IMuxer","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers/-i-muxer/index.html","searchKeys":["IMuxer","interface IMuxer","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.IMuxer"]},{"name":"interface IMuxerInfo","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.IMuxer.IMuxerInfo","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers/-i-muxer/-i-muxer-info/index.html","searchKeys":["IMuxerInfo","interface IMuxerInfo","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.IMuxer.IMuxerInfo"]},{"name":"interface IMuxerInternal : IMuxer, Streamable, Releasable","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.IMuxerInternal","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers/-i-muxer-internal/index.html","searchKeys":["IMuxerInternal","interface IMuxerInternal : IMuxer, Streamable, Releasable","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.IMuxerInternal"]},{"name":"interface IMuxerListener","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.IMuxerInternal.IMuxerListener","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers/-i-muxer-internal/-i-muxer-listener/index.html","searchKeys":["IMuxerListener","interface IMuxerListener","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.IMuxerInternal.IMuxerListener"]},{"name":"interface IOpenableStreamer : ICloseableStreamer","description":"io.github.thibaultbee.streampack.core.interfaces.IOpenableStreamer","location":"streampack-core/io.github.thibaultbee.streampack.core.interfaces/-i-openable-streamer/index.html","searchKeys":["IOpenableStreamer","interface IOpenableStreamer : ICloseableStreamer","io.github.thibaultbee.streampack.core.interfaces.IOpenableStreamer"]},{"name":"interface IPipelineEventOutputInternal : IPipelineOutput","description":"io.github.thibaultbee.streampack.core.pipelines.outputs.IPipelineEventOutputInternal","location":"streampack-core/io.github.thibaultbee.streampack.core.pipelines.outputs/-i-pipeline-event-output-internal/index.html","searchKeys":["IPipelineEventOutputInternal","interface IPipelineEventOutputInternal : IPipelineOutput","io.github.thibaultbee.streampack.core.pipelines.outputs.IPipelineEventOutputInternal"]},{"name":"interface IPipelineOutput : IStreamer","description":"io.github.thibaultbee.streampack.core.pipelines.outputs.IPipelineOutput","location":"streampack-core/io.github.thibaultbee.streampack.core.pipelines.outputs/-i-pipeline-output/index.html","searchKeys":["IPipelineOutput","interface IPipelineOutput : IStreamer","io.github.thibaultbee.streampack.core.pipelines.outputs.IPipelineOutput"]},{"name":"interface IPreviewableSource","description":"io.github.thibaultbee.streampack.core.elements.sources.video.IPreviewableSource","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.video/-i-previewable-source/index.html","searchKeys":["IPreviewableSource","interface IPreviewableSource","io.github.thibaultbee.streampack.core.elements.sources.video.IPreviewableSource"]},{"name":"interface IRawFrameFactory : IReadOnlyRawFrameFactory","description":"io.github.thibaultbee.streampack.core.elements.utils.pool.IRawFrameFactory","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.pool/-i-raw-frame-factory/index.html","searchKeys":["IRawFrameFactory","interface IRawFrameFactory : IReadOnlyRawFrameFactory","io.github.thibaultbee.streampack.core.elements.utils.pool.IRawFrameFactory"]},{"name":"interface IReadOnlyRawFrameFactory","description":"io.github.thibaultbee.streampack.core.elements.utils.pool.IReadOnlyRawFrameFactory","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.pool/-i-read-only-raw-frame-factory/index.html","searchKeys":["IReadOnlyRawFrameFactory","interface IReadOnlyRawFrameFactory","io.github.thibaultbee.streampack.core.elements.utils.pool.IReadOnlyRawFrameFactory"]},{"name":"interface IRotationFlowProvider","description":"io.github.thibaultbee.streampack.core.streamers.orientation.IRotationFlowProvider","location":"streampack-core/io.github.thibaultbee.streampack.core.streamers.orientation/-i-rotation-flow-provider/index.html","searchKeys":["IRotationFlowProvider","interface IRotationFlowProvider","io.github.thibaultbee.streampack.core.streamers.orientation.IRotationFlowProvider"]},{"name":"interface IRotationProvider","description":"io.github.thibaultbee.streampack.core.streamers.orientation.IRotationProvider","location":"streampack-core/io.github.thibaultbee.streampack.core.streamers.orientation/-i-rotation-provider/index.html","searchKeys":["IRotationProvider","interface IRotationProvider","io.github.thibaultbee.streampack.core.streamers.orientation.IRotationProvider"]},{"name":"interface ISingleStreamer : IOpenableStreamer","description":"io.github.thibaultbee.streampack.core.streamers.single.ISingleStreamer","location":"streampack-core/io.github.thibaultbee.streampack.core.streamers.single/-i-single-streamer/index.html","searchKeys":["ISingleStreamer","interface ISingleStreamer : IOpenableStreamer","io.github.thibaultbee.streampack.core.streamers.single.ISingleStreamer"]},{"name":"interface ISink","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.sinks.ISink","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.sinks/-i-sink/index.html","searchKeys":["ISink","interface ISink","io.github.thibaultbee.streampack.core.elements.endpoints.composites.sinks.ISink"]},{"name":"interface ISinkInternal : ISink, Configurable<SinkConfiguration> , SuspendStreamable, SuspendCloseable","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.sinks.ISinkInternal","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.sinks/-i-sink-internal/index.html","searchKeys":["ISinkInternal","interface ISinkInternal : ISink, Configurable<SinkConfiguration> , SuspendStreamable, SuspendCloseable","io.github.thibaultbee.streampack.core.elements.endpoints.composites.sinks.ISinkInternal"]},{"name":"interface ISourceInfoProvider","description":"io.github.thibaultbee.streampack.core.elements.processing.video.source.ISourceInfoProvider","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.processing.video.source/-i-source-info-provider/index.html","searchKeys":["ISourceInfoProvider","interface ISourceInfoProvider","io.github.thibaultbee.streampack.core.elements.processing.video.source.ISourceInfoProvider"]},{"name":"interface IStreamer","description":"io.github.thibaultbee.streampack.core.interfaces.IStreamer","location":"streampack-core/io.github.thibaultbee.streampack.core.interfaces/-i-streamer/index.html","searchKeys":["IStreamer","interface IStreamer","io.github.thibaultbee.streampack.core.interfaces.IStreamer"]},{"name":"interface ISurfaceInput : IEncoderInternal.IEncoderInput","description":"io.github.thibaultbee.streampack.core.elements.encoders.IEncoderInternal.ISurfaceInput","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.encoders/-i-encoder-internal/-i-surface-input/index.html","searchKeys":["ISurfaceInput","interface ISurfaceInput : IEncoderInternal.IEncoderInput","io.github.thibaultbee.streampack.core.elements.encoders.IEncoderInternal.ISurfaceInput"]},{"name":"interface ISurfaceOutput","description":"io.github.thibaultbee.streampack.core.elements.processing.video.outputs.ISurfaceOutput","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.processing.video.outputs/-i-surface-output/index.html","searchKeys":["ISurfaceOutput","interface ISurfaceOutput","io.github.thibaultbee.streampack.core.elements.processing.video.outputs.ISurfaceOutput"]},{"name":"interface ISurfaceProcessor","description":"io.github.thibaultbee.streampack.core.elements.processing.video.ISurfaceProcessor","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.processing.video/-i-surface-processor/index.html","searchKeys":["ISurfaceProcessor","interface ISurfaceProcessor","io.github.thibaultbee.streampack.core.elements.processing.video.ISurfaceProcessor"]},{"name":"interface ISurfaceProcessorInternal : ISurfaceProcessor, Releasable","description":"io.github.thibaultbee.streampack.core.elements.processing.video.ISurfaceProcessorInternal","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.processing.video/-i-surface-processor-internal/index.html","searchKeys":["ISurfaceProcessorInternal","interface ISurfaceProcessorInternal : ISurfaceProcessor, Releasable","io.github.thibaultbee.streampack.core.elements.processing.video.ISurfaceProcessorInternal"]},{"name":"interface ISurfaceSourceInternal","description":"io.github.thibaultbee.streampack.core.elements.sources.video.ISurfaceSourceInternal","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.video/-i-surface-source-internal/index.html","searchKeys":["ISurfaceSourceInternal","interface ISurfaceSourceInternal","io.github.thibaultbee.streampack.core.elements.sources.video.ISurfaceSourceInternal"]},{"name":"interface ISyncByteBufferInput : IEncoderInternal.IEncoderInput","description":"io.github.thibaultbee.streampack.core.elements.encoders.IEncoderInternal.ISyncByteBufferInput","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.encoders/-i-encoder-internal/-i-sync-byte-buffer-input/index.html","searchKeys":["ISyncByteBufferInput","interface ISyncByteBufferInput : IEncoderInternal.IEncoderInput","io.github.thibaultbee.streampack.core.elements.encoders.IEncoderInternal.ISyncByteBufferInput"]},{"name":"interface ITSElement","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.data.ITSElement","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.data/-i-t-s-element/index.html","searchKeys":["ITSElement","interface ITSElement","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.data.ITSElement"]},{"name":"interface IVideoCallbackPipelineOutputInternal : IVideoPipelineOutputInternal","description":"io.github.thibaultbee.streampack.core.pipelines.outputs.IVideoCallbackPipelineOutputInternal","location":"streampack-core/io.github.thibaultbee.streampack.core.pipelines.outputs/-i-video-callback-pipeline-output-internal/index.html","searchKeys":["IVideoCallbackPipelineOutputInternal","interface IVideoCallbackPipelineOutputInternal : IVideoPipelineOutputInternal","io.github.thibaultbee.streampack.core.pipelines.outputs.IVideoCallbackPipelineOutputInternal"]},{"name":"interface IVideoConfigurationInfo : IAVConfigurationInfo","description":"io.github.thibaultbee.streampack.core.streamers.infos.IVideoConfigurationInfo","location":"streampack-core/io.github.thibaultbee.streampack.core.streamers.infos/-i-video-configuration-info/index.html","searchKeys":["IVideoConfigurationInfo","interface IVideoConfigurationInfo : IAVConfigurationInfo","io.github.thibaultbee.streampack.core.streamers.infos.IVideoConfigurationInfo"]},{"name":"interface IVideoDualStreamer : IVideoStreamer<DualStreamerVideoConfig> ","description":"io.github.thibaultbee.streampack.core.streamers.dual.IVideoDualStreamer","location":"streampack-core/io.github.thibaultbee.streampack.core.streamers.dual/-i-video-dual-streamer/index.html","searchKeys":["IVideoDualStreamer","interface IVideoDualStreamer : IVideoStreamer<DualStreamerVideoConfig> ","io.github.thibaultbee.streampack.core.streamers.dual.IVideoDualStreamer"]},{"name":"interface IVideoEndpointInfo","description":"io.github.thibaultbee.streampack.core.elements.endpoints.IEndpoint.IEndpointInfo.IVideoEndpointInfo","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints/-i-endpoint/-i-endpoint-info/-i-video-endpoint-info/index.html","searchKeys":["IVideoEndpointInfo","interface IVideoEndpointInfo","io.github.thibaultbee.streampack.core.elements.endpoints.IEndpoint.IEndpointInfo.IVideoEndpointInfo"]},{"name":"interface IVideoFrameSourceInternal","description":"io.github.thibaultbee.streampack.core.elements.sources.video.IVideoFrameSourceInternal","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.video/-i-video-frame-source-internal/index.html","searchKeys":["IVideoFrameSourceInternal","interface IVideoFrameSourceInternal","io.github.thibaultbee.streampack.core.elements.sources.video.IVideoFrameSourceInternal"]},{"name":"interface IVideoInput","description":"io.github.thibaultbee.streampack.core.pipelines.inputs.IVideoInput","location":"streampack-core/io.github.thibaultbee.streampack.core.pipelines.inputs/-i-video-input/index.html","searchKeys":["IVideoInput","interface IVideoInput","io.github.thibaultbee.streampack.core.pipelines.inputs.IVideoInput"]},{"name":"interface IVideoMuxerInfo","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.IMuxer.IMuxerInfo.IVideoMuxerInfo","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers/-i-muxer/-i-muxer-info/-i-video-muxer-info/index.html","searchKeys":["IVideoMuxerInfo","interface IVideoMuxerInfo","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.IMuxer.IMuxerInfo.IVideoMuxerInfo"]},{"name":"interface IVideoSingleStreamer : IVideoStreamer<VideoConfig> ","description":"io.github.thibaultbee.streampack.core.streamers.single.IVideoSingleStreamer","location":"streampack-core/io.github.thibaultbee.streampack.core.streamers.single/-i-video-single-streamer/index.html","searchKeys":["IVideoSingleStreamer","interface IVideoSingleStreamer : IVideoStreamer<VideoConfig> ","io.github.thibaultbee.streampack.core.streamers.single.IVideoSingleStreamer"]},{"name":"interface IVideoSource","description":"io.github.thibaultbee.streampack.core.elements.sources.video.IVideoSource","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.video/-i-video-source/index.html","searchKeys":["IVideoSource","interface IVideoSource","io.github.thibaultbee.streampack.core.elements.sources.video.IVideoSource"]},{"name":"interface IVideoSourceInternal : IVideoSource, SuspendStreamable, SuspendConfigurable<VideoSourceConfig> , Releasable","description":"io.github.thibaultbee.streampack.core.elements.sources.video.IVideoSourceInternal","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.video/-i-video-source-internal/index.html","searchKeys":["IVideoSourceInternal","interface IVideoSourceInternal : IVideoSource, SuspendStreamable, SuspendConfigurable<VideoSourceConfig> , Releasable","io.github.thibaultbee.streampack.core.elements.sources.video.IVideoSourceInternal"]},{"name":"interface IVideoStreamer<T> : IConfigurableVideoStreamer<T> , IWithVideoSource, IWithVideoRotation, ICloseableStreamer","description":"io.github.thibaultbee.streampack.core.streamers.IVideoStreamer","location":"streampack-core/io.github.thibaultbee.streampack.core.streamers/-i-video-streamer/index.html","searchKeys":["IVideoStreamer","interface IVideoStreamer<T> : IConfigurableVideoStreamer<T> , IWithVideoSource, IWithVideoRotation, ICloseableStreamer","io.github.thibaultbee.streampack.core.streamers.IVideoStreamer"]},{"name":"interface IVideoSurfacePipelineOutputInternal : IVideoPipelineOutputInternal, IWithVideoRotation","description":"io.github.thibaultbee.streampack.core.pipelines.outputs.IVideoSurfacePipelineOutputInternal","location":"streampack-core/io.github.thibaultbee.streampack.core.pipelines.outputs/-i-video-surface-pipeline-output-internal/index.html","searchKeys":["IVideoSurfacePipelineOutputInternal","interface IVideoSurfacePipelineOutputInternal : IVideoPipelineOutputInternal, IWithVideoRotation","io.github.thibaultbee.streampack.core.pipelines.outputs.IVideoSurfacePipelineOutputInternal"]},{"name":"interface IVideoSyncPipelineOutputInternal : IVideoPipelineOutputInternal","description":"io.github.thibaultbee.streampack.core.pipelines.outputs.IVideoSyncPipelineOutputInternal","location":"streampack-core/io.github.thibaultbee.streampack.core.pipelines.outputs/-i-video-sync-pipeline-output-internal/index.html","searchKeys":["IVideoSyncPipelineOutputInternal","interface IVideoSyncPipelineOutputInternal : IVideoPipelineOutputInternal","io.github.thibaultbee.streampack.core.pipelines.outputs.IVideoSyncPipelineOutputInternal"]},{"name":"interface IWithAudioSource","description":"io.github.thibaultbee.streampack.core.interfaces.IWithAudioSource","location":"streampack-core/io.github.thibaultbee.streampack.core.interfaces/-i-with-audio-source/index.html","searchKeys":["IWithAudioSource","interface IWithAudioSource","io.github.thibaultbee.streampack.core.interfaces.IWithAudioSource"]},{"name":"interface IWithVideoRotation","description":"io.github.thibaultbee.streampack.core.interfaces.IWithVideoRotation","location":"streampack-core/io.github.thibaultbee.streampack.core.interfaces/-i-with-video-rotation/index.html","searchKeys":["IWithVideoRotation","interface IWithVideoRotation","io.github.thibaultbee.streampack.core.interfaces.IWithVideoRotation"]},{"name":"interface IWithVideoSource","description":"io.github.thibaultbee.streampack.core.interfaces.IWithVideoSource","location":"streampack-core/io.github.thibaultbee.streampack.core.interfaces/-i-with-video-source/index.html","searchKeys":["IWithVideoSource","interface IWithVideoSource","io.github.thibaultbee.streampack.core.interfaces.IWithVideoSource"]},{"name":"interface Listener","description":"io.github.thibaultbee.streampack.core.elements.utils.ChunkedFileOutputStream.Listener","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils/-chunked-file-output-stream/-listener/index.html","searchKeys":["Listener","interface Listener","io.github.thibaultbee.streampack.core.elements.utils.ChunkedFileOutputStream.Listener"]},{"name":"interface Listener","description":"io.github.thibaultbee.streampack.core.pipelines.outputs.IConfigurableAudioPipelineOutputInternal.Listener","location":"streampack-core/io.github.thibaultbee.streampack.core.pipelines.outputs/-i-configurable-audio-pipeline-output-internal/-listener/index.html","searchKeys":["Listener","interface Listener","io.github.thibaultbee.streampack.core.pipelines.outputs.IConfigurableAudioPipelineOutputInternal.Listener"]},{"name":"interface Listener","description":"io.github.thibaultbee.streampack.core.pipelines.outputs.IConfigurableVideoPipelineOutputInternal.Listener","location":"streampack-core/io.github.thibaultbee.streampack.core.pipelines.outputs/-i-configurable-video-pipeline-output-internal/-listener/index.html","searchKeys":["Listener","interface Listener","io.github.thibaultbee.streampack.core.pipelines.outputs.IConfigurableVideoPipelineOutputInternal.Listener"]},{"name":"interface Listener","description":"io.github.thibaultbee.streampack.core.pipelines.outputs.IPipelineEventOutputInternal.Listener","location":"streampack-core/io.github.thibaultbee.streampack.core.pipelines.outputs/-i-pipeline-event-output-internal/-listener/index.html","searchKeys":["Listener","interface Listener","io.github.thibaultbee.streampack.core.pipelines.outputs.IPipelineEventOutputInternal.Listener"]},{"name":"interface Listener","description":"io.github.thibaultbee.streampack.core.streamers.orientation.IRotationProvider.Listener","location":"streampack-core/io.github.thibaultbee.streampack.core.streamers.orientation/-i-rotation-provider/-listener/index.html","searchKeys":["Listener","interface Listener","io.github.thibaultbee.streampack.core.streamers.orientation.IRotationProvider.Listener"]},{"name":"interface OnFrameRequestedListener","description":"io.github.thibaultbee.streampack.core.elements.encoders.IEncoderInternal.IAsyncByteBufferInput.OnFrameRequestedListener","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.encoders/-i-encoder-internal/-i-async-byte-buffer-input/-on-frame-requested-listener/index.html","searchKeys":["OnFrameRequestedListener","interface OnFrameRequestedListener","io.github.thibaultbee.streampack.core.elements.encoders.IEncoderInternal.IAsyncByteBufferInput.OnFrameRequestedListener"]},{"name":"interface OnSurfaceUpdateListener","description":"io.github.thibaultbee.streampack.core.elements.encoders.IEncoderInternal.ISurfaceInput.OnSurfaceUpdateListener","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.encoders/-i-encoder-internal/-i-surface-input/-on-surface-update-listener/index.html","searchKeys":["OnSurfaceUpdateListener","interface OnSurfaceUpdateListener","io.github.thibaultbee.streampack.core.elements.encoders.IEncoderInternal.ISurfaceInput.OnSurfaceUpdateListener"]},{"name":"interface Releasable","description":"io.github.thibaultbee.streampack.core.elements.interfaces.Releasable","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.interfaces/-releasable/index.html","searchKeys":["Releasable","interface Releasable","io.github.thibaultbee.streampack.core.elements.interfaces.Releasable"]},{"name":"interface ShaderProvider","description":"io.github.thibaultbee.streampack.core.elements.processing.video.ShaderProvider","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.processing.video/-shader-provider/index.html","searchKeys":["ShaderProvider","interface ShaderProvider","io.github.thibaultbee.streampack.core.elements.processing.video.ShaderProvider"]},{"name":"interface Streamable","description":"io.github.thibaultbee.streampack.core.elements.interfaces.Streamable","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.interfaces/-streamable/index.html","searchKeys":["Streamable","interface Streamable","io.github.thibaultbee.streampack.core.elements.interfaces.Streamable"]},{"name":"interface SuspendCloseable","description":"io.github.thibaultbee.streampack.core.elements.interfaces.SuspendCloseable","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.interfaces/-suspend-closeable/index.html","searchKeys":["SuspendCloseable","interface SuspendCloseable","io.github.thibaultbee.streampack.core.elements.interfaces.SuspendCloseable"]},{"name":"interface SuspendConfigurable<T>","description":"io.github.thibaultbee.streampack.core.elements.interfaces.SuspendConfigurable","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.interfaces/-suspend-configurable/index.html","searchKeys":["SuspendConfigurable","interface SuspendConfigurable<T>","io.github.thibaultbee.streampack.core.elements.interfaces.SuspendConfigurable"]},{"name":"interface SuspendStreamable","description":"io.github.thibaultbee.streampack.core.elements.interfaces.SuspendStreamable","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.interfaces/-suspend-streamable/index.html","searchKeys":["SuspendStreamable","interface SuspendStreamable","io.github.thibaultbee.streampack.core.elements.interfaces.SuspendStreamable"]},{"name":"object Audio","description":"io.github.thibaultbee.streampack.core.elements.encoders.mediacodec.MediaCodecHelper.Audio","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.encoders.mediacodec/-media-codec-helper/-audio/index.html","searchKeys":["Audio","object Audio","io.github.thibaultbee.streampack.core.elements.encoders.mediacodec.MediaCodecHelper.Audio"]},{"name":"object AudioFlvMuxerInfo : IMuxer.IMuxerInfo.IAudioMuxerInfo","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.AudioFlvMuxerInfo","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv/-audio-flv-muxer-info/index.html","searchKeys":["AudioFlvMuxerInfo","object AudioFlvMuxerInfo : IMuxer.IMuxerInfo.IAudioMuxerInfo","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.AudioFlvMuxerInfo"]},{"name":"object AudioMP4MuxerInfo : IMuxer.IMuxerInfo.IAudioMuxerInfo","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.AudioMP4MuxerInfo","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4/-audio-m-p4-muxer-info/index.html","searchKeys":["AudioMP4MuxerInfo","object AudioMP4MuxerInfo : IMuxer.IMuxerInfo.IAudioMuxerInfo","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.AudioMP4MuxerInfo"]},{"name":"object AudioTSMuxerInfo : IMuxer.IMuxerInfo.IAudioMuxerInfo","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.AudioTSMuxerInfo","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts/-audio-t-s-muxer-info/index.html","searchKeys":["AudioTSMuxerInfo","object AudioTSMuxerInfo : IMuxer.IMuxerInfo.IAudioMuxerInfo","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.AudioTSMuxerInfo"]},{"name":"object CRC32","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.utils.CRC32","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.utils/-c-r-c32/index.html","searchKeys":["CRC32","object CRC32","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.utils.CRC32"]},{"name":"object CameraOrientationUtils","description":"io.github.thibaultbee.streampack.core.elements.sources.video.camera.utils.CameraOrientationUtils","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.video.camera.utils/-camera-orientation-utils/index.html","searchKeys":["CameraOrientationUtils","object CameraOrientationUtils","io.github.thibaultbee.streampack.core.elements.sources.video.camera.utils.CameraOrientationUtils"]},{"name":"object CameraSizes","description":"io.github.thibaultbee.streampack.core.elements.sources.video.camera.utils.CameraSizes","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.video.camera.utils/-camera-sizes/index.html","searchKeys":["CameraSizes","object CameraSizes","io.github.thibaultbee.streampack.core.elements.sources.video.camera.utils.CameraSizes"]},{"name":"object Companion","description":"io.github.thibaultbee.streampack.core.configuration.mediadescriptor.MediaDescriptor.Type.Companion","location":"streampack-core/io.github.thibaultbee.streampack.core.configuration.mediadescriptor/-media-descriptor/-type/-companion/index.html","searchKeys":["Companion","object Companion","io.github.thibaultbee.streampack.core.configuration.mediadescriptor.MediaDescriptor.Type.Companion"]},{"name":"object Companion","description":"io.github.thibaultbee.streampack.core.elements.encoders.AudioCodecConfig.Companion","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.encoders/-audio-codec-config/-companion/index.html","searchKeys":["Companion","object Companion","io.github.thibaultbee.streampack.core.elements.encoders.AudioCodecConfig.Companion"]},{"name":"object Companion","description":"io.github.thibaultbee.streampack.core.elements.encoders.VideoCodecConfig.Companion","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.encoders/-video-codec-config/-companion/index.html","searchKeys":["Companion","object Companion","io.github.thibaultbee.streampack.core.elements.encoders.VideoCodecConfig.Companion"]},{"name":"object Companion","description":"io.github.thibaultbee.streampack.core.elements.encoders.mediacodec.EncoderInfo.Companion","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.encoders.mediacodec/-encoder-info/-companion/index.html","searchKeys":["Companion","object Companion","io.github.thibaultbee.streampack.core.elements.encoders.mediacodec.EncoderInfo.Companion"]},{"name":"object Companion","description":"io.github.thibaultbee.streampack.core.elements.encoders.mediacodec.MediaCodecEncoder.Companion","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.encoders.mediacodec/-media-codec-encoder/-companion/index.html","searchKeys":["Companion","object Companion","io.github.thibaultbee.streampack.core.elements.encoders.mediacodec.MediaCodecEncoder.Companion"]},{"name":"object Companion","description":"io.github.thibaultbee.streampack.core.elements.endpoints.CombineEndpoint.Companion","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints/-combine-endpoint/-companion/index.html","searchKeys":["Companion","object Companion","io.github.thibaultbee.streampack.core.elements.endpoints.CombineEndpoint.Companion"]},{"name":"object Companion","description":"io.github.thibaultbee.streampack.core.elements.endpoints.DynamicEndpoint.Companion","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints/-dynamic-endpoint/-companion/index.html","searchKeys":["Companion","object Companion","io.github.thibaultbee.streampack.core.elements.endpoints.DynamicEndpoint.Companion"]},{"name":"object Companion","description":"io.github.thibaultbee.streampack.core.elements.endpoints.MediaContainerType.Companion","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints/-media-container-type/-companion/index.html","searchKeys":["Companion","object Companion","io.github.thibaultbee.streampack.core.elements.endpoints.MediaContainerType.Companion"]},{"name":"object Companion","description":"io.github.thibaultbee.streampack.core.elements.endpoints.MediaMuxerEndpoint.Companion","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints/-media-muxer-endpoint/-companion/index.html","searchKeys":["Companion","object Companion","io.github.thibaultbee.streampack.core.elements.endpoints.MediaMuxerEndpoint.Companion"]},{"name":"object Companion","description":"io.github.thibaultbee.streampack.core.elements.endpoints.MediaSinkType.Companion","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints/-media-sink-type/-companion/index.html","searchKeys":["Companion","object Companion","io.github.thibaultbee.streampack.core.elements.endpoints.MediaSinkType.Companion"]},{"name":"object Companion","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.amf.AmfParameter.Companion","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.amf/-amf-parameter/-companion/index.html","searchKeys":["Companion","object Companion","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.amf.AmfParameter.Companion"]},{"name":"object Companion","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.AudioMetadata.Companion","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags/-audio-metadata/-companion/index.html","searchKeys":["Companion","object Companion","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.AudioMetadata.Companion"]},{"name":"object Companion","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.AudioTag.Companion","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags/-audio-tag/-companion/index.html","searchKeys":["Companion","object Companion","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.AudioTag.Companion"]},{"name":"object Companion","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.FlvHeader.Companion","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags/-flv-header/-companion/index.html","searchKeys":["Companion","object Companion","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.FlvHeader.Companion"]},{"name":"object Companion","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.FlvTag.Companion","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags/-flv-tag/-companion/index.html","searchKeys":["Companion","object Companion","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.FlvTag.Companion"]},{"name":"object Companion","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.Metadata.Companion","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags/-metadata/-companion/index.html","searchKeys":["Companion","object Companion","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.Metadata.Companion"]},{"name":"object Companion","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.OnMetadata.Companion","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags/-on-metadata/-companion/index.html","searchKeys":["Companion","object Companion","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.OnMetadata.Companion"]},{"name":"object Companion","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.SoundFormat.Companion","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags/-sound-format/-companion/index.html","searchKeys":["Companion","object Companion","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.SoundFormat.Companion"]},{"name":"object Companion","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.SoundRate.Companion","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags/-sound-rate/-companion/index.html","searchKeys":["Companion","object Companion","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.SoundRate.Companion"]},{"name":"object Companion","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.SoundSize.Companion","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags/-sound-size/-companion/index.html","searchKeys":["Companion","object Companion","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.SoundSize.Companion"]},{"name":"object Companion","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.SoundType.Companion","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags/-sound-type/-companion/index.html","searchKeys":["Companion","object Companion","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.SoundType.Companion"]},{"name":"object Companion","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.VideoMetadata.Companion","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags/-video-metadata/-companion/index.html","searchKeys":["Companion","object Companion","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.VideoMetadata.Companion"]},{"name":"object Companion","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.video.CodecID.Companion","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.video/-codec-i-d/-companion/index.html","searchKeys":["Companion","object Companion","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.video.CodecID.Companion"]},{"name":"object Companion","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.video.ExtendedVideoTag.Companion","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.video/-extended-video-tag/-companion/index.html","searchKeys":["Companion","object Companion","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.video.ExtendedVideoTag.Companion"]},{"name":"object Companion","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.video.VideoTag.Companion","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.video/-video-tag/-companion/index.html","searchKeys":["Companion","object Companion","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.video.VideoTag.Companion"]},{"name":"object Companion","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.Mp4Muxer.Companion","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4/-mp4-muxer/-companion/index.html","searchKeys":["Companion","object Companion","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.Mp4Muxer.Companion"]},{"name":"object Companion","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.TimeToSampleBox.Companion","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-time-to-sample-box/-companion/index.html","searchKeys":["Companion","object Companion","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.TimeToSampleBox.Companion"]},{"name":"object Companion","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.TrackFragmentHeaderBox.Companion","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-track-fragment-header-box/-companion/index.html","searchKeys":["Companion","object Companion","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.TrackFragmentHeaderBox.Companion"]},{"name":"object Companion","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.TrackRunBox.Companion","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-track-run-box/-companion/index.html","searchKeys":["Companion","object Companion","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.TrackRunBox.Companion"]},{"name":"object Companion","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models.DefaultMP4Segmenter.Companion","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models/-default-m-p4-segmenter/-companion/index.html","searchKeys":["Companion","object Companion","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models.DefaultMP4Segmenter.Companion"]},{"name":"object Companion","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets.Pat.Companion","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets/-pat/-companion/index.html","searchKeys":["Companion","object Companion","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets.Pat.Companion"]},{"name":"object Companion","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets.Pes.StreamId.Companion","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets/-pes/-stream-id/-companion/index.html","searchKeys":["Companion","object Companion","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets.Pes.StreamId.Companion"]},{"name":"object Companion","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets.Pmt.Companion","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets/-pmt/-companion/index.html","searchKeys":["Companion","object Companion","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets.Pmt.Companion"]},{"name":"object Companion","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets.Pmt.StreamType.Companion","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets/-pmt/-stream-type/-companion/index.html","searchKeys":["Companion","object Companion","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets.Pmt.StreamType.Companion"]},{"name":"object Companion","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets.Psi.Companion","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets/-psi/-companion/index.html","searchKeys":["Companion","object Companion","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets.Psi.Companion"]},{"name":"object Companion","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets.Sdt.Companion","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets/-sdt/-companion/index.html","searchKeys":["Companion","object Companion","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets.Sdt.Companion"]},{"name":"object Companion","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets.TS.Companion","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets/-t-s/-companion/index.html","searchKeys":["Companion","object Companion","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets.TS.Companion"]},{"name":"object Companion","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.sinks.AbstractSink.Companion","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.sinks/-abstract-sink/-companion/index.html","searchKeys":["Companion","object Companion","io.github.thibaultbee.streampack.core.elements.endpoints.composites.sinks.AbstractSink.Companion"]},{"name":"object Companion","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.sinks.ContentSink.Companion","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.sinks/-content-sink/-companion/index.html","searchKeys":["Companion","object Companion","io.github.thibaultbee.streampack.core.elements.endpoints.composites.sinks.ContentSink.Companion"]},{"name":"object Companion","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.sinks.FakeSink.Companion","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.sinks/-fake-sink/-companion/index.html","searchKeys":["Companion","object Companion","io.github.thibaultbee.streampack.core.elements.endpoints.composites.sinks.FakeSink.Companion"]},{"name":"object Companion","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.sinks.FileSink.Companion","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.sinks/-file-sink/-companion/index.html","searchKeys":["Companion","object Companion","io.github.thibaultbee.streampack.core.elements.endpoints.composites.sinks.FileSink.Companion"]},{"name":"object Companion","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.sinks.OutputStreamSink.Companion","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.sinks/-output-stream-sink/-companion/index.html","searchKeys":["Companion","object Companion","io.github.thibaultbee.streampack.core.elements.endpoints.composites.sinks.OutputStreamSink.Companion"]},{"name":"object Companion","description":"io.github.thibaultbee.streampack.core.elements.processing.RawFramePullPush.Companion","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.processing/-raw-frame-pull-push/-companion/index.html","searchKeys":["Companion","object Companion","io.github.thibaultbee.streampack.core.elements.processing.RawFramePullPush.Companion"]},{"name":"object Companion","description":"io.github.thibaultbee.streampack.core.elements.processing.video.OpenGlRenderer.Companion","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.processing.video/-open-gl-renderer/-companion/index.html","searchKeys":["Companion","object Companion","io.github.thibaultbee.streampack.core.elements.processing.video.OpenGlRenderer.Companion"]},{"name":"object Companion","description":"io.github.thibaultbee.streampack.core.elements.processing.video.utils.GLUtils.SamplerShaderProgram.Companion","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.processing.video.utils/-g-l-utils/-sampler-shader-program/-companion/index.html","searchKeys":["Companion","object Companion","io.github.thibaultbee.streampack.core.elements.processing.video.utils.GLUtils.SamplerShaderProgram.Companion"]},{"name":"object Companion","description":"io.github.thibaultbee.streampack.core.elements.sources.audio.audiorecord.AudioRecordSourceFactory.Companion","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.audio.audiorecord/-audio-record-source-factory/-companion/index.html","searchKeys":["Companion","object Companion","io.github.thibaultbee.streampack.core.elements.sources.audio.audiorecord.AudioRecordSourceFactory.Companion"]},{"name":"object Companion","description":"io.github.thibaultbee.streampack.core.elements.sources.video.camera.CameraSettings.Exposure.Companion","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.video.camera/-camera-settings/-exposure/-companion/index.html","searchKeys":["Companion","object Companion","io.github.thibaultbee.streampack.core.elements.sources.video.camera.CameraSettings.Exposure.Companion"]},{"name":"object Companion","description":"io.github.thibaultbee.streampack.core.elements.sources.video.camera.CameraSettings.Focus.Companion","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.video.camera/-camera-settings/-focus/-companion/index.html","searchKeys":["Companion","object Companion","io.github.thibaultbee.streampack.core.elements.sources.video.camera.CameraSettings.Focus.Companion"]},{"name":"object Companion","description":"io.github.thibaultbee.streampack.core.elements.sources.video.camera.CameraSettings.FocusMetering.Companion","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.video.camera/-camera-settings/-focus-metering/-companion/index.html","searchKeys":["Companion","object Companion","io.github.thibaultbee.streampack.core.elements.sources.video.camera.CameraSettings.FocusMetering.Companion"]},{"name":"object Companion","description":"io.github.thibaultbee.streampack.core.elements.sources.video.camera.CameraSettings.Iso.Companion","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.video.camera/-camera-settings/-iso/-companion/index.html","searchKeys":["Companion","object Companion","io.github.thibaultbee.streampack.core.elements.sources.video.camera.CameraSettings.Iso.Companion"]},{"name":"object Companion","description":"io.github.thibaultbee.streampack.core.elements.sources.video.camera.CameraSettings.Zoom.Companion","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.video.camera/-camera-settings/-zoom/-companion/index.html","searchKeys":["Companion","object Companion","io.github.thibaultbee.streampack.core.elements.sources.video.camera.CameraSettings.Zoom.Companion"]},{"name":"object Companion","description":"io.github.thibaultbee.streampack.core.elements.sources.video.camera.CameraSettings.Zoom.CropScalerRegionZoom.Companion","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.video.camera/-camera-settings/-zoom/-crop-scaler-region-zoom/-companion/index.html","searchKeys":["Companion","object Companion","io.github.thibaultbee.streampack.core.elements.sources.video.camera.CameraSettings.Zoom.CropScalerRegionZoom.Companion"]},{"name":"object Companion","description":"io.github.thibaultbee.streampack.core.elements.sources.video.camera.controllers.CameraController.Companion","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.video.camera.controllers/-camera-controller/-companion/index.html","searchKeys":["Companion","object Companion","io.github.thibaultbee.streampack.core.elements.sources.video.camera.controllers.CameraController.Companion"]},{"name":"object Companion","description":"io.github.thibaultbee.streampack.core.elements.sources.video.camera.controllers.CameraSessionController.Companion","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.video.camera.controllers/-camera-session-controller/-companion/index.html","searchKeys":["Companion","object Companion","io.github.thibaultbee.streampack.core.elements.sources.video.camera.controllers.CameraSessionController.Companion"]},{"name":"object Companion","description":"io.github.thibaultbee.streampack.core.elements.sources.video.camera.sessioncompat.CameraCaptureSessionCompatBuilder.Companion","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.video.camera.sessioncompat/-camera-capture-session-compat-builder/-companion/index.html","searchKeys":["Companion","object Companion","io.github.thibaultbee.streampack.core.elements.sources.video.camera.sessioncompat.CameraCaptureSessionCompatBuilder.Companion"]},{"name":"object Companion","description":"io.github.thibaultbee.streampack.core.elements.utils.av.FourCCs.Companion","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av/-four-c-cs/-companion/index.html","searchKeys":["Companion","object Companion","io.github.thibaultbee.streampack.core.elements.utils.av.FourCCs.Companion"]},{"name":"object Companion","description":"io.github.thibaultbee.streampack.core.elements.utils.av.audio.AudioObjectType.Companion","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.audio/-audio-object-type/-companion/index.html","searchKeys":["Companion","object Companion","io.github.thibaultbee.streampack.core.elements.utils.av.audio.AudioObjectType.Companion"]},{"name":"object Companion","description":"io.github.thibaultbee.streampack.core.elements.utils.av.audio.AudioSpecificConfig.AudioSpecificConfigExtension.Companion","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.audio/-audio-specific-config/-audio-specific-config-extension/-companion/index.html","searchKeys":["Companion","object Companion","io.github.thibaultbee.streampack.core.elements.utils.av.audio.AudioSpecificConfig.AudioSpecificConfigExtension.Companion"]},{"name":"object Companion","description":"io.github.thibaultbee.streampack.core.elements.utils.av.audio.AudioSpecificConfig.Companion","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.audio/-audio-specific-config/-companion/index.html","searchKeys":["Companion","object Companion","io.github.thibaultbee.streampack.core.elements.utils.av.audio.AudioSpecificConfig.Companion"]},{"name":"object Companion","description":"io.github.thibaultbee.streampack.core.elements.utils.av.audio.ChannelConfiguration.Companion","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.audio/-channel-configuration/-companion/index.html","searchKeys":["Companion","object Companion","io.github.thibaultbee.streampack.core.elements.utils.av.audio.ChannelConfiguration.Companion"]},{"name":"object Companion","description":"io.github.thibaultbee.streampack.core.elements.utils.av.audio.SamplingFrequencyIndex.Companion","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.audio/-sampling-frequency-index/-companion/index.html","searchKeys":["Companion","object Companion","io.github.thibaultbee.streampack.core.elements.utils.av.audio.SamplingFrequencyIndex.Companion"]},{"name":"object Companion","description":"io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.ADTS.Companion","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac/-a-d-t-s/-companion/index.html","searchKeys":["Companion","object Companion","io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.ADTS.Companion"]},{"name":"object Companion","description":"io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.ADTSFrameWriter.Companion","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac/-a-d-t-s-frame-writer/-companion/index.html","searchKeys":["Companion","object Companion","io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.ADTSFrameWriter.Companion"]},{"name":"object Companion","description":"io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.AudioMuxElement.Companion","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac/-audio-mux-element/-companion/index.html","searchKeys":["Companion","object Companion","io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.AudioMuxElement.Companion"]},{"name":"object Companion","description":"io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.LATMFrameWriter.Companion","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac/-l-a-t-m-frame-writer/-companion/index.html","searchKeys":["Companion","object Companion","io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.LATMFrameWriter.Companion"]},{"name":"object Companion","description":"io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.ProgramConfigElement.Companion","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac/-program-config-element/-companion/index.html","searchKeys":["Companion","object Companion","io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.ProgramConfigElement.Companion"]},{"name":"object Companion","description":"io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.StreamMuxConfig.Companion","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac/-stream-mux-config/-companion/index.html","searchKeys":["Companion","object Companion","io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.StreamMuxConfig.Companion"]},{"name":"object Companion","description":"io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.config.ELDSpecificConfig.Companion","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.config/-e-l-d-specific-config/-companion/index.html","searchKeys":["Companion","object Companion","io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.config.ELDSpecificConfig.Companion"]},{"name":"object Companion","description":"io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.config.ELDSpecificConfig.LdSbrHeader.Companion","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.config/-e-l-d-specific-config/-ld-sbr-header/-companion/index.html","searchKeys":["Companion","object Companion","io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.config.ELDSpecificConfig.LdSbrHeader.Companion"]},{"name":"object Companion","description":"io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.config.GASpecificConfig.Companion","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.config/-g-a-specific-config/-companion/index.html","searchKeys":["Companion","object Companion","io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.config.GASpecificConfig.Companion"]},{"name":"object Companion","description":"io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.config.SbrHeader.Companion","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.config/-sbr-header/-companion/index.html","searchKeys":["Companion","object Companion","io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.config.SbrHeader.Companion"]},{"name":"object Companion","description":"io.github.thibaultbee.streampack.core.elements.utils.av.audio.opus.IdentificationHeader.ChannelMapping.Companion","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.audio.opus/-identification-header/-channel-mapping/-companion/index.html","searchKeys":["Companion","object Companion","io.github.thibaultbee.streampack.core.elements.utils.av.audio.opus.IdentificationHeader.ChannelMapping.Companion"]},{"name":"object Companion","description":"io.github.thibaultbee.streampack.core.elements.utils.av.audio.opus.IdentificationHeader.Companion","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.audio.opus/-identification-header/-companion/index.html","searchKeys":["Companion","object Companion","io.github.thibaultbee.streampack.core.elements.utils.av.audio.opus.IdentificationHeader.Companion"]},{"name":"object Companion","description":"io.github.thibaultbee.streampack.core.elements.utils.av.audio.opus.OpusCsdParser.Companion","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.audio.opus/-opus-csd-parser/-companion/index.html","searchKeys":["Companion","object Companion","io.github.thibaultbee.streampack.core.elements.utils.av.audio.opus.OpusCsdParser.Companion"]},{"name":"object Companion","description":"io.github.thibaultbee.streampack.core.elements.utils.av.descriptors.ObjectTypeIndication.Companion","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.descriptors/-object-type-indication/-companion/index.html","searchKeys":["Companion","object Companion","io.github.thibaultbee.streampack.core.elements.utils.av.descriptors.ObjectTypeIndication.Companion"]},{"name":"object Companion","description":"io.github.thibaultbee.streampack.core.elements.utils.av.descriptors.StreamType.Companion","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.descriptors/-stream-type/-companion/index.html","searchKeys":["Companion","object Companion","io.github.thibaultbee.streampack.core.elements.utils.av.descriptors.StreamType.Companion"]},{"name":"object Companion","description":"io.github.thibaultbee.streampack.core.elements.utils.av.descriptors.Tags.Companion","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.descriptors/-tags/-companion/index.html","searchKeys":["Companion","object Companion","io.github.thibaultbee.streampack.core.elements.utils.av.descriptors.Tags.Companion"]},{"name":"object Companion","description":"io.github.thibaultbee.streampack.core.elements.utils.av.video.ChromaFormat.Companion","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.video/-chroma-format/-companion/index.html","searchKeys":["Companion","object Companion","io.github.thibaultbee.streampack.core.elements.utils.av.video.ChromaFormat.Companion"]},{"name":"object Companion","description":"io.github.thibaultbee.streampack.core.elements.utils.av.video.DynamicRangeProfile.Companion","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.video/-dynamic-range-profile/-companion/index.html","searchKeys":["Companion","object Companion","io.github.thibaultbee.streampack.core.elements.utils.av.video.DynamicRangeProfile.Companion"]},{"name":"object Companion","description":"io.github.thibaultbee.streampack.core.elements.utils.av.video.av1.AV1CodecConfigurationRecord.Companion","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.video.av1/-a-v1-codec-configuration-record/-companion/index.html","searchKeys":["Companion","object Companion","io.github.thibaultbee.streampack.core.elements.utils.av.video.av1.AV1CodecConfigurationRecord.Companion"]},{"name":"object Companion","description":"io.github.thibaultbee.streampack.core.elements.utils.av.video.avc.AVCDecoderConfigurationRecord.Companion","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.video.avc/-a-v-c-decoder-configuration-record/-companion/index.html","searchKeys":["Companion","object Companion","io.github.thibaultbee.streampack.core.elements.utils.av.video.avc.AVCDecoderConfigurationRecord.Companion"]},{"name":"object Companion","description":"io.github.thibaultbee.streampack.core.elements.utils.av.video.hevc.HEVCDecoderConfigurationRecord.Companion","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.video.hevc/-h-e-v-c-decoder-configuration-record/-companion/index.html","searchKeys":["Companion","object Companion","io.github.thibaultbee.streampack.core.elements.utils.av.video.hevc.HEVCDecoderConfigurationRecord.Companion"]},{"name":"object Companion","description":"io.github.thibaultbee.streampack.core.elements.utils.av.video.hevc.HEVCDecoderConfigurationRecord.NalUnit.Type.Companion","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.video.hevc/-h-e-v-c-decoder-configuration-record/-nal-unit/-type/-companion/index.html","searchKeys":["Companion","object Companion","io.github.thibaultbee.streampack.core.elements.utils.av.video.hevc.HEVCDecoderConfigurationRecord.NalUnit.Type.Companion"]},{"name":"object Companion","description":"io.github.thibaultbee.streampack.core.elements.utils.av.video.hevc.HEVCProfile.Companion","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.video.hevc/-h-e-v-c-profile/-companion/index.html","searchKeys":["Companion","object Companion","io.github.thibaultbee.streampack.core.elements.utils.av.video.hevc.HEVCProfile.Companion"]},{"name":"object Companion","description":"io.github.thibaultbee.streampack.core.elements.utils.av.video.hevc.ProfileTierLevel.Companion","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.video.hevc/-profile-tier-level/-companion/index.html","searchKeys":["Companion","object Companion","io.github.thibaultbee.streampack.core.elements.utils.av.video.hevc.ProfileTierLevel.Companion"]},{"name":"object Companion","description":"io.github.thibaultbee.streampack.core.elements.utils.av.video.hevc.SequenceParameterSets.Companion","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.video.hevc/-sequence-parameter-sets/-companion/index.html","searchKeys":["Companion","object Companion","io.github.thibaultbee.streampack.core.elements.utils.av.video.hevc.SequenceParameterSets.Companion"]},{"name":"object Companion","description":"io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.ChromaSubsampling.Companion","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx/-chroma-subsampling/-companion/index.html","searchKeys":["Companion","object Companion","io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.ChromaSubsampling.Companion"]},{"name":"object Companion","description":"io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.ColorPrimaries.Companion","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx/-color-primaries/-companion/index.html","searchKeys":["Companion","object Companion","io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.ColorPrimaries.Companion"]},{"name":"object Companion","description":"io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.Level.Companion","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx/-level/-companion/index.html","searchKeys":["Companion","object Companion","io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.Level.Companion"]},{"name":"object Companion","description":"io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.MatrixCoefficients.Companion","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx/-matrix-coefficients/-companion/index.html","searchKeys":["Companion","object Companion","io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.MatrixCoefficients.Companion"]},{"name":"object Companion","description":"io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.Profile.Companion","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx/-profile/-companion/index.html","searchKeys":["Companion","object Companion","io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.Profile.Companion"]},{"name":"object Companion","description":"io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.TransferCharacteristics.Companion","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx/-transfer-characteristics/-companion/index.html","searchKeys":["Companion","object Companion","io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.TransferCharacteristics.Companion"]},{"name":"object Companion","description":"io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.VP9CodecPrivate.CodecFeature.Companion","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx/-v-p9-codec-private/-codec-feature/-companion/index.html","searchKeys":["Companion","object Companion","io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.VP9CodecPrivate.CodecFeature.Companion"]},{"name":"object Companion","description":"io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.VP9CodecPrivate.CodecFeature.Ids.Companion","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx/-v-p9-codec-private/-codec-feature/-ids/-companion/index.html","searchKeys":["Companion","object Companion","io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.VP9CodecPrivate.CodecFeature.Ids.Companion"]},{"name":"object Companion","description":"io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.VP9CodecPrivate.Companion","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx/-v-p9-codec-private/-companion/index.html","searchKeys":["Companion","object Companion","io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.VP9CodecPrivate.Companion"]},{"name":"object Companion","description":"io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.VPCodecConfigurationRecord.Companion","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx/-v-p-codec-configuration-record/-companion/index.html","searchKeys":["Companion","object Companion","io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.VPCodecConfigurationRecord.Companion"]},{"name":"object Companion","description":"io.github.thibaultbee.streampack.core.elements.utils.pool.RawFrameFactory.Companion","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.pool/-raw-frame-factory/-companion/index.html","searchKeys":["Companion","object Companion","io.github.thibaultbee.streampack.core.elements.utils.pool.RawFrameFactory.Companion"]},{"name":"object Companion","description":"io.github.thibaultbee.streampack.core.pipelines.StreamerPipeline.Companion","location":"streampack-core/io.github.thibaultbee.streampack.core.pipelines/-streamer-pipeline/-companion/index.html","searchKeys":["Companion","object Companion","io.github.thibaultbee.streampack.core.pipelines.StreamerPipeline.Companion"]},{"name":"object Companion","description":"io.github.thibaultbee.streampack.core.streamers.dual.DualStreamerAudioCodecConfig.Companion","location":"streampack-core/io.github.thibaultbee.streampack.core.streamers.dual/-dual-streamer-audio-codec-config/-companion/index.html","searchKeys":["Companion","object Companion","io.github.thibaultbee.streampack.core.streamers.dual.DualStreamerAudioCodecConfig.Companion"]},{"name":"object Companion","description":"io.github.thibaultbee.streampack.core.streamers.orientation.SensorRotationProvider.Companion","location":"streampack-core/io.github.thibaultbee.streampack.core.streamers.orientation/-sensor-rotation-provider/-companion/index.html","searchKeys":["Companion","object Companion","io.github.thibaultbee.streampack.core.streamers.orientation.SensorRotationProvider.Companion"]},{"name":"object Companion","description":"io.github.thibaultbee.streampack.core.streamers.single.SingleStreamer.Companion","location":"streampack-core/io.github.thibaultbee.streampack.core.streamers.single/-single-streamer/-companion/index.html","searchKeys":["Companion","object Companion","io.github.thibaultbee.streampack.core.streamers.single.SingleStreamer.Companion"]},{"name":"object CompositeEndpoints","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.CompositeEndpoints","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites/-composite-endpoints/index.html","searchKeys":["CompositeEndpoints","object CompositeEndpoints","io.github.thibaultbee.streampack.core.elements.endpoints.composites.CompositeEndpoints"]},{"name":"object FlvMuxerInfo : IMuxer.IMuxerInfo","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.FlvMuxerInfo","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv/-flv-muxer-info/index.html","searchKeys":["FlvMuxerInfo","object FlvMuxerInfo : IMuxer.IMuxerInfo","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.FlvMuxerInfo"]},{"name":"object GLUtils","description":"io.github.thibaultbee.streampack.core.elements.processing.video.utils.GLUtils","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.processing.video.utils/-g-l-utils/index.html","searchKeys":["GLUtils","object GLUtils","io.github.thibaultbee.streampack.core.elements.processing.video.utils.GLUtils"]},{"name":"object ListUtils","description":"io.github.thibaultbee.streampack.core.elements.utils.ListUtils","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils/-list-utils/index.html","searchKeys":["ListUtils","object ListUtils","io.github.thibaultbee.streampack.core.elements.utils.ListUtils"]},{"name":"object Logger : ILogger","description":"io.github.thibaultbee.streampack.core.logger.Logger","location":"streampack-core/io.github.thibaultbee.streampack.core.logger/-logger/index.html","searchKeys":["Logger","object Logger : ILogger","io.github.thibaultbee.streampack.core.logger.Logger"]},{"name":"object MP4MuxerInfo : IMuxer.IMuxerInfo","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.MP4MuxerInfo","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4/-m-p4-muxer-info/index.html","searchKeys":["MP4MuxerInfo","object MP4MuxerInfo : IMuxer.IMuxerInfo","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.MP4MuxerInfo"]},{"name":"object MediaCodecHelper","description":"io.github.thibaultbee.streampack.core.elements.encoders.mediacodec.MediaCodecHelper","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.encoders.mediacodec/-media-codec-helper/index.html","searchKeys":["MediaCodecHelper","object MediaCodecHelper","io.github.thibaultbee.streampack.core.elements.encoders.mediacodec.MediaCodecHelper"]},{"name":"object MediaProjectionUtils","description":"io.github.thibaultbee.streampack.core.streamers.utils.MediaProjectionUtils","location":"streampack-core/io.github.thibaultbee.streampack.core.streamers.utils/-media-projection-utils/index.html","searchKeys":["MediaProjectionUtils","object MediaProjectionUtils","io.github.thibaultbee.streampack.core.streamers.utils.MediaProjectionUtils"]},{"name":"object Mp4EndpointInfo : IEndpoint.IEndpointInfo","description":"io.github.thibaultbee.streampack.core.elements.endpoints.MediaMuxerEndpoint.Mp4EndpointInfo","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints/-media-muxer-endpoint/-mp4-endpoint-info/index.html","searchKeys":["Mp4EndpointInfo","object Mp4EndpointInfo : IEndpoint.IEndpointInfo","io.github.thibaultbee.streampack.core.elements.endpoints.MediaMuxerEndpoint.Mp4EndpointInfo"]},{"name":"object MuxerConst","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.utils.MuxerConst","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.utils/-muxer-const/index.html","searchKeys":["MuxerConst","object MuxerConst","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.utils.MuxerConst"]},{"name":"object OggEndpointInfo : IEndpoint.IEndpointInfo","description":"io.github.thibaultbee.streampack.core.elements.endpoints.MediaMuxerEndpoint.OggEndpointInfo","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints/-media-muxer-endpoint/-ogg-endpoint-info/index.html","searchKeys":["OggEndpointInfo","object OggEndpointInfo : IEndpoint.IEndpointInfo","io.github.thibaultbee.streampack.core.elements.endpoints.MediaMuxerEndpoint.OggEndpointInfo"]},{"name":"object OrientationUtils","description":"io.github.thibaultbee.streampack.core.elements.utils.OrientationUtils","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils/-orientation-utils/index.html","searchKeys":["OrientationUtils","object OrientationUtils","io.github.thibaultbee.streampack.core.elements.utils.OrientationUtils"]},{"name":"object SourceConfigUtils","description":"io.github.thibaultbee.streampack.core.pipelines.utils.SourceConfigUtils","location":"streampack-core/io.github.thibaultbee.streampack.core.pipelines.utils/-source-config-utils/index.html","searchKeys":["SourceConfigUtils","object SourceConfigUtils","io.github.thibaultbee.streampack.core.pipelines.utils.SourceConfigUtils"]},{"name":"object TSConst","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.utils.TSConst","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.utils/-t-s-const/index.html","searchKeys":["TSConst","object TSConst","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.utils.TSConst"]},{"name":"object TSMuxerInfo : IMuxer.IMuxerInfo","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.TSMuxerInfo","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts/-t-s-muxer-info/index.html","searchKeys":["TSMuxerInfo","object TSMuxerInfo : IMuxer.IMuxerInfo","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.TSMuxerInfo"]},{"name":"object ThreeGPEndpointInfo : IEndpoint.IEndpointInfo","description":"io.github.thibaultbee.streampack.core.elements.endpoints.MediaMuxerEndpoint.ThreeGPEndpointInfo","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints/-media-muxer-endpoint/-three-g-p-endpoint-info/index.html","searchKeys":["ThreeGPEndpointInfo","object ThreeGPEndpointInfo : IEndpoint.IEndpointInfo","io.github.thibaultbee.streampack.core.elements.endpoints.MediaMuxerEndpoint.ThreeGPEndpointInfo"]},{"name":"object TimeUtils","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.utils.TimeUtils","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.utils/-time-utils/index.html","searchKeys":["TimeUtils","object TimeUtils","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.utils.TimeUtils"]},{"name":"object TimeUtils","description":"io.github.thibaultbee.streampack.core.elements.utils.TimeUtils","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils/-time-utils/index.html","searchKeys":["TimeUtils","object TimeUtils","io.github.thibaultbee.streampack.core.elements.utils.TimeUtils"]},{"name":"object TransformUtils","description":"io.github.thibaultbee.streampack.core.elements.processing.video.utils.TransformUtils","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.processing.video.utils/-transform-utils/index.html","searchKeys":["TransformUtils","object TransformUtils","io.github.thibaultbee.streampack.core.elements.processing.video.utils.TransformUtils"]},{"name":"object Video","description":"io.github.thibaultbee.streampack.core.elements.encoders.mediacodec.MediaCodecHelper.Video","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.encoders.mediacodec/-media-codec-helper/-video/index.html","searchKeys":["Video","object Video","io.github.thibaultbee.streampack.core.elements.encoders.mediacodec.MediaCodecHelper.Video"]},{"name":"object VideoFlvMuxerInfo : IMuxer.IMuxerInfo.IVideoMuxerInfo","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.VideoFlvMuxerInfo","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv/-video-flv-muxer-info/index.html","searchKeys":["VideoFlvMuxerInfo","object VideoFlvMuxerInfo : IMuxer.IMuxerInfo.IVideoMuxerInfo","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.VideoFlvMuxerInfo"]},{"name":"object VideoMP4MuxerInfo : IMuxer.IMuxerInfo.IVideoMuxerInfo","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.VideoMP4MuxerInfo","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4/-video-m-p4-muxer-info/index.html","searchKeys":["VideoMP4MuxerInfo","object VideoMP4MuxerInfo : IMuxer.IMuxerInfo.IVideoMuxerInfo","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.VideoMP4MuxerInfo"]},{"name":"object VideoTSMuxerInfo : IMuxer.IMuxerInfo.IVideoMuxerInfo","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.VideoTSMuxerInfo","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts/-video-t-s-muxer-info/index.html","searchKeys":["VideoTSMuxerInfo","object VideoTSMuxerInfo : IMuxer.IMuxerInfo.IVideoMuxerInfo","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.VideoTSMuxerInfo"]},{"name":"object ViewPortUtils","description":"io.github.thibaultbee.streampack.core.elements.processing.video.outputs.ViewPortUtils","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.processing.video.outputs/-view-port-utils/index.html","searchKeys":["ViewPortUtils","object ViewPortUtils","io.github.thibaultbee.streampack.core.elements.processing.video.outputs.ViewPortUtils"]},{"name":"object WebMEndpointInfo : IEndpoint.IEndpointInfo","description":"io.github.thibaultbee.streampack.core.elements.endpoints.MediaMuxerEndpoint.WebMEndpointInfo","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints/-media-muxer-endpoint/-web-m-endpoint-info/index.html","searchKeys":["WebMEndpointInfo","object WebMEndpointInfo : IEndpoint.IEndpointInfo","io.github.thibaultbee.streampack.core.elements.endpoints.MediaMuxerEndpoint.WebMEndpointInfo"]},{"name":"object WindowUtils","description":"io.github.thibaultbee.streampack.core.elements.utils.WindowUtils","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils/-window-utils/index.html","searchKeys":["WindowUtils","object WindowUtils","io.github.thibaultbee.streampack.core.elements.utils.WindowUtils"]},{"name":"open class AmfContainer : AmfParameter","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.amf.containers.AmfContainer","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.amf.containers/-amf-container/index.html","searchKeys":["AmfContainer","open class AmfContainer : AmfParameter","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.amf.containers.AmfContainer"]},{"name":"open class AudioCodecConfig(val mimeType: String = MediaFormat.MIMETYPE_AUDIO_AAC, val startBitrate: Int, val sampleRate: Int = getDefaultSampleRate(mimeType), val channelConfig: Int = AudioFormat.CHANNEL_IN_STEREO, val byteFormat: Int = AudioFormat.ENCODING_PCM_16BIT, val profile: Int = getDefaultProfile(mimeType)) : CodecConfig","description":"io.github.thibaultbee.streampack.core.elements.encoders.AudioCodecConfig","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.encoders/-audio-codec-config/index.html","searchKeys":["AudioCodecConfig","open class AudioCodecConfig(val mimeType: String = MediaFormat.MIMETYPE_AUDIO_AAC, val startBitrate: Int, val sampleRate: Int = getDefaultSampleRate(mimeType), val channelConfig: Int = AudioFormat.CHANNEL_IN_STEREO, val byteFormat: Int = AudioFormat.ENCODING_PCM_16BIT, val profile: Int = getDefaultProfile(mimeType)) : CodecConfig","io.github.thibaultbee.streampack.core.elements.encoders.AudioCodecConfig"]},{"name":"open class AudioSampleEntry(type: String, val version: Int = 0, channelCount: Short, sampleSize: Short, sampleRate: Int, otherBoxes: List<Box> = emptyList()) : SampleEntry","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.AudioSampleEntry","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-audio-sample-entry/index.html","searchKeys":["AudioSampleEntry","open class AudioSampleEntry(type: String, val version: Int = 0, channelCount: Short, sampleSize: Short, sampleRate: Int, otherBoxes: List<Box> = emptyList()) : SampleEntry","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.AudioSampleEntry"]},{"name":"open class BitBuffer(val buffer: ByteBuffer, var bitPosition: Int = buffer.position() * Byte.SIZE_BITS, val bitEnd: Int = buffer.limit() * Byte.SIZE_BITS - 1)","description":"io.github.thibaultbee.streampack.core.elements.utils.av.buffer.BitBuffer","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.buffer/-bit-buffer/index.html","searchKeys":["BitBuffer","open class BitBuffer(val buffer: ByteBuffer, var bitPosition: Int = buffer.position() * Byte.SIZE_BITS, val bitEnd: Int = buffer.limit() * Byte.SIZE_BITS - 1)","io.github.thibaultbee.streampack.core.elements.utils.av.buffer.BitBuffer"]},{"name":"open class CameraStreamerConfigurationInfo(endpointInfo: IEndpoint.IEndpointInfo) : StreamerConfigurationInfo","description":"io.github.thibaultbee.streampack.core.streamers.infos.CameraStreamerConfigurationInfo","location":"streampack-core/io.github.thibaultbee.streampack.core.streamers.infos/-camera-streamer-configuration-info/index.html","searchKeys":["CameraStreamerConfigurationInfo","open class CameraStreamerConfigurationInfo(endpointInfo: IEndpoint.IEndpointInfo) : StreamerConfigurationInfo","io.github.thibaultbee.streampack.core.streamers.infos.CameraStreamerConfigurationInfo"]},{"name":"open class CodecConfig(val mimeType: String, val startBitrate: Int, val profile: Int = 0)","description":"io.github.thibaultbee.streampack.core.elements.encoders.CodecConfig","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.encoders/-codec-config/index.html","searchKeys":["CodecConfig","open class CodecConfig(val mimeType: String, val startBitrate: Int, val profile: Int = 0)","io.github.thibaultbee.streampack.core.elements.encoders.CodecConfig"]},{"name":"open class CombineEndpoint(val endpointInternals: List<IEndpointInternal>) : IEndpointInternal","description":"io.github.thibaultbee.streampack.core.elements.endpoints.CombineEndpoint","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints/-combine-endpoint/index.html","searchKeys":["CombineEndpoint","open class CombineEndpoint(val endpointInternals: List<IEndpointInternal>) : IEndpointInternal","io.github.thibaultbee.streampack.core.elements.endpoints.CombineEndpoint"]},{"name":"open class DecoderConfigDescriptor(objectTypeIndication: ObjectTypeIndication, streamType: StreamType, upStream: Boolean, bufferSize: Int, maxBitrate: Int, avgBitrate: Int, decoderSpecificInfo: DecoderSpecificInfo) : BaseDescriptor","description":"io.github.thibaultbee.streampack.core.elements.utils.av.descriptors.DecoderConfigDescriptor","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.descriptors/-decoder-config-descriptor/index.html","searchKeys":["DecoderConfigDescriptor","open class DecoderConfigDescriptor(objectTypeIndication: ObjectTypeIndication, streamType: StreamType, upStream: Boolean, bufferSize: Int, maxBitrate: Int, avgBitrate: Int, decoderSpecificInfo: DecoderSpecificInfo) : BaseDescriptor","io.github.thibaultbee.streampack.core.elements.utils.av.descriptors.DecoderConfigDescriptor"]},{"name":"open class DefaultSourceInfoProvider(val isMirror: Boolean = false, val rotationDegrees: Int = 0) : ISourceInfoProvider","description":"io.github.thibaultbee.streampack.core.elements.processing.video.source.DefaultSourceInfoProvider","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.processing.video.source/-default-source-info-provider/index.html","searchKeys":["DefaultSourceInfoProvider","open class DefaultSourceInfoProvider(val isMirror: Boolean = false, val rotationDegrees: Int = 0) : ISourceInfoProvider","io.github.thibaultbee.streampack.core.elements.processing.video.source.DefaultSourceInfoProvider"]},{"name":"open class DualEndpoint(mainEndpoint: IEndpointInternal, secondEndpoint: IEndpointInternal) : CombineEndpoint","description":"io.github.thibaultbee.streampack.core.elements.endpoints.DualEndpoint","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints/-dual-endpoint/index.html","searchKeys":["DualEndpoint","open class DualEndpoint(mainEndpoint: IEndpointInternal, secondEndpoint: IEndpointInternal) : CombineEndpoint","io.github.thibaultbee.streampack.core.elements.endpoints.DualEndpoint"]},{"name":"open class DualStreamer(val context: Context, val withAudio: Boolean = true, val withVideo: Boolean = true, firstEndpointFactory: IEndpointInternal.Factory = DynamicEndpointFactory(), secondEndpointFactory: IEndpointInternal.Factory = DynamicEndpointFactory(), defaultRotation: Int = context.displayRotation) : IDualStreamer, IAudioDualStreamer, IVideoDualStreamer","description":"io.github.thibaultbee.streampack.core.streamers.dual.DualStreamer","location":"streampack-core/io.github.thibaultbee.streampack.core.streamers.dual/-dual-streamer/index.html","searchKeys":["DualStreamer","open class DualStreamer(val context: Context, val withAudio: Boolean = true, val withVideo: Boolean = true, firstEndpointFactory: IEndpointInternal.Factory = DynamicEndpointFactory(), secondEndpointFactory: IEndpointInternal.Factory = DynamicEndpointFactory(), defaultRotation: Int = context.displayRotation) : IDualStreamer, IAudioDualStreamer, IVideoDualStreamer","io.github.thibaultbee.streampack.core.streamers.dual.DualStreamer"]},{"name":"open class DummyBitrateRegulatorController(audioEncoder: IEncoder?, videoEncoder: IEncoder, endpoint: IEndpoint, bitrateRegulatorFactory: IBitrateRegulator.Factory, bitrateRegulatorConfig: BitrateRegulatorConfig = BitrateRegulatorConfig(), delayTimeInMs: Long = 500) : BitrateRegulatorController","description":"io.github.thibaultbee.streampack.core.regulator.controllers.DummyBitrateRegulatorController","location":"streampack-core/io.github.thibaultbee.streampack.core.regulator.controllers/-dummy-bitrate-regulator-controller/index.html","searchKeys":["DummyBitrateRegulatorController","open class DummyBitrateRegulatorController(audioEncoder: IEncoder?, videoEncoder: IEncoder, endpoint: IEndpoint, bitrateRegulatorFactory: IBitrateRegulator.Factory, bitrateRegulatorConfig: BitrateRegulatorConfig = BitrateRegulatorConfig(), delayTimeInMs: Long = 500) : BitrateRegulatorController","io.github.thibaultbee.streampack.core.regulator.controllers.DummyBitrateRegulatorController"]},{"name":"open class DynamicEndpoint(context: Context) : IEndpointInternal","description":"io.github.thibaultbee.streampack.core.elements.endpoints.DynamicEndpoint","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints/-dynamic-endpoint/index.html","searchKeys":["DynamicEndpoint","open class DynamicEndpoint(context: Context) : IEndpointInternal","io.github.thibaultbee.streampack.core.elements.endpoints.DynamicEndpoint"]},{"name":"open class Packet(val buffer: ByteBuffer, val ts: Long, val type: PacketType = PacketType.UNKNOWN)","description":"io.github.thibaultbee.streampack.core.elements.data.Packet","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.data/-packet/index.html","searchKeys":["Packet","open class Packet(val buffer: ByteBuffer, val ts: Long, val type: PacketType = PacketType.UNKNOWN)","io.github.thibaultbee.streampack.core.elements.data.Packet"]},{"name":"open class Psi(var listener: IMuxerInternal.IMuxerListener? = null, val pid: Short, tableId: Byte, sectionSyntaxIndicator: Boolean = false, reservedFutureUse: Boolean = false, tableIdExtension: Short = 0, var versionNumber: Byte = 0, sectionNumber: Byte = 0, lastSectionNumber: Byte = 0) : TS","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets.Psi","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets/-psi/index.html","searchKeys":["Psi","open class Psi(var listener: IMuxerInternal.IMuxerListener? = null, val pid: Short, tableId: Byte, sectionSyntaxIndicator: Boolean = false, reservedFutureUse: Boolean = false, tableIdExtension: Short = 0, var versionNumber: Byte = 0, sectionNumber: Byte = 0, lastSectionNumber: Byte = 0) : TS","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets.Psi"]},{"name":"open class SingleStreamer(val context: Context, val withAudio: Boolean = true, val withVideo: Boolean = true, endpointFactory: IEndpointInternal.Factory = DynamicEndpointFactory(), defaultRotation: Int = context.displayRotation) : ISingleStreamer, IAudioSingleStreamer, IVideoSingleStreamer","description":"io.github.thibaultbee.streampack.core.streamers.single.SingleStreamer","location":"streampack-core/io.github.thibaultbee.streampack.core.streamers.single/-single-streamer/index.html","searchKeys":["SingleStreamer","open class SingleStreamer(val context: Context, val withAudio: Boolean = true, val withVideo: Boolean = true, endpointFactory: IEndpointInternal.Factory = DynamicEndpointFactory(), defaultRotation: Int = context.displayRotation) : ISingleStreamer, IAudioSingleStreamer, IVideoSingleStreamer","io.github.thibaultbee.streampack.core.streamers.single.SingleStreamer"]},{"name":"open class StreamerActivityLifeCycleObserver(val streamer: IStreamer) : StreamerViewModelLifeCycleObserver","description":"io.github.thibaultbee.streampack.core.streamers.lifecycle.StreamerActivityLifeCycleObserver","location":"streampack-core/io.github.thibaultbee.streampack.core.streamers.lifecycle/-streamer-activity-life-cycle-observer/index.html","searchKeys":["StreamerActivityLifeCycleObserver","open class StreamerActivityLifeCycleObserver(val streamer: IStreamer) : StreamerViewModelLifeCycleObserver","io.github.thibaultbee.streampack.core.streamers.lifecycle.StreamerActivityLifeCycleObserver"]},{"name":"open class StreamerConfigurationInfo(endpointInfo: IEndpoint.IEndpointInfo) : IConfigurationInfo","description":"io.github.thibaultbee.streampack.core.streamers.infos.StreamerConfigurationInfo","location":"streampack-core/io.github.thibaultbee.streampack.core.streamers.infos/-streamer-configuration-info/index.html","searchKeys":["StreamerConfigurationInfo","open class StreamerConfigurationInfo(endpointInfo: IEndpoint.IEndpointInfo) : IConfigurationInfo","io.github.thibaultbee.streampack.core.streamers.infos.StreamerConfigurationInfo"]},{"name":"open class StreamerPipeline(val context: Context, val withAudio: Boolean = true, val withVideo: Boolean = true, audioOutputMode: StreamerPipeline.AudioOutputMode = AudioOutputMode.PUSH, surfaceProcessorFactory: ISurfaceProcessorInternal.Factory = DefaultSurfaceProcessorFactory(), val coroutineDispatcher: CoroutineDispatcher = Dispatchers.Default) : IWithVideoSource, IWithVideoRotation, IWithAudioSource, IStreamer","description":"io.github.thibaultbee.streampack.core.pipelines.StreamerPipeline","location":"streampack-core/io.github.thibaultbee.streampack.core.pipelines/-streamer-pipeline/index.html","searchKeys":["StreamerPipeline","open class StreamerPipeline(val context: Context, val withAudio: Boolean = true, val withVideo: Boolean = true, audioOutputMode: StreamerPipeline.AudioOutputMode = AudioOutputMode.PUSH, surfaceProcessorFactory: ISurfaceProcessorInternal.Factory = DefaultSurfaceProcessorFactory(), val coroutineDispatcher: CoroutineDispatcher = Dispatchers.Default) : IWithVideoSource, IWithVideoRotation, IWithAudioSource, IStreamer","io.github.thibaultbee.streampack.core.pipelines.StreamerPipeline"]},{"name":"open class StreamerViewModelLifeCycleObserver(val streamer: IStreamer) : DefaultLifecycleObserver","description":"io.github.thibaultbee.streampack.core.streamers.lifecycle.StreamerViewModelLifeCycleObserver","location":"streampack-core/io.github.thibaultbee.streampack.core.streamers.lifecycle/-streamer-view-model-life-cycle-observer/index.html","searchKeys":["StreamerViewModelLifeCycleObserver","open class StreamerViewModelLifeCycleObserver(val streamer: IStreamer) : DefaultLifecycleObserver","io.github.thibaultbee.streampack.core.streamers.lifecycle.StreamerViewModelLifeCycleObserver"]},{"name":"open class TS(var listener: IMuxerInternal.IMuxerListener? = null, val pid: Short, transportErrorIndicator: Boolean = false, transportPriority: Boolean = false, transportScramblingControl: Byte = 0, continuityCounter: Byte = 0) : TSOutputCallback","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets.TS","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets/-t-s/index.html","searchKeys":["TS","open class TS(var listener: IMuxerInternal.IMuxerListener? = null, val pid: Short, transportErrorIndicator: Boolean = false, transportPriority: Boolean = false, transportScramblingControl: Byte = 0, continuityCounter: Byte = 0) : TSOutputCallback","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets.TS"]},{"name":"open class TSOutputCallback(var listener: IMuxerInternal.IMuxerListener? = null)","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.utils.TSOutputCallback","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.utils/-t-s-output-callback/index.html","searchKeys":["TSOutputCallback","open class TSOutputCallback(var listener: IMuxerInternal.IMuxerListener? = null)","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.utils.TSOutputCallback"]},{"name":"open class VideoCodecConfig(val mimeType: String = MediaFormat.MIMETYPE_VIDEO_AVC, val startBitrate: Int, val resolution: Size = Size(1280, 720), val fps: Int = 30, val profile: Int = getBestProfile(mimeType), val level: Int = getBestLevel(mimeType, profile), val gopDurationInS: Float = 1.0f) : CodecConfig","description":"io.github.thibaultbee.streampack.core.elements.encoders.VideoCodecConfig","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.encoders/-video-codec-config/index.html","searchKeys":["VideoCodecConfig","open class VideoCodecConfig(val mimeType: String = MediaFormat.MIMETYPE_VIDEO_AVC, val startBitrate: Int, val resolution: Size = Size(1280, 720), val fps: Int = 30, val profile: Int = getBestProfile(mimeType), val level: Int = getBestLevel(mimeType, profile), val gopDurationInS: Float = 1.0f) : CodecConfig","io.github.thibaultbee.streampack.core.elements.encoders.VideoCodecConfig"]},{"name":"open class VideoStreamerConfigurationInfo(videoEndpointInfo: IEndpoint.IEndpointInfo.IVideoEndpointInfo) : IVideoConfigurationInfo","description":"io.github.thibaultbee.streampack.core.streamers.infos.VideoStreamerConfigurationInfo","location":"streampack-core/io.github.thibaultbee.streampack.core.streamers.infos/-video-streamer-configuration-info/index.html","searchKeys":["VideoStreamerConfigurationInfo","open class VideoStreamerConfigurationInfo(videoEndpointInfo: IEndpoint.IEndpointInfo.IVideoEndpointInfo) : IVideoConfigurationInfo","io.github.thibaultbee.streampack.core.streamers.infos.VideoStreamerConfigurationInfo"]},{"name":"open class VisualSampleEntry(type: String, resolution: Size, horizontalResolution: Int = 72, verticalResolution: Int = 72, frameCount: Short = 1, compressorName: String? = null, depth: Short = 24, otherBoxes: List<Box> = emptyList(), clap: CleanApertureBox? = null, pasp: PixelAspectRatioBox? = null) : SampleEntry","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.VisualSampleEntry","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-visual-sample-entry/index.html","searchKeys":["VisualSampleEntry","open class VisualSampleEntry(type: String, resolution: Size, horizontalResolution: Int = 72, verticalResolution: Int = 72, frameCount: Short = 1, compressorName: String? = null, depth: Short = 24, otherBoxes: List<Box> = emptyList(), clap: CleanApertureBox? = null, pasp: PixelAspectRatioBox? = null) : SampleEntry","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.VisualSampleEntry"]},{"name":"open fun createFragmentShader(samplerVarName: String, fragCoordsVarName: String): String?","description":"io.github.thibaultbee.streampack.core.elements.processing.video.ShaderProvider.createFragmentShader","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.processing.video/-shader-provider/create-fragment-shader.html","searchKeys":["createFragmentShader","open fun createFragmentShader(samplerVarName: String, fragCoordsVarName: String): String?","io.github.thibaultbee.streampack.core.elements.processing.video.ShaderProvider.createFragmentShader"]},{"name":"open fun getInfo(descriptor: MediaDescriptor): IEndpoint.IEndpointInfo","description":"io.github.thibaultbee.streampack.core.elements.endpoints.IEndpoint.getInfo","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints/-i-endpoint/get-info.html","searchKeys":["getInfo","open fun getInfo(descriptor: MediaDescriptor): IEndpoint.IEndpointInfo","io.github.thibaultbee.streampack.core.elements.endpoints.IEndpoint.getInfo"]},{"name":"open fun getRelativeRotationDegrees(targetRotation: Int, requiredMirroring: Boolean): Int","description":"io.github.thibaultbee.streampack.core.elements.processing.video.source.ISourceInfoProvider.getRelativeRotationDegrees","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.processing.video.source/-i-source-info-provider/get-relative-rotation-degrees.html","searchKeys":["getRelativeRotationDegrees","open fun getRelativeRotationDegrees(targetRotation: Int, requiredMirroring: Boolean): Int","io.github.thibaultbee.streampack.core.elements.processing.video.source.ISourceInfoProvider.getRelativeRotationDegrees"]},{"name":"open fun getSupportedResolutions(mimeType: String): Pair<Range<Int>, Range<Int>>","description":"io.github.thibaultbee.streampack.core.streamers.infos.VideoStreamerConfigurationInfo.getSupportedResolutions","location":"streampack-core/io.github.thibaultbee.streampack.core.streamers.infos/-video-streamer-configuration-info/get-supported-resolutions.html","searchKeys":["getSupportedResolutions","open fun getSupportedResolutions(mimeType: String): Pair<Range<Int>, Range<Int>>","io.github.thibaultbee.streampack.core.streamers.infos.VideoStreamerConfigurationInfo.getSupportedResolutions"]},{"name":"open fun onError(t: Throwable)","description":"io.github.thibaultbee.streampack.core.elements.encoders.IEncoderInternal.IListener.onError","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.encoders/-i-encoder-internal/-i-listener/on-error.html","searchKeys":["onError","open fun onError(t: Throwable)","io.github.thibaultbee.streampack.core.elements.encoders.IEncoderInternal.IListener.onError"]},{"name":"open fun onFileAvailable(index: Int, isLast: Boolean, file: File)","description":"io.github.thibaultbee.streampack.core.elements.utils.ChunkedFileOutputStream.Listener.onFileAvailable","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils/-chunked-file-output-stream/-listener/on-file-available.html","searchKeys":["onFileAvailable","open fun onFileAvailable(index: Int, isLast: Boolean, file: File)","io.github.thibaultbee.streampack.core.elements.utils.ChunkedFileOutputStream.Listener.onFileAvailable"]},{"name":"open fun onOutputFrame(frame: Frame)","description":"io.github.thibaultbee.streampack.core.elements.encoders.IEncoderInternal.IListener.onOutputFrame","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.encoders/-i-encoder-internal/-i-listener/on-output-frame.html","searchKeys":["onOutputFrame","open fun onOutputFrame(frame: Frame)","io.github.thibaultbee.streampack.core.elements.encoders.IEncoderInternal.IListener.onOutputFrame"]},{"name":"open fun onSurfaceUpdated(surface: Surface)","description":"io.github.thibaultbee.streampack.core.elements.encoders.IEncoderInternal.ISurfaceInput.OnSurfaceUpdateListener.onSurfaceUpdated","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.encoders/-i-encoder-internal/-i-surface-input/-on-surface-update-listener/on-surface-updated.html","searchKeys":["onSurfaceUpdated","open fun onSurfaceUpdated(surface: Surface)","io.github.thibaultbee.streampack.core.elements.encoders.IEncoderInternal.ISurfaceInput.OnSurfaceUpdateListener.onSurfaceUpdated"]},{"name":"open fun toByteBuffer(): ByteBuffer","description":"io.github.thibaultbee.streampack.core.elements.utils.av.buffer.ByteBufferWriter.toByteBuffer","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.buffer/-byte-buffer-writer/to-byte-buffer.html","searchKeys":["toByteBuffer","open fun toByteBuffer(): ByteBuffer","io.github.thibaultbee.streampack.core.elements.utils.av.buffer.ByteBufferWriter.toByteBuffer"]},{"name":"open fun use()","description":"io.github.thibaultbee.streampack.core.elements.processing.video.utils.GLUtils.Program2D.use","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.processing.video.utils/-g-l-utils/-program2-d/use.html","searchKeys":["use","open fun use()","io.github.thibaultbee.streampack.core.elements.processing.video.utils.GLUtils.Program2D.use"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"io.github.thibaultbee.streampack.core.elements.encoders.AudioCodecConfig.equals","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.encoders/-audio-codec-config/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","io.github.thibaultbee.streampack.core.elements.encoders.AudioCodecConfig.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"io.github.thibaultbee.streampack.core.elements.encoders.CodecConfig.equals","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.encoders/-codec-config/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","io.github.thibaultbee.streampack.core.elements.encoders.CodecConfig.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"io.github.thibaultbee.streampack.core.elements.encoders.VideoCodecConfig.equals","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.encoders/-video-codec-config/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","io.github.thibaultbee.streampack.core.elements.encoders.VideoCodecConfig.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"io.github.thibaultbee.streampack.core.elements.encoders.mediacodec.AudioEncoderConfig.equals","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.encoders.mediacodec/-audio-encoder-config/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","io.github.thibaultbee.streampack.core.elements.encoders.mediacodec.AudioEncoderConfig.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"io.github.thibaultbee.streampack.core.elements.encoders.mediacodec.EncoderConfig.equals","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.encoders.mediacodec/-encoder-config/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","io.github.thibaultbee.streampack.core.elements.encoders.mediacodec.EncoderConfig.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"io.github.thibaultbee.streampack.core.elements.encoders.mediacodec.VideoEncoderConfig.equals","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.encoders.mediacodec/-video-encoder-config/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","io.github.thibaultbee.streampack.core.elements.encoders.mediacodec.VideoEncoderConfig.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.data.TSServiceInfo.equals","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.data/-t-s-service-info/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.data.TSServiceInfo.equals"]},{"name":"open override fun addBitrateRegulatorController(controllerFactory: IBitrateRegulatorController.Factory)","description":"io.github.thibaultbee.streampack.core.streamers.single.AudioOnlySingleStreamer.addBitrateRegulatorController","location":"streampack-core/io.github.thibaultbee.streampack.core.streamers.single/-audio-only-single-streamer/add-bitrate-regulator-controller.html","searchKeys":["addBitrateRegulatorController","open override fun addBitrateRegulatorController(controllerFactory: IBitrateRegulatorController.Factory)","io.github.thibaultbee.streampack.core.streamers.single.AudioOnlySingleStreamer.addBitrateRegulatorController"]},{"name":"open override fun addBitrateRegulatorController(controllerFactory: IBitrateRegulatorController.Factory)","description":"io.github.thibaultbee.streampack.core.streamers.single.SingleStreamer.addBitrateRegulatorController","location":"streampack-core/io.github.thibaultbee.streampack.core.streamers.single/-single-streamer/add-bitrate-regulator-controller.html","searchKeys":["addBitrateRegulatorController","open override fun addBitrateRegulatorController(controllerFactory: IBitrateRegulatorController.Factory)","io.github.thibaultbee.streampack.core.streamers.single.SingleStreamer.addBitrateRegulatorController"]},{"name":"open override fun addBitrateRegulatorController(controllerFactory: IBitrateRegulatorController.Factory)","description":"io.github.thibaultbee.streampack.core.streamers.single.VideoOnlySingleStreamer.addBitrateRegulatorController","location":"streampack-core/io.github.thibaultbee.streampack.core.streamers.single/-video-only-single-streamer/add-bitrate-regulator-controller.html","searchKeys":["addBitrateRegulatorController","open override fun addBitrateRegulatorController(controllerFactory: IBitrateRegulatorController.Factory)","io.github.thibaultbee.streampack.core.streamers.single.VideoOnlySingleStreamer.addBitrateRegulatorController"]},{"name":"open override fun addChunkOffset(chunkOffset: Int)","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.ChunkOffsetBox.addChunkOffset","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-chunk-offset-box/add-chunk-offset.html","searchKeys":["addChunkOffset","open override fun addChunkOffset(chunkOffset: Int)","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.ChunkOffsetBox.addChunkOffset"]},{"name":"open override fun addChunkOffset(chunkOffset: Long)","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.ChunkLargeOffsetBox.addChunkOffset","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-chunk-large-offset-box/add-chunk-offset.html","searchKeys":["addChunkOffset","open override fun addChunkOffset(chunkOffset: Long)","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.ChunkLargeOffsetBox.addChunkOffset"]},{"name":"open override fun addListener(listener: IRotationProvider.Listener)","description":"io.github.thibaultbee.streampack.core.streamers.orientation.DisplayRotationProvider.addListener","location":"streampack-core/io.github.thibaultbee.streampack.core.streamers.orientation/-display-rotation-provider/add-listener.html","searchKeys":["addListener","open override fun addListener(listener: IRotationProvider.Listener)","io.github.thibaultbee.streampack.core.streamers.orientation.DisplayRotationProvider.addListener"]},{"name":"open override fun addListener(listener: IRotationProvider.Listener)","description":"io.github.thibaultbee.streampack.core.streamers.orientation.RotationProvider.addListener","location":"streampack-core/io.github.thibaultbee.streampack.core.streamers.orientation/-rotation-provider/add-listener.html","searchKeys":["addListener","open override fun addListener(listener: IRotationProvider.Listener)","io.github.thibaultbee.streampack.core.streamers.orientation.RotationProvider.addListener"]},{"name":"open override fun addListener(listener: IRotationProvider.Listener)","description":"io.github.thibaultbee.streampack.core.streamers.orientation.SensorRotationProvider.addListener","location":"streampack-core/io.github.thibaultbee.streampack.core.streamers.orientation/-sensor-rotation-provider/add-listener.html","searchKeys":["addListener","open override fun addListener(listener: IRotationProvider.Listener)","io.github.thibaultbee.streampack.core.streamers.orientation.SensorRotationProvider.addListener"]},{"name":"open override fun addStream(streamConfig: CodecConfig): Int","description":"io.github.thibaultbee.streampack.core.elements.endpoints.CombineEndpoint.addStream","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints/-combine-endpoint/add-stream.html","searchKeys":["addStream","open override fun addStream(streamConfig: CodecConfig): Int","io.github.thibaultbee.streampack.core.elements.endpoints.CombineEndpoint.addStream"]},{"name":"open override fun addStream(streamConfig: CodecConfig): Int","description":"io.github.thibaultbee.streampack.core.elements.endpoints.DynamicEndpoint.addStream","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints/-dynamic-endpoint/add-stream.html","searchKeys":["addStream","open override fun addStream(streamConfig: CodecConfig): Int","io.github.thibaultbee.streampack.core.elements.endpoints.DynamicEndpoint.addStream"]},{"name":"open override fun addStream(streamConfig: CodecConfig): Int","description":"io.github.thibaultbee.streampack.core.elements.endpoints.MediaMuxerEndpoint.addStream","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints/-media-muxer-endpoint/add-stream.html","searchKeys":["addStream","open override fun addStream(streamConfig: CodecConfig): Int","io.github.thibaultbee.streampack.core.elements.endpoints.MediaMuxerEndpoint.addStream"]},{"name":"open override fun addStream(streamConfig: CodecConfig): Int","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.CompositeEndpoint.addStream","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites/-composite-endpoint/add-stream.html","searchKeys":["addStream","open override fun addStream(streamConfig: CodecConfig): Int","io.github.thibaultbee.streampack.core.elements.endpoints.composites.CompositeEndpoint.addStream"]},{"name":"open override fun addStream(streamConfig: CodecConfig): Int","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.FlvMuxer.addStream","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv/-flv-muxer/add-stream.html","searchKeys":["addStream","open override fun addStream(streamConfig: CodecConfig): Int","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.FlvMuxer.addStream"]},{"name":"open override fun addStream(streamConfig: CodecConfig): Int","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.Mp4Muxer.addStream","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4/-mp4-muxer/add-stream.html","searchKeys":["addStream","open override fun addStream(streamConfig: CodecConfig): Int","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.Mp4Muxer.addStream"]},{"name":"open override fun addStream(streamConfig: CodecConfig): Int","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.TsMuxer.addStream","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts/-ts-muxer/add-stream.html","searchKeys":["addStream","open override fun addStream(streamConfig: CodecConfig): Int","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.TsMuxer.addStream"]},{"name":"open override fun addStreams(streamConfigs: List<CodecConfig>): Map<CodecConfig, Int>","description":"io.github.thibaultbee.streampack.core.elements.endpoints.CombineEndpoint.addStreams","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints/-combine-endpoint/add-streams.html","searchKeys":["addStreams","open override fun addStreams(streamConfigs: List<CodecConfig>): Map<CodecConfig, Int>","io.github.thibaultbee.streampack.core.elements.endpoints.CombineEndpoint.addStreams"]},{"name":"open override fun addStreams(streamConfigs: List<CodecConfig>): Map<CodecConfig, Int>","description":"io.github.thibaultbee.streampack.core.elements.endpoints.DynamicEndpoint.addStreams","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints/-dynamic-endpoint/add-streams.html","searchKeys":["addStreams","open override fun addStreams(streamConfigs: List<CodecConfig>): Map<CodecConfig, Int>","io.github.thibaultbee.streampack.core.elements.endpoints.DynamicEndpoint.addStreams"]},{"name":"open override fun addStreams(streamConfigs: List<CodecConfig>): Map<CodecConfig, Int>","description":"io.github.thibaultbee.streampack.core.elements.endpoints.MediaMuxerEndpoint.addStreams","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints/-media-muxer-endpoint/add-streams.html","searchKeys":["addStreams","open override fun addStreams(streamConfigs: List<CodecConfig>): Map<CodecConfig, Int>","io.github.thibaultbee.streampack.core.elements.endpoints.MediaMuxerEndpoint.addStreams"]},{"name":"open override fun addStreams(streamConfigs: List<CodecConfig>): Map<CodecConfig, Int>","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.CompositeEndpoint.addStreams","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites/-composite-endpoint/add-streams.html","searchKeys":["addStreams","open override fun addStreams(streamConfigs: List<CodecConfig>): Map<CodecConfig, Int>","io.github.thibaultbee.streampack.core.elements.endpoints.composites.CompositeEndpoint.addStreams"]},{"name":"open override fun addStreams(streamsConfig: List<CodecConfig>): Map<CodecConfig, Int>","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.FlvMuxer.addStreams","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv/-flv-muxer/add-streams.html","searchKeys":["addStreams","open override fun addStreams(streamsConfig: List<CodecConfig>): Map<CodecConfig, Int>","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.FlvMuxer.addStreams"]},{"name":"open override fun addStreams(streamsConfig: List<CodecConfig>): Map<CodecConfig, Int>","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.Mp4Muxer.addStreams","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4/-mp4-muxer/add-streams.html","searchKeys":["addStreams","open override fun addStreams(streamsConfig: List<CodecConfig>): Map<CodecConfig, Int>","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.Mp4Muxer.addStreams"]},{"name":"open override fun addStreams(streamsConfig: List<CodecConfig>): Map<CodecConfig, Int>","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.TsMuxer.addStreams","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts/-ts-muxer/add-streams.html","searchKeys":["addStreams","open override fun addStreams(streamsConfig: List<CodecConfig>): Map<CodecConfig, Int>","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.TsMuxer.addStreams"]},{"name":"open override fun build(hasAudio: Boolean, hasVideo: Boolean): MP4Segmenter","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models.DefaultMP4SegmenterFactory.build","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models/-default-m-p4-segmenter-factory/build.html","searchKeys":["build","open override fun build(hasAudio: Boolean, hasVideo: Boolean): MP4Segmenter","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models.DefaultMP4SegmenterFactory.build"]},{"name":"open override fun build(trackChunks: List<TrackChunks>, dataOffset: Long): Box","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models.MovieBoxFactory.build","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models/-movie-box-factory/build.html","searchKeys":["build","open override fun build(trackChunks: List<TrackChunks>, dataOffset: Long): Box","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models.MovieBoxFactory.build"]},{"name":"open override fun build(trackChunks: List<TrackChunks>, dataOffset: Long): Box","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models.MovieFragmentBoxFactory.build","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models/-movie-fragment-box-factory/build.html","searchKeys":["build","open override fun build(trackChunks: List<TrackChunks>, dataOffset: Long): Box","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models.MovieFragmentBoxFactory.build"]},{"name":"open override fun buildFormat(withProfileLevel: Boolean): MediaFormat","description":"io.github.thibaultbee.streampack.core.elements.encoders.mediacodec.AudioEncoderConfig.buildFormat","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.encoders.mediacodec/-audio-encoder-config/build-format.html","searchKeys":["buildFormat","open override fun buildFormat(withProfileLevel: Boolean): MediaFormat","io.github.thibaultbee.streampack.core.elements.encoders.mediacodec.AudioEncoderConfig.buildFormat"]},{"name":"open override fun buildFormat(withProfileLevel: Boolean): MediaFormat","description":"io.github.thibaultbee.streampack.core.elements.encoders.mediacodec.VideoEncoderConfig.buildFormat","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.encoders.mediacodec/-video-encoder-config/build-format.html","searchKeys":["buildFormat","open override fun buildFormat(withProfileLevel: Boolean): MediaFormat","io.github.thibaultbee.streampack.core.elements.encoders.mediacodec.VideoEncoderConfig.buildFormat"]},{"name":"open override fun clear()","description":"io.github.thibaultbee.streampack.core.elements.utils.pool.ByteBufferPool.clear","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.pool/-byte-buffer-pool/clear.html","searchKeys":["clear","open override fun clear()","io.github.thibaultbee.streampack.core.elements.utils.pool.ByteBufferPool.clear"]},{"name":"open override fun clear()","description":"io.github.thibaultbee.streampack.core.elements.utils.pool.RawFrameFactory.clear","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.pool/-raw-frame-factory/clear.html","searchKeys":["clear","open override fun clear()","io.github.thibaultbee.streampack.core.elements.utils.pool.RawFrameFactory.clear"]},{"name":"open override fun close()","description":"io.github.thibaultbee.streampack.core.elements.data.ICloseableFrame.close","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.data/-i-closeable-frame/close.html","searchKeys":["close","open override fun close()","io.github.thibaultbee.streampack.core.elements.data.ICloseableFrame.close"]},{"name":"open override fun close()","description":"io.github.thibaultbee.streampack.core.elements.processing.audio.MuteEffect.close","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.processing.audio/-mute-effect/close.html","searchKeys":["close","open override fun close()","io.github.thibaultbee.streampack.core.elements.processing.audio.MuteEffect.close"]},{"name":"open override fun close()","description":"io.github.thibaultbee.streampack.core.elements.sources.video.camera.controllers.CameraDeviceController.close","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.video.camera.controllers/-camera-device-controller/close.html","searchKeys":["close","open override fun close()","io.github.thibaultbee.streampack.core.elements.sources.video.camera.controllers.CameraDeviceController.close"]},{"name":"open override fun close()","description":"io.github.thibaultbee.streampack.core.elements.utils.ChunkedFileOutputStream.close","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils/-chunked-file-output-stream/close.html","searchKeys":["close","open override fun close()","io.github.thibaultbee.streampack.core.elements.utils.ChunkedFileOutputStream.close"]},{"name":"open override fun close()","description":"io.github.thibaultbee.streampack.core.elements.utils.pool.ByteBufferPool.close","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.pool/-byte-buffer-pool/close.html","searchKeys":["close","open override fun close()","io.github.thibaultbee.streampack.core.elements.utils.pool.ByteBufferPool.close"]},{"name":"open override fun close()","description":"io.github.thibaultbee.streampack.core.elements.utils.pool.RawFrameFactory.close","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.pool/-raw-frame-factory/close.html","searchKeys":["close","open override fun close()","io.github.thibaultbee.streampack.core.elements.utils.pool.RawFrameFactory.close"]},{"name":"open override fun configure()","description":"io.github.thibaultbee.streampack.core.elements.encoders.mediacodec.MediaCodecEncoder.configure","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.encoders.mediacodec/-media-codec-encoder/configure.html","searchKeys":["configure","open override fun configure()","io.github.thibaultbee.streampack.core.elements.encoders.mediacodec.MediaCodecEncoder.configure"]},{"name":"open override fun configure(config: SinkConfiguration)","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.sinks.FakeSink.configure","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.sinks/-fake-sink/configure.html","searchKeys":["configure","open override fun configure(config: SinkConfiguration)","io.github.thibaultbee.streampack.core.elements.endpoints.composites.sinks.FakeSink.configure"]},{"name":"open override fun configure(config: SinkConfiguration)","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.sinks.FileSink.configure","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.sinks/-file-sink/configure.html","searchKeys":["configure","open override fun configure(config: SinkConfiguration)","io.github.thibaultbee.streampack.core.elements.endpoints.composites.sinks.FileSink.configure"]},{"name":"open override fun configure(config: SinkConfiguration)","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.sinks.OutputStreamSink.configure","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.sinks/-output-stream-sink/configure.html","searchKeys":["configure","open override fun configure(config: SinkConfiguration)","io.github.thibaultbee.streampack.core.elements.endpoints.composites.sinks.OutputStreamSink.configure"]},{"name":"open override fun create(bufferSize: Int, timestampInUs: Long): RawFrame","description":"io.github.thibaultbee.streampack.core.elements.utils.pool.RawFrameFactory.create","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.pool/-raw-frame-factory/create.html","searchKeys":["create","open override fun create(bufferSize: Int, timestampInUs: Long): RawFrame","io.github.thibaultbee.streampack.core.elements.utils.pool.RawFrameFactory.create"]},{"name":"open override fun create(context: Context): IEndpointInternal","description":"io.github.thibaultbee.streampack.core.elements.endpoints.CombineEndpointFactory.create","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints/-combine-endpoint-factory/create.html","searchKeys":["create","open override fun create(context: Context): IEndpointInternal","io.github.thibaultbee.streampack.core.elements.endpoints.CombineEndpointFactory.create"]},{"name":"open override fun create(context: Context): IEndpointInternal","description":"io.github.thibaultbee.streampack.core.elements.endpoints.DualEndpointFactory.create","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints/-dual-endpoint-factory/create.html","searchKeys":["create","open override fun create(context: Context): IEndpointInternal","io.github.thibaultbee.streampack.core.elements.endpoints.DualEndpointFactory.create"]},{"name":"open override fun create(context: Context): IEndpointInternal","description":"io.github.thibaultbee.streampack.core.elements.endpoints.DynamicEndpointFactory.create","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints/-dynamic-endpoint-factory/create.html","searchKeys":["create","open override fun create(context: Context): IEndpointInternal","io.github.thibaultbee.streampack.core.elements.endpoints.DynamicEndpointFactory.create"]},{"name":"open override fun create(context: Context): IEndpointInternal","description":"io.github.thibaultbee.streampack.core.elements.endpoints.DynamicLocalEndpointFactory.create","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints/-dynamic-local-endpoint-factory/create.html","searchKeys":["create","open override fun create(context: Context): IEndpointInternal","io.github.thibaultbee.streampack.core.elements.endpoints.DynamicLocalEndpointFactory.create"]},{"name":"open override fun create(context: Context): IEndpointInternal","description":"io.github.thibaultbee.streampack.core.elements.endpoints.MediaMuxerEndpointFactory.create","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints/-media-muxer-endpoint-factory/create.html","searchKeys":["create","open override fun create(context: Context): IEndpointInternal","io.github.thibaultbee.streampack.core.elements.endpoints.MediaMuxerEndpointFactory.create"]},{"name":"open override fun create(context: Context): IEndpointInternal","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.CompositeEndpointFactory.create","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites/-composite-endpoint-factory/create.html","searchKeys":["create","open override fun create(context: Context): IEndpointInternal","io.github.thibaultbee.streampack.core.elements.endpoints.composites.CompositeEndpointFactory.create"]},{"name":"open override fun create(dynamicRangeProfile: DynamicRangeProfile): ISurfaceProcessorInternal","description":"io.github.thibaultbee.streampack.core.elements.processing.video.DefaultSurfaceProcessorFactory.create","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.processing.video/-default-surface-processor-factory/create.html","searchKeys":["create","open override fun create(dynamicRangeProfile: DynamicRangeProfile): ISurfaceProcessorInternal","io.github.thibaultbee.streampack.core.elements.processing.video.DefaultSurfaceProcessorFactory.create"]},{"name":"open override fun d(tag: String, message: String, tr: Throwable?)","description":"io.github.thibaultbee.streampack.core.logger.Logger.d","location":"streampack-core/io.github.thibaultbee.streampack.core.logger/-logger/d.html","searchKeys":["d","open override fun d(tag: String, message: String, tr: Throwable?)","io.github.thibaultbee.streampack.core.logger.Logger.d"]},{"name":"open override fun d(tag: String, message: String, tr: Throwable?)","description":"io.github.thibaultbee.streampack.core.logger.StreamPackLogger.d","location":"streampack-core/io.github.thibaultbee.streampack.core.logger/-stream-pack-logger/d.html","searchKeys":["d","open override fun d(tag: String, message: String, tr: Throwable?)","io.github.thibaultbee.streampack.core.logger.StreamPackLogger.d"]},{"name":"open override fun e(tag: String, message: String, tr: Throwable?)","description":"io.github.thibaultbee.streampack.core.logger.Logger.e","location":"streampack-core/io.github.thibaultbee.streampack.core.logger/-logger/e.html","searchKeys":["e","open override fun e(tag: String, message: String, tr: Throwable?)","io.github.thibaultbee.streampack.core.logger.Logger.e"]},{"name":"open override fun e(tag: String, message: String, tr: Throwable?)","description":"io.github.thibaultbee.streampack.core.logger.StreamPackLogger.e","location":"streampack-core/io.github.thibaultbee.streampack.core.logger/-stream-pack-logger/e.html","searchKeys":["e","open override fun e(tag: String, message: String, tr: Throwable?)","io.github.thibaultbee.streampack.core.logger.StreamPackLogger.e"]},{"name":"open override fun encode(buffer: ByteBuffer)","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.amf.containers.AmfContainer.encode","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.amf.containers/-amf-container/encode.html","searchKeys":["encode","open override fun encode(buffer: ByteBuffer)","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.amf.containers.AmfContainer.encode"]},{"name":"open override fun encode(buffer: ByteBuffer)","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.amf.containers.AmfEcmaArray.encode","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.amf.containers/-amf-ecma-array/encode.html","searchKeys":["encode","open override fun encode(buffer: ByteBuffer)","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.amf.containers.AmfEcmaArray.encode"]},{"name":"open override fun encode(buffer: ByteBuffer)","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.amf.containers.AmfObject.encode","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.amf.containers/-amf-object/encode.html","searchKeys":["encode","open override fun encode(buffer: ByteBuffer)","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.amf.containers.AmfObject.encode"]},{"name":"open override fun encode(buffer: ByteBuffer)","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.amf.primitives.AmfBoolean.encode","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.amf.primitives/-amf-boolean/encode.html","searchKeys":["encode","open override fun encode(buffer: ByteBuffer)","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.amf.primitives.AmfBoolean.encode"]},{"name":"open override fun encode(buffer: ByteBuffer)","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.amf.primitives.AmfInt16.encode","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.amf.primitives/-amf-int16/encode.html","searchKeys":["encode","open override fun encode(buffer: ByteBuffer)","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.amf.primitives.AmfInt16.encode"]},{"name":"open override fun encode(buffer: ByteBuffer)","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.amf.primitives.AmfInt24.encode","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.amf.primitives/-amf-int24/encode.html","searchKeys":["encode","open override fun encode(buffer: ByteBuffer)","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.amf.primitives.AmfInt24.encode"]},{"name":"open override fun encode(buffer: ByteBuffer)","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.amf.primitives.AmfInt32.encode","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.amf.primitives/-amf-int32/encode.html","searchKeys":["encode","open override fun encode(buffer: ByteBuffer)","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.amf.primitives.AmfInt32.encode"]},{"name":"open override fun encode(buffer: ByteBuffer)","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.amf.primitives.AmfNamedParameter.encode","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.amf.primitives/-amf-named-parameter/encode.html","searchKeys":["encode","open override fun encode(buffer: ByteBuffer)","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.amf.primitives.AmfNamedParameter.encode"]},{"name":"open override fun encode(buffer: ByteBuffer)","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.amf.primitives.AmfNull.encode","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.amf.primitives/-amf-null/encode.html","searchKeys":["encode","open override fun encode(buffer: ByteBuffer)","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.amf.primitives.AmfNull.encode"]},{"name":"open override fun encode(buffer: ByteBuffer)","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.amf.primitives.AmfNumber.encode","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.amf.primitives/-amf-number/encode.html","searchKeys":["encode","open override fun encode(buffer: ByteBuffer)","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.amf.primitives.AmfNumber.encode"]},{"name":"open override fun encode(buffer: ByteBuffer)","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.amf.primitives.AmfString.encode","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.amf.primitives/-amf-string/encode.html","searchKeys":["encode","open override fun encode(buffer: ByteBuffer)","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.amf.primitives.AmfString.encode"]},{"name":"open override fun flush()","description":"io.github.thibaultbee.streampack.core.elements.utils.ChunkedFileOutputStream.flush","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils/-chunked-file-output-stream/flush.html","searchKeys":["flush","open override fun flush()","io.github.thibaultbee.streampack.core.elements.utils.ChunkedFileOutputStream.flush"]},{"name":"open override fun get(capacity: Int): ByteBuffer","description":"io.github.thibaultbee.streampack.core.elements.utils.pool.ByteBufferPool.get","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.pool/-byte-buffer-pool/get.html","searchKeys":["get","open override fun get(capacity: Int): ByteBuffer","io.github.thibaultbee.streampack.core.elements.utils.pool.ByteBufferPool.get"]},{"name":"open override fun getInfo(descriptor: MediaDescriptor): IConfigurationInfo","description":"io.github.thibaultbee.streampack.core.streamers.single.AudioOnlySingleStreamer.getInfo","location":"streampack-core/io.github.thibaultbee.streampack.core.streamers.single/-audio-only-single-streamer/get-info.html","searchKeys":["getInfo","open override fun getInfo(descriptor: MediaDescriptor): IConfigurationInfo","io.github.thibaultbee.streampack.core.streamers.single.AudioOnlySingleStreamer.getInfo"]},{"name":"open override fun getInfo(descriptor: MediaDescriptor): IConfigurationInfo","description":"io.github.thibaultbee.streampack.core.streamers.single.SingleStreamer.getInfo","location":"streampack-core/io.github.thibaultbee.streampack.core.streamers.single/-single-streamer/get-info.html","searchKeys":["getInfo","open override fun getInfo(descriptor: MediaDescriptor): IConfigurationInfo","io.github.thibaultbee.streampack.core.streamers.single.SingleStreamer.getInfo"]},{"name":"open override fun getInfo(descriptor: MediaDescriptor): IConfigurationInfo","description":"io.github.thibaultbee.streampack.core.streamers.single.VideoOnlySingleStreamer.getInfo","location":"streampack-core/io.github.thibaultbee.streampack.core.streamers.single/-video-only-single-streamer/get-info.html","searchKeys":["getInfo","open override fun getInfo(descriptor: MediaDescriptor): IConfigurationInfo","io.github.thibaultbee.streampack.core.streamers.single.VideoOnlySingleStreamer.getInfo"]},{"name":"open override fun getInfo(type: MediaDescriptor.Type): CompositeEndpoint.EndpointInfo","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.CompositeEndpoint.getInfo","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites/-composite-endpoint/get-info.html","searchKeys":["getInfo","open override fun getInfo(type: MediaDescriptor.Type): CompositeEndpoint.EndpointInfo","io.github.thibaultbee.streampack.core.elements.endpoints.composites.CompositeEndpoint.getInfo"]},{"name":"open override fun getInfo(type: MediaDescriptor.Type): IEndpoint.IEndpointInfo","description":"io.github.thibaultbee.streampack.core.elements.endpoints.CombineEndpoint.getInfo","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints/-combine-endpoint/get-info.html","searchKeys":["getInfo","open override fun getInfo(type: MediaDescriptor.Type): IEndpoint.IEndpointInfo","io.github.thibaultbee.streampack.core.elements.endpoints.CombineEndpoint.getInfo"]},{"name":"open override fun getInfo(type: MediaDescriptor.Type): IEndpoint.IEndpointInfo","description":"io.github.thibaultbee.streampack.core.elements.endpoints.DynamicEndpoint.getInfo","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints/-dynamic-endpoint/get-info.html","searchKeys":["getInfo","open override fun getInfo(type: MediaDescriptor.Type): IEndpoint.IEndpointInfo","io.github.thibaultbee.streampack.core.elements.endpoints.DynamicEndpoint.getInfo"]},{"name":"open override fun getInfo(type: MediaDescriptor.Type): IEndpoint.IEndpointInfo","description":"io.github.thibaultbee.streampack.core.elements.endpoints.DynamicLocalEndpoint.getInfo","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints/-dynamic-local-endpoint/get-info.html","searchKeys":["getInfo","open override fun getInfo(type: MediaDescriptor.Type): IEndpoint.IEndpointInfo","io.github.thibaultbee.streampack.core.elements.endpoints.DynamicLocalEndpoint.getInfo"]},{"name":"open override fun getInfo(type: MediaDescriptor.Type): IEndpoint.IEndpointInfo","description":"io.github.thibaultbee.streampack.core.elements.endpoints.MediaMuxerEndpoint.getInfo","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints/-media-muxer-endpoint/get-info.html","searchKeys":["getInfo","open override fun getInfo(type: MediaDescriptor.Type): IEndpoint.IEndpointInfo","io.github.thibaultbee.streampack.core.elements.endpoints.MediaMuxerEndpoint.getInfo"]},{"name":"open override fun getRelativeRotationDegrees(targetRotation: Int, requiredMirroring: Boolean): Int","description":"io.github.thibaultbee.streampack.core.elements.processing.video.source.DefaultSourceInfoProvider.getRelativeRotationDegrees","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.processing.video.source/-default-source-info-provider/get-relative-rotation-degrees.html","searchKeys":["getRelativeRotationDegrees","open override fun getRelativeRotationDegrees(targetRotation: Int, requiredMirroring: Boolean): Int","io.github.thibaultbee.streampack.core.elements.processing.video.source.DefaultSourceInfoProvider.getRelativeRotationDegrees"]},{"name":"open override fun getRelativeRotationDegrees(targetRotation: Int, requiredMirroring: Boolean): Int","description":"io.github.thibaultbee.streampack.core.elements.sources.video.camera.CameraInfoProvider.getRelativeRotationDegrees","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.video.camera/-camera-info-provider/get-relative-rotation-degrees.html","searchKeys":["getRelativeRotationDegrees","open override fun getRelativeRotationDegrees(targetRotation: Int, requiredMirroring: Boolean): Int","io.github.thibaultbee.streampack.core.elements.sources.video.camera.CameraInfoProvider.getRelativeRotationDegrees"]},{"name":"open override fun getSupportedBitrates(mimeType: String): Range<Int>","description":"io.github.thibaultbee.streampack.core.streamers.infos.AudioStreamerConfigurationInfo.getSupportedBitrates","location":"streampack-core/io.github.thibaultbee.streampack.core.streamers.infos/-audio-streamer-configuration-info/get-supported-bitrates.html","searchKeys":["getSupportedBitrates","open override fun getSupportedBitrates(mimeType: String): Range<Int>","io.github.thibaultbee.streampack.core.streamers.infos.AudioStreamerConfigurationInfo.getSupportedBitrates"]},{"name":"open override fun getSupportedBitrates(mimeType: String): Range<Int>","description":"io.github.thibaultbee.streampack.core.streamers.infos.VideoStreamerConfigurationInfo.getSupportedBitrates","location":"streampack-core/io.github.thibaultbee.streampack.core.streamers.infos/-video-streamer-configuration-info/get-supported-bitrates.html","searchKeys":["getSupportedBitrates","open override fun getSupportedBitrates(mimeType: String): Range<Int>","io.github.thibaultbee.streampack.core.streamers.infos.VideoStreamerConfigurationInfo.getSupportedBitrates"]},{"name":"open override fun getSupportedByteFormats(): List<Int>","description":"io.github.thibaultbee.streampack.core.streamers.infos.AudioStreamerConfigurationInfo.getSupportedByteFormats","location":"streampack-core/io.github.thibaultbee.streampack.core.streamers.infos/-audio-streamer-configuration-info/get-supported-byte-formats.html","searchKeys":["getSupportedByteFormats","open override fun getSupportedByteFormats(): List<Int>","io.github.thibaultbee.streampack.core.streamers.infos.AudioStreamerConfigurationInfo.getSupportedByteFormats"]},{"name":"open override fun getSupportedInputChannelRange(mimeType: String): Range<Int>","description":"io.github.thibaultbee.streampack.core.streamers.infos.AudioStreamerConfigurationInfo.getSupportedInputChannelRange","location":"streampack-core/io.github.thibaultbee.streampack.core.streamers.infos/-audio-streamer-configuration-info/get-supported-input-channel-range.html","searchKeys":["getSupportedInputChannelRange","open override fun getSupportedInputChannelRange(mimeType: String): Range<Int>","io.github.thibaultbee.streampack.core.streamers.infos.AudioStreamerConfigurationInfo.getSupportedInputChannelRange"]},{"name":"open override fun getSupportedSampleRates(mimeType: String): List<Int>","description":"io.github.thibaultbee.streampack.core.streamers.infos.AudioStreamerConfigurationInfo.getSupportedSampleRates","location":"streampack-core/io.github.thibaultbee.streampack.core.streamers.infos/-audio-streamer-configuration-info/get-supported-sample-rates.html","searchKeys":["getSupportedSampleRates","open override fun getSupportedSampleRates(mimeType: String): List<Int>","io.github.thibaultbee.streampack.core.streamers.infos.AudioStreamerConfigurationInfo.getSupportedSampleRates"]},{"name":"open override fun getSurfaceSize(targetResolution: Size): Size","description":"io.github.thibaultbee.streampack.core.elements.processing.video.source.DefaultSourceInfoProvider.getSurfaceSize","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.processing.video.source/-default-source-info-provider/get-surface-size.html","searchKeys":["getSurfaceSize","open override fun getSurfaceSize(targetResolution: Size): Size","io.github.thibaultbee.streampack.core.elements.processing.video.source.DefaultSourceInfoProvider.getSurfaceSize"]},{"name":"open override fun getSurfaceSize(targetResolution: Size): Size","description":"io.github.thibaultbee.streampack.core.elements.sources.video.camera.CameraInfoProvider.getSurfaceSize","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.video.camera/-camera-info-provider/get-surface-size.html","searchKeys":["getSurfaceSize","open override fun getSurfaceSize(targetResolution: Size): Size","io.github.thibaultbee.streampack.core.elements.sources.video.camera.CameraInfoProvider.getSurfaceSize"]},{"name":"open override fun hashCode(): Int","description":"io.github.thibaultbee.streampack.core.elements.encoders.AudioCodecConfig.hashCode","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.encoders/-audio-codec-config/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","io.github.thibaultbee.streampack.core.elements.encoders.AudioCodecConfig.hashCode"]},{"name":"open override fun hashCode(): Int","description":"io.github.thibaultbee.streampack.core.elements.encoders.CodecConfig.hashCode","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.encoders/-codec-config/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","io.github.thibaultbee.streampack.core.elements.encoders.CodecConfig.hashCode"]},{"name":"open override fun hashCode(): Int","description":"io.github.thibaultbee.streampack.core.elements.encoders.VideoCodecConfig.hashCode","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.encoders/-video-codec-config/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","io.github.thibaultbee.streampack.core.elements.encoders.VideoCodecConfig.hashCode"]},{"name":"open override fun hashCode(): Int","description":"io.github.thibaultbee.streampack.core.elements.encoders.mediacodec.AudioEncoderConfig.hashCode","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.encoders.mediacodec/-audio-encoder-config/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","io.github.thibaultbee.streampack.core.elements.encoders.mediacodec.AudioEncoderConfig.hashCode"]},{"name":"open override fun hashCode(): Int","description":"io.github.thibaultbee.streampack.core.elements.encoders.mediacodec.EncoderConfig.hashCode","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.encoders.mediacodec/-encoder-config/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","io.github.thibaultbee.streampack.core.elements.encoders.mediacodec.EncoderConfig.hashCode"]},{"name":"open override fun hashCode(): Int","description":"io.github.thibaultbee.streampack.core.elements.encoders.mediacodec.VideoEncoderConfig.hashCode","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.encoders.mediacodec/-video-encoder-config/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","io.github.thibaultbee.streampack.core.elements.encoders.mediacodec.VideoEncoderConfig.hashCode"]},{"name":"open override fun hashCode(): Int","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.data.TSServiceInfo.hashCode","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.data/-t-s-service-info/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.data.TSServiceInfo.hashCode"]},{"name":"open override fun i(tag: String, message: String, tr: Throwable?)","description":"io.github.thibaultbee.streampack.core.logger.Logger.i","location":"streampack-core/io.github.thibaultbee.streampack.core.logger/-logger/i.html","searchKeys":["i","open override fun i(tag: String, message: String, tr: Throwable?)","io.github.thibaultbee.streampack.core.logger.Logger.i"]},{"name":"open override fun i(tag: String, message: String, tr: Throwable?)","description":"io.github.thibaultbee.streampack.core.logger.StreamPackLogger.i","location":"streampack-core/io.github.thibaultbee.streampack.core.logger/-stream-pack-logger/i.html","searchKeys":["i","open override fun i(tag: String, message: String, tr: Throwable?)","io.github.thibaultbee.streampack.core.logger.StreamPackLogger.i"]},{"name":"open override fun isSourceEquals(source: IAudioSourceInternal?): Boolean","description":"io.github.thibaultbee.streampack.core.elements.sources.audio.audiorecord.MediaProjectionAudioSourceFactory.isSourceEquals","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.audio.audiorecord/-media-projection-audio-source-factory/is-source-equals.html","searchKeys":["isSourceEquals","open override fun isSourceEquals(source: IAudioSourceInternal?): Boolean","io.github.thibaultbee.streampack.core.elements.sources.audio.audiorecord.MediaProjectionAudioSourceFactory.isSourceEquals"]},{"name":"open override fun isSourceEquals(source: IAudioSourceInternal?): Boolean","description":"io.github.thibaultbee.streampack.core.elements.sources.audio.audiorecord.MicrophoneSourceFactory.isSourceEquals","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.audio.audiorecord/-microphone-source-factory/is-source-equals.html","searchKeys":["isSourceEquals","open override fun isSourceEquals(source: IAudioSourceInternal?): Boolean","io.github.thibaultbee.streampack.core.elements.sources.audio.audiorecord.MicrophoneSourceFactory.isSourceEquals"]},{"name":"open override fun isSourceEquals(source: IVideoSourceInternal?): Boolean","description":"io.github.thibaultbee.streampack.core.elements.sources.video.bitmap.BitmapSourceFactory.isSourceEquals","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.video.bitmap/-bitmap-source-factory/is-source-equals.html","searchKeys":["isSourceEquals","open override fun isSourceEquals(source: IVideoSourceInternal?): Boolean","io.github.thibaultbee.streampack.core.elements.sources.video.bitmap.BitmapSourceFactory.isSourceEquals"]},{"name":"open override fun isSourceEquals(source: IVideoSourceInternal?): Boolean","description":"io.github.thibaultbee.streampack.core.elements.sources.video.camera.CameraSourceFactory.isSourceEquals","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.video.camera/-camera-source-factory/is-source-equals.html","searchKeys":["isSourceEquals","open override fun isSourceEquals(source: IVideoSourceInternal?): Boolean","io.github.thibaultbee.streampack.core.elements.sources.video.camera.CameraSourceFactory.isSourceEquals"]},{"name":"open override fun isSourceEquals(source: IVideoSourceInternal?): Boolean","description":"io.github.thibaultbee.streampack.core.elements.sources.video.mediaprojection.MediaProjectionVideoSourceFactory.isSourceEquals","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.video.mediaprojection/-media-projection-video-source-factory/is-source-equals.html","searchKeys":["isSourceEquals","open override fun isSourceEquals(source: IVideoSourceInternal?): Boolean","io.github.thibaultbee.streampack.core.elements.sources.video.mediaprojection.MediaProjectionVideoSourceFactory.isSourceEquals"]},{"name":"open override fun mustWriteSegment(frame: Frame): Boolean","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models.DefaultMP4Segmenter.mustWriteSegment","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models/-default-m-p4-segmenter/must-write-segment.html","searchKeys":["mustWriteSegment","open override fun mustWriteSegment(frame: Frame): Boolean","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models.DefaultMP4Segmenter.mustWriteSegment"]},{"name":"open override fun newBitrateRegulatorController(pipelineOutput: IEncodingPipelineOutput): BitrateRegulatorController","description":"io.github.thibaultbee.streampack.core.regulator.controllers.DummyBitrateRegulatorController.Factory.newBitrateRegulatorController","location":"streampack-core/io.github.thibaultbee.streampack.core.regulator.controllers/-dummy-bitrate-regulator-controller/-factory/new-bitrate-regulator-controller.html","searchKeys":["newBitrateRegulatorController","open override fun newBitrateRegulatorController(pipelineOutput: IEncodingPipelineOutput): BitrateRegulatorController","io.github.thibaultbee.streampack.core.regulator.controllers.DummyBitrateRegulatorController.Factory.newBitrateRegulatorController"]},{"name":"open override fun onDestroy(owner: LifecycleOwner)","description":"io.github.thibaultbee.streampack.core.streamers.lifecycle.StreamerActivityLifeCycleObserver.onDestroy","location":"streampack-core/io.github.thibaultbee.streampack.core.streamers.lifecycle/-streamer-activity-life-cycle-observer/on-destroy.html","searchKeys":["onDestroy","open override fun onDestroy(owner: LifecycleOwner)","io.github.thibaultbee.streampack.core.streamers.lifecycle.StreamerActivityLifeCycleObserver.onDestroy"]},{"name":"open override fun onPause(owner: LifecycleOwner)","description":"io.github.thibaultbee.streampack.core.streamers.lifecycle.StreamerViewModelLifeCycleObserver.onPause","location":"streampack-core/io.github.thibaultbee.streampack.core.streamers.lifecycle/-streamer-view-model-life-cycle-observer/on-pause.html","searchKeys":["onPause","open override fun onPause(owner: LifecycleOwner)","io.github.thibaultbee.streampack.core.streamers.lifecycle.StreamerViewModelLifeCycleObserver.onPause"]},{"name":"open override fun processFrame(frame: RawFrame): RawFrame","description":"io.github.thibaultbee.streampack.core.elements.processing.audio.AudioFrameProcessor.processFrame","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.processing.audio/-audio-frame-processor/process-frame.html","searchKeys":["processFrame","open override fun processFrame(frame: RawFrame): RawFrame","io.github.thibaultbee.streampack.core.elements.processing.audio.AudioFrameProcessor.processFrame"]},{"name":"open override fun processFrame(frame: RawFrame): RawFrame","description":"io.github.thibaultbee.streampack.core.elements.processing.audio.MuteEffect.processFrame","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.processing.audio/-mute-effect/process-frame.html","searchKeys":["processFrame","open override fun processFrame(frame: RawFrame): RawFrame","io.github.thibaultbee.streampack.core.elements.processing.audio.MuteEffect.processFrame"]},{"name":"open override fun put(buffer: ByteBuffer)","description":"io.github.thibaultbee.streampack.core.elements.utils.pool.ByteBufferPool.put","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.pool/-byte-buffer-pool/put.html","searchKeys":["put","open override fun put(buffer: ByteBuffer)","io.github.thibaultbee.streampack.core.elements.utils.pool.ByteBufferPool.put"]},{"name":"open override fun release()","description":"io.github.thibaultbee.streampack.core.elements.encoders.mediacodec.MediaCodecEncoder.release","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.encoders.mediacodec/-media-codec-encoder/release.html","searchKeys":["release","open override fun release()","io.github.thibaultbee.streampack.core.elements.encoders.mediacodec.MediaCodecEncoder.release"]},{"name":"open override fun release()","description":"io.github.thibaultbee.streampack.core.elements.endpoints.IEndpointInternal.release","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints/-i-endpoint-internal/release.html","searchKeys":["release","open override fun release()","io.github.thibaultbee.streampack.core.elements.endpoints.IEndpointInternal.release"]},{"name":"open override fun release()","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.FlvMuxer.release","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv/-flv-muxer/release.html","searchKeys":["release","open override fun release()","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.FlvMuxer.release"]},{"name":"open override fun release()","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.Mp4Muxer.release","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4/-mp4-muxer/release.html","searchKeys":["release","open override fun release()","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.Mp4Muxer.release"]},{"name":"open override fun release()","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.TsMuxer.release","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts/-ts-muxer/release.html","searchKeys":["release","open override fun release()","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.TsMuxer.release"]},{"name":"open override fun removeBitrateRegulatorController()","description":"io.github.thibaultbee.streampack.core.streamers.single.AudioOnlySingleStreamer.removeBitrateRegulatorController","location":"streampack-core/io.github.thibaultbee.streampack.core.streamers.single/-audio-only-single-streamer/remove-bitrate-regulator-controller.html","searchKeys":["removeBitrateRegulatorController","open override fun removeBitrateRegulatorController()","io.github.thibaultbee.streampack.core.streamers.single.AudioOnlySingleStreamer.removeBitrateRegulatorController"]},{"name":"open override fun removeBitrateRegulatorController()","description":"io.github.thibaultbee.streampack.core.streamers.single.SingleStreamer.removeBitrateRegulatorController","location":"streampack-core/io.github.thibaultbee.streampack.core.streamers.single/-single-streamer/remove-bitrate-regulator-controller.html","searchKeys":["removeBitrateRegulatorController","open override fun removeBitrateRegulatorController()","io.github.thibaultbee.streampack.core.streamers.single.SingleStreamer.removeBitrateRegulatorController"]},{"name":"open override fun removeBitrateRegulatorController()","description":"io.github.thibaultbee.streampack.core.streamers.single.VideoOnlySingleStreamer.removeBitrateRegulatorController","location":"streampack-core/io.github.thibaultbee.streampack.core.streamers.single/-video-only-single-streamer/remove-bitrate-regulator-controller.html","searchKeys":["removeBitrateRegulatorController","open override fun removeBitrateRegulatorController()","io.github.thibaultbee.streampack.core.streamers.single.VideoOnlySingleStreamer.removeBitrateRegulatorController"]},{"name":"open override fun removeListener(listener: IRotationProvider.Listener)","description":"io.github.thibaultbee.streampack.core.streamers.orientation.DisplayRotationProvider.removeListener","location":"streampack-core/io.github.thibaultbee.streampack.core.streamers.orientation/-display-rotation-provider/remove-listener.html","searchKeys":["removeListener","open override fun removeListener(listener: IRotationProvider.Listener)","io.github.thibaultbee.streampack.core.streamers.orientation.DisplayRotationProvider.removeListener"]},{"name":"open override fun removeListener(listener: IRotationProvider.Listener)","description":"io.github.thibaultbee.streampack.core.streamers.orientation.RotationProvider.removeListener","location":"streampack-core/io.github.thibaultbee.streampack.core.streamers.orientation/-rotation-provider/remove-listener.html","searchKeys":["removeListener","open override fun removeListener(listener: IRotationProvider.Listener)","io.github.thibaultbee.streampack.core.streamers.orientation.RotationProvider.removeListener"]},{"name":"open override fun removeListener(listener: IRotationProvider.Listener)","description":"io.github.thibaultbee.streampack.core.streamers.orientation.SensorRotationProvider.removeListener","location":"streampack-core/io.github.thibaultbee.streampack.core.streamers.orientation/-sensor-rotation-provider/remove-listener.html","searchKeys":["removeListener","open override fun removeListener(listener: IRotationProvider.Listener)","io.github.thibaultbee.streampack.core.streamers.orientation.SensorRotationProvider.removeListener"]},{"name":"open override fun requestKeyFrame()","description":"io.github.thibaultbee.streampack.core.elements.encoders.mediacodec.MediaCodecEncoder.requestKeyFrame","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.encoders.mediacodec/-media-codec-encoder/request-key-frame.html","searchKeys":["requestKeyFrame","open override fun requestKeyFrame()","io.github.thibaultbee.streampack.core.elements.encoders.mediacodec.MediaCodecEncoder.requestKeyFrame"]},{"name":"open override fun reset()","description":"io.github.thibaultbee.streampack.core.elements.encoders.mediacodec.MediaCodecEncoder.reset","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.encoders.mediacodec/-media-codec-encoder/reset.html","searchKeys":["reset","open override fun reset()","io.github.thibaultbee.streampack.core.elements.encoders.mediacodec.MediaCodecEncoder.reset"]},{"name":"open override fun setListener(listener: IEncoderInternal.IListener, listenerExecutor: Executor)","description":"io.github.thibaultbee.streampack.core.elements.encoders.mediacodec.MediaCodecEncoder.setListener","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.encoders.mediacodec/-media-codec-encoder/set-listener.html","searchKeys":["setListener","open override fun setListener(listener: IEncoderInternal.IListener, listenerExecutor: Executor)","io.github.thibaultbee.streampack.core.elements.encoders.mediacodec.MediaCodecEncoder.setListener"]},{"name":"open override fun start()","description":"io.github.thibaultbee.streampack.core.regulator.controllers.DummyBitrateRegulatorController.start","location":"streampack-core/io.github.thibaultbee.streampack.core.regulator.controllers/-dummy-bitrate-regulator-controller/start.html","searchKeys":["start","open override fun start()","io.github.thibaultbee.streampack.core.regulator.controllers.DummyBitrateRegulatorController.start"]},{"name":"open override fun startStream()","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.FlvMuxer.startStream","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv/-flv-muxer/start-stream.html","searchKeys":["startStream","open override fun startStream()","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.FlvMuxer.startStream"]},{"name":"open override fun startStream()","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.Mp4Muxer.startStream","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4/-mp4-muxer/start-stream.html","searchKeys":["startStream","open override fun startStream()","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.Mp4Muxer.startStream"]},{"name":"open override fun startStream()","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.TsMuxer.startStream","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts/-ts-muxer/start-stream.html","searchKeys":["startStream","open override fun startStream()","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.TsMuxer.startStream"]},{"name":"open override fun stop()","description":"io.github.thibaultbee.streampack.core.regulator.controllers.DummyBitrateRegulatorController.stop","location":"streampack-core/io.github.thibaultbee.streampack.core.regulator.controllers/-dummy-bitrate-regulator-controller/stop.html","searchKeys":["stop","open override fun stop()","io.github.thibaultbee.streampack.core.regulator.controllers.DummyBitrateRegulatorController.stop"]},{"name":"open override fun stopStream()","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.FlvMuxer.stopStream","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv/-flv-muxer/stop-stream.html","searchKeys":["stopStream","open override fun stopStream()","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.FlvMuxer.stopStream"]},{"name":"open override fun stopStream()","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.Mp4Muxer.stopStream","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4/-mp4-muxer/stop-stream.html","searchKeys":["stopStream","open override fun stopStream()","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.Mp4Muxer.stopStream"]},{"name":"open override fun stopStream()","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.TsMuxer.stopStream","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts/-ts-muxer/stop-stream.html","searchKeys":["stopStream","open override fun stopStream()","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.TsMuxer.stopStream"]},{"name":"open override fun toByteBuffer(): ByteBuffer","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.descriptors.AdaptationField.toByteBuffer","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.descriptors/-adaptation-field/to-byte-buffer.html","searchKeys":["toByteBuffer","open override fun toByteBuffer(): ByteBuffer","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.descriptors.AdaptationField.toByteBuffer"]},{"name":"open override fun toByteBuffer(): ByteBuffer","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets.Pat.toByteBuffer","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets/-pat/to-byte-buffer.html","searchKeys":["toByteBuffer","open override fun toByteBuffer(): ByteBuffer","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets.Pat.toByteBuffer"]},{"name":"open override fun toByteBuffer(): ByteBuffer","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets.PesHeader.toByteBuffer","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets/-pes-header/to-byte-buffer.html","searchKeys":["toByteBuffer","open override fun toByteBuffer(): ByteBuffer","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets.PesHeader.toByteBuffer"]},{"name":"open override fun toByteBuffer(): ByteBuffer","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets.Pmt.toByteBuffer","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets/-pmt/to-byte-buffer.html","searchKeys":["toByteBuffer","open override fun toByteBuffer(): ByteBuffer","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets.Pmt.toByteBuffer"]},{"name":"open override fun toByteBuffer(): ByteBuffer","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets.Sdt.toByteBuffer","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets/-sdt/to-byte-buffer.html","searchKeys":["toByteBuffer","open override fun toByteBuffer(): ByteBuffer","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets.Sdt.toByteBuffer"]},{"name":"open override fun toByteBuffer(): ByteBuffer","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets.TableHeader.toByteBuffer","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets/-table-header/to-byte-buffer.html","searchKeys":["toByteBuffer","open override fun toByteBuffer(): ByteBuffer","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets.TableHeader.toByteBuffer"]},{"name":"open override fun toString(): String","description":"io.github.thibaultbee.streampack.core.configuration.mediadescriptor.MediaDescriptor.toString","location":"streampack-core/io.github.thibaultbee.streampack.core.configuration.mediadescriptor/-media-descriptor/to-string.html","searchKeys":["toString","open override fun toString(): String","io.github.thibaultbee.streampack.core.configuration.mediadescriptor.MediaDescriptor.toString"]},{"name":"open override fun toString(): String","description":"io.github.thibaultbee.streampack.core.elements.data.Packet.toString","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.data/-packet/to-string.html","searchKeys":["toString","open override fun toString(): String","io.github.thibaultbee.streampack.core.elements.data.Packet.toString"]},{"name":"open override fun toString(): String","description":"io.github.thibaultbee.streampack.core.elements.encoders.AudioCodecConfig.toString","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.encoders/-audio-codec-config/to-string.html","searchKeys":["toString","open override fun toString(): String","io.github.thibaultbee.streampack.core.elements.encoders.AudioCodecConfig.toString"]},{"name":"open override fun toString(): String","description":"io.github.thibaultbee.streampack.core.elements.encoders.CodecConfig.toString","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.encoders/-codec-config/to-string.html","searchKeys":["toString","open override fun toString(): String","io.github.thibaultbee.streampack.core.elements.encoders.CodecConfig.toString"]},{"name":"open override fun toString(): String","description":"io.github.thibaultbee.streampack.core.elements.encoders.VideoCodecConfig.toString","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.encoders/-video-codec-config/to-string.html","searchKeys":["toString","open override fun toString(): String","io.github.thibaultbee.streampack.core.elements.encoders.VideoCodecConfig.toString"]},{"name":"open override fun toString(): String","description":"io.github.thibaultbee.streampack.core.elements.processing.video.source.DefaultSourceInfoProvider.toString","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.processing.video.source/-default-source-info-provider/to-string.html","searchKeys":["toString","open override fun toString(): String","io.github.thibaultbee.streampack.core.elements.processing.video.source.DefaultSourceInfoProvider.toString"]},{"name":"open override fun toString(): String","description":"io.github.thibaultbee.streampack.core.elements.sources.video.camera.CameraInfoProvider.toString","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.video.camera/-camera-info-provider/to-string.html","searchKeys":["toString","open override fun toString(): String","io.github.thibaultbee.streampack.core.elements.sources.video.camera.CameraInfoProvider.toString"]},{"name":"open override fun toString(): String","description":"io.github.thibaultbee.streampack.core.elements.utils.av.FourCC.toString","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av/-four-c-c/to-string.html","searchKeys":["toString","open override fun toString(): String","io.github.thibaultbee.streampack.core.elements.utils.av.FourCC.toString"]},{"name":"open override fun updateTransformMatrix(output: FloatArray, input: FloatArray)","description":"io.github.thibaultbee.streampack.core.elements.processing.video.outputs.IdentitySurfaceOutput.updateTransformMatrix","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.processing.video.outputs/-identity-surface-output/update-transform-matrix.html","searchKeys":["updateTransformMatrix","open override fun updateTransformMatrix(output: FloatArray, input: FloatArray)","io.github.thibaultbee.streampack.core.elements.processing.video.outputs.IdentitySurfaceOutput.updateTransformMatrix"]},{"name":"open override fun updateTransformMatrix(output: FloatArray, input: FloatArray)","description":"io.github.thibaultbee.streampack.core.elements.processing.video.outputs.SurfaceOutput.updateTransformMatrix","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.processing.video.outputs/-surface-output/update-transform-matrix.html","searchKeys":["updateTransformMatrix","open override fun updateTransformMatrix(output: FloatArray, input: FloatArray)","io.github.thibaultbee.streampack.core.elements.processing.video.outputs.SurfaceOutput.updateTransformMatrix"]},{"name":"open override fun use()","description":"io.github.thibaultbee.streampack.core.elements.processing.video.utils.GLUtils.SamplerShaderProgram.use","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.processing.video.utils/-g-l-utils/-sampler-shader-program/use.html","searchKeys":["use","open override fun use()","io.github.thibaultbee.streampack.core.elements.processing.video.utils.GLUtils.SamplerShaderProgram.use"]},{"name":"open override fun v(tag: String, message: String, tr: Throwable?)","description":"io.github.thibaultbee.streampack.core.logger.Logger.v","location":"streampack-core/io.github.thibaultbee.streampack.core.logger/-logger/v.html","searchKeys":["v","open override fun v(tag: String, message: String, tr: Throwable?)","io.github.thibaultbee.streampack.core.logger.Logger.v"]},{"name":"open override fun v(tag: String, message: String, tr: Throwable?)","description":"io.github.thibaultbee.streampack.core.logger.StreamPackLogger.v","location":"streampack-core/io.github.thibaultbee.streampack.core.logger/-stream-pack-logger/v.html","searchKeys":["v","open override fun v(tag: String, message: String, tr: Throwable?)","io.github.thibaultbee.streampack.core.logger.StreamPackLogger.v"]},{"name":"open override fun w(tag: String, message: String, tr: Throwable?)","description":"io.github.thibaultbee.streampack.core.logger.Logger.w","location":"streampack-core/io.github.thibaultbee.streampack.core.logger/-logger/w.html","searchKeys":["w","open override fun w(tag: String, message: String, tr: Throwable?)","io.github.thibaultbee.streampack.core.logger.Logger.w"]},{"name":"open override fun w(tag: String, message: String, tr: Throwable?)","description":"io.github.thibaultbee.streampack.core.logger.StreamPackLogger.w","location":"streampack-core/io.github.thibaultbee.streampack.core.logger/-stream-pack-logger/w.html","searchKeys":["w","open override fun w(tag: String, message: String, tr: Throwable?)","io.github.thibaultbee.streampack.core.logger.StreamPackLogger.w"]},{"name":"open override fun write(b: ByteArray)","description":"io.github.thibaultbee.streampack.core.elements.utils.ChunkedFileOutputStream.write","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils/-chunked-file-output-stream/write.html","searchKeys":["write","open override fun write(b: ByteArray)","io.github.thibaultbee.streampack.core.elements.utils.ChunkedFileOutputStream.write"]},{"name":"open override fun write(b: ByteArray, offset: Int, len: Int)","description":"io.github.thibaultbee.streampack.core.elements.utils.ChunkedFileOutputStream.write","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils/-chunked-file-output-stream/write.html","searchKeys":["write","open override fun write(b: ByteArray, offset: Int, len: Int)","io.github.thibaultbee.streampack.core.elements.utils.ChunkedFileOutputStream.write"]},{"name":"open override fun write(frame: Frame, streamPid: Int)","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.FlvMuxer.write","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv/-flv-muxer/write.html","searchKeys":["write","open override fun write(frame: Frame, streamPid: Int)","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.FlvMuxer.write"]},{"name":"open override fun write(frame: Frame, streamPid: Int)","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.Mp4Muxer.write","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4/-mp4-muxer/write.html","searchKeys":["write","open override fun write(frame: Frame, streamPid: Int)","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.Mp4Muxer.write"]},{"name":"open override fun write(frame: Frame, streamPid: Int)","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.TsMuxer.write","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts/-ts-muxer/write.html","searchKeys":["write","open override fun write(frame: Frame, streamPid: Int)","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.TsMuxer.write"]},{"name":"open override fun write(i: Int)","description":"io.github.thibaultbee.streampack.core.elements.utils.ChunkedFileOutputStream.write","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils/-chunked-file-output-stream/write.html","searchKeys":["write","open override fun write(i: Int)","io.github.thibaultbee.streampack.core.elements.utils.ChunkedFileOutputStream.write"]},{"name":"open override fun write(output: BitBuffer)","description":"io.github.thibaultbee.streampack.core.elements.utils.av.audio.AudioSpecificConfig.AudioSpecificConfigExtension.write","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.audio/-audio-specific-config/-audio-specific-config-extension/write.html","searchKeys":["write","open override fun write(output: BitBuffer)","io.github.thibaultbee.streampack.core.elements.utils.av.audio.AudioSpecificConfig.AudioSpecificConfigExtension.write"]},{"name":"open override fun write(output: BitBuffer)","description":"io.github.thibaultbee.streampack.core.elements.utils.av.audio.AudioSpecificConfig.write","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.audio/-audio-specific-config/write.html","searchKeys":["write","open override fun write(output: BitBuffer)","io.github.thibaultbee.streampack.core.elements.utils.av.audio.AudioSpecificConfig.write"]},{"name":"open override fun write(output: BitBuffer)","description":"io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.ProgramConfigElement.write","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac/-program-config-element/write.html","searchKeys":["write","open override fun write(output: BitBuffer)","io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.ProgramConfigElement.write"]},{"name":"open override fun write(output: BitBuffer)","description":"io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.StreamMuxConfig.write","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac/-stream-mux-config/write.html","searchKeys":["write","open override fun write(output: BitBuffer)","io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.StreamMuxConfig.write"]},{"name":"open override fun write(output: BitBuffer)","description":"io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.config.ELDSpecificConfig.LdSbrHeader.write","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.config/-e-l-d-specific-config/-ld-sbr-header/write.html","searchKeys":["write","open override fun write(output: BitBuffer)","io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.config.ELDSpecificConfig.LdSbrHeader.write"]},{"name":"open override fun write(output: BitBuffer)","description":"io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.config.ELDSpecificConfig.write","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.config/-e-l-d-specific-config/write.html","searchKeys":["write","open override fun write(output: BitBuffer)","io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.config.ELDSpecificConfig.write"]},{"name":"open override fun write(output: BitBuffer)","description":"io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.config.GASpecificConfig.write","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.config/-g-a-specific-config/write.html","searchKeys":["write","open override fun write(output: BitBuffer)","io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.config.GASpecificConfig.write"]},{"name":"open override fun write(output: BitBuffer)","description":"io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.config.SbrHeader.write","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.config/-sbr-header/write.html","searchKeys":["write","open override fun write(output: BitBuffer)","io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.config.SbrHeader.write"]},{"name":"open override fun write(output: ByteBuffer)","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.AV1CodecConfigurationBox1.write","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-a-v1-codec-configuration-box1/write.html","searchKeys":["write","open override fun write(output: ByteBuffer)","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.AV1CodecConfigurationBox1.write"]},{"name":"open override fun write(output: ByteBuffer)","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.AV1CodecConfigurationBox2.write","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-a-v1-codec-configuration-box2/write.html","searchKeys":["write","open override fun write(output: ByteBuffer)","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.AV1CodecConfigurationBox2.write"]},{"name":"open override fun write(output: ByteBuffer)","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.AVCConfigurationBox.write","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-a-v-c-configuration-box/write.html","searchKeys":["write","open override fun write(output: ByteBuffer)","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.AVCConfigurationBox.write"]},{"name":"open override fun write(output: ByteBuffer)","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.AudioSampleEntry.write","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-audio-sample-entry/write.html","searchKeys":["write","open override fun write(output: ByteBuffer)","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.AudioSampleEntry.write"]},{"name":"open override fun write(output: ByteBuffer)","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.BitRateBox.write","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-bit-rate-box/write.html","searchKeys":["write","open override fun write(output: ByteBuffer)","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.BitRateBox.write"]},{"name":"open override fun write(output: ByteBuffer)","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.Box.write","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-box/write.html","searchKeys":["write","open override fun write(output: ByteBuffer)","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.Box.write"]},{"name":"open override fun write(output: ByteBuffer)","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.ChunkLargeOffsetBox.write","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-chunk-large-offset-box/write.html","searchKeys":["write","open override fun write(output: ByteBuffer)","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.ChunkLargeOffsetBox.write"]},{"name":"open override fun write(output: ByteBuffer)","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.ChunkOffsetBox.write","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-chunk-offset-box/write.html","searchKeys":["write","open override fun write(output: ByteBuffer)","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.ChunkOffsetBox.write"]},{"name":"open override fun write(output: ByteBuffer)","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.CleanApertureBox.write","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-clean-aperture-box/write.html","searchKeys":["write","open override fun write(output: ByteBuffer)","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.CleanApertureBox.write"]},{"name":"open override fun write(output: ByteBuffer)","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.DataEntryUrlBox.write","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-data-entry-url-box/write.html","searchKeys":["write","open override fun write(output: ByteBuffer)","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.DataEntryUrlBox.write"]},{"name":"open override fun write(output: ByteBuffer)","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.DataEntryUrnBox.write","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-data-entry-urn-box/write.html","searchKeys":["write","open override fun write(output: ByteBuffer)","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.DataEntryUrnBox.write"]},{"name":"open override fun write(output: ByteBuffer)","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.DataInformationBox.write","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-data-information-box/write.html","searchKeys":["write","open override fun write(output: ByteBuffer)","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.DataInformationBox.write"]},{"name":"open override fun write(output: ByteBuffer)","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.DataReferenceBox.write","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-data-reference-box/write.html","searchKeys":["write","open override fun write(output: ByteBuffer)","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.DataReferenceBox.write"]},{"name":"open override fun write(output: ByteBuffer)","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.ESDSBox.write","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-e-s-d-s-box/write.html","searchKeys":["write","open override fun write(output: ByteBuffer)","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.ESDSBox.write"]},{"name":"open override fun write(output: ByteBuffer)","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.FileTypeBox.write","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-file-type-box/write.html","searchKeys":["write","open override fun write(output: ByteBuffer)","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.FileTypeBox.write"]},{"name":"open override fun write(output: ByteBuffer)","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.FullBox.write","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-full-box/write.html","searchKeys":["write","open override fun write(output: ByteBuffer)","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.FullBox.write"]},{"name":"open override fun write(output: ByteBuffer)","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.HEVCConfigurationBox.write","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-h-e-v-c-configuration-box/write.html","searchKeys":["write","open override fun write(output: ByteBuffer)","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.HEVCConfigurationBox.write"]},{"name":"open override fun write(output: ByteBuffer)","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.HandlerBox.write","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-handler-box/write.html","searchKeys":["write","open override fun write(output: ByteBuffer)","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.HandlerBox.write"]},{"name":"open override fun write(output: ByteBuffer)","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.MediaBox.write","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-media-box/write.html","searchKeys":["write","open override fun write(output: ByteBuffer)","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.MediaBox.write"]},{"name":"open override fun write(output: ByteBuffer)","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.MediaHeaderBox.write","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-media-header-box/write.html","searchKeys":["write","open override fun write(output: ByteBuffer)","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.MediaHeaderBox.write"]},{"name":"open override fun write(output: ByteBuffer)","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.MediaInformationBox.write","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-media-information-box/write.html","searchKeys":["write","open override fun write(output: ByteBuffer)","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.MediaInformationBox.write"]},{"name":"open override fun write(output: ByteBuffer)","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.MovieBox.write","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-movie-box/write.html","searchKeys":["write","open override fun write(output: ByteBuffer)","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.MovieBox.write"]},{"name":"open override fun write(output: ByteBuffer)","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.MovieExtendsBox.write","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-movie-extends-box/write.html","searchKeys":["write","open override fun write(output: ByteBuffer)","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.MovieExtendsBox.write"]},{"name":"open override fun write(output: ByteBuffer)","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.MovieFragmentBox.write","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-movie-fragment-box/write.html","searchKeys":["write","open override fun write(output: ByteBuffer)","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.MovieFragmentBox.write"]},{"name":"open override fun write(output: ByteBuffer)","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.MovieFragmentHeaderBox.write","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-movie-fragment-header-box/write.html","searchKeys":["write","open override fun write(output: ByteBuffer)","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.MovieFragmentHeaderBox.write"]},{"name":"open override fun write(output: ByteBuffer)","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.MovieFragmentRandomAccessBox.write","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-movie-fragment-random-access-box/write.html","searchKeys":["write","open override fun write(output: ByteBuffer)","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.MovieFragmentRandomAccessBox.write"]},{"name":"open override fun write(output: ByteBuffer)","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.MovieFragmentRandomAccessOffsetBox.write","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-movie-fragment-random-access-offset-box/write.html","searchKeys":["write","open override fun write(output: ByteBuffer)","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.MovieFragmentRandomAccessOffsetBox.write"]},{"name":"open override fun write(output: ByteBuffer)","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.MovieHeaderBox.write","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-movie-header-box/write.html","searchKeys":["write","open override fun write(output: ByteBuffer)","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.MovieHeaderBox.write"]},{"name":"open override fun write(output: ByteBuffer)","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.OpusSpecificBox.write","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-opus-specific-box/write.html","searchKeys":["write","open override fun write(output: ByteBuffer)","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.OpusSpecificBox.write"]},{"name":"open override fun write(output: ByteBuffer)","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.PixelAspectRatioBox.write","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-pixel-aspect-ratio-box/write.html","searchKeys":["write","open override fun write(output: ByteBuffer)","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.PixelAspectRatioBox.write"]},{"name":"open override fun write(output: ByteBuffer)","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.SampleDescriptionBox.write","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-sample-description-box/write.html","searchKeys":["write","open override fun write(output: ByteBuffer)","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.SampleDescriptionBox.write"]},{"name":"open override fun write(output: ByteBuffer)","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.SampleEntry.write","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-sample-entry/write.html","searchKeys":["write","open override fun write(output: ByteBuffer)","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.SampleEntry.write"]},{"name":"open override fun write(output: ByteBuffer)","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.SampleSizeBox.write","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-sample-size-box/write.html","searchKeys":["write","open override fun write(output: ByteBuffer)","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.SampleSizeBox.write"]},{"name":"open override fun write(output: ByteBuffer)","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.SampleTableBox.write","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-sample-table-box/write.html","searchKeys":["write","open override fun write(output: ByteBuffer)","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.SampleTableBox.write"]},{"name":"open override fun write(output: ByteBuffer)","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.SampleToChunkBox.Entry.write","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-sample-to-chunk-box/-entry/write.html","searchKeys":["write","open override fun write(output: ByteBuffer)","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.SampleToChunkBox.Entry.write"]},{"name":"open override fun write(output: ByteBuffer)","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.SampleToChunkBox.write","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-sample-to-chunk-box/write.html","searchKeys":["write","open override fun write(output: ByteBuffer)","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.SampleToChunkBox.write"]},{"name":"open override fun write(output: ByteBuffer)","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.SoundMediaHeaderBox.write","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-sound-media-header-box/write.html","searchKeys":["write","open override fun write(output: ByteBuffer)","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.SoundMediaHeaderBox.write"]},{"name":"open override fun write(output: ByteBuffer)","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.SyncSampleBox.write","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-sync-sample-box/write.html","searchKeys":["write","open override fun write(output: ByteBuffer)","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.SyncSampleBox.write"]},{"name":"open override fun write(output: ByteBuffer)","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.TimeToSampleBox.Entry.write","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-time-to-sample-box/-entry/write.html","searchKeys":["write","open override fun write(output: ByteBuffer)","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.TimeToSampleBox.Entry.write"]},{"name":"open override fun write(output: ByteBuffer)","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.TimeToSampleBox.write","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-time-to-sample-box/write.html","searchKeys":["write","open override fun write(output: ByteBuffer)","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.TimeToSampleBox.write"]},{"name":"open override fun write(output: ByteBuffer)","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.TrackBox.write","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-track-box/write.html","searchKeys":["write","open override fun write(output: ByteBuffer)","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.TrackBox.write"]},{"name":"open override fun write(output: ByteBuffer)","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.TrackExtendsBox.write","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-track-extends-box/write.html","searchKeys":["write","open override fun write(output: ByteBuffer)","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.TrackExtendsBox.write"]},{"name":"open override fun write(output: ByteBuffer)","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.TrackFragmentBaseMediaDecodeTimeBox.write","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-track-fragment-base-media-decode-time-box/write.html","searchKeys":["write","open override fun write(output: ByteBuffer)","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.TrackFragmentBaseMediaDecodeTimeBox.write"]},{"name":"open override fun write(output: ByteBuffer)","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.TrackFragmentBox.write","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-track-fragment-box/write.html","searchKeys":["write","open override fun write(output: ByteBuffer)","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.TrackFragmentBox.write"]},{"name":"open override fun write(output: ByteBuffer)","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.TrackFragmentHeaderBox.write","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-track-fragment-header-box/write.html","searchKeys":["write","open override fun write(output: ByteBuffer)","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.TrackFragmentHeaderBox.write"]},{"name":"open override fun write(output: ByteBuffer)","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.TrackFragmentRandomAccessBox.Entry.write","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-track-fragment-random-access-box/-entry/write.html","searchKeys":["write","open override fun write(output: ByteBuffer)","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.TrackFragmentRandomAccessBox.Entry.write"]},{"name":"open override fun write(output: ByteBuffer)","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.TrackFragmentRandomAccessBox.write","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-track-fragment-random-access-box/write.html","searchKeys":["write","open override fun write(output: ByteBuffer)","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.TrackFragmentRandomAccessBox.write"]},{"name":"open override fun write(output: ByteBuffer)","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.TrackHeaderBox.write","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-track-header-box/write.html","searchKeys":["write","open override fun write(output: ByteBuffer)","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.TrackHeaderBox.write"]},{"name":"open override fun write(output: ByteBuffer)","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.TrackRunBox.Entry.write","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-track-run-box/-entry/write.html","searchKeys":["write","open override fun write(output: ByteBuffer)","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.TrackRunBox.Entry.write"]},{"name":"open override fun write(output: ByteBuffer)","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.TrackRunBox.write","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-track-run-box/write.html","searchKeys":["write","open override fun write(output: ByteBuffer)","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.TrackRunBox.write"]},{"name":"open override fun write(output: ByteBuffer)","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.VPCodecConfigurationBox.write","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-v-p-codec-configuration-box/write.html","searchKeys":["write","open override fun write(output: ByteBuffer)","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.VPCodecConfigurationBox.write"]},{"name":"open override fun write(output: ByteBuffer)","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.VideoMediaHeaderBox.write","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-video-media-header-box/write.html","searchKeys":["write","open override fun write(output: ByteBuffer)","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.VideoMediaHeaderBox.write"]},{"name":"open override fun write(output: ByteBuffer)","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.VisualSampleEntry.write","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-visual-sample-entry/write.html","searchKeys":["write","open override fun write(output: ByteBuffer)","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.VisualSampleEntry.write"]},{"name":"open override fun write(output: ByteBuffer)","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.utils.av.OpusControlHeader.write","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.utils.av/-opus-control-header/write.html","searchKeys":["write","open override fun write(output: ByteBuffer)","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.utils.av.OpusControlHeader.write"]},{"name":"open override fun write(output: ByteBuffer)","description":"io.github.thibaultbee.streampack.core.elements.utils.av.audio.AudioSpecificConfig.write","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.audio/-audio-specific-config/write.html","searchKeys":["write","open override fun write(output: ByteBuffer)","io.github.thibaultbee.streampack.core.elements.utils.av.audio.AudioSpecificConfig.write"]},{"name":"open override fun write(output: ByteBuffer)","description":"io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.ADTS.write","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac/-a-d-t-s/write.html","searchKeys":["write","open override fun write(output: ByteBuffer)","io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.ADTS.write"]},{"name":"open override fun write(output: ByteBuffer)","description":"io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.ADTSFrameWriter.write","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac/-a-d-t-s-frame-writer/write.html","searchKeys":["write","open override fun write(output: ByteBuffer)","io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.ADTSFrameWriter.write"]},{"name":"open override fun write(output: ByteBuffer)","description":"io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.AudioMuxElement.write","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac/-audio-mux-element/write.html","searchKeys":["write","open override fun write(output: ByteBuffer)","io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.AudioMuxElement.write"]},{"name":"open override fun write(output: ByteBuffer)","description":"io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.LATMFrameWriter.write","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac/-l-a-t-m-frame-writer/write.html","searchKeys":["write","open override fun write(output: ByteBuffer)","io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.LATMFrameWriter.write"]},{"name":"open override fun write(output: ByteBuffer)","description":"io.github.thibaultbee.streampack.core.elements.utils.av.audio.opus.IdentificationHeader.ChannelMapping.write","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.audio.opus/-identification-header/-channel-mapping/write.html","searchKeys":["write","open override fun write(output: ByteBuffer)","io.github.thibaultbee.streampack.core.elements.utils.av.audio.opus.IdentificationHeader.ChannelMapping.write"]},{"name":"open override fun write(output: ByteBuffer)","description":"io.github.thibaultbee.streampack.core.elements.utils.av.audio.opus.IdentificationHeader.write","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.audio.opus/-identification-header/write.html","searchKeys":["write","open override fun write(output: ByteBuffer)","io.github.thibaultbee.streampack.core.elements.utils.av.audio.opus.IdentificationHeader.write"]},{"name":"open override fun write(output: ByteBuffer)","description":"io.github.thibaultbee.streampack.core.elements.utils.av.buffer.AVCCBufferWriter.write","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.buffer/-a-v-c-c-buffer-writer/write.html","searchKeys":["write","open override fun write(output: ByteBuffer)","io.github.thibaultbee.streampack.core.elements.utils.av.buffer.AVCCBufferWriter.write"]},{"name":"open override fun write(output: ByteBuffer)","description":"io.github.thibaultbee.streampack.core.elements.utils.av.buffer.BitBufferWriter.write","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.buffer/-bit-buffer-writer/write.html","searchKeys":["write","open override fun write(output: ByteBuffer)","io.github.thibaultbee.streampack.core.elements.utils.av.buffer.BitBufferWriter.write"]},{"name":"open override fun write(output: ByteBuffer)","description":"io.github.thibaultbee.streampack.core.elements.utils.av.buffer.PassthroughBufferWriter.write","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.buffer/-passthrough-buffer-writer/write.html","searchKeys":["write","open override fun write(output: ByteBuffer)","io.github.thibaultbee.streampack.core.elements.utils.av.buffer.PassthroughBufferWriter.write"]},{"name":"open override fun write(output: ByteBuffer)","description":"io.github.thibaultbee.streampack.core.elements.utils.av.descriptors.BaseDescriptor.write","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.descriptors/-base-descriptor/write.html","searchKeys":["write","open override fun write(output: ByteBuffer)","io.github.thibaultbee.streampack.core.elements.utils.av.descriptors.BaseDescriptor.write"]},{"name":"open override fun write(output: ByteBuffer)","description":"io.github.thibaultbee.streampack.core.elements.utils.av.descriptors.DecoderConfigDescriptor.write","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.descriptors/-decoder-config-descriptor/write.html","searchKeys":["write","open override fun write(output: ByteBuffer)","io.github.thibaultbee.streampack.core.elements.utils.av.descriptors.DecoderConfigDescriptor.write"]},{"name":"open override fun write(output: ByteBuffer)","description":"io.github.thibaultbee.streampack.core.elements.utils.av.descriptors.DecoderSpecificInfo.write","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.descriptors/-decoder-specific-info/write.html","searchKeys":["write","open override fun write(output: ByteBuffer)","io.github.thibaultbee.streampack.core.elements.utils.av.descriptors.DecoderSpecificInfo.write"]},{"name":"open override fun write(output: ByteBuffer)","description":"io.github.thibaultbee.streampack.core.elements.utils.av.descriptors.ESDescriptor.write","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.descriptors/-e-s-descriptor/write.html","searchKeys":["write","open override fun write(output: ByteBuffer)","io.github.thibaultbee.streampack.core.elements.utils.av.descriptors.ESDescriptor.write"]},{"name":"open override fun write(output: ByteBuffer)","description":"io.github.thibaultbee.streampack.core.elements.utils.av.descriptors.SLConfigDescriptor.write","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.descriptors/-s-l-config-descriptor/write.html","searchKeys":["write","open override fun write(output: ByteBuffer)","io.github.thibaultbee.streampack.core.elements.utils.av.descriptors.SLConfigDescriptor.write"]},{"name":"open override fun write(output: ByteBuffer)","description":"io.github.thibaultbee.streampack.core.elements.utils.av.video.av1.AV1CodecConfigurationRecord.write","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.video.av1/-a-v1-codec-configuration-record/write.html","searchKeys":["write","open override fun write(output: ByteBuffer)","io.github.thibaultbee.streampack.core.elements.utils.av.video.av1.AV1CodecConfigurationRecord.write"]},{"name":"open override fun write(output: ByteBuffer)","description":"io.github.thibaultbee.streampack.core.elements.utils.av.video.avc.AVCDecoderConfigurationRecord.write","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.video.avc/-a-v-c-decoder-configuration-record/write.html","searchKeys":["write","open override fun write(output: ByteBuffer)","io.github.thibaultbee.streampack.core.elements.utils.av.video.avc.AVCDecoderConfigurationRecord.write"]},{"name":"open override fun write(output: ByteBuffer)","description":"io.github.thibaultbee.streampack.core.elements.utils.av.video.hevc.HEVCDecoderConfigurationRecord.write","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.video.hevc/-h-e-v-c-decoder-configuration-record/write.html","searchKeys":["write","open override fun write(output: ByteBuffer)","io.github.thibaultbee.streampack.core.elements.utils.av.video.hevc.HEVCDecoderConfigurationRecord.write"]},{"name":"open override fun write(output: ByteBuffer)","description":"io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.VPCodecConfigurationRecord.write","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx/-v-p-codec-configuration-record/write.html","searchKeys":["write","open override fun write(output: ByteBuffer)","io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.VPCodecConfigurationRecord.write"]},{"name":"open override val audio: AudioFlvMuxerInfo","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.FlvMuxerInfo.audio","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv/-flv-muxer-info/audio.html","searchKeys":["audio","open override val audio: AudioFlvMuxerInfo","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.FlvMuxerInfo.audio"]},{"name":"open override val audio: AudioMP4MuxerInfo","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.MP4MuxerInfo.audio","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4/-m-p4-muxer-info/audio.html","searchKeys":["audio","open override val audio: AudioMP4MuxerInfo","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.MP4MuxerInfo.audio"]},{"name":"open override val audio: AudioStreamerConfigurationInfo","description":"io.github.thibaultbee.streampack.core.streamers.infos.StreamerConfigurationInfo.audio","location":"streampack-core/io.github.thibaultbee.streampack.core.streamers.infos/-streamer-configuration-info/audio.html","searchKeys":["audio","open override val audio: AudioStreamerConfigurationInfo","io.github.thibaultbee.streampack.core.streamers.infos.StreamerConfigurationInfo.audio"]},{"name":"open override val audio: AudioTSMuxerInfo","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.TSMuxerInfo.audio","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts/-t-s-muxer-info/audio.html","searchKeys":["audio","open override val audio: AudioTSMuxerInfo","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.TSMuxerInfo.audio"]},{"name":"open override val audio: IEndpoint.IEndpointInfo.IAudioEndpointInfo","description":"io.github.thibaultbee.streampack.core.elements.endpoints.MediaMuxerEndpoint.Mp4EndpointInfo.audio","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints/-media-muxer-endpoint/-mp4-endpoint-info/audio.html","searchKeys":["audio","open override val audio: IEndpoint.IEndpointInfo.IAudioEndpointInfo","io.github.thibaultbee.streampack.core.elements.endpoints.MediaMuxerEndpoint.Mp4EndpointInfo.audio"]},{"name":"open override val audio: IEndpoint.IEndpointInfo.IAudioEndpointInfo","description":"io.github.thibaultbee.streampack.core.elements.endpoints.MediaMuxerEndpoint.OggEndpointInfo.audio","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints/-media-muxer-endpoint/-ogg-endpoint-info/audio.html","searchKeys":["audio","open override val audio: IEndpoint.IEndpointInfo.IAudioEndpointInfo","io.github.thibaultbee.streampack.core.elements.endpoints.MediaMuxerEndpoint.OggEndpointInfo.audio"]},{"name":"open override val audio: IEndpoint.IEndpointInfo.IAudioEndpointInfo","description":"io.github.thibaultbee.streampack.core.elements.endpoints.MediaMuxerEndpoint.ThreeGPEndpointInfo.audio","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints/-media-muxer-endpoint/-three-g-p-endpoint-info/audio.html","searchKeys":["audio","open override val audio: IEndpoint.IEndpointInfo.IAudioEndpointInfo","io.github.thibaultbee.streampack.core.elements.endpoints.MediaMuxerEndpoint.ThreeGPEndpointInfo.audio"]},{"name":"open override val audio: IEndpoint.IEndpointInfo.IAudioEndpointInfo","description":"io.github.thibaultbee.streampack.core.elements.endpoints.MediaMuxerEndpoint.WebMEndpointInfo.audio","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints/-media-muxer-endpoint/-web-m-endpoint-info/audio.html","searchKeys":["audio","open override val audio: IEndpoint.IEndpointInfo.IAudioEndpointInfo","io.github.thibaultbee.streampack.core.elements.endpoints.MediaMuxerEndpoint.WebMEndpointInfo.audio"]},{"name":"open override val audio: IEndpoint.IEndpointInfo.IAudioEndpointInfo","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.CompositeEndpoint.EndpointInfo.audio","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites/-composite-endpoint/-endpoint-info/audio.html","searchKeys":["audio","open override val audio: IEndpoint.IEndpointInfo.IAudioEndpointInfo","io.github.thibaultbee.streampack.core.elements.endpoints.composites.CompositeEndpoint.EndpointInfo.audio"]},{"name":"open override val audioConfigFlow: StateFlow<AudioConfig?>","description":"io.github.thibaultbee.streampack.core.streamers.single.AudioOnlySingleStreamer.audioConfigFlow","location":"streampack-core/io.github.thibaultbee.streampack.core.streamers.single/-audio-only-single-streamer/audio-config-flow.html","searchKeys":["audioConfigFlow","open override val audioConfigFlow: StateFlow<AudioConfig?>","io.github.thibaultbee.streampack.core.streamers.single.AudioOnlySingleStreamer.audioConfigFlow"]},{"name":"open override val audioConfigFlow: StateFlow<AudioConfig?>","description":"io.github.thibaultbee.streampack.core.streamers.single.SingleStreamer.audioConfigFlow","location":"streampack-core/io.github.thibaultbee.streampack.core.streamers.single/-single-streamer/audio-config-flow.html","searchKeys":["audioConfigFlow","open override val audioConfigFlow: StateFlow<AudioConfig?>","io.github.thibaultbee.streampack.core.streamers.single.SingleStreamer.audioConfigFlow"]},{"name":"open override val audioEncoder: IEncoder?","description":"io.github.thibaultbee.streampack.core.streamers.single.AudioOnlySingleStreamer.audioEncoder","location":"streampack-core/io.github.thibaultbee.streampack.core.streamers.single/-audio-only-single-streamer/audio-encoder.html","searchKeys":["audioEncoder","open override val audioEncoder: IEncoder?","io.github.thibaultbee.streampack.core.streamers.single.AudioOnlySingleStreamer.audioEncoder"]},{"name":"open override val audioEncoder: IEncoder?","description":"io.github.thibaultbee.streampack.core.streamers.single.SingleStreamer.audioEncoder","location":"streampack-core/io.github.thibaultbee.streampack.core.streamers.single/-single-streamer/audio-encoder.html","searchKeys":["audioEncoder","open override val audioEncoder: IEncoder?","io.github.thibaultbee.streampack.core.streamers.single.SingleStreamer.audioEncoder"]},{"name":"open override val audioInput: IAudioInput","description":"io.github.thibaultbee.streampack.core.streamers.single.AudioOnlySingleStreamer.audioInput","location":"streampack-core/io.github.thibaultbee.streampack.core.streamers.single/-audio-only-single-streamer/audio-input.html","searchKeys":["audioInput","open override val audioInput: IAudioInput","io.github.thibaultbee.streampack.core.streamers.single.AudioOnlySingleStreamer.audioInput"]},{"name":"open override val audioInput: IAudioInput?","description":"io.github.thibaultbee.streampack.core.pipelines.StreamerPipeline.audioInput","location":"streampack-core/io.github.thibaultbee.streampack.core.pipelines/-streamer-pipeline/audio-input.html","searchKeys":["audioInput","open override val audioInput: IAudioInput?","io.github.thibaultbee.streampack.core.pipelines.StreamerPipeline.audioInput"]},{"name":"open override val audioInput: IAudioInput?","description":"io.github.thibaultbee.streampack.core.streamers.dual.DualStreamer.audioInput","location":"streampack-core/io.github.thibaultbee.streampack.core.streamers.dual/-dual-streamer/audio-input.html","searchKeys":["audioInput","open override val audioInput: IAudioInput?","io.github.thibaultbee.streampack.core.streamers.dual.DualStreamer.audioInput"]},{"name":"open override val audioInput: IAudioInput?","description":"io.github.thibaultbee.streampack.core.streamers.single.SingleStreamer.audioInput","location":"streampack-core/io.github.thibaultbee.streampack.core.streamers.single/-single-streamer/audio-input.html","searchKeys":["audioInput","open override val audioInput: IAudioInput?","io.github.thibaultbee.streampack.core.streamers.single.SingleStreamer.audioInput"]},{"name":"open override val availableRatioRange: Range<Float>","description":"io.github.thibaultbee.streampack.core.elements.sources.video.camera.CameraSettings.Zoom.CropScalerRegionZoom.availableRatioRange","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.video.camera/-camera-settings/-zoom/-crop-scaler-region-zoom/available-ratio-range.html","searchKeys":["availableRatioRange","open override val availableRatioRange: Range<Float>","io.github.thibaultbee.streampack.core.elements.sources.video.camera.CameraSettings.Zoom.CropScalerRegionZoom.availableRatioRange"]},{"name":"open override val availableRatioRange: Range<Float>","description":"io.github.thibaultbee.streampack.core.elements.sources.video.camera.CameraSettings.Zoom.RZoom.availableRatioRange","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.video.camera/-camera-settings/-zoom/-r-zoom/available-ratio-range.html","searchKeys":["availableRatioRange","open override val availableRatioRange: Range<Float>","io.github.thibaultbee.streampack.core.elements.sources.video.camera.CameraSettings.Zoom.RZoom.availableRatioRange"]},{"name":"open override val bitSize: Int","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.descriptors.AdaptationField.bitSize","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.descriptors/-adaptation-field/bit-size.html","searchKeys":["bitSize","open override val bitSize: Int","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.descriptors.AdaptationField.bitSize"]},{"name":"open override val bitSize: Int","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets.Pat.bitSize","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets/-pat/bit-size.html","searchKeys":["bitSize","open override val bitSize: Int","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets.Pat.bitSize"]},{"name":"open override val bitSize: Int","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets.PesHeader.bitSize","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets/-pes-header/bit-size.html","searchKeys":["bitSize","open override val bitSize: Int","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets.PesHeader.bitSize"]},{"name":"open override val bitSize: Int","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets.Pmt.bitSize","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets/-pmt/bit-size.html","searchKeys":["bitSize","open override val bitSize: Int","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets.Pmt.bitSize"]},{"name":"open override val bitSize: Int","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets.Sdt.bitSize","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets/-sdt/bit-size.html","searchKeys":["bitSize","open override val bitSize: Int","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets.Sdt.bitSize"]},{"name":"open override val bitSize: Int","description":"io.github.thibaultbee.streampack.core.elements.utils.av.audio.AudioSpecificConfig.AudioSpecificConfigExtension.bitSize","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.audio/-audio-specific-config/-audio-specific-config-extension/bit-size.html","searchKeys":["bitSize","open override val bitSize: Int","io.github.thibaultbee.streampack.core.elements.utils.av.audio.AudioSpecificConfig.AudioSpecificConfigExtension.bitSize"]},{"name":"open override val bitSize: Int","description":"io.github.thibaultbee.streampack.core.elements.utils.av.audio.AudioSpecificConfig.bitSize","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.audio/-audio-specific-config/bit-size.html","searchKeys":["bitSize","open override val bitSize: Int","io.github.thibaultbee.streampack.core.elements.utils.av.audio.AudioSpecificConfig.bitSize"]},{"name":"open override val bitSize: Int","description":"io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.ProgramConfigElement.bitSize","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac/-program-config-element/bit-size.html","searchKeys":["bitSize","open override val bitSize: Int","io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.ProgramConfigElement.bitSize"]},{"name":"open override val bitSize: Int","description":"io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.StreamMuxConfig.bitSize","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac/-stream-mux-config/bit-size.html","searchKeys":["bitSize","open override val bitSize: Int","io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.StreamMuxConfig.bitSize"]},{"name":"open override val bitSize: Int","description":"io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.config.ELDSpecificConfig.LdSbrHeader.bitSize","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.config/-e-l-d-specific-config/-ld-sbr-header/bit-size.html","searchKeys":["bitSize","open override val bitSize: Int","io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.config.ELDSpecificConfig.LdSbrHeader.bitSize"]},{"name":"open override val bitSize: Int","description":"io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.config.ELDSpecificConfig.bitSize","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.config/-e-l-d-specific-config/bit-size.html","searchKeys":["bitSize","open override val bitSize: Int","io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.config.ELDSpecificConfig.bitSize"]},{"name":"open override val bitSize: Int","description":"io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.config.GASpecificConfig.bitSize","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.config/-g-a-specific-config/bit-size.html","searchKeys":["bitSize","open override val bitSize: Int","io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.config.GASpecificConfig.bitSize"]},{"name":"open override val bitSize: Int = 0","description":"io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.config.SbrHeader.bitSize","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.config/-sbr-header/bit-size.html","searchKeys":["bitSize","open override val bitSize: Int = 0","io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.config.SbrHeader.bitSize"]},{"name":"open override val bitSize: Int = 64","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets.TableHeader.bitSize","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets/-table-header/bit-size.html","searchKeys":["bitSize","open override val bitSize: Int = 64","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets.TableHeader.bitSize"]},{"name":"open override val config: CodecConfig","description":"io.github.thibaultbee.streampack.core.elements.encoders.mediacodec.MediaCodecEncoder.config","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.encoders.mediacodec/-media-codec-encoder/config.html","searchKeys":["config","open override val config: CodecConfig","io.github.thibaultbee.streampack.core.elements.encoders.mediacodec.MediaCodecEncoder.config"]},{"name":"open override val descriptor: SurfaceDescriptor","description":"io.github.thibaultbee.streampack.core.elements.processing.video.outputs.IdentitySurfaceOutput.descriptor","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.processing.video.outputs/-identity-surface-output/descriptor.html","searchKeys":["descriptor","open override val descriptor: SurfaceDescriptor","io.github.thibaultbee.streampack.core.elements.processing.video.outputs.IdentitySurfaceOutput.descriptor"]},{"name":"open override val descriptor: SurfaceDescriptor","description":"io.github.thibaultbee.streampack.core.elements.processing.video.outputs.SurfaceOutput.descriptor","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.processing.video.outputs/-surface-output/descriptor.html","searchKeys":["descriptor","open override val descriptor: SurfaceDescriptor","io.github.thibaultbee.streampack.core.elements.processing.video.outputs.SurfaceOutput.descriptor"]},{"name":"open override val endpoint: IEndpoint","description":"io.github.thibaultbee.streampack.core.streamers.single.AudioOnlySingleStreamer.endpoint","location":"streampack-core/io.github.thibaultbee.streampack.core.streamers.single/-audio-only-single-streamer/endpoint.html","searchKeys":["endpoint","open override val endpoint: IEndpoint","io.github.thibaultbee.streampack.core.streamers.single.AudioOnlySingleStreamer.endpoint"]},{"name":"open override val endpoint: IEndpoint","description":"io.github.thibaultbee.streampack.core.streamers.single.SingleStreamer.endpoint","location":"streampack-core/io.github.thibaultbee.streampack.core.streamers.single/-single-streamer/endpoint.html","searchKeys":["endpoint","open override val endpoint: IEndpoint","io.github.thibaultbee.streampack.core.streamers.single.SingleStreamer.endpoint"]},{"name":"open override val endpoint: IEndpoint","description":"io.github.thibaultbee.streampack.core.streamers.single.VideoOnlySingleStreamer.endpoint","location":"streampack-core/io.github.thibaultbee.streampack.core.streamers.single/-video-only-single-streamer/endpoint.html","searchKeys":["endpoint","open override val endpoint: IEndpoint","io.github.thibaultbee.streampack.core.streamers.single.VideoOnlySingleStreamer.endpoint"]},{"name":"open override val first: IConfigurableAudioVideoEncodingPipelineOutput","description":"io.github.thibaultbee.streampack.core.streamers.dual.DualStreamer.first","location":"streampack-core/io.github.thibaultbee.streampack.core.streamers.dual/-dual-streamer/first.html","searchKeys":["first","open override val first: IConfigurableAudioVideoEncodingPipelineOutput","io.github.thibaultbee.streampack.core.streamers.dual.DualStreamer.first"]},{"name":"open override val first: IConfigurableVideoEncodingPipelineOutput","description":"io.github.thibaultbee.streampack.core.streamers.dual.VideoOnlyDualStreamer.first","location":"streampack-core/io.github.thibaultbee.streampack.core.streamers.dual/-video-only-dual-streamer/first.html","searchKeys":["first","open override val first: IConfigurableVideoEncodingPipelineOutput","io.github.thibaultbee.streampack.core.streamers.dual.VideoOnlyDualStreamer.first"]},{"name":"open override val info: CompositeEndpoint.EndpointInfo","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.CompositeEndpoint.info","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites/-composite-endpoint/info.html","searchKeys":["info","open override val info: CompositeEndpoint.EndpointInfo","io.github.thibaultbee.streampack.core.elements.endpoints.composites.CompositeEndpoint.info"]},{"name":"open override val info: EncoderInfo","description":"io.github.thibaultbee.streampack.core.elements.encoders.mediacodec.MediaCodecEncoder.info","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.encoders.mediacodec/-media-codec-encoder/info.html","searchKeys":["info","open override val info: EncoderInfo","io.github.thibaultbee.streampack.core.elements.encoders.mediacodec.MediaCodecEncoder.info"]},{"name":"open override val info: FlvMuxerInfo","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.FlvMuxer.info","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv/-flv-muxer/info.html","searchKeys":["info","open override val info: FlvMuxerInfo","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.FlvMuxer.info"]},{"name":"open override val info: IConfigurationInfo","description":"io.github.thibaultbee.streampack.core.streamers.single.AudioOnlySingleStreamer.info","location":"streampack-core/io.github.thibaultbee.streampack.core.streamers.single/-audio-only-single-streamer/info.html","searchKeys":["info","open override val info: IConfigurationInfo","io.github.thibaultbee.streampack.core.streamers.single.AudioOnlySingleStreamer.info"]},{"name":"open override val info: IConfigurationInfo","description":"io.github.thibaultbee.streampack.core.streamers.single.SingleStreamer.info","location":"streampack-core/io.github.thibaultbee.streampack.core.streamers.single/-single-streamer/info.html","searchKeys":["info","open override val info: IConfigurationInfo","io.github.thibaultbee.streampack.core.streamers.single.SingleStreamer.info"]},{"name":"open override val info: IConfigurationInfo","description":"io.github.thibaultbee.streampack.core.streamers.single.VideoOnlySingleStreamer.info","location":"streampack-core/io.github.thibaultbee.streampack.core.streamers.single/-video-only-single-streamer/info.html","searchKeys":["info","open override val info: IConfigurationInfo","io.github.thibaultbee.streampack.core.streamers.single.VideoOnlySingleStreamer.info"]},{"name":"open override val info: IEndpoint.IEndpointInfo","description":"io.github.thibaultbee.streampack.core.elements.endpoints.CombineEndpoint.info","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints/-combine-endpoint/info.html","searchKeys":["info","open override val info: IEndpoint.IEndpointInfo","io.github.thibaultbee.streampack.core.elements.endpoints.CombineEndpoint.info"]},{"name":"open override val info: IEndpoint.IEndpointInfo","description":"io.github.thibaultbee.streampack.core.elements.endpoints.DynamicEndpoint.info","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints/-dynamic-endpoint/info.html","searchKeys":["info","open override val info: IEndpoint.IEndpointInfo","io.github.thibaultbee.streampack.core.elements.endpoints.DynamicEndpoint.info"]},{"name":"open override val info: IEndpoint.IEndpointInfo","description":"io.github.thibaultbee.streampack.core.elements.endpoints.MediaMuxerEndpoint.info","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints/-media-muxer-endpoint/info.html","searchKeys":["info","open override val info: IEndpoint.IEndpointInfo","io.github.thibaultbee.streampack.core.elements.endpoints.MediaMuxerEndpoint.info"]},{"name":"open override val info: MP4MuxerInfo","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.Mp4Muxer.info","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4/-mp4-muxer/info.html","searchKeys":["info","open override val info: MP4MuxerInfo","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.Mp4Muxer.info"]},{"name":"open override val info: TSMuxerInfo","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.TsMuxer.info","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts/-ts-muxer/info.html","searchKeys":["info","open override val info: TSMuxerInfo","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.TsMuxer.info"]},{"name":"open override val input: IEncoderInternal.IEncoderInput","description":"io.github.thibaultbee.streampack.core.elements.encoders.mediacodec.MediaCodecEncoder.input","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.encoders.mediacodec/-media-codec-encoder/input.html","searchKeys":["input","open override val input: IEncoderInternal.IEncoderInput","io.github.thibaultbee.streampack.core.elements.encoders.mediacodec.MediaCodecEncoder.input"]},{"name":"open override val isMirror: Boolean","description":"io.github.thibaultbee.streampack.core.elements.sources.video.camera.CameraInfoProvider.isMirror","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.video.camera/-camera-info-provider/is-mirror.html","searchKeys":["isMirror","open override val isMirror: Boolean","io.github.thibaultbee.streampack.core.elements.sources.video.camera.CameraInfoProvider.isMirror"]},{"name":"open override val isMirror: Boolean = false","description":"io.github.thibaultbee.streampack.core.elements.processing.video.source.DefaultSourceInfoProvider.isMirror","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.processing.video.source/-default-source-info-provider/is-mirror.html","searchKeys":["isMirror","open override val isMirror: Boolean = false","io.github.thibaultbee.streampack.core.elements.processing.video.source.DefaultSourceInfoProvider.isMirror"]},{"name":"open override val isOpenFlow: StateFlow<Boolean>","description":"io.github.thibaultbee.streampack.core.elements.endpoints.CombineEndpoint.isOpenFlow","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints/-combine-endpoint/is-open-flow.html","searchKeys":["isOpenFlow","open override val isOpenFlow: StateFlow<Boolean>","io.github.thibaultbee.streampack.core.elements.endpoints.CombineEndpoint.isOpenFlow"]},{"name":"open override val isOpenFlow: StateFlow<Boolean>","description":"io.github.thibaultbee.streampack.core.elements.endpoints.DynamicEndpoint.isOpenFlow","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints/-dynamic-endpoint/is-open-flow.html","searchKeys":["isOpenFlow","open override val isOpenFlow: StateFlow<Boolean>","io.github.thibaultbee.streampack.core.elements.endpoints.DynamicEndpoint.isOpenFlow"]},{"name":"open override val isOpenFlow: StateFlow<Boolean>","description":"io.github.thibaultbee.streampack.core.elements.endpoints.MediaMuxerEndpoint.isOpenFlow","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints/-media-muxer-endpoint/is-open-flow.html","searchKeys":["isOpenFlow","open override val isOpenFlow: StateFlow<Boolean>","io.github.thibaultbee.streampack.core.elements.endpoints.MediaMuxerEndpoint.isOpenFlow"]},{"name":"open override val isOpenFlow: StateFlow<Boolean>","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.CompositeEndpoint.isOpenFlow","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites/-composite-endpoint/is-open-flow.html","searchKeys":["isOpenFlow","open override val isOpenFlow: StateFlow<Boolean>","io.github.thibaultbee.streampack.core.elements.endpoints.composites.CompositeEndpoint.isOpenFlow"]},{"name":"open override val isOpenFlow: StateFlow<Boolean>","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.sinks.FakeSink.isOpenFlow","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.sinks/-fake-sink/is-open-flow.html","searchKeys":["isOpenFlow","open override val isOpenFlow: StateFlow<Boolean>","io.github.thibaultbee.streampack.core.elements.endpoints.composites.sinks.FakeSink.isOpenFlow"]},{"name":"open override val isOpenFlow: StateFlow<Boolean>","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.sinks.FileSink.isOpenFlow","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.sinks/-file-sink/is-open-flow.html","searchKeys":["isOpenFlow","open override val isOpenFlow: StateFlow<Boolean>","io.github.thibaultbee.streampack.core.elements.endpoints.composites.sinks.FileSink.isOpenFlow"]},{"name":"open override val isOpenFlow: StateFlow<Boolean>","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.sinks.OutputStreamSink.isOpenFlow","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.sinks/-output-stream-sink/is-open-flow.html","searchKeys":["isOpenFlow","open override val isOpenFlow: StateFlow<Boolean>","io.github.thibaultbee.streampack.core.elements.endpoints.composites.sinks.OutputStreamSink.isOpenFlow"]},{"name":"open override val isOpenFlow: StateFlow<Boolean>","description":"io.github.thibaultbee.streampack.core.streamers.dual.DualStreamer.isOpenFlow","location":"streampack-core/io.github.thibaultbee.streampack.core.streamers.dual/-dual-streamer/is-open-flow.html","searchKeys":["isOpenFlow","open override val isOpenFlow: StateFlow<Boolean>","io.github.thibaultbee.streampack.core.streamers.dual.DualStreamer.isOpenFlow"]},{"name":"open override val isOpenFlow: StateFlow<Boolean>","description":"io.github.thibaultbee.streampack.core.streamers.dual.VideoOnlyDualStreamer.isOpenFlow","location":"streampack-core/io.github.thibaultbee.streampack.core.streamers.dual/-video-only-dual-streamer/is-open-flow.html","searchKeys":["isOpenFlow","open override val isOpenFlow: StateFlow<Boolean>","io.github.thibaultbee.streampack.core.streamers.dual.VideoOnlyDualStreamer.isOpenFlow"]},{"name":"open override val isOpenFlow: StateFlow<Boolean>","description":"io.github.thibaultbee.streampack.core.streamers.single.AudioOnlySingleStreamer.isOpenFlow","location":"streampack-core/io.github.thibaultbee.streampack.core.streamers.single/-audio-only-single-streamer/is-open-flow.html","searchKeys":["isOpenFlow","open override val isOpenFlow: StateFlow<Boolean>","io.github.thibaultbee.streampack.core.streamers.single.AudioOnlySingleStreamer.isOpenFlow"]},{"name":"open override val isOpenFlow: StateFlow<Boolean>","description":"io.github.thibaultbee.streampack.core.streamers.single.SingleStreamer.isOpenFlow","location":"streampack-core/io.github.thibaultbee.streampack.core.streamers.single/-single-streamer/is-open-flow.html","searchKeys":["isOpenFlow","open override val isOpenFlow: StateFlow<Boolean>","io.github.thibaultbee.streampack.core.streamers.single.SingleStreamer.isOpenFlow"]},{"name":"open override val isOpenFlow: StateFlow<Boolean>","description":"io.github.thibaultbee.streampack.core.streamers.single.VideoOnlySingleStreamer.isOpenFlow","location":"streampack-core/io.github.thibaultbee.streampack.core.streamers.single/-video-only-single-streamer/is-open-flow.html","searchKeys":["isOpenFlow","open override val isOpenFlow: StateFlow<Boolean>","io.github.thibaultbee.streampack.core.streamers.single.VideoOnlySingleStreamer.isOpenFlow"]},{"name":"open override val isStreaming: () -> Boolean","description":"io.github.thibaultbee.streampack.core.elements.processing.video.outputs.IdentitySurfaceOutput.isStreaming","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.processing.video.outputs/-identity-surface-output/is-streaming.html","searchKeys":["isStreaming","open override val isStreaming: () -> Boolean","io.github.thibaultbee.streampack.core.elements.processing.video.outputs.IdentitySurfaceOutput.isStreaming"]},{"name":"open override val isStreaming: () -> Boolean","description":"io.github.thibaultbee.streampack.core.elements.processing.video.outputs.SurfaceOutput.isStreaming","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.processing.video.outputs/-surface-output/is-streaming.html","searchKeys":["isStreaming","open override val isStreaming: () -> Boolean","io.github.thibaultbee.streampack.core.elements.processing.video.outputs.SurfaceOutput.isStreaming"]},{"name":"open override val isStreamingFlow: StateFlow<Boolean>","description":"io.github.thibaultbee.streampack.core.pipelines.StreamerPipeline.isStreamingFlow","location":"streampack-core/io.github.thibaultbee.streampack.core.pipelines/-streamer-pipeline/is-streaming-flow.html","searchKeys":["isStreamingFlow","open override val isStreamingFlow: StateFlow<Boolean>","io.github.thibaultbee.streampack.core.pipelines.StreamerPipeline.isStreamingFlow"]},{"name":"open override val isStreamingFlow: StateFlow<Boolean>","description":"io.github.thibaultbee.streampack.core.streamers.dual.DualStreamer.isStreamingFlow","location":"streampack-core/io.github.thibaultbee.streampack.core.streamers.dual/-dual-streamer/is-streaming-flow.html","searchKeys":["isStreamingFlow","open override val isStreamingFlow: StateFlow<Boolean>","io.github.thibaultbee.streampack.core.streamers.dual.DualStreamer.isStreamingFlow"]},{"name":"open override val isStreamingFlow: StateFlow<Boolean>","description":"io.github.thibaultbee.streampack.core.streamers.dual.VideoOnlyDualStreamer.isStreamingFlow","location":"streampack-core/io.github.thibaultbee.streampack.core.streamers.dual/-video-only-dual-streamer/is-streaming-flow.html","searchKeys":["isStreamingFlow","open override val isStreamingFlow: StateFlow<Boolean>","io.github.thibaultbee.streampack.core.streamers.dual.VideoOnlyDualStreamer.isStreamingFlow"]},{"name":"open override val isStreamingFlow: StateFlow<Boolean>","description":"io.github.thibaultbee.streampack.core.streamers.single.AudioOnlySingleStreamer.isStreamingFlow","location":"streampack-core/io.github.thibaultbee.streampack.core.streamers.single/-audio-only-single-streamer/is-streaming-flow.html","searchKeys":["isStreamingFlow","open override val isStreamingFlow: StateFlow<Boolean>","io.github.thibaultbee.streampack.core.streamers.single.AudioOnlySingleStreamer.isStreamingFlow"]},{"name":"open override val isStreamingFlow: StateFlow<Boolean>","description":"io.github.thibaultbee.streampack.core.streamers.single.SingleStreamer.isStreamingFlow","location":"streampack-core/io.github.thibaultbee.streampack.core.streamers.single/-single-streamer/is-streaming-flow.html","searchKeys":["isStreamingFlow","open override val isStreamingFlow: StateFlow<Boolean>","io.github.thibaultbee.streampack.core.streamers.single.SingleStreamer.isStreamingFlow"]},{"name":"open override val isStreamingFlow: StateFlow<Boolean>","description":"io.github.thibaultbee.streampack.core.streamers.single.VideoOnlySingleStreamer.isStreamingFlow","location":"streampack-core/io.github.thibaultbee.streampack.core.streamers.single/-video-only-single-streamer/is-streaming-flow.html","searchKeys":["isStreamingFlow","open override val isStreamingFlow: StateFlow<Boolean>","io.github.thibaultbee.streampack.core.streamers.single.VideoOnlySingleStreamer.isStreamingFlow"]},{"name":"open override val isVideo: Boolean = false","description":"io.github.thibaultbee.streampack.core.elements.encoders.mediacodec.AudioEncoderConfig.isVideo","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.encoders.mediacodec/-audio-encoder-config/is-video.html","searchKeys":["isVideo","open override val isVideo: Boolean = false","io.github.thibaultbee.streampack.core.elements.encoders.mediacodec.AudioEncoderConfig.isVideo"]},{"name":"open override val isVideo: Boolean = true","description":"io.github.thibaultbee.streampack.core.elements.encoders.mediacodec.VideoEncoderConfig.isVideo","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.encoders.mediacodec/-video-encoder-config/is-video.html","searchKeys":["isVideo","open override val isVideo: Boolean = true","io.github.thibaultbee.streampack.core.elements.encoders.mediacodec.VideoEncoderConfig.isVideo"]},{"name":"open override val metrics: Any","description":"io.github.thibaultbee.streampack.core.elements.endpoints.CombineEndpoint.metrics","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints/-combine-endpoint/metrics.html","searchKeys":["metrics","open override val metrics: Any","io.github.thibaultbee.streampack.core.elements.endpoints.CombineEndpoint.metrics"]},{"name":"open override val metrics: Any","description":"io.github.thibaultbee.streampack.core.elements.endpoints.DynamicEndpoint.metrics","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints/-dynamic-endpoint/metrics.html","searchKeys":["metrics","open override val metrics: Any","io.github.thibaultbee.streampack.core.elements.endpoints.DynamicEndpoint.metrics"]},{"name":"open override val metrics: Any","description":"io.github.thibaultbee.streampack.core.elements.endpoints.MediaMuxerEndpoint.metrics","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints/-media-muxer-endpoint/metrics.html","searchKeys":["metrics","open override val metrics: Any","io.github.thibaultbee.streampack.core.elements.endpoints.MediaMuxerEndpoint.metrics"]},{"name":"open override val metrics: Any","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.CompositeEndpoint.metrics","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites/-composite-endpoint/metrics.html","searchKeys":["metrics","open override val metrics: Any","io.github.thibaultbee.streampack.core.elements.endpoints.composites.CompositeEndpoint.metrics"]},{"name":"open override val metrics: Any","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.sinks.AbstractSink.metrics","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.sinks/-abstract-sink/metrics.html","searchKeys":["metrics","open override val metrics: Any","io.github.thibaultbee.streampack.core.elements.endpoints.composites.sinks.AbstractSink.metrics"]},{"name":"open override val mimeType: String","description":"io.github.thibaultbee.streampack.core.elements.encoders.mediacodec.MediaCodecEncoder.mimeType","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.encoders.mediacodec/-media-codec-encoder/mime-type.html","searchKeys":["mimeType","open override val mimeType: String","io.github.thibaultbee.streampack.core.elements.encoders.mediacodec.MediaCodecEncoder.mimeType"]},{"name":"open override val muxer: IMuxerInternal","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.CompositeEndpoint.muxer","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites/-composite-endpoint/muxer.html","searchKeys":["muxer","open override val muxer: IMuxerInternal","io.github.thibaultbee.streampack.core.elements.endpoints.composites.CompositeEndpoint.muxer"]},{"name":"open override val name: String","description":"io.github.thibaultbee.streampack.core.elements.encoders.mediacodec.EncoderInfo.name","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.encoders.mediacodec/-encoder-info/name.html","searchKeys":["name","open override val name: String","io.github.thibaultbee.streampack.core.elements.encoders.mediacodec.EncoderInfo.name"]},{"name":"open override val onClosed: (ICloseableFrame) -> Unit","description":"io.github.thibaultbee.streampack.core.elements.data.Frame.onClosed","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.data/-frame/on-closed.html","searchKeys":["onClosed","open override val onClosed: (ICloseableFrame) -> Unit","io.github.thibaultbee.streampack.core.elements.data.Frame.onClosed"]},{"name":"open override val onClosed: (ICloseableFrame) -> Unit","description":"io.github.thibaultbee.streampack.core.elements.data.RawFrame.onClosed","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.data/-raw-frame/on-closed.html","searchKeys":["onClosed","open override val onClosed: (ICloseableFrame) -> Unit","io.github.thibaultbee.streampack.core.elements.data.RawFrame.onClosed"]},{"name":"open override val rawBuffer: ByteBuffer","description":"io.github.thibaultbee.streampack.core.elements.data.Frame.rawBuffer","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.data/-frame/raw-buffer.html","searchKeys":["rawBuffer","open override val rawBuffer: ByteBuffer","io.github.thibaultbee.streampack.core.elements.data.Frame.rawBuffer"]},{"name":"open override val rawBuffer: ByteBuffer","description":"io.github.thibaultbee.streampack.core.elements.data.RawFrame.rawBuffer","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.data/-raw-frame/raw-buffer.html","searchKeys":["rawBuffer","open override val rawBuffer: ByteBuffer","io.github.thibaultbee.streampack.core.elements.data.RawFrame.rawBuffer"]},{"name":"open override val replayCache: List<T>","description":"io.github.thibaultbee.streampack.core.elements.utils.DerivedStateFlow.replayCache","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils/-derived-state-flow/replay-cache.html","searchKeys":["replayCache","open override val replayCache: List<T>","io.github.thibaultbee.streampack.core.elements.utils.DerivedStateFlow.replayCache"]},{"name":"open override val rotation: Int","description":"io.github.thibaultbee.streampack.core.streamers.orientation.DisplayRotationProvider.rotation","location":"streampack-core/io.github.thibaultbee.streampack.core.streamers.orientation/-display-rotation-provider/rotation.html","searchKeys":["rotation","open override val rotation: Int","io.github.thibaultbee.streampack.core.streamers.orientation.DisplayRotationProvider.rotation"]},{"name":"open override val rotation: Int","description":"io.github.thibaultbee.streampack.core.streamers.orientation.SensorRotationProvider.rotation","location":"streampack-core/io.github.thibaultbee.streampack.core.streamers.orientation/-sensor-rotation-provider/rotation.html","searchKeys":["rotation","open override val rotation: Int","io.github.thibaultbee.streampack.core.streamers.orientation.SensorRotationProvider.rotation"]},{"name":"open override val rotationDegrees: Int","description":"io.github.thibaultbee.streampack.core.elements.sources.video.camera.CameraInfoProvider.rotationDegrees","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.video.camera/-camera-info-provider/rotation-degrees.html","searchKeys":["rotationDegrees","open override val rotationDegrees: Int","io.github.thibaultbee.streampack.core.elements.sources.video.camera.CameraInfoProvider.rotationDegrees"]},{"name":"open override val rotationDegrees: Int = 0","description":"io.github.thibaultbee.streampack.core.elements.processing.video.source.DefaultSourceInfoProvider.rotationDegrees","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.processing.video.source/-default-source-info-provider/rotation-degrees.html","searchKeys":["rotationDegrees","open override val rotationDegrees: Int = 0","io.github.thibaultbee.streampack.core.elements.processing.video.source.DefaultSourceInfoProvider.rotationDegrees"]},{"name":"open override val second: IConfigurableAudioVideoEncodingPipelineOutput","description":"io.github.thibaultbee.streampack.core.streamers.dual.DualStreamer.second","location":"streampack-core/io.github.thibaultbee.streampack.core.streamers.dual/-dual-streamer/second.html","searchKeys":["second","open override val second: IConfigurableAudioVideoEncodingPipelineOutput","io.github.thibaultbee.streampack.core.streamers.dual.DualStreamer.second"]},{"name":"open override val second: IConfigurableVideoEncodingPipelineOutput","description":"io.github.thibaultbee.streampack.core.streamers.dual.VideoOnlyDualStreamer.second","location":"streampack-core/io.github.thibaultbee.streampack.core.streamers.dual/-video-only-dual-streamer/second.html","searchKeys":["second","open override val second: IConfigurableVideoEncodingPipelineOutput","io.github.thibaultbee.streampack.core.streamers.dual.VideoOnlyDualStreamer.second"]},{"name":"open override val sink: ISinkInternal","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.CompositeEndpoint.sink","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites/-composite-endpoint/sink.html","searchKeys":["sink","open override val sink: ISinkInternal","io.github.thibaultbee.streampack.core.elements.endpoints.composites.CompositeEndpoint.sink"]},{"name":"open override val size: Int","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.amf.containers.AmfContainer.size","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.amf.containers/-amf-container/size.html","searchKeys":["size","open override val size: Int","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.amf.containers.AmfContainer.size"]},{"name":"open override val size: Int","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.amf.containers.AmfEcmaArray.size","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.amf.containers/-amf-ecma-array/size.html","searchKeys":["size","open override val size: Int","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.amf.containers.AmfEcmaArray.size"]},{"name":"open override val size: Int","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.amf.containers.AmfObject.size","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.amf.containers/-amf-object/size.html","searchKeys":["size","open override val size: Int","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.amf.containers.AmfObject.size"]},{"name":"open override val size: Int","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.amf.primitives.AmfBoolean.size","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.amf.primitives/-amf-boolean/size.html","searchKeys":["size","open override val size: Int","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.amf.primitives.AmfBoolean.size"]},{"name":"open override val size: Int","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.amf.primitives.AmfInt16.size","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.amf.primitives/-amf-int16/size.html","searchKeys":["size","open override val size: Int","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.amf.primitives.AmfInt16.size"]},{"name":"open override val size: Int","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.amf.primitives.AmfInt24.size","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.amf.primitives/-amf-int24/size.html","searchKeys":["size","open override val size: Int","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.amf.primitives.AmfInt24.size"]},{"name":"open override val size: Int","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.amf.primitives.AmfInt32.size","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.amf.primitives/-amf-int32/size.html","searchKeys":["size","open override val size: Int","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.amf.primitives.AmfInt32.size"]},{"name":"open override val size: Int","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.amf.primitives.AmfNamedParameter.size","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.amf.primitives/-amf-named-parameter/size.html","searchKeys":["size","open override val size: Int","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.amf.primitives.AmfNamedParameter.size"]},{"name":"open override val size: Int","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.amf.primitives.AmfNull.size","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.amf.primitives/-amf-null/size.html","searchKeys":["size","open override val size: Int","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.amf.primitives.AmfNull.size"]},{"name":"open override val size: Int","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.amf.primitives.AmfNumber.size","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.amf.primitives/-amf-number/size.html","searchKeys":["size","open override val size: Int","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.amf.primitives.AmfNumber.size"]},{"name":"open override val size: Int","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.amf.primitives.AmfString.size","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.amf.primitives/-amf-string/size.html","searchKeys":["size","open override val size: Int","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.amf.primitives.AmfString.size"]},{"name":"open override val size: Int","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.AV1CodecConfigurationBox1.size","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-a-v1-codec-configuration-box1/size.html","searchKeys":["size","open override val size: Int","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.AV1CodecConfigurationBox1.size"]},{"name":"open override val size: Int","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.AV1CodecConfigurationBox2.size","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-a-v1-codec-configuration-box2/size.html","searchKeys":["size","open override val size: Int","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.AV1CodecConfigurationBox2.size"]},{"name":"open override val size: Int","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.AVCConfigurationBox.size","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-a-v-c-configuration-box/size.html","searchKeys":["size","open override val size: Int","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.AVCConfigurationBox.size"]},{"name":"open override val size: Int","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.AudioSampleEntry.size","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-audio-sample-entry/size.html","searchKeys":["size","open override val size: Int","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.AudioSampleEntry.size"]},{"name":"open override val size: Int","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.BitRateBox.size","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-bit-rate-box/size.html","searchKeys":["size","open override val size: Int","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.BitRateBox.size"]},{"name":"open override val size: Int","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.Box.size","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-box/size.html","searchKeys":["size","open override val size: Int","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.Box.size"]},{"name":"open override val size: Int","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.ChunkLargeOffsetBox.size","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-chunk-large-offset-box/size.html","searchKeys":["size","open override val size: Int","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.ChunkLargeOffsetBox.size"]},{"name":"open override val size: Int","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.ChunkOffsetBox.size","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-chunk-offset-box/size.html","searchKeys":["size","open override val size: Int","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.ChunkOffsetBox.size"]},{"name":"open override val size: Int","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.CleanApertureBox.size","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-clean-aperture-box/size.html","searchKeys":["size","open override val size: Int","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.CleanApertureBox.size"]},{"name":"open override val size: Int","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.DataEntryUrlBox.size","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-data-entry-url-box/size.html","searchKeys":["size","open override val size: Int","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.DataEntryUrlBox.size"]},{"name":"open override val size: Int","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.DataEntryUrnBox.size","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-data-entry-urn-box/size.html","searchKeys":["size","open override val size: Int","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.DataEntryUrnBox.size"]},{"name":"open override val size: Int","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.DataInformationBox.size","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-data-information-box/size.html","searchKeys":["size","open override val size: Int","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.DataInformationBox.size"]},{"name":"open override val size: Int","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.DataReferenceBox.size","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-data-reference-box/size.html","searchKeys":["size","open override val size: Int","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.DataReferenceBox.size"]},{"name":"open override val size: Int","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.ESDSBox.size","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-e-s-d-s-box/size.html","searchKeys":["size","open override val size: Int","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.ESDSBox.size"]},{"name":"open override val size: Int","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.FileTypeBox.size","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-file-type-box/size.html","searchKeys":["size","open override val size: Int","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.FileTypeBox.size"]},{"name":"open override val size: Int","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.FullBox.size","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-full-box/size.html","searchKeys":["size","open override val size: Int","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.FullBox.size"]},{"name":"open override val size: Int","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.HEVCConfigurationBox.size","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-h-e-v-c-configuration-box/size.html","searchKeys":["size","open override val size: Int","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.HEVCConfigurationBox.size"]},{"name":"open override val size: Int","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.HandlerBox.size","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-handler-box/size.html","searchKeys":["size","open override val size: Int","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.HandlerBox.size"]},{"name":"open override val size: Int","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.MediaBox.size","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-media-box/size.html","searchKeys":["size","open override val size: Int","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.MediaBox.size"]},{"name":"open override val size: Int","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.MediaDataBox.size","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-media-data-box/size.html","searchKeys":["size","open override val size: Int","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.MediaDataBox.size"]},{"name":"open override val size: Int","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.MediaHeaderBox.size","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-media-header-box/size.html","searchKeys":["size","open override val size: Int","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.MediaHeaderBox.size"]},{"name":"open override val size: Int","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.MediaInformationBox.size","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-media-information-box/size.html","searchKeys":["size","open override val size: Int","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.MediaInformationBox.size"]},{"name":"open override val size: Int","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.MovieBox.size","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-movie-box/size.html","searchKeys":["size","open override val size: Int","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.MovieBox.size"]},{"name":"open override val size: Int","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.MovieExtendsBox.size","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-movie-extends-box/size.html","searchKeys":["size","open override val size: Int","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.MovieExtendsBox.size"]},{"name":"open override val size: Int","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.MovieFragmentBox.size","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-movie-fragment-box/size.html","searchKeys":["size","open override val size: Int","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.MovieFragmentBox.size"]},{"name":"open override val size: Int","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.MovieFragmentHeaderBox.size","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-movie-fragment-header-box/size.html","searchKeys":["size","open override val size: Int","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.MovieFragmentHeaderBox.size"]},{"name":"open override val size: Int","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.MovieFragmentRandomAccessBox.size","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-movie-fragment-random-access-box/size.html","searchKeys":["size","open override val size: Int","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.MovieFragmentRandomAccessBox.size"]},{"name":"open override val size: Int","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.MovieFragmentRandomAccessOffsetBox.size","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-movie-fragment-random-access-offset-box/size.html","searchKeys":["size","open override val size: Int","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.MovieFragmentRandomAccessOffsetBox.size"]},{"name":"open override val size: Int","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.MovieHeaderBox.size","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-movie-header-box/size.html","searchKeys":["size","open override val size: Int","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.MovieHeaderBox.size"]},{"name":"open override val size: Int","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.OpusSpecificBox.size","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-opus-specific-box/size.html","searchKeys":["size","open override val size: Int","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.OpusSpecificBox.size"]},{"name":"open override val size: Int","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.PixelAspectRatioBox.size","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-pixel-aspect-ratio-box/size.html","searchKeys":["size","open override val size: Int","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.PixelAspectRatioBox.size"]},{"name":"open override val size: Int","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.SampleDescriptionBox.size","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-sample-description-box/size.html","searchKeys":["size","open override val size: Int","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.SampleDescriptionBox.size"]},{"name":"open override val size: Int","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.SampleEntry.size","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-sample-entry/size.html","searchKeys":["size","open override val size: Int","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.SampleEntry.size"]},{"name":"open override val size: Int","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.SampleSizeBox.size","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-sample-size-box/size.html","searchKeys":["size","open override val size: Int","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.SampleSizeBox.size"]},{"name":"open override val size: Int","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.SampleTableBox.size","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-sample-table-box/size.html","searchKeys":["size","open override val size: Int","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.SampleTableBox.size"]},{"name":"open override val size: Int","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.SampleToChunkBox.size","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-sample-to-chunk-box/size.html","searchKeys":["size","open override val size: Int","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.SampleToChunkBox.size"]},{"name":"open override val size: Int","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.SoundMediaHeaderBox.size","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-sound-media-header-box/size.html","searchKeys":["size","open override val size: Int","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.SoundMediaHeaderBox.size"]},{"name":"open override val size: Int","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.SyncSampleBox.size","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-sync-sample-box/size.html","searchKeys":["size","open override val size: Int","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.SyncSampleBox.size"]},{"name":"open override val size: Int","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.TimeToSampleBox.size","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-time-to-sample-box/size.html","searchKeys":["size","open override val size: Int","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.TimeToSampleBox.size"]},{"name":"open override val size: Int","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.TrackBox.size","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-track-box/size.html","searchKeys":["size","open override val size: Int","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.TrackBox.size"]},{"name":"open override val size: Int","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.TrackExtendsBox.size","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-track-extends-box/size.html","searchKeys":["size","open override val size: Int","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.TrackExtendsBox.size"]},{"name":"open override val size: Int","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.TrackFragmentBaseMediaDecodeTimeBox.size","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-track-fragment-base-media-decode-time-box/size.html","searchKeys":["size","open override val size: Int","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.TrackFragmentBaseMediaDecodeTimeBox.size"]},{"name":"open override val size: Int","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.TrackFragmentBox.size","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-track-fragment-box/size.html","searchKeys":["size","open override val size: Int","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.TrackFragmentBox.size"]},{"name":"open override val size: Int","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.TrackFragmentHeaderBox.size","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-track-fragment-header-box/size.html","searchKeys":["size","open override val size: Int","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.TrackFragmentHeaderBox.size"]},{"name":"open override val size: Int","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.TrackFragmentRandomAccessBox.size","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-track-fragment-random-access-box/size.html","searchKeys":["size","open override val size: Int","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.TrackFragmentRandomAccessBox.size"]},{"name":"open override val size: Int","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.TrackHeaderBox.size","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-track-header-box/size.html","searchKeys":["size","open override val size: Int","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.TrackHeaderBox.size"]},{"name":"open override val size: Int","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.TrackRunBox.Entry.size","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-track-run-box/-entry/size.html","searchKeys":["size","open override val size: Int","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.TrackRunBox.Entry.size"]},{"name":"open override val size: Int","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.TrackRunBox.size","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-track-run-box/size.html","searchKeys":["size","open override val size: Int","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.TrackRunBox.size"]},{"name":"open override val size: Int","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.VPCodecConfigurationBox.size","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-v-p-codec-configuration-box/size.html","searchKeys":["size","open override val size: Int","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.VPCodecConfigurationBox.size"]},{"name":"open override val size: Int","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.VideoMediaHeaderBox.size","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-video-media-header-box/size.html","searchKeys":["size","open override val size: Int","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.VideoMediaHeaderBox.size"]},{"name":"open override val size: Int","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.VisualSampleEntry.size","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-visual-sample-entry/size.html","searchKeys":["size","open override val size: Int","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.VisualSampleEntry.size"]},{"name":"open override val size: Int","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.descriptors.AdaptationField.size","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.descriptors/-adaptation-field/size.html","searchKeys":["size","open override val size: Int","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.descriptors.AdaptationField.size"]},{"name":"open override val size: Int","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets.Pat.size","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets/-pat/size.html","searchKeys":["size","open override val size: Int","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets.Pat.size"]},{"name":"open override val size: Int","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets.PesHeader.size","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets/-pes-header/size.html","searchKeys":["size","open override val size: Int","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets.PesHeader.size"]},{"name":"open override val size: Int","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets.Pmt.size","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets/-pmt/size.html","searchKeys":["size","open override val size: Int","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets.Pmt.size"]},{"name":"open override val size: Int","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets.Sdt.size","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets/-sdt/size.html","searchKeys":["size","open override val size: Int","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets.Sdt.size"]},{"name":"open override val size: Int","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets.TableHeader.size","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets/-table-header/size.html","searchKeys":["size","open override val size: Int","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets.TableHeader.size"]},{"name":"open override val size: Int","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.utils.av.OpusControlHeader.size","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.utils.av/-opus-control-header/size.html","searchKeys":["size","open override val size: Int","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.utils.av.OpusControlHeader.size"]},{"name":"open override val size: Int","description":"io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.ADTS.size","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac/-a-d-t-s/size.html","searchKeys":["size","open override val size: Int","io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.ADTS.size"]},{"name":"open override val size: Int","description":"io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.ADTSFrameWriter.size","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac/-a-d-t-s-frame-writer/size.html","searchKeys":["size","open override val size: Int","io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.ADTSFrameWriter.size"]},{"name":"open override val size: Int","description":"io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.AudioMuxElement.size","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac/-audio-mux-element/size.html","searchKeys":["size","open override val size: Int","io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.AudioMuxElement.size"]},{"name":"open override val size: Int","description":"io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.LATMFrameWriter.size","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac/-l-a-t-m-frame-writer/size.html","searchKeys":["size","open override val size: Int","io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.LATMFrameWriter.size"]},{"name":"open override val size: Int","description":"io.github.thibaultbee.streampack.core.elements.utils.av.audio.opus.IdentificationHeader.ChannelMapping.size","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.audio.opus/-identification-header/-channel-mapping/size.html","searchKeys":["size","open override val size: Int","io.github.thibaultbee.streampack.core.elements.utils.av.audio.opus.IdentificationHeader.ChannelMapping.size"]},{"name":"open override val size: Int","description":"io.github.thibaultbee.streampack.core.elements.utils.av.audio.opus.IdentificationHeader.size","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.audio.opus/-identification-header/size.html","searchKeys":["size","open override val size: Int","io.github.thibaultbee.streampack.core.elements.utils.av.audio.opus.IdentificationHeader.size"]},{"name":"open override val size: Int","description":"io.github.thibaultbee.streampack.core.elements.utils.av.buffer.AVCCBufferWriter.size","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.buffer/-a-v-c-c-buffer-writer/size.html","searchKeys":["size","open override val size: Int","io.github.thibaultbee.streampack.core.elements.utils.av.buffer.AVCCBufferWriter.size"]},{"name":"open override val size: Int","description":"io.github.thibaultbee.streampack.core.elements.utils.av.buffer.BitBufferWriter.size","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.buffer/-bit-buffer-writer/size.html","searchKeys":["size","open override val size: Int","io.github.thibaultbee.streampack.core.elements.utils.av.buffer.BitBufferWriter.size"]},{"name":"open override val size: Int","description":"io.github.thibaultbee.streampack.core.elements.utils.av.buffer.PassthroughBufferWriter.size","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.buffer/-passthrough-buffer-writer/size.html","searchKeys":["size","open override val size: Int","io.github.thibaultbee.streampack.core.elements.utils.av.buffer.PassthroughBufferWriter.size"]},{"name":"open override val size: Int","description":"io.github.thibaultbee.streampack.core.elements.utils.av.descriptors.BaseDescriptor.size","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.descriptors/-base-descriptor/size.html","searchKeys":["size","open override val size: Int","io.github.thibaultbee.streampack.core.elements.utils.av.descriptors.BaseDescriptor.size"]},{"name":"open override val size: Int","description":"io.github.thibaultbee.streampack.core.elements.utils.av.video.av1.AV1CodecConfigurationRecord.size","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.video.av1/-a-v1-codec-configuration-record/size.html","searchKeys":["size","open override val size: Int","io.github.thibaultbee.streampack.core.elements.utils.av.video.av1.AV1CodecConfigurationRecord.size"]},{"name":"open override val size: Int","description":"io.github.thibaultbee.streampack.core.elements.utils.av.video.avc.AVCDecoderConfigurationRecord.size","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.video.avc/-a-v-c-decoder-configuration-record/size.html","searchKeys":["size","open override val size: Int","io.github.thibaultbee.streampack.core.elements.utils.av.video.avc.AVCDecoderConfigurationRecord.size"]},{"name":"open override val size: Int","description":"io.github.thibaultbee.streampack.core.elements.utils.av.video.hevc.HEVCDecoderConfigurationRecord.size","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.video.hevc/-h-e-v-c-decoder-configuration-record/size.html","searchKeys":["size","open override val size: Int","io.github.thibaultbee.streampack.core.elements.utils.av.video.hevc.HEVCDecoderConfigurationRecord.size"]},{"name":"open override val size: Int","description":"io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.VPCodecConfigurationRecord.size","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx/-v-p-codec-configuration-record/size.html","searchKeys":["size","open override val size: Int","io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.VPCodecConfigurationRecord.size"]},{"name":"open override val size: Int = 12","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.SampleToChunkBox.Entry.size","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-sample-to-chunk-box/-entry/size.html","searchKeys":["size","open override val size: Int = 12","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.SampleToChunkBox.Entry.size"]},{"name":"open override val size: Int = 19","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.TrackFragmentRandomAccessBox.Entry.size","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-track-fragment-random-access-box/-entry/size.html","searchKeys":["size","open override val size: Int = 19","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.TrackFragmentRandomAccessBox.Entry.size"]},{"name":"open override val size: Int = 8","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.TimeToSampleBox.Entry.size","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-time-to-sample-box/-entry/size.html","searchKeys":["size","open override val size: Int = 8","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.TimeToSampleBox.Entry.size"]},{"name":"open override val startBitrate: Int","description":"io.github.thibaultbee.streampack.core.elements.encoders.mediacodec.MediaCodecEncoder.startBitrate","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.encoders.mediacodec/-media-codec-encoder/start-bitrate.html","searchKeys":["startBitrate","open override val startBitrate: Int","io.github.thibaultbee.streampack.core.elements.encoders.mediacodec.MediaCodecEncoder.startBitrate"]},{"name":"open override val supportedByteFormats: List<Int>","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.AudioFlvMuxerInfo.supportedByteFormats","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv/-audio-flv-muxer-info/supported-byte-formats.html","searchKeys":["supportedByteFormats","open override val supportedByteFormats: List<Int>","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.AudioFlvMuxerInfo.supportedByteFormats"]},{"name":"open override val supportedByteFormats: List<Int>? = null","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.AudioMP4MuxerInfo.supportedByteFormats","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4/-audio-m-p4-muxer-info/supported-byte-formats.html","searchKeys":["supportedByteFormats","open override val supportedByteFormats: List<Int>? = null","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.AudioMP4MuxerInfo.supportedByteFormats"]},{"name":"open override val supportedByteFormats: List<Int>? = null","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.AudioTSMuxerInfo.supportedByteFormats","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts/-audio-t-s-muxer-info/supported-byte-formats.html","searchKeys":["supportedByteFormats","open override val supportedByteFormats: List<Int>? = null","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.AudioTSMuxerInfo.supportedByteFormats"]},{"name":"open override val supportedEncoders: List<String>","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.AudioFlvMuxerInfo.supportedEncoders","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv/-audio-flv-muxer-info/supported-encoders.html","searchKeys":["supportedEncoders","open override val supportedEncoders: List<String>","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.AudioFlvMuxerInfo.supportedEncoders"]},{"name":"open override val supportedEncoders: List<String>","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.VideoFlvMuxerInfo.supportedEncoders","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv/-video-flv-muxer-info/supported-encoders.html","searchKeys":["supportedEncoders","open override val supportedEncoders: List<String>","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.VideoFlvMuxerInfo.supportedEncoders"]},{"name":"open override val supportedEncoders: List<String>","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.AudioMP4MuxerInfo.supportedEncoders","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4/-audio-m-p4-muxer-info/supported-encoders.html","searchKeys":["supportedEncoders","open override val supportedEncoders: List<String>","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.AudioMP4MuxerInfo.supportedEncoders"]},{"name":"open override val supportedEncoders: List<String>","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.VideoMP4MuxerInfo.supportedEncoders","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4/-video-m-p4-muxer-info/supported-encoders.html","searchKeys":["supportedEncoders","open override val supportedEncoders: List<String>","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.VideoMP4MuxerInfo.supportedEncoders"]},{"name":"open override val supportedEncoders: List<String>","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.AudioTSMuxerInfo.supportedEncoders","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts/-audio-t-s-muxer-info/supported-encoders.html","searchKeys":["supportedEncoders","open override val supportedEncoders: List<String>","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.AudioTSMuxerInfo.supportedEncoders"]},{"name":"open override val supportedEncoders: List<String>","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.VideoTSMuxerInfo.supportedEncoders","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts/-video-t-s-muxer-info/supported-encoders.html","searchKeys":["supportedEncoders","open override val supportedEncoders: List<String>","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.VideoTSMuxerInfo.supportedEncoders"]},{"name":"open override val supportedEncoders: List<String>","description":"io.github.thibaultbee.streampack.core.streamers.infos.AudioStreamerConfigurationInfo.supportedEncoders","location":"streampack-core/io.github.thibaultbee.streampack.core.streamers.infos/-audio-streamer-configuration-info/supported-encoders.html","searchKeys":["supportedEncoders","open override val supportedEncoders: List<String>","io.github.thibaultbee.streampack.core.streamers.infos.AudioStreamerConfigurationInfo.supportedEncoders"]},{"name":"open override val supportedEncoders: List<String>","description":"io.github.thibaultbee.streampack.core.streamers.infos.VideoStreamerConfigurationInfo.supportedEncoders","location":"streampack-core/io.github.thibaultbee.streampack.core.streamers.infos/-video-streamer-configuration-info/supported-encoders.html","searchKeys":["supportedEncoders","open override val supportedEncoders: List<String>","io.github.thibaultbee.streampack.core.streamers.infos.VideoStreamerConfigurationInfo.supportedEncoders"]},{"name":"open override val supportedSampleRates: List<Int>","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.AudioFlvMuxerInfo.supportedSampleRates","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv/-audio-flv-muxer-info/supported-sample-rates.html","searchKeys":["supportedSampleRates","open override val supportedSampleRates: List<Int>","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.AudioFlvMuxerInfo.supportedSampleRates"]},{"name":"open override val supportedSampleRates: List<Int>? = null","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.AudioMP4MuxerInfo.supportedSampleRates","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4/-audio-m-p4-muxer-info/supported-sample-rates.html","searchKeys":["supportedSampleRates","open override val supportedSampleRates: List<Int>? = null","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.AudioMP4MuxerInfo.supportedSampleRates"]},{"name":"open override val supportedSampleRates: List<Int>? = null","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.AudioTSMuxerInfo.supportedSampleRates","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts/-audio-t-s-muxer-info/supported-sample-rates.html","searchKeys":["supportedSampleRates","open override val supportedSampleRates: List<Int>? = null","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.AudioTSMuxerInfo.supportedSampleRates"]},{"name":"open override val supportedSinkTypes: List<MediaSinkType>","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.sinks.ChunkedFileOutputStreamSink.supportedSinkTypes","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.sinks/-chunked-file-output-stream-sink/supported-sink-types.html","searchKeys":["supportedSinkTypes","open override val supportedSinkTypes: List<MediaSinkType>","io.github.thibaultbee.streampack.core.elements.endpoints.composites.sinks.ChunkedFileOutputStreamSink.supportedSinkTypes"]},{"name":"open override val supportedSinkTypes: List<MediaSinkType>","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.sinks.ContentSink.supportedSinkTypes","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.sinks/-content-sink/supported-sink-types.html","searchKeys":["supportedSinkTypes","open override val supportedSinkTypes: List<MediaSinkType>","io.github.thibaultbee.streampack.core.elements.endpoints.composites.sinks.ContentSink.supportedSinkTypes"]},{"name":"open override val supportedSinkTypes: List<MediaSinkType>","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.sinks.FakeSink.supportedSinkTypes","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.sinks/-fake-sink/supported-sink-types.html","searchKeys":["supportedSinkTypes","open override val supportedSinkTypes: List<MediaSinkType>","io.github.thibaultbee.streampack.core.elements.endpoints.composites.sinks.FakeSink.supportedSinkTypes"]},{"name":"open override val supportedSinkTypes: List<MediaSinkType>","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.sinks.FileSink.supportedSinkTypes","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.sinks/-file-sink/supported-sink-types.html","searchKeys":["supportedSinkTypes","open override val supportedSinkTypes: List<MediaSinkType>","io.github.thibaultbee.streampack.core.elements.endpoints.composites.sinks.FileSink.supportedSinkTypes"]},{"name":"open override val throwableFlow: StateFlow<Throwable?>","description":"io.github.thibaultbee.streampack.core.pipelines.StreamerPipeline.throwableFlow","location":"streampack-core/io.github.thibaultbee.streampack.core.pipelines/-streamer-pipeline/throwable-flow.html","searchKeys":["throwableFlow","open override val throwableFlow: StateFlow<Throwable?>","io.github.thibaultbee.streampack.core.pipelines.StreamerPipeline.throwableFlow"]},{"name":"open override val throwableFlow: StateFlow<Throwable?>","description":"io.github.thibaultbee.streampack.core.streamers.dual.DualStreamer.throwableFlow","location":"streampack-core/io.github.thibaultbee.streampack.core.streamers.dual/-dual-streamer/throwable-flow.html","searchKeys":["throwableFlow","open override val throwableFlow: StateFlow<Throwable?>","io.github.thibaultbee.streampack.core.streamers.dual.DualStreamer.throwableFlow"]},{"name":"open override val throwableFlow: StateFlow<Throwable?>","description":"io.github.thibaultbee.streampack.core.streamers.dual.VideoOnlyDualStreamer.throwableFlow","location":"streampack-core/io.github.thibaultbee.streampack.core.streamers.dual/-video-only-dual-streamer/throwable-flow.html","searchKeys":["throwableFlow","open override val throwableFlow: StateFlow<Throwable?>","io.github.thibaultbee.streampack.core.streamers.dual.VideoOnlyDualStreamer.throwableFlow"]},{"name":"open override val throwableFlow: StateFlow<Throwable?>","description":"io.github.thibaultbee.streampack.core.streamers.single.AudioOnlySingleStreamer.throwableFlow","location":"streampack-core/io.github.thibaultbee.streampack.core.streamers.single/-audio-only-single-streamer/throwable-flow.html","searchKeys":["throwableFlow","open override val throwableFlow: StateFlow<Throwable?>","io.github.thibaultbee.streampack.core.streamers.single.AudioOnlySingleStreamer.throwableFlow"]},{"name":"open override val throwableFlow: StateFlow<Throwable?>","description":"io.github.thibaultbee.streampack.core.streamers.single.SingleStreamer.throwableFlow","location":"streampack-core/io.github.thibaultbee.streampack.core.streamers.single/-single-streamer/throwable-flow.html","searchKeys":["throwableFlow","open override val throwableFlow: StateFlow<Throwable?>","io.github.thibaultbee.streampack.core.streamers.single.SingleStreamer.throwableFlow"]},{"name":"open override val throwableFlow: StateFlow<Throwable?>","description":"io.github.thibaultbee.streampack.core.streamers.single.VideoOnlySingleStreamer.throwableFlow","location":"streampack-core/io.github.thibaultbee.streampack.core.streamers.single/-video-only-single-streamer/throwable-flow.html","searchKeys":["throwableFlow","open override val throwableFlow: StateFlow<Throwable?>","io.github.thibaultbee.streampack.core.streamers.single.VideoOnlySingleStreamer.throwableFlow"]},{"name":"open override val uri: Uri","description":"io.github.thibaultbee.streampack.core.configuration.mediadescriptor.UriMediaDescriptor.uri","location":"streampack-core/io.github.thibaultbee.streampack.core.configuration.mediadescriptor/-uri-media-descriptor/uri.html","searchKeys":["uri","open override val uri: Uri","io.github.thibaultbee.streampack.core.configuration.mediadescriptor.UriMediaDescriptor.uri"]},{"name":"open override val uri: Uri","description":"io.github.thibaultbee.streampack.core.elements.endpoints.CombineEndpoint.CombineDescriptor.uri","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints/-combine-endpoint/-combine-descriptor/uri.html","searchKeys":["uri","open override val uri: Uri","io.github.thibaultbee.streampack.core.elements.endpoints.CombineEndpoint.CombineDescriptor.uri"]},{"name":"open override val value: T","description":"io.github.thibaultbee.streampack.core.elements.utils.DerivedStateFlow.value","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils/-derived-state-flow/value.html","searchKeys":["value","open override val value: T","io.github.thibaultbee.streampack.core.elements.utils.DerivedStateFlow.value"]},{"name":"open override val video: IEndpoint.IEndpointInfo.IVideoEndpointInfo","description":"io.github.thibaultbee.streampack.core.elements.endpoints.MediaMuxerEndpoint.Mp4EndpointInfo.video","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints/-media-muxer-endpoint/-mp4-endpoint-info/video.html","searchKeys":["video","open override val video: IEndpoint.IEndpointInfo.IVideoEndpointInfo","io.github.thibaultbee.streampack.core.elements.endpoints.MediaMuxerEndpoint.Mp4EndpointInfo.video"]},{"name":"open override val video: IEndpoint.IEndpointInfo.IVideoEndpointInfo","description":"io.github.thibaultbee.streampack.core.elements.endpoints.MediaMuxerEndpoint.OggEndpointInfo.video","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints/-media-muxer-endpoint/-ogg-endpoint-info/video.html","searchKeys":["video","open override val video: IEndpoint.IEndpointInfo.IVideoEndpointInfo","io.github.thibaultbee.streampack.core.elements.endpoints.MediaMuxerEndpoint.OggEndpointInfo.video"]},{"name":"open override val video: IEndpoint.IEndpointInfo.IVideoEndpointInfo","description":"io.github.thibaultbee.streampack.core.elements.endpoints.MediaMuxerEndpoint.ThreeGPEndpointInfo.video","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints/-media-muxer-endpoint/-three-g-p-endpoint-info/video.html","searchKeys":["video","open override val video: IEndpoint.IEndpointInfo.IVideoEndpointInfo","io.github.thibaultbee.streampack.core.elements.endpoints.MediaMuxerEndpoint.ThreeGPEndpointInfo.video"]},{"name":"open override val video: IEndpoint.IEndpointInfo.IVideoEndpointInfo","description":"io.github.thibaultbee.streampack.core.elements.endpoints.MediaMuxerEndpoint.WebMEndpointInfo.video","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints/-media-muxer-endpoint/-web-m-endpoint-info/video.html","searchKeys":["video","open override val video: IEndpoint.IEndpointInfo.IVideoEndpointInfo","io.github.thibaultbee.streampack.core.elements.endpoints.MediaMuxerEndpoint.WebMEndpointInfo.video"]},{"name":"open override val video: IEndpoint.IEndpointInfo.IVideoEndpointInfo","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.CompositeEndpoint.EndpointInfo.video","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites/-composite-endpoint/-endpoint-info/video.html","searchKeys":["video","open override val video: IEndpoint.IEndpointInfo.IVideoEndpointInfo","io.github.thibaultbee.streampack.core.elements.endpoints.composites.CompositeEndpoint.EndpointInfo.video"]},{"name":"open override val video: VideoCameraStreamerConfigurationInfo","description":"io.github.thibaultbee.streampack.core.streamers.infos.CameraStreamerConfigurationInfo.video","location":"streampack-core/io.github.thibaultbee.streampack.core.streamers.infos/-camera-streamer-configuration-info/video.html","searchKeys":["video","open override val video: VideoCameraStreamerConfigurationInfo","io.github.thibaultbee.streampack.core.streamers.infos.CameraStreamerConfigurationInfo.video"]},{"name":"open override val video: VideoFlvMuxerInfo","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.FlvMuxerInfo.video","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv/-flv-muxer-info/video.html","searchKeys":["video","open override val video: VideoFlvMuxerInfo","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.FlvMuxerInfo.video"]},{"name":"open override val video: VideoMP4MuxerInfo","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.MP4MuxerInfo.video","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4/-m-p4-muxer-info/video.html","searchKeys":["video","open override val video: VideoMP4MuxerInfo","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.MP4MuxerInfo.video"]},{"name":"open override val video: VideoStreamerConfigurationInfo","description":"io.github.thibaultbee.streampack.core.streamers.infos.StreamerConfigurationInfo.video","location":"streampack-core/io.github.thibaultbee.streampack.core.streamers.infos/-streamer-configuration-info/video.html","searchKeys":["video","open override val video: VideoStreamerConfigurationInfo","io.github.thibaultbee.streampack.core.streamers.infos.StreamerConfigurationInfo.video"]},{"name":"open override val video: VideoTSMuxerInfo","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.TSMuxerInfo.video","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts/-t-s-muxer-info/video.html","searchKeys":["video","open override val video: VideoTSMuxerInfo","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.TSMuxerInfo.video"]},{"name":"open override val videoConfigFlow: StateFlow<VideoConfig?>","description":"io.github.thibaultbee.streampack.core.streamers.single.SingleStreamer.videoConfigFlow","location":"streampack-core/io.github.thibaultbee.streampack.core.streamers.single/-single-streamer/video-config-flow.html","searchKeys":["videoConfigFlow","open override val videoConfigFlow: StateFlow<VideoConfig?>","io.github.thibaultbee.streampack.core.streamers.single.SingleStreamer.videoConfigFlow"]},{"name":"open override val videoConfigFlow: StateFlow<VideoConfig?>","description":"io.github.thibaultbee.streampack.core.streamers.single.VideoOnlySingleStreamer.videoConfigFlow","location":"streampack-core/io.github.thibaultbee.streampack.core.streamers.single/-video-only-single-streamer/video-config-flow.html","searchKeys":["videoConfigFlow","open override val videoConfigFlow: StateFlow<VideoConfig?>","io.github.thibaultbee.streampack.core.streamers.single.VideoOnlySingleStreamer.videoConfigFlow"]},{"name":"open override val videoEncoder: IEncoder?","description":"io.github.thibaultbee.streampack.core.streamers.single.SingleStreamer.videoEncoder","location":"streampack-core/io.github.thibaultbee.streampack.core.streamers.single/-single-streamer/video-encoder.html","searchKeys":["videoEncoder","open override val videoEncoder: IEncoder?","io.github.thibaultbee.streampack.core.streamers.single.SingleStreamer.videoEncoder"]},{"name":"open override val videoEncoder: IEncoder?","description":"io.github.thibaultbee.streampack.core.streamers.single.VideoOnlySingleStreamer.videoEncoder","location":"streampack-core/io.github.thibaultbee.streampack.core.streamers.single/-video-only-single-streamer/video-encoder.html","searchKeys":["videoEncoder","open override val videoEncoder: IEncoder?","io.github.thibaultbee.streampack.core.streamers.single.VideoOnlySingleStreamer.videoEncoder"]},{"name":"open override val videoInput: IVideoInput","description":"io.github.thibaultbee.streampack.core.streamers.dual.VideoOnlyDualStreamer.videoInput","location":"streampack-core/io.github.thibaultbee.streampack.core.streamers.dual/-video-only-dual-streamer/video-input.html","searchKeys":["videoInput","open override val videoInput: IVideoInput","io.github.thibaultbee.streampack.core.streamers.dual.VideoOnlyDualStreamer.videoInput"]},{"name":"open override val videoInput: IVideoInput","description":"io.github.thibaultbee.streampack.core.streamers.single.VideoOnlySingleStreamer.videoInput","location":"streampack-core/io.github.thibaultbee.streampack.core.streamers.single/-video-only-single-streamer/video-input.html","searchKeys":["videoInput","open override val videoInput: IVideoInput","io.github.thibaultbee.streampack.core.streamers.single.VideoOnlySingleStreamer.videoInput"]},{"name":"open override val videoInput: IVideoInput?","description":"io.github.thibaultbee.streampack.core.pipelines.StreamerPipeline.videoInput","location":"streampack-core/io.github.thibaultbee.streampack.core.pipelines/-streamer-pipeline/video-input.html","searchKeys":["videoInput","open override val videoInput: IVideoInput?","io.github.thibaultbee.streampack.core.pipelines.StreamerPipeline.videoInput"]},{"name":"open override val videoInput: IVideoInput?","description":"io.github.thibaultbee.streampack.core.streamers.dual.DualStreamer.videoInput","location":"streampack-core/io.github.thibaultbee.streampack.core.streamers.dual/-dual-streamer/video-input.html","searchKeys":["videoInput","open override val videoInput: IVideoInput?","io.github.thibaultbee.streampack.core.streamers.dual.DualStreamer.videoInput"]},{"name":"open override val videoInput: IVideoInput?","description":"io.github.thibaultbee.streampack.core.streamers.single.SingleStreamer.videoInput","location":"streampack-core/io.github.thibaultbee.streampack.core.streamers.single/-single-streamer/video-input.html","searchKeys":["videoInput","open override val videoInput: IVideoInput?","io.github.thibaultbee.streampack.core.streamers.single.SingleStreamer.videoInput"]},{"name":"open override val viewportRect: Rect","description":"io.github.thibaultbee.streampack.core.elements.processing.video.outputs.IdentitySurfaceOutput.viewportRect","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.processing.video.outputs/-identity-surface-output/viewport-rect.html","searchKeys":["viewportRect","open override val viewportRect: Rect","io.github.thibaultbee.streampack.core.elements.processing.video.outputs.IdentitySurfaceOutput.viewportRect"]},{"name":"open override val viewportRect: Rect","description":"io.github.thibaultbee.streampack.core.elements.processing.video.outputs.SurfaceOutput.viewportRect","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.processing.video.outputs/-surface-output/viewport-rect.html","searchKeys":["viewportRect","open override val viewportRect: Rect","io.github.thibaultbee.streampack.core.elements.processing.video.outputs.SurfaceOutput.viewportRect"]},{"name":"open override var bitrate: Int","description":"io.github.thibaultbee.streampack.core.elements.encoders.mediacodec.MediaCodecEncoder.bitrate","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.encoders.mediacodec/-media-codec-encoder/bitrate.html","searchKeys":["bitrate","open override var bitrate: Int","io.github.thibaultbee.streampack.core.elements.encoders.mediacodec.MediaCodecEncoder.bitrate"]},{"name":"open override var isMuted: Boolean","description":"io.github.thibaultbee.streampack.core.elements.processing.audio.AudioFrameProcessor.isMuted","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.processing.audio/-audio-frame-processor/is-muted.html","searchKeys":["isMuted","open override var isMuted: Boolean","io.github.thibaultbee.streampack.core.elements.processing.audio.AudioFrameProcessor.isMuted"]},{"name":"open override var listener: IMuxerInternal.IMuxerListener?","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.FlvMuxer.listener","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv/-flv-muxer/listener.html","searchKeys":["listener","open override var listener: IMuxerInternal.IMuxerListener?","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.FlvMuxer.listener"]},{"name":"open override var listener: IMuxerInternal.IMuxerListener?","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.Mp4Muxer.listener","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4/-mp4-muxer/listener.html","searchKeys":["listener","open override var listener: IMuxerInternal.IMuxerListener?","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.Mp4Muxer.listener"]},{"name":"open override var listener: IMuxerInternal.IMuxerListener?","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.TsMuxer.listener","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts/-ts-muxer/listener.html","searchKeys":["listener","open override var listener: IMuxerInternal.IMuxerListener?","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.TsMuxer.listener"]},{"name":"open override var zoomRatio: Float","description":"io.github.thibaultbee.streampack.core.elements.sources.video.camera.CameraSettings.Zoom.CropScalerRegionZoom.zoomRatio","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.video.camera/-camera-settings/-zoom/-crop-scaler-region-zoom/zoom-ratio.html","searchKeys":["zoomRatio","open override var zoomRatio: Float","io.github.thibaultbee.streampack.core.elements.sources.video.camera.CameraSettings.Zoom.CropScalerRegionZoom.zoomRatio"]},{"name":"open override var zoomRatio: Float","description":"io.github.thibaultbee.streampack.core.elements.sources.video.camera.CameraSettings.Zoom.RZoom.zoomRatio","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.video.camera/-camera-settings/-zoom/-r-zoom/zoom-ratio.html","searchKeys":["zoomRatio","open override var zoomRatio: Float","io.github.thibaultbee.streampack.core.elements.sources.video.camera.CameraSettings.Zoom.RZoom.zoomRatio"]},{"name":"open suspend fun onStartStream()","description":"io.github.thibaultbee.streampack.core.pipelines.outputs.IPipelineEventOutputInternal.Listener.onStartStream","location":"streampack-core/io.github.thibaultbee.streampack.core.pipelines.outputs/-i-pipeline-event-output-internal/-listener/on-start-stream.html","searchKeys":["onStartStream","open suspend fun onStartStream()","io.github.thibaultbee.streampack.core.pipelines.outputs.IPipelineEventOutputInternal.Listener.onStartStream"]},{"name":"open suspend fun onStopStream()","description":"io.github.thibaultbee.streampack.core.pipelines.outputs.IPipelineEventOutputInternal.Listener.onStopStream","location":"streampack-core/io.github.thibaultbee.streampack.core.pipelines.outputs/-i-pipeline-event-output-internal/-listener/on-stop-stream.html","searchKeys":["onStopStream","open suspend fun onStopStream()","io.github.thibaultbee.streampack.core.pipelines.outputs.IPipelineEventOutputInternal.Listener.onStopStream"]},{"name":"open suspend fun setAudioSource(audioSourceFactory: IAudioSourceInternal.Factory)","description":"io.github.thibaultbee.streampack.core.interfaces.IWithAudioSource.setAudioSource","location":"streampack-core/io.github.thibaultbee.streampack.core.interfaces/-i-with-audio-source/set-audio-source.html","searchKeys":["setAudioSource","open suspend fun setAudioSource(audioSourceFactory: IAudioSourceInternal.Factory)","io.github.thibaultbee.streampack.core.interfaces.IWithAudioSource.setAudioSource"]},{"name":"open suspend fun setVideoSource(videoSourceFactory: IVideoSourceInternal.Factory)","description":"io.github.thibaultbee.streampack.core.interfaces.IWithVideoSource.setVideoSource","location":"streampack-core/io.github.thibaultbee.streampack.core.interfaces/-i-with-video-source/set-video-source.html","searchKeys":["setVideoSource","open suspend fun setVideoSource(videoSourceFactory: IVideoSourceInternal.Factory)","io.github.thibaultbee.streampack.core.interfaces.IWithVideoSource.setVideoSource"]},{"name":"open suspend override fun close()","description":"io.github.thibaultbee.streampack.core.elements.endpoints.CombineEndpoint.close","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints/-combine-endpoint/close.html","searchKeys":["close","open suspend override fun close()","io.github.thibaultbee.streampack.core.elements.endpoints.CombineEndpoint.close"]},{"name":"open suspend override fun close()","description":"io.github.thibaultbee.streampack.core.elements.endpoints.DynamicEndpoint.close","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints/-dynamic-endpoint/close.html","searchKeys":["close","open suspend override fun close()","io.github.thibaultbee.streampack.core.elements.endpoints.DynamicEndpoint.close"]},{"name":"open suspend override fun close()","description":"io.github.thibaultbee.streampack.core.elements.endpoints.MediaMuxerEndpoint.close","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints/-media-muxer-endpoint/close.html","searchKeys":["close","open suspend override fun close()","io.github.thibaultbee.streampack.core.elements.endpoints.MediaMuxerEndpoint.close"]},{"name":"open suspend override fun close()","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.CompositeEndpoint.close","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites/-composite-endpoint/close.html","searchKeys":["close","open suspend override fun close()","io.github.thibaultbee.streampack.core.elements.endpoints.composites.CompositeEndpoint.close"]},{"name":"open suspend override fun close()","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.sinks.FakeSink.close","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.sinks/-fake-sink/close.html","searchKeys":["close","open suspend override fun close()","io.github.thibaultbee.streampack.core.elements.endpoints.composites.sinks.FakeSink.close"]},{"name":"open suspend override fun close()","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.sinks.FileSink.close","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.sinks/-file-sink/close.html","searchKeys":["close","open suspend override fun close()","io.github.thibaultbee.streampack.core.elements.endpoints.composites.sinks.FileSink.close"]},{"name":"open suspend override fun close()","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.sinks.OutputStreamSink.close","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.sinks/-output-stream-sink/close.html","searchKeys":["close","open suspend override fun close()","io.github.thibaultbee.streampack.core.elements.endpoints.composites.sinks.OutputStreamSink.close"]},{"name":"open suspend override fun close()","description":"io.github.thibaultbee.streampack.core.streamers.dual.DualStreamer.close","location":"streampack-core/io.github.thibaultbee.streampack.core.streamers.dual/-dual-streamer/close.html","searchKeys":["close","open suspend override fun close()","io.github.thibaultbee.streampack.core.streamers.dual.DualStreamer.close"]},{"name":"open suspend override fun close()","description":"io.github.thibaultbee.streampack.core.streamers.dual.VideoOnlyDualStreamer.close","location":"streampack-core/io.github.thibaultbee.streampack.core.streamers.dual/-video-only-dual-streamer/close.html","searchKeys":["close","open suspend override fun close()","io.github.thibaultbee.streampack.core.streamers.dual.VideoOnlyDualStreamer.close"]},{"name":"open suspend override fun close()","description":"io.github.thibaultbee.streampack.core.streamers.single.AudioOnlySingleStreamer.close","location":"streampack-core/io.github.thibaultbee.streampack.core.streamers.single/-audio-only-single-streamer/close.html","searchKeys":["close","open suspend override fun close()","io.github.thibaultbee.streampack.core.streamers.single.AudioOnlySingleStreamer.close"]},{"name":"open suspend override fun close()","description":"io.github.thibaultbee.streampack.core.streamers.single.SingleStreamer.close","location":"streampack-core/io.github.thibaultbee.streampack.core.streamers.single/-single-streamer/close.html","searchKeys":["close","open suspend override fun close()","io.github.thibaultbee.streampack.core.streamers.single.SingleStreamer.close"]},{"name":"open suspend override fun close()","description":"io.github.thibaultbee.streampack.core.streamers.single.VideoOnlySingleStreamer.close","location":"streampack-core/io.github.thibaultbee.streampack.core.streamers.single/-video-only-single-streamer/close.html","searchKeys":["close","open suspend override fun close()","io.github.thibaultbee.streampack.core.streamers.single.VideoOnlySingleStreamer.close"]},{"name":"open suspend override fun collect(collector: FlowCollector<T>): Nothing","description":"io.github.thibaultbee.streampack.core.elements.utils.DerivedStateFlow.collect","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils/-derived-state-flow/collect.html","searchKeys":["collect","open suspend override fun collect(collector: FlowCollector<T>): Nothing","io.github.thibaultbee.streampack.core.elements.utils.DerivedStateFlow.collect"]},{"name":"open suspend override fun create(context: Context): IAudioSourceInternal","description":"io.github.thibaultbee.streampack.core.elements.sources.audio.audiorecord.AudioRecordSourceFactory.create","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.audio.audiorecord/-audio-record-source-factory/create.html","searchKeys":["create","open suspend override fun create(context: Context): IAudioSourceInternal","io.github.thibaultbee.streampack.core.elements.sources.audio.audiorecord.AudioRecordSourceFactory.create"]},{"name":"open suspend override fun create(context: Context): IVideoSourceInternal","description":"io.github.thibaultbee.streampack.core.elements.sources.video.bitmap.BitmapSourceFactory.create","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.video.bitmap/-bitmap-source-factory/create.html","searchKeys":["create","open suspend override fun create(context: Context): IVideoSourceInternal","io.github.thibaultbee.streampack.core.elements.sources.video.bitmap.BitmapSourceFactory.create"]},{"name":"open suspend override fun create(context: Context): IVideoSourceInternal","description":"io.github.thibaultbee.streampack.core.elements.sources.video.camera.CameraSourceFactory.create","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.video.camera/-camera-source-factory/create.html","searchKeys":["create","open suspend override fun create(context: Context): IVideoSourceInternal","io.github.thibaultbee.streampack.core.elements.sources.video.camera.CameraSourceFactory.create"]},{"name":"open suspend override fun create(context: Context): IVideoSourceInternal","description":"io.github.thibaultbee.streampack.core.elements.sources.video.mediaprojection.MediaProjectionVideoSourceFactory.create","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.video.mediaprojection/-media-projection-video-source-factory/create.html","searchKeys":["create","open suspend override fun create(context: Context): IVideoSourceInternal","io.github.thibaultbee.streampack.core.elements.sources.video.mediaprojection.MediaProjectionVideoSourceFactory.create"]},{"name":"open suspend override fun open(descriptor: MediaDescriptor)","description":"io.github.thibaultbee.streampack.core.elements.endpoints.CombineEndpoint.open","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints/-combine-endpoint/open.html","searchKeys":["open","open suspend override fun open(descriptor: MediaDescriptor)","io.github.thibaultbee.streampack.core.elements.endpoints.CombineEndpoint.open"]},{"name":"open suspend override fun open(descriptor: MediaDescriptor)","description":"io.github.thibaultbee.streampack.core.elements.endpoints.DualEndpoint.open","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints/-dual-endpoint/open.html","searchKeys":["open","open suspend override fun open(descriptor: MediaDescriptor)","io.github.thibaultbee.streampack.core.elements.endpoints.DualEndpoint.open"]},{"name":"open suspend override fun open(descriptor: MediaDescriptor)","description":"io.github.thibaultbee.streampack.core.elements.endpoints.DynamicEndpoint.open","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints/-dynamic-endpoint/open.html","searchKeys":["open","open suspend override fun open(descriptor: MediaDescriptor)","io.github.thibaultbee.streampack.core.elements.endpoints.DynamicEndpoint.open"]},{"name":"open suspend override fun open(descriptor: MediaDescriptor)","description":"io.github.thibaultbee.streampack.core.elements.endpoints.DynamicLocalEndpoint.open","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints/-dynamic-local-endpoint/open.html","searchKeys":["open","open suspend override fun open(descriptor: MediaDescriptor)","io.github.thibaultbee.streampack.core.elements.endpoints.DynamicLocalEndpoint.open"]},{"name":"open suspend override fun open(descriptor: MediaDescriptor)","description":"io.github.thibaultbee.streampack.core.elements.endpoints.MediaMuxerEndpoint.open","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints/-media-muxer-endpoint/open.html","searchKeys":["open","open suspend override fun open(descriptor: MediaDescriptor)","io.github.thibaultbee.streampack.core.elements.endpoints.MediaMuxerEndpoint.open"]},{"name":"open suspend override fun open(descriptor: MediaDescriptor)","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.CompositeEndpoint.open","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites/-composite-endpoint/open.html","searchKeys":["open","open suspend override fun open(descriptor: MediaDescriptor)","io.github.thibaultbee.streampack.core.elements.endpoints.composites.CompositeEndpoint.open"]},{"name":"open suspend override fun open(descriptor: MediaDescriptor)","description":"io.github.thibaultbee.streampack.core.streamers.single.AudioOnlySingleStreamer.open","location":"streampack-core/io.github.thibaultbee.streampack.core.streamers.single/-audio-only-single-streamer/open.html","searchKeys":["open","open suspend override fun open(descriptor: MediaDescriptor)","io.github.thibaultbee.streampack.core.streamers.single.AudioOnlySingleStreamer.open"]},{"name":"open suspend override fun open(descriptor: MediaDescriptor)","description":"io.github.thibaultbee.streampack.core.streamers.single.SingleStreamer.open","location":"streampack-core/io.github.thibaultbee.streampack.core.streamers.single/-single-streamer/open.html","searchKeys":["open","open suspend override fun open(descriptor: MediaDescriptor)","io.github.thibaultbee.streampack.core.streamers.single.SingleStreamer.open"]},{"name":"open suspend override fun open(descriptor: MediaDescriptor)","description":"io.github.thibaultbee.streampack.core.streamers.single.VideoOnlySingleStreamer.open","location":"streampack-core/io.github.thibaultbee.streampack.core.streamers.single/-video-only-single-streamer/open.html","searchKeys":["open","open suspend override fun open(descriptor: MediaDescriptor)","io.github.thibaultbee.streampack.core.streamers.single.VideoOnlySingleStreamer.open"]},{"name":"open suspend override fun open(mediaDescriptor: MediaDescriptor)","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.sinks.AbstractSink.open","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.sinks/-abstract-sink/open.html","searchKeys":["open","open suspend override fun open(mediaDescriptor: MediaDescriptor)","io.github.thibaultbee.streampack.core.elements.endpoints.composites.sinks.AbstractSink.open"]},{"name":"open suspend override fun openImpl(mediaDescriptor: MediaDescriptor)","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.sinks.FakeSink.openImpl","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.sinks/-fake-sink/open-impl.html","searchKeys":["openImpl","open suspend override fun openImpl(mediaDescriptor: MediaDescriptor)","io.github.thibaultbee.streampack.core.elements.endpoints.composites.sinks.FakeSink.openImpl"]},{"name":"open suspend override fun openImpl(mediaDescriptor: MediaDescriptor)","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.sinks.FileSink.openImpl","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.sinks/-file-sink/open-impl.html","searchKeys":["openImpl","open suspend override fun openImpl(mediaDescriptor: MediaDescriptor)","io.github.thibaultbee.streampack.core.elements.endpoints.composites.sinks.FileSink.openImpl"]},{"name":"open suspend override fun openImpl(mediaDescriptor: MediaDescriptor)","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.sinks.OutputStreamSink.openImpl","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.sinks/-output-stream-sink/open-impl.html","searchKeys":["openImpl","open suspend override fun openImpl(mediaDescriptor: MediaDescriptor)","io.github.thibaultbee.streampack.core.elements.endpoints.composites.sinks.OutputStreamSink.openImpl"]},{"name":"open suspend override fun openOutputStream(mediaDescriptor: MediaDescriptor): OutputStream","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.sinks.ChunkedFileOutputStreamSink.openOutputStream","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.sinks/-chunked-file-output-stream-sink/open-output-stream.html","searchKeys":["openOutputStream","open suspend override fun openOutputStream(mediaDescriptor: MediaDescriptor): OutputStream","io.github.thibaultbee.streampack.core.elements.endpoints.composites.sinks.ChunkedFileOutputStreamSink.openOutputStream"]},{"name":"open suspend override fun openOutputStream(mediaDescriptor: MediaDescriptor): OutputStream","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.sinks.ContentSink.openOutputStream","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.sinks/-content-sink/open-output-stream.html","searchKeys":["openOutputStream","open suspend override fun openOutputStream(mediaDescriptor: MediaDescriptor): OutputStream","io.github.thibaultbee.streampack.core.elements.endpoints.composites.sinks.ContentSink.openOutputStream"]},{"name":"open suspend override fun release()","description":"io.github.thibaultbee.streampack.core.pipelines.StreamerPipeline.release","location":"streampack-core/io.github.thibaultbee.streampack.core.pipelines/-streamer-pipeline/release.html","searchKeys":["release","open suspend override fun release()","io.github.thibaultbee.streampack.core.pipelines.StreamerPipeline.release"]},{"name":"open suspend override fun release()","description":"io.github.thibaultbee.streampack.core.streamers.dual.DualStreamer.release","location":"streampack-core/io.github.thibaultbee.streampack.core.streamers.dual/-dual-streamer/release.html","searchKeys":["release","open suspend override fun release()","io.github.thibaultbee.streampack.core.streamers.dual.DualStreamer.release"]},{"name":"open suspend override fun release()","description":"io.github.thibaultbee.streampack.core.streamers.dual.VideoOnlyDualStreamer.release","location":"streampack-core/io.github.thibaultbee.streampack.core.streamers.dual/-video-only-dual-streamer/release.html","searchKeys":["release","open suspend override fun release()","io.github.thibaultbee.streampack.core.streamers.dual.VideoOnlyDualStreamer.release"]},{"name":"open suspend override fun release()","description":"io.github.thibaultbee.streampack.core.streamers.single.AudioOnlySingleStreamer.release","location":"streampack-core/io.github.thibaultbee.streampack.core.streamers.single/-audio-only-single-streamer/release.html","searchKeys":["release","open suspend override fun release()","io.github.thibaultbee.streampack.core.streamers.single.AudioOnlySingleStreamer.release"]},{"name":"open suspend override fun release()","description":"io.github.thibaultbee.streampack.core.streamers.single.SingleStreamer.release","location":"streampack-core/io.github.thibaultbee.streampack.core.streamers.single/-single-streamer/release.html","searchKeys":["release","open suspend override fun release()","io.github.thibaultbee.streampack.core.streamers.single.SingleStreamer.release"]},{"name":"open suspend override fun release()","description":"io.github.thibaultbee.streampack.core.streamers.single.VideoOnlySingleStreamer.release","location":"streampack-core/io.github.thibaultbee.streampack.core.streamers.single/-video-only-single-streamer/release.html","searchKeys":["release","open suspend override fun release()","io.github.thibaultbee.streampack.core.streamers.single.VideoOnlySingleStreamer.release"]},{"name":"open suspend override fun requestRelease()","description":"io.github.thibaultbee.streampack.core.elements.sources.video.AbstractPreviewableSource.requestRelease","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.video/-abstract-previewable-source/request-release.html","searchKeys":["requestRelease","open suspend override fun requestRelease()","io.github.thibaultbee.streampack.core.elements.sources.video.AbstractPreviewableSource.requestRelease"]},{"name":"open suspend override fun resetOutput()","description":"io.github.thibaultbee.streampack.core.elements.sources.video.AbstractPreviewableSource.resetOutput","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.video/-abstract-previewable-source/reset-output.html","searchKeys":["resetOutput","open suspend override fun resetOutput()","io.github.thibaultbee.streampack.core.elements.sources.video.AbstractPreviewableSource.resetOutput"]},{"name":"open suspend override fun resetPreview()","description":"io.github.thibaultbee.streampack.core.elements.sources.video.AbstractPreviewableSource.resetPreview","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.video/-abstract-previewable-source/reset-preview.html","searchKeys":["resetPreview","open suspend override fun resetPreview()","io.github.thibaultbee.streampack.core.elements.sources.video.AbstractPreviewableSource.resetPreview"]},{"name":"open suspend override fun setAudioConfig(audioConfig: AudioConfig)","description":"io.github.thibaultbee.streampack.core.streamers.single.AudioOnlySingleStreamer.setAudioConfig","location":"streampack-core/io.github.thibaultbee.streampack.core.streamers.single/-audio-only-single-streamer/set-audio-config.html","searchKeys":["setAudioConfig","open suspend override fun setAudioConfig(audioConfig: AudioConfig)","io.github.thibaultbee.streampack.core.streamers.single.AudioOnlySingleStreamer.setAudioConfig"]},{"name":"open suspend override fun setAudioConfig(audioConfig: AudioConfig)","description":"io.github.thibaultbee.streampack.core.streamers.single.SingleStreamer.setAudioConfig","location":"streampack-core/io.github.thibaultbee.streampack.core.streamers.single/-single-streamer/set-audio-config.html","searchKeys":["setAudioConfig","open suspend override fun setAudioConfig(audioConfig: AudioConfig)","io.github.thibaultbee.streampack.core.streamers.single.SingleStreamer.setAudioConfig"]},{"name":"open suspend override fun setAudioConfig(audioConfig: DualStreamerAudioConfig)","description":"io.github.thibaultbee.streampack.core.streamers.dual.DualStreamer.setAudioConfig","location":"streampack-core/io.github.thibaultbee.streampack.core.streamers.dual/-dual-streamer/set-audio-config.html","searchKeys":["setAudioConfig","open suspend override fun setAudioConfig(audioConfig: DualStreamerAudioConfig)","io.github.thibaultbee.streampack.core.streamers.dual.DualStreamer.setAudioConfig"]},{"name":"open suspend override fun setAudioSource(audioSourceFactory: IAudioSourceInternal.Factory)","description":"io.github.thibaultbee.streampack.core.streamers.single.AudioOnlySingleStreamer.setAudioSource","location":"streampack-core/io.github.thibaultbee.streampack.core.streamers.single/-audio-only-single-streamer/set-audio-source.html","searchKeys":["setAudioSource","open suspend override fun setAudioSource(audioSourceFactory: IAudioSourceInternal.Factory)","io.github.thibaultbee.streampack.core.streamers.single.AudioOnlySingleStreamer.setAudioSource"]},{"name":"open suspend override fun setAudioSource(audioSourceFactory: IAudioSourceInternal.Factory)","description":"io.github.thibaultbee.streampack.core.streamers.single.SingleStreamer.setAudioSource","location":"streampack-core/io.github.thibaultbee.streampack.core.streamers.single/-single-streamer/set-audio-source.html","searchKeys":["setAudioSource","open suspend override fun setAudioSource(audioSourceFactory: IAudioSourceInternal.Factory)","io.github.thibaultbee.streampack.core.streamers.single.SingleStreamer.setAudioSource"]},{"name":"open suspend override fun setTargetRotation(rotation: Int)","description":"io.github.thibaultbee.streampack.core.pipelines.StreamerPipeline.setTargetRotation","location":"streampack-core/io.github.thibaultbee.streampack.core.pipelines/-streamer-pipeline/set-target-rotation.html","searchKeys":["setTargetRotation","open suspend override fun setTargetRotation(rotation: Int)","io.github.thibaultbee.streampack.core.pipelines.StreamerPipeline.setTargetRotation"]},{"name":"open suspend override fun setTargetRotation(rotation: Int)","description":"io.github.thibaultbee.streampack.core.streamers.dual.DualStreamer.setTargetRotation","location":"streampack-core/io.github.thibaultbee.streampack.core.streamers.dual/-dual-streamer/set-target-rotation.html","searchKeys":["setTargetRotation","open suspend override fun setTargetRotation(rotation: Int)","io.github.thibaultbee.streampack.core.streamers.dual.DualStreamer.setTargetRotation"]},{"name":"open suspend override fun setTargetRotation(rotation: Int)","description":"io.github.thibaultbee.streampack.core.streamers.dual.VideoOnlyDualStreamer.setTargetRotation","location":"streampack-core/io.github.thibaultbee.streampack.core.streamers.dual/-video-only-dual-streamer/set-target-rotation.html","searchKeys":["setTargetRotation","open suspend override fun setTargetRotation(rotation: Int)","io.github.thibaultbee.streampack.core.streamers.dual.VideoOnlyDualStreamer.setTargetRotation"]},{"name":"open suspend override fun setTargetRotation(rotation: Int)","description":"io.github.thibaultbee.streampack.core.streamers.single.SingleStreamer.setTargetRotation","location":"streampack-core/io.github.thibaultbee.streampack.core.streamers.single/-single-streamer/set-target-rotation.html","searchKeys":["setTargetRotation","open suspend override fun setTargetRotation(rotation: Int)","io.github.thibaultbee.streampack.core.streamers.single.SingleStreamer.setTargetRotation"]},{"name":"open suspend override fun setTargetRotation(rotation: Int)","description":"io.github.thibaultbee.streampack.core.streamers.single.VideoOnlySingleStreamer.setTargetRotation","location":"streampack-core/io.github.thibaultbee.streampack.core.streamers.single/-video-only-single-streamer/set-target-rotation.html","searchKeys":["setTargetRotation","open suspend override fun setTargetRotation(rotation: Int)","io.github.thibaultbee.streampack.core.streamers.single.VideoOnlySingleStreamer.setTargetRotation"]},{"name":"open suspend override fun setVideoConfig(videoConfig: DualStreamerVideoConfig)","description":"io.github.thibaultbee.streampack.core.streamers.dual.DualStreamer.setVideoConfig","location":"streampack-core/io.github.thibaultbee.streampack.core.streamers.dual/-dual-streamer/set-video-config.html","searchKeys":["setVideoConfig","open suspend override fun setVideoConfig(videoConfig: DualStreamerVideoConfig)","io.github.thibaultbee.streampack.core.streamers.dual.DualStreamer.setVideoConfig"]},{"name":"open suspend override fun setVideoConfig(videoConfig: DualStreamerVideoConfig)","description":"io.github.thibaultbee.streampack.core.streamers.dual.VideoOnlyDualStreamer.setVideoConfig","location":"streampack-core/io.github.thibaultbee.streampack.core.streamers.dual/-video-only-dual-streamer/set-video-config.html","searchKeys":["setVideoConfig","open suspend override fun setVideoConfig(videoConfig: DualStreamerVideoConfig)","io.github.thibaultbee.streampack.core.streamers.dual.VideoOnlyDualStreamer.setVideoConfig"]},{"name":"open suspend override fun setVideoConfig(videoConfig: VideoConfig)","description":"io.github.thibaultbee.streampack.core.streamers.single.SingleStreamer.setVideoConfig","location":"streampack-core/io.github.thibaultbee.streampack.core.streamers.single/-single-streamer/set-video-config.html","searchKeys":["setVideoConfig","open suspend override fun setVideoConfig(videoConfig: VideoConfig)","io.github.thibaultbee.streampack.core.streamers.single.SingleStreamer.setVideoConfig"]},{"name":"open suspend override fun setVideoConfig(videoConfig: VideoConfig)","description":"io.github.thibaultbee.streampack.core.streamers.single.VideoOnlySingleStreamer.setVideoConfig","location":"streampack-core/io.github.thibaultbee.streampack.core.streamers.single/-video-only-single-streamer/set-video-config.html","searchKeys":["setVideoConfig","open suspend override fun setVideoConfig(videoConfig: VideoConfig)","io.github.thibaultbee.streampack.core.streamers.single.VideoOnlySingleStreamer.setVideoConfig"]},{"name":"open suspend override fun startStream()","description":"io.github.thibaultbee.streampack.core.elements.encoders.mediacodec.MediaCodecEncoder.startStream","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.encoders.mediacodec/-media-codec-encoder/start-stream.html","searchKeys":["startStream","open suspend override fun startStream()","io.github.thibaultbee.streampack.core.elements.encoders.mediacodec.MediaCodecEncoder.startStream"]},{"name":"open suspend override fun startStream()","description":"io.github.thibaultbee.streampack.core.elements.endpoints.CombineEndpoint.startStream","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints/-combine-endpoint/start-stream.html","searchKeys":["startStream","open suspend override fun startStream()","io.github.thibaultbee.streampack.core.elements.endpoints.CombineEndpoint.startStream"]},{"name":"open suspend override fun startStream()","description":"io.github.thibaultbee.streampack.core.elements.endpoints.DualEndpoint.startStream","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints/-dual-endpoint/start-stream.html","searchKeys":["startStream","open suspend override fun startStream()","io.github.thibaultbee.streampack.core.elements.endpoints.DualEndpoint.startStream"]},{"name":"open suspend override fun startStream()","description":"io.github.thibaultbee.streampack.core.elements.endpoints.DynamicEndpoint.startStream","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints/-dynamic-endpoint/start-stream.html","searchKeys":["startStream","open suspend override fun startStream()","io.github.thibaultbee.streampack.core.elements.endpoints.DynamicEndpoint.startStream"]},{"name":"open suspend override fun startStream()","description":"io.github.thibaultbee.streampack.core.elements.endpoints.MediaMuxerEndpoint.startStream","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints/-media-muxer-endpoint/start-stream.html","searchKeys":["startStream","open suspend override fun startStream()","io.github.thibaultbee.streampack.core.elements.endpoints.MediaMuxerEndpoint.startStream"]},{"name":"open suspend override fun startStream()","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.CompositeEndpoint.startStream","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites/-composite-endpoint/start-stream.html","searchKeys":["startStream","open suspend override fun startStream()","io.github.thibaultbee.streampack.core.elements.endpoints.composites.CompositeEndpoint.startStream"]},{"name":"open suspend override fun startStream()","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.sinks.FakeSink.startStream","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.sinks/-fake-sink/start-stream.html","searchKeys":["startStream","open suspend override fun startStream()","io.github.thibaultbee.streampack.core.elements.endpoints.composites.sinks.FakeSink.startStream"]},{"name":"open suspend override fun startStream()","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.sinks.FileSink.startStream","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.sinks/-file-sink/start-stream.html","searchKeys":["startStream","open suspend override fun startStream()","io.github.thibaultbee.streampack.core.elements.endpoints.composites.sinks.FileSink.startStream"]},{"name":"open suspend override fun startStream()","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.sinks.OutputStreamSink.startStream","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.sinks/-output-stream-sink/start-stream.html","searchKeys":["startStream","open suspend override fun startStream()","io.github.thibaultbee.streampack.core.elements.endpoints.composites.sinks.OutputStreamSink.startStream"]},{"name":"open suspend override fun startStream()","description":"io.github.thibaultbee.streampack.core.pipelines.StreamerPipeline.startStream","location":"streampack-core/io.github.thibaultbee.streampack.core.pipelines/-streamer-pipeline/start-stream.html","searchKeys":["startStream","open suspend override fun startStream()","io.github.thibaultbee.streampack.core.pipelines.StreamerPipeline.startStream"]},{"name":"open suspend override fun startStream()","description":"io.github.thibaultbee.streampack.core.streamers.dual.DualStreamer.startStream","location":"streampack-core/io.github.thibaultbee.streampack.core.streamers.dual/-dual-streamer/start-stream.html","searchKeys":["startStream","open suspend override fun startStream()","io.github.thibaultbee.streampack.core.streamers.dual.DualStreamer.startStream"]},{"name":"open suspend override fun startStream()","description":"io.github.thibaultbee.streampack.core.streamers.dual.VideoOnlyDualStreamer.startStream","location":"streampack-core/io.github.thibaultbee.streampack.core.streamers.dual/-video-only-dual-streamer/start-stream.html","searchKeys":["startStream","open suspend override fun startStream()","io.github.thibaultbee.streampack.core.streamers.dual.VideoOnlyDualStreamer.startStream"]},{"name":"open suspend override fun startStream()","description":"io.github.thibaultbee.streampack.core.streamers.single.AudioOnlySingleStreamer.startStream","location":"streampack-core/io.github.thibaultbee.streampack.core.streamers.single/-audio-only-single-streamer/start-stream.html","searchKeys":["startStream","open suspend override fun startStream()","io.github.thibaultbee.streampack.core.streamers.single.AudioOnlySingleStreamer.startStream"]},{"name":"open suspend override fun startStream()","description":"io.github.thibaultbee.streampack.core.streamers.single.SingleStreamer.startStream","location":"streampack-core/io.github.thibaultbee.streampack.core.streamers.single/-single-streamer/start-stream.html","searchKeys":["startStream","open suspend override fun startStream()","io.github.thibaultbee.streampack.core.streamers.single.SingleStreamer.startStream"]},{"name":"open suspend override fun startStream()","description":"io.github.thibaultbee.streampack.core.streamers.single.VideoOnlySingleStreamer.startStream","location":"streampack-core/io.github.thibaultbee.streampack.core.streamers.single/-video-only-single-streamer/start-stream.html","searchKeys":["startStream","open suspend override fun startStream()","io.github.thibaultbee.streampack.core.streamers.single.VideoOnlySingleStreamer.startStream"]},{"name":"open suspend override fun stopStream()","description":"io.github.thibaultbee.streampack.core.elements.encoders.mediacodec.MediaCodecEncoder.stopStream","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.encoders.mediacodec/-media-codec-encoder/stop-stream.html","searchKeys":["stopStream","open suspend override fun stopStream()","io.github.thibaultbee.streampack.core.elements.encoders.mediacodec.MediaCodecEncoder.stopStream"]},{"name":"open suspend override fun stopStream()","description":"io.github.thibaultbee.streampack.core.elements.endpoints.CombineEndpoint.stopStream","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints/-combine-endpoint/stop-stream.html","searchKeys":["stopStream","open suspend override fun stopStream()","io.github.thibaultbee.streampack.core.elements.endpoints.CombineEndpoint.stopStream"]},{"name":"open suspend override fun stopStream()","description":"io.github.thibaultbee.streampack.core.elements.endpoints.DynamicEndpoint.stopStream","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints/-dynamic-endpoint/stop-stream.html","searchKeys":["stopStream","open suspend override fun stopStream()","io.github.thibaultbee.streampack.core.elements.endpoints.DynamicEndpoint.stopStream"]},{"name":"open suspend override fun stopStream()","description":"io.github.thibaultbee.streampack.core.elements.endpoints.MediaMuxerEndpoint.stopStream","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints/-media-muxer-endpoint/stop-stream.html","searchKeys":["stopStream","open suspend override fun stopStream()","io.github.thibaultbee.streampack.core.elements.endpoints.MediaMuxerEndpoint.stopStream"]},{"name":"open suspend override fun stopStream()","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.CompositeEndpoint.stopStream","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites/-composite-endpoint/stop-stream.html","searchKeys":["stopStream","open suspend override fun stopStream()","io.github.thibaultbee.streampack.core.elements.endpoints.composites.CompositeEndpoint.stopStream"]},{"name":"open suspend override fun stopStream()","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.sinks.FakeSink.stopStream","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.sinks/-fake-sink/stop-stream.html","searchKeys":["stopStream","open suspend override fun stopStream()","io.github.thibaultbee.streampack.core.elements.endpoints.composites.sinks.FakeSink.stopStream"]},{"name":"open suspend override fun stopStream()","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.sinks.FileSink.stopStream","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.sinks/-file-sink/stop-stream.html","searchKeys":["stopStream","open suspend override fun stopStream()","io.github.thibaultbee.streampack.core.elements.endpoints.composites.sinks.FileSink.stopStream"]},{"name":"open suspend override fun stopStream()","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.sinks.OutputStreamSink.stopStream","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.sinks/-output-stream-sink/stop-stream.html","searchKeys":["stopStream","open suspend override fun stopStream()","io.github.thibaultbee.streampack.core.elements.endpoints.composites.sinks.OutputStreamSink.stopStream"]},{"name":"open suspend override fun stopStream()","description":"io.github.thibaultbee.streampack.core.pipelines.StreamerPipeline.stopStream","location":"streampack-core/io.github.thibaultbee.streampack.core.pipelines/-streamer-pipeline/stop-stream.html","searchKeys":["stopStream","open suspend override fun stopStream()","io.github.thibaultbee.streampack.core.pipelines.StreamerPipeline.stopStream"]},{"name":"open suspend override fun stopStream()","description":"io.github.thibaultbee.streampack.core.streamers.dual.DualStreamer.stopStream","location":"streampack-core/io.github.thibaultbee.streampack.core.streamers.dual/-dual-streamer/stop-stream.html","searchKeys":["stopStream","open suspend override fun stopStream()","io.github.thibaultbee.streampack.core.streamers.dual.DualStreamer.stopStream"]},{"name":"open suspend override fun stopStream()","description":"io.github.thibaultbee.streampack.core.streamers.dual.VideoOnlyDualStreamer.stopStream","location":"streampack-core/io.github.thibaultbee.streampack.core.streamers.dual/-video-only-dual-streamer/stop-stream.html","searchKeys":["stopStream","open suspend override fun stopStream()","io.github.thibaultbee.streampack.core.streamers.dual.VideoOnlyDualStreamer.stopStream"]},{"name":"open suspend override fun stopStream()","description":"io.github.thibaultbee.streampack.core.streamers.single.AudioOnlySingleStreamer.stopStream","location":"streampack-core/io.github.thibaultbee.streampack.core.streamers.single/-audio-only-single-streamer/stop-stream.html","searchKeys":["stopStream","open suspend override fun stopStream()","io.github.thibaultbee.streampack.core.streamers.single.AudioOnlySingleStreamer.stopStream"]},{"name":"open suspend override fun stopStream()","description":"io.github.thibaultbee.streampack.core.streamers.single.SingleStreamer.stopStream","location":"streampack-core/io.github.thibaultbee.streampack.core.streamers.single/-single-streamer/stop-stream.html","searchKeys":["stopStream","open suspend override fun stopStream()","io.github.thibaultbee.streampack.core.streamers.single.SingleStreamer.stopStream"]},{"name":"open suspend override fun stopStream()","description":"io.github.thibaultbee.streampack.core.streamers.single.VideoOnlySingleStreamer.stopStream","location":"streampack-core/io.github.thibaultbee.streampack.core.streamers.single/-video-only-single-streamer/stop-stream.html","searchKeys":["stopStream","open suspend override fun stopStream()","io.github.thibaultbee.streampack.core.streamers.single.VideoOnlySingleStreamer.stopStream"]},{"name":"open suspend override fun write(frame: Frame, streamPid: Int)","description":"io.github.thibaultbee.streampack.core.elements.endpoints.CombineEndpoint.write","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints/-combine-endpoint/write.html","searchKeys":["write","open suspend override fun write(frame: Frame, streamPid: Int)","io.github.thibaultbee.streampack.core.elements.endpoints.CombineEndpoint.write"]},{"name":"open suspend override fun write(frame: Frame, streamPid: Int)","description":"io.github.thibaultbee.streampack.core.elements.endpoints.DynamicEndpoint.write","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints/-dynamic-endpoint/write.html","searchKeys":["write","open suspend override fun write(frame: Frame, streamPid: Int)","io.github.thibaultbee.streampack.core.elements.endpoints.DynamicEndpoint.write"]},{"name":"open suspend override fun write(frame: Frame, streamPid: Int)","description":"io.github.thibaultbee.streampack.core.elements.endpoints.MediaMuxerEndpoint.write","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints/-media-muxer-endpoint/write.html","searchKeys":["write","open suspend override fun write(frame: Frame, streamPid: Int)","io.github.thibaultbee.streampack.core.elements.endpoints.MediaMuxerEndpoint.write"]},{"name":"open suspend override fun write(frame: Frame, streamPid: Int)","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.CompositeEndpoint.write","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites/-composite-endpoint/write.html","searchKeys":["write","open suspend override fun write(frame: Frame, streamPid: Int)","io.github.thibaultbee.streampack.core.elements.endpoints.composites.CompositeEndpoint.write"]},{"name":"open suspend override fun write(packet: Packet): Int","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.sinks.FakeSink.write","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.sinks/-fake-sink/write.html","searchKeys":["write","open suspend override fun write(packet: Packet): Int","io.github.thibaultbee.streampack.core.elements.endpoints.composites.sinks.FakeSink.write"]},{"name":"open suspend override fun write(packet: Packet): Int","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.sinks.FileSink.write","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.sinks/-file-sink/write.html","searchKeys":["write","open suspend override fun write(packet: Packet): Int","io.github.thibaultbee.streampack.core.elements.endpoints.composites.sinks.FileSink.write"]},{"name":"open suspend override fun write(packet: Packet): Int","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.sinks.OutputStreamSink.write","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.sinks/-output-stream-sink/write.html","searchKeys":["write","open suspend override fun write(packet: Packet): Int","io.github.thibaultbee.streampack.core.elements.endpoints.composites.sinks.OutputStreamSink.write"]},{"name":"open val withSource: Boolean","description":"io.github.thibaultbee.streampack.core.pipelines.inputs.IAudioInput.withSource","location":"streampack-core/io.github.thibaultbee.streampack.core.pipelines.inputs/-i-audio-input/with-source.html","searchKeys":["withSource","open val withSource: Boolean","io.github.thibaultbee.streampack.core.pipelines.inputs.IAudioInput.withSource"]},{"name":"open val withSource: Boolean","description":"io.github.thibaultbee.streampack.core.pipelines.inputs.IVideoInput.withSource","location":"streampack-core/io.github.thibaultbee.streampack.core.pipelines.inputs/-i-video-input/with-source.html","searchKeys":["withSource","open val withSource: Boolean","io.github.thibaultbee.streampack.core.pipelines.inputs.IVideoInput.withSource"]},{"name":"open var isMuted: Boolean","description":"io.github.thibaultbee.streampack.core.pipelines.inputs.IAudioInput.isMuted","location":"streampack-core/io.github.thibaultbee.streampack.core.pipelines.inputs/-i-audio-input/is-muted.html","searchKeys":["isMuted","open var isMuted: Boolean","io.github.thibaultbee.streampack.core.pipelines.inputs.IAudioInput.isMuted"]},{"name":"operator fun plusAssign(newJob: Job)","description":"io.github.thibaultbee.streampack.core.elements.utils.ConflatedJob.plusAssign","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils/-conflated-job/plus-assign.html","searchKeys":["plusAssign","operator fun plusAssign(newJob: Job)","io.github.thibaultbee.streampack.core.elements.utils.ConflatedJob.plusAssign"]},{"name":"protected abstract fun writeBody(output: ByteBuffer)","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.FlvTag.writeBody","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags/-flv-tag/write-body.html","searchKeys":["writeBody","protected abstract fun writeBody(output: ByteBuffer)","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.FlvTag.writeBody"]},{"name":"protected abstract fun writeTagHeader(output: ByteBuffer)","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.FlvTag.writeTagHeader","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags/-flv-tag/write-tag-header.html","searchKeys":["writeTagHeader","protected abstract fun writeTagHeader(output: ByteBuffer)","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.FlvTag.writeTagHeader"]},{"name":"protected abstract val bodySize: Int","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.FlvTag.bodySize","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags/-flv-tag/body-size.html","searchKeys":["bodySize","protected abstract val bodySize: Int","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.FlvTag.bodySize"]},{"name":"protected abstract val tagHeaderSize: Int","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.FlvTag.tagHeaderSize","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags/-flv-tag/tag-header-size.html","searchKeys":["tagHeaderSize","protected abstract val tagHeaderSize: Int","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.FlvTag.tagHeaderSize"]},{"name":"protected constructor()","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.AV1CodecConfigurationBox.AV1CodecConfigurationBox","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-a-v1-codec-configuration-box/-a-v1-codec-configuration-box.html","searchKeys":["AV1CodecConfigurationBox","protected constructor()","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.AV1CodecConfigurationBox.AV1CodecConfigurationBox"]},{"name":"protected constructor(cameraManager: CameraManager, cameraSettings: CameraSettings)","description":"io.github.thibaultbee.streampack.core.elements.sources.video.camera.CameraSettings.Zoom.Zoom","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.video.camera/-camera-settings/-zoom/-zoom.html","searchKeys":["Zoom","protected constructor(cameraManager: CameraManager, cameraSettings: CameraSettings)","io.github.thibaultbee.streampack.core.elements.sources.video.camera.CameraSettings.Zoom.Zoom"]},{"name":"protected constructor(codecInfo: MediaCodecInfo, mimeType: String)","description":"io.github.thibaultbee.streampack.core.elements.encoders.mediacodec.EncoderInfo.EncoderInfo","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.encoders.mediacodec/-encoder-info/-encoder-info.html","searchKeys":["EncoderInfo","protected constructor(codecInfo: MediaCodecInfo, mimeType: String)","io.github.thibaultbee.streampack.core.elements.encoders.mediacodec.EncoderInfo.EncoderInfo"]},{"name":"protected constructor(config: T, mode: EncoderMode)","description":"io.github.thibaultbee.streampack.core.elements.encoders.mediacodec.EncoderConfig.EncoderConfig","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.encoders.mediacodec/-encoder-config/-encoder-config.html","searchKeys":["EncoderConfig","protected constructor(config: T, mode: EncoderMode)","io.github.thibaultbee.streampack.core.elements.encoders.mediacodec.EncoderConfig.EncoderConfig"]},{"name":"protected constructor(type: String, dataReferenceId: Short, version: Int = 0)","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.SampleEntry.SampleEntry","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-sample-entry/-sample-entry.html","searchKeys":["SampleEntry","protected constructor(type: String, dataReferenceId: Short, version: Int = 0)","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.SampleEntry.SampleEntry"]},{"name":"protected constructor(type: String, flags: Int)","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.DataEntryBox.DataEntryBox","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-data-entry-box/-data-entry-box.html","searchKeys":["DataEntryBox","protected constructor(type: String, flags: Int)","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.DataEntryBox.DataEntryBox"]},{"name":"protected constructor(type: String, isCompact: Boolean = true)","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.Box.Box","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-box/-box.html","searchKeys":["Box","protected constructor(type: String, isCompact: Boolean = true)","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.Box.Box"]},{"name":"protected constructor(type: String, version: Byte = 0, flags: Int)","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.TypeMediaHeaderBox.TypeMediaHeaderBox","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-type-media-header-box/-type-media-header-box.html","searchKeys":["TypeMediaHeaderBox","protected constructor(type: String, version: Byte = 0, flags: Int)","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.TypeMediaHeaderBox.TypeMediaHeaderBox"]},{"name":"protected constructor(vertexShaderSource: String, fragmentShaderSource: String)","description":"io.github.thibaultbee.streampack.core.elements.processing.video.utils.GLUtils.Program2D.Program2D","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.processing.video.utils/-g-l-utils/-program2-d/-program2-d.html","searchKeys":["Program2D","protected constructor(vertexShaderSource: String, fragmentShaderSource: String)","io.github.thibaultbee.streampack.core.elements.processing.video.utils.GLUtils.Program2D.Program2D"]},{"name":"protected fun createOutputSurfaceInternal(surface: Surface, viewportRect: Rect): OutputSurface?","description":"io.github.thibaultbee.streampack.core.elements.processing.video.OpenGlRenderer.createOutputSurfaceInternal","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.processing.video/-open-gl-renderer/create-output-surface-internal.html","searchKeys":["createOutputSurfaceInternal","protected fun createOutputSurfaceInternal(surface: Surface, viewportRect: Rect): OutputSurface?","io.github.thibaultbee.streampack.core.elements.processing.video.OpenGlRenderer.createOutputSurfaceInternal"]},{"name":"protected fun getOutSurfaceOrThrow(surface: Surface): OutputSurface","description":"io.github.thibaultbee.streampack.core.elements.processing.video.OpenGlRenderer.getOutSurfaceOrThrow","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.processing.video/-open-gl-renderer/get-out-surface-or-throw.html","searchKeys":["getOutSurfaceOrThrow","protected fun getOutSurfaceOrThrow(surface: Surface): OutputSurface","io.github.thibaultbee.streampack.core.elements.processing.video.OpenGlRenderer.getOutSurfaceOrThrow"]},{"name":"protected fun makeCurrent(eglSurface: EGLSurface)","description":"io.github.thibaultbee.streampack.core.elements.processing.video.OpenGlRenderer.makeCurrent","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.processing.video/-open-gl-renderer/make-current.html","searchKeys":["makeCurrent","protected fun makeCurrent(eglSurface: EGLSurface)","io.github.thibaultbee.streampack.core.elements.processing.video.OpenGlRenderer.makeCurrent"]},{"name":"protected fun removeOutputSurfaceInternal(surface: Surface, unregister: Boolean)","description":"io.github.thibaultbee.streampack.core.elements.processing.video.OpenGlRenderer.removeOutputSurfaceInternal","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.processing.video/-open-gl-renderer/remove-output-surface-internal.html","searchKeys":["removeOutputSurfaceInternal","protected fun removeOutputSurfaceInternal(surface: Surface, unregister: Boolean)","io.github.thibaultbee.streampack.core.elements.processing.video.OpenGlRenderer.removeOutputSurfaceInternal"]},{"name":"protected fun useAndConfigureProgramWithTexture(textureId: Int)","description":"io.github.thibaultbee.streampack.core.elements.processing.video.OpenGlRenderer.useAndConfigureProgramWithTexture","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.processing.video/-open-gl-renderer/use-and-configure-program-with-texture.html","searchKeys":["useAndConfigureProgramWithTexture","protected fun useAndConfigureProgramWithTexture(textureId: Int)","io.github.thibaultbee.streampack.core.elements.processing.video.OpenGlRenderer.useAndConfigureProgramWithTexture"]},{"name":"protected fun write(buffer: ByteBuffer)","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets.Psi.write","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets/-psi/write.html","searchKeys":["write","protected fun write(buffer: ByteBuffer)","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets.Psi.write"]},{"name":"protected fun write(payload: ByteBuffer? = null, adaptationField: ByteBuffer? = null, specificHeader: ByteBuffer? = null, stuffingForLastPacket: Boolean = false, timestamp: Long = 0)","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets.TS.write","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets/-t-s/write.html","searchKeys":["write","protected fun write(payload: ByteBuffer? = null, adaptationField: ByteBuffer? = null, specificHeader: ByteBuffer? = null, stuffingForLastPacket: Boolean = false, timestamp: Long = 0)","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets.TS.write"]},{"name":"protected fun writePacket(packet: SrtPacket)","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.utils.TSOutputCallback.writePacket","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.utils/-t-s-output-callback/write-packet.html","searchKeys":["writePacket","protected fun writePacket(packet: SrtPacket)","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.utils.TSOutputCallback.writePacket"]},{"name":"protected open fun getAspectRatioMode(): AspectRatioMode","description":"io.github.thibaultbee.streampack.core.pipelines.StreamerPipeline.getAspectRatioMode","location":"streampack-core/io.github.thibaultbee.streampack.core.pipelines/-streamer-pipeline/get-aspect-ratio-mode.html","searchKeys":["getAspectRatioMode","protected open fun getAspectRatioMode(): AspectRatioMode","io.github.thibaultbee.streampack.core.pipelines.StreamerPipeline.getAspectRatioMode"]},{"name":"protected open fun isMirroringRequired(): Boolean","description":"io.github.thibaultbee.streampack.core.pipelines.StreamerPipeline.isMirroringRequired","location":"streampack-core/io.github.thibaultbee.streampack.core.pipelines/-streamer-pipeline/is-mirroring-required.html","searchKeys":["isMirroringRequired","protected open fun isMirroringRequired(): Boolean","io.github.thibaultbee.streampack.core.pipelines.StreamerPipeline.isMirroringRequired"]},{"name":"protected open fun loadLocations()","description":"io.github.thibaultbee.streampack.core.elements.processing.video.utils.GLUtils.Program2D.loadLocations","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.processing.video.utils/-g-l-utils/-program2-d/load-locations.html","searchKeys":["loadLocations","protected open fun loadLocations()","io.github.thibaultbee.streampack.core.elements.processing.video.utils.GLUtils.Program2D.loadLocations"]},{"name":"protected open override fun loadLocations()","description":"io.github.thibaultbee.streampack.core.elements.processing.video.utils.GLUtils.SamplerShaderProgram.loadLocations","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.processing.video.utils/-g-l-utils/-sampler-shader-program/load-locations.html","searchKeys":["loadLocations","protected open override fun loadLocations()","io.github.thibaultbee.streampack.core.elements.processing.video.utils.GLUtils.SamplerShaderProgram.loadLocations"]},{"name":"protected open override fun writeBody(output: ByteBuffer)","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.AudioTag.writeBody","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags/-audio-tag/write-body.html","searchKeys":["writeBody","protected open override fun writeBody(output: ByteBuffer)","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.AudioTag.writeBody"]},{"name":"protected open override fun writeBody(output: ByteBuffer)","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.OnMetadata.writeBody","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags/-on-metadata/write-body.html","searchKeys":["writeBody","protected open override fun writeBody(output: ByteBuffer)","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.OnMetadata.writeBody"]},{"name":"protected open override fun writeBody(output: ByteBuffer)","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.video.ExtendedVideoTag.writeBody","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.video/-extended-video-tag/write-body.html","searchKeys":["writeBody","protected open override fun writeBody(output: ByteBuffer)","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.video.ExtendedVideoTag.writeBody"]},{"name":"protected open override fun writeBody(output: ByteBuffer)","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.video.VideoTag.writeBody","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.video/-video-tag/write-body.html","searchKeys":["writeBody","protected open override fun writeBody(output: ByteBuffer)","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.video.VideoTag.writeBody"]},{"name":"protected open override fun writeTagHeader(output: ByteBuffer)","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.AudioTag.writeTagHeader","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags/-audio-tag/write-tag-header.html","searchKeys":["writeTagHeader","protected open override fun writeTagHeader(output: ByteBuffer)","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.AudioTag.writeTagHeader"]},{"name":"protected open override fun writeTagHeader(output: ByteBuffer)","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.OnMetadata.writeTagHeader","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags/-on-metadata/write-tag-header.html","searchKeys":["writeTagHeader","protected open override fun writeTagHeader(output: ByteBuffer)","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.OnMetadata.writeTagHeader"]},{"name":"protected open override fun writeTagHeader(output: ByteBuffer)","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.video.ExtendedVideoTag.writeTagHeader","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.video/-extended-video-tag/write-tag-header.html","searchKeys":["writeTagHeader","protected open override fun writeTagHeader(output: ByteBuffer)","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.video.ExtendedVideoTag.writeTagHeader"]},{"name":"protected open override fun writeTagHeader(output: ByteBuffer)","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.video.VideoTag.writeTagHeader","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.video/-video-tag/write-tag-header.html","searchKeys":["writeTagHeader","protected open override fun writeTagHeader(output: ByteBuffer)","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.video.VideoTag.writeTagHeader"]},{"name":"protected open override val bodySize: Int","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.AudioTag.bodySize","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags/-audio-tag/body-size.html","searchKeys":["bodySize","protected open override val bodySize: Int","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.AudioTag.bodySize"]},{"name":"protected open override val bodySize: Int","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.OnMetadata.bodySize","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags/-on-metadata/body-size.html","searchKeys":["bodySize","protected open override val bodySize: Int","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.OnMetadata.bodySize"]},{"name":"protected open override val bodySize: Int","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.video.ExtendedVideoTag.bodySize","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.video/-extended-video-tag/body-size.html","searchKeys":["bodySize","protected open override val bodySize: Int","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.video.ExtendedVideoTag.bodySize"]},{"name":"protected open override val bodySize: Int","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.video.VideoTag.bodySize","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.video/-video-tag/body-size.html","searchKeys":["bodySize","protected open override val bodySize: Int","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.video.VideoTag.bodySize"]},{"name":"protected open override val tagHeaderSize: Int","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.AudioTag.tagHeaderSize","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags/-audio-tag/tag-header-size.html","searchKeys":["tagHeaderSize","protected open override val tagHeaderSize: Int","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.AudioTag.tagHeaderSize"]},{"name":"protected open override val tagHeaderSize: Int","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.OnMetadata.tagHeaderSize","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags/-on-metadata/tag-header-size.html","searchKeys":["tagHeaderSize","protected open override val tagHeaderSize: Int","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.OnMetadata.tagHeaderSize"]},{"name":"protected open override val tagHeaderSize: Int","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.video.ExtendedVideoTag.tagHeaderSize","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.video/-extended-video-tag/tag-header-size.html","searchKeys":["tagHeaderSize","protected open override val tagHeaderSize: Int","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.video.ExtendedVideoTag.tagHeaderSize"]},{"name":"protected open override val tagHeaderSize: Int","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.video.VideoTag.tagHeaderSize","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.video/-video-tag/tag-header-size.html","searchKeys":["tagHeaderSize","protected open override val tagHeaderSize: Int","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.video.VideoTag.tagHeaderSize"]},{"name":"protected val bitrateRegulatorConfig: BitrateRegulatorConfig","description":"io.github.thibaultbee.streampack.core.regulator.BitrateRegulator.bitrateRegulatorConfig","location":"streampack-core/io.github.thibaultbee.streampack.core.regulator/-bitrate-regulator/bitrate-regulator-config.html","searchKeys":["bitrateRegulatorConfig","protected val bitrateRegulatorConfig: BitrateRegulatorConfig","io.github.thibaultbee.streampack.core.regulator.BitrateRegulator.bitrateRegulatorConfig"]},{"name":"protected val cameraManager: CameraManager","description":"io.github.thibaultbee.streampack.core.elements.sources.video.camera.CameraSettings.Zoom.cameraManager","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.video.camera/-camera-settings/-zoom/camera-manager.html","searchKeys":["cameraManager","protected val cameraManager: CameraManager","io.github.thibaultbee.streampack.core.elements.sources.video.camera.CameraSettings.Zoom.cameraManager"]},{"name":"protected val cameraSettings: CameraSettings","description":"io.github.thibaultbee.streampack.core.elements.sources.video.camera.CameraSettings.Zoom.cameraSettings","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.video.camera/-camera-settings/-zoom/camera-settings.html","searchKeys":["cameraSettings","protected val cameraSettings: CameraSettings","io.github.thibaultbee.streampack.core.elements.sources.video.camera.CameraSettings.Zoom.cameraSettings"]},{"name":"protected val codecCapabilities: MediaCodecInfo.CodecCapabilities","description":"io.github.thibaultbee.streampack.core.elements.encoders.mediacodec.EncoderInfo.codecCapabilities","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.encoders.mediacodec/-encoder-info/codec-capabilities.html","searchKeys":["codecCapabilities","protected val codecCapabilities: MediaCodecInfo.CodecCapabilities","io.github.thibaultbee.streampack.core.elements.encoders.mediacodec.EncoderInfo.codecCapabilities"]},{"name":"protected val context: Context","description":"io.github.thibaultbee.streampack.core.pipelines.StreamerPipeline.context","location":"streampack-core/io.github.thibaultbee.streampack.core.pipelines/-streamer-pipeline/context.html","searchKeys":["context","protected val context: Context","io.github.thibaultbee.streampack.core.pipelines.StreamerPipeline.context"]},{"name":"protected val context: Context","description":"io.github.thibaultbee.streampack.core.streamers.dual.DualStreamer.context","location":"streampack-core/io.github.thibaultbee.streampack.core.streamers.dual/-dual-streamer/context.html","searchKeys":["context","protected val context: Context","io.github.thibaultbee.streampack.core.streamers.dual.DualStreamer.context"]},{"name":"protected val context: Context","description":"io.github.thibaultbee.streampack.core.streamers.single.SingleStreamer.context","location":"streampack-core/io.github.thibaultbee.streampack.core.streamers.single/-single-streamer/context.html","searchKeys":["context","protected val context: Context","io.github.thibaultbee.streampack.core.streamers.single.SingleStreamer.context"]},{"name":"protected val coroutineDispatcher: CoroutineDispatcher","description":"io.github.thibaultbee.streampack.core.pipelines.StreamerPipeline.coroutineDispatcher","location":"streampack-core/io.github.thibaultbee.streampack.core.pipelines/-streamer-pipeline/coroutine-dispatcher.html","searchKeys":["coroutineDispatcher","protected val coroutineDispatcher: CoroutineDispatcher","io.github.thibaultbee.streampack.core.pipelines.StreamerPipeline.coroutineDispatcher"]},{"name":"protected val endpointInternals: List<IEndpointInternal>","description":"io.github.thibaultbee.streampack.core.elements.endpoints.CombineEndpoint.endpointInternals","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints/-combine-endpoint/endpoint-internals.html","searchKeys":["endpointInternals","protected val endpointInternals: List<IEndpointInternal>","io.github.thibaultbee.streampack.core.elements.endpoints.CombineEndpoint.endpointInternals"]},{"name":"protected val endpointsToStreamIdsMap: MutableMap<Pair<IEndpoint, Int>, Int>","description":"io.github.thibaultbee.streampack.core.elements.endpoints.CombineEndpoint.endpointsToStreamIdsMap","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints/-combine-endpoint/endpoints-to-stream-ids-map.html","searchKeys":["endpointsToStreamIdsMap","protected val endpointsToStreamIdsMap: MutableMap<Pair<IEndpoint, Int>, Int>","io.github.thibaultbee.streampack.core.elements.endpoints.CombineEndpoint.endpointsToStreamIdsMap"]},{"name":"protected val hasAudio: Boolean","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models.MP4Segmenter.hasAudio","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models/-m-p4-segmenter/has-audio.html","searchKeys":["hasAudio","protected val hasAudio: Boolean","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models.MP4Segmenter.hasAudio"]},{"name":"protected val hasVideo: Boolean","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models.MP4Segmenter.hasVideo","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models/-m-p4-segmenter/has-video.html","searchKeys":["hasVideo","protected val hasVideo: Boolean","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models.MP4Segmenter.hasVideo"]},{"name":"protected val isAudioOnly: Boolean","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models.MP4Segmenter.isAudioOnly","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models/-m-p4-segmenter/is-audio-only.html","searchKeys":["isAudioOnly","protected val isAudioOnly: Boolean","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models.MP4Segmenter.isAudioOnly"]},{"name":"protected val isVideoOnly: Boolean","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models.MP4Segmenter.isVideoOnly","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models/-m-p4-segmenter/is-video-only.html","searchKeys":["isVideoOnly","protected val isVideoOnly: Boolean","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models.MP4Segmenter.isVideoOnly"]},{"name":"protected val listeners: MutableSet<IRotationProvider.Listener>","description":"io.github.thibaultbee.streampack.core.streamers.orientation.RotationProvider.listeners","location":"streampack-core/io.github.thibaultbee.streampack.core.streamers.orientation/-rotation-provider/listeners.html","searchKeys":["listeners","protected val listeners: MutableSet<IRotationProvider.Listener>","io.github.thibaultbee.streampack.core.streamers.orientation.RotationProvider.listeners"]},{"name":"protected val mInitialized: AtomicBoolean","description":"io.github.thibaultbee.streampack.core.elements.processing.video.OpenGlRenderer.mInitialized","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.processing.video/-open-gl-renderer/m-initialized.html","searchKeys":["mInitialized","protected val mInitialized: AtomicBoolean","io.github.thibaultbee.streampack.core.elements.processing.video.OpenGlRenderer.mInitialized"]},{"name":"protected val mOutputSurfaceMap: MutableMap<Surface, OutputSurface>","description":"io.github.thibaultbee.streampack.core.elements.processing.video.OpenGlRenderer.mOutputSurfaceMap","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.processing.video/-open-gl-renderer/m-output-surface-map.html","searchKeys":["mOutputSurfaceMap","protected val mOutputSurfaceMap: MutableMap<Surface, OutputSurface>","io.github.thibaultbee.streampack.core.elements.processing.video.OpenGlRenderer.mOutputSurfaceMap"]},{"name":"protected val onAudioTargetBitrateChange: (Int) -> Unit","description":"io.github.thibaultbee.streampack.core.regulator.BitrateRegulator.onAudioTargetBitrateChange","location":"streampack-core/io.github.thibaultbee.streampack.core.regulator/-bitrate-regulator/on-audio-target-bitrate-change.html","searchKeys":["onAudioTargetBitrateChange","protected val onAudioTargetBitrateChange: (Int) -> Unit","io.github.thibaultbee.streampack.core.regulator.BitrateRegulator.onAudioTargetBitrateChange"]},{"name":"protected val onVideoTargetBitrateChange: (Int) -> Unit","description":"io.github.thibaultbee.streampack.core.regulator.BitrateRegulator.onVideoTargetBitrateChange","location":"streampack-core/io.github.thibaultbee.streampack.core.regulator/-bitrate-regulator/on-video-target-bitrate-change.html","searchKeys":["onVideoTargetBitrateChange","protected val onVideoTargetBitrateChange: (Int) -> Unit","io.github.thibaultbee.streampack.core.regulator.BitrateRegulator.onVideoTargetBitrateChange"]},{"name":"protected val parameters: MutableList<AmfParameter>","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.amf.containers.AmfContainer.parameters","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.amf.containers/-amf-container/parameters.html","searchKeys":["parameters","protected val parameters: MutableList<AmfParameter>","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.amf.containers.AmfContainer.parameters"]},{"name":"protected val streamer: IStreamer","description":"io.github.thibaultbee.streampack.core.streamers.lifecycle.StreamerViewModelLifeCycleObserver.streamer","location":"streampack-core/io.github.thibaultbee.streampack.core.streamers.lifecycle/-streamer-view-model-life-cycle-observer/streamer.html","searchKeys":["streamer","protected val streamer: IStreamer","io.github.thibaultbee.streampack.core.streamers.lifecycle.StreamerViewModelLifeCycleObserver.streamer"]},{"name":"protected val version: Byte","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.FullBox.version","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-full-box/version.html","searchKeys":["version","protected val version: Byte","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.FullBox.version"]},{"name":"protected var chunkOffsetEntries: List<T>","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.BaseChunkOffsetBox.chunkOffsetEntries","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-base-chunk-offset-box/chunk-offset-entries.html","searchKeys":["chunkOffsetEntries","protected var chunkOffsetEntries: List<T>","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.BaseChunkOffsetBox.chunkOffsetEntries"]},{"name":"protected var mAlphaScaleLoc: Int","description":"io.github.thibaultbee.streampack.core.elements.processing.video.utils.GLUtils.Program2D.mAlphaScaleLoc","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.processing.video.utils/-g-l-utils/-program2-d/m-alpha-scale-loc.html","searchKeys":["mAlphaScaleLoc","protected var mAlphaScaleLoc: Int","io.github.thibaultbee.streampack.core.elements.processing.video.utils.GLUtils.Program2D.mAlphaScaleLoc"]},{"name":"protected var mCurrentInputformat: GLUtils.InputFormat","description":"io.github.thibaultbee.streampack.core.elements.processing.video.OpenGlRenderer.mCurrentInputformat","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.processing.video/-open-gl-renderer/m-current-inputformat.html","searchKeys":["mCurrentInputformat","protected var mCurrentInputformat: GLUtils.InputFormat","io.github.thibaultbee.streampack.core.elements.processing.video.OpenGlRenderer.mCurrentInputformat"]},{"name":"protected var mCurrentProgram: GLUtils.Program2D?","description":"io.github.thibaultbee.streampack.core.elements.processing.video.OpenGlRenderer.mCurrentProgram","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.processing.video/-open-gl-renderer/m-current-program.html","searchKeys":["mCurrentProgram","protected var mCurrentProgram: GLUtils.Program2D?","io.github.thibaultbee.streampack.core.elements.processing.video.OpenGlRenderer.mCurrentProgram"]},{"name":"protected var mCurrentSurface: Surface?","description":"io.github.thibaultbee.streampack.core.elements.processing.video.OpenGlRenderer.mCurrentSurface","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.processing.video/-open-gl-renderer/m-current-surface.html","searchKeys":["mCurrentSurface","protected var mCurrentSurface: Surface?","io.github.thibaultbee.streampack.core.elements.processing.video.OpenGlRenderer.mCurrentSurface"]},{"name":"protected var mEglConfig: EGLConfig?","description":"io.github.thibaultbee.streampack.core.elements.processing.video.OpenGlRenderer.mEglConfig","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.processing.video/-open-gl-renderer/m-egl-config.html","searchKeys":["mEglConfig","protected var mEglConfig: EGLConfig?","io.github.thibaultbee.streampack.core.elements.processing.video.OpenGlRenderer.mEglConfig"]},{"name":"protected var mEglContext: EGLContext","description":"io.github.thibaultbee.streampack.core.elements.processing.video.OpenGlRenderer.mEglContext","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.processing.video/-open-gl-renderer/m-egl-context.html","searchKeys":["mEglContext","protected var mEglContext: EGLContext","io.github.thibaultbee.streampack.core.elements.processing.video.OpenGlRenderer.mEglContext"]},{"name":"protected var mEglDisplay: EGLDisplay","description":"io.github.thibaultbee.streampack.core.elements.processing.video.OpenGlRenderer.mEglDisplay","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.processing.video/-open-gl-renderer/m-egl-display.html","searchKeys":["mEglDisplay","protected var mEglDisplay: EGLDisplay","io.github.thibaultbee.streampack.core.elements.processing.video.OpenGlRenderer.mEglDisplay"]},{"name":"protected var mGlThread: Thread?","description":"io.github.thibaultbee.streampack.core.elements.processing.video.OpenGlRenderer.mGlThread","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.processing.video/-open-gl-renderer/m-gl-thread.html","searchKeys":["mGlThread","protected var mGlThread: Thread?","io.github.thibaultbee.streampack.core.elements.processing.video.OpenGlRenderer.mGlThread"]},{"name":"protected var mPositionLoc: Int","description":"io.github.thibaultbee.streampack.core.elements.processing.video.utils.GLUtils.Program2D.mPositionLoc","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.processing.video.utils/-g-l-utils/-program2-d/m-position-loc.html","searchKeys":["mPositionLoc","protected var mPositionLoc: Int","io.github.thibaultbee.streampack.core.elements.processing.video.utils.GLUtils.Program2D.mPositionLoc"]},{"name":"protected var mProgramHandle: Int","description":"io.github.thibaultbee.streampack.core.elements.processing.video.utils.GLUtils.Program2D.mProgramHandle","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.processing.video.utils/-g-l-utils/-program2-d/m-program-handle.html","searchKeys":["mProgramHandle","protected var mProgramHandle: Int","io.github.thibaultbee.streampack.core.elements.processing.video.utils.GLUtils.Program2D.mProgramHandle"]},{"name":"protected var mProgramHandles: Map<GLUtils.InputFormat, GLUtils.Program2D>","description":"io.github.thibaultbee.streampack.core.elements.processing.video.OpenGlRenderer.mProgramHandles","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.processing.video/-open-gl-renderer/m-program-handles.html","searchKeys":["mProgramHandles","protected var mProgramHandles: Map<GLUtils.InputFormat, GLUtils.Program2D>","io.github.thibaultbee.streampack.core.elements.processing.video.OpenGlRenderer.mProgramHandles"]},{"name":"protected var mSurfaceAttrib: IntArray","description":"io.github.thibaultbee.streampack.core.elements.processing.video.OpenGlRenderer.mSurfaceAttrib","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.processing.video/-open-gl-renderer/m-surface-attrib.html","searchKeys":["mSurfaceAttrib","protected var mSurfaceAttrib: IntArray","io.github.thibaultbee.streampack.core.elements.processing.video.OpenGlRenderer.mSurfaceAttrib"]},{"name":"protected var mTempSurface: EGLSurface","description":"io.github.thibaultbee.streampack.core.elements.processing.video.OpenGlRenderer.mTempSurface","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.processing.video/-open-gl-renderer/m-temp-surface.html","searchKeys":["mTempSurface","protected var mTempSurface: EGLSurface","io.github.thibaultbee.streampack.core.elements.processing.video.OpenGlRenderer.mTempSurface"]},{"name":"protected var mTransMatrixLoc: Int","description":"io.github.thibaultbee.streampack.core.elements.processing.video.utils.GLUtils.Program2D.mTransMatrixLoc","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.processing.video.utils/-g-l-utils/-program2-d/m-trans-matrix-loc.html","searchKeys":["mTransMatrixLoc","protected var mTransMatrixLoc: Int","io.github.thibaultbee.streampack.core.elements.processing.video.utils.GLUtils.Program2D.mTransMatrixLoc"]},{"name":"protected var outputStream: OutputStream?","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.sinks.OutputStreamSink.outputStream","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.sinks/-output-stream-sink/output-stream.html","searchKeys":["outputStream","protected var outputStream: OutputStream?","io.github.thibaultbee.streampack.core.elements.endpoints.composites.sinks.OutputStreamSink.outputStream"]},{"name":"sealed class AV1CodecConfigurationBox : Box","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.AV1CodecConfigurationBox","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-a-v1-codec-configuration-box/index.html","searchKeys":["AV1CodecConfigurationBox","sealed class AV1CodecConfigurationBox : Box","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.AV1CodecConfigurationBox"]},{"name":"sealed class Box(type: String, isCompact: Boolean = true) : ByteBufferWriter","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.Box","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-box/index.html","searchKeys":["Box","sealed class Box(type: String, isCompact: Boolean = true) : ByteBufferWriter","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.Box"]},{"name":"sealed class DataEntryBox(type: String, flags: Int) : FullBox","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.DataEntryBox","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-data-entry-box/index.html","searchKeys":["DataEntryBox","sealed class DataEntryBox(type: String, flags: Int) : FullBox","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.DataEntryBox"]},{"name":"sealed class EncoderConfig<T : CodecConfig>(val config: T, val mode: EncoderMode)","description":"io.github.thibaultbee.streampack.core.elements.encoders.mediacodec.EncoderConfig","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.encoders.mediacodec/-encoder-config/index.html","searchKeys":["EncoderConfig","sealed class EncoderConfig<T : CodecConfig>(val config: T, val mode: EncoderMode)","io.github.thibaultbee.streampack.core.elements.encoders.mediacodec.EncoderConfig"]},{"name":"sealed class EncoderInfo(codecInfo: MediaCodecInfo, mimeType: String) : IEncoder.IEncoderInfo","description":"io.github.thibaultbee.streampack.core.elements.encoders.mediacodec.EncoderInfo","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.encoders.mediacodec/-encoder-info/index.html","searchKeys":["EncoderInfo","sealed class EncoderInfo(codecInfo: MediaCodecInfo, mimeType: String) : IEncoder.IEncoderInfo","io.github.thibaultbee.streampack.core.elements.encoders.mediacodec.EncoderInfo"]},{"name":"sealed class SampleEntry(type: String, dataReferenceId: Short, val version: Int = 0) : Box","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.SampleEntry","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-sample-entry/index.html","searchKeys":["SampleEntry","sealed class SampleEntry(type: String, dataReferenceId: Short, val version: Int = 0) : Box","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.SampleEntry"]},{"name":"sealed class TypeMediaHeaderBox(type: String, val version: Byte = 0, flags: Int) : FullBox","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.TypeMediaHeaderBox","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-type-media-header-box/index.html","searchKeys":["TypeMediaHeaderBox","sealed class TypeMediaHeaderBox(type: String, val version: Byte = 0, flags: Int) : FullBox","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.TypeMediaHeaderBox"]},{"name":"sealed class Zoom(val cameraManager: CameraManager, val cameraSettings: CameraSettings)","description":"io.github.thibaultbee.streampack.core.elements.sources.video.camera.CameraSettings.Zoom","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.video.camera/-camera-settings/-zoom/index.html","searchKeys":["Zoom","sealed class Zoom(val cameraManager: CameraManager, val cameraSettings: CameraSettings)","io.github.thibaultbee.streampack.core.elements.sources.video.camera.CameraSettings.Zoom"]},{"name":"sealed interface IAudioPipelineOutputInternal : IPipelineOutput","description":"io.github.thibaultbee.streampack.core.pipelines.outputs.IAudioPipelineOutputInternal","location":"streampack-core/io.github.thibaultbee.streampack.core.pipelines.outputs/-i-audio-pipeline-output-internal/index.html","searchKeys":["IAudioPipelineOutputInternal","sealed interface IAudioPipelineOutputInternal : IPipelineOutput","io.github.thibaultbee.streampack.core.pipelines.outputs.IAudioPipelineOutputInternal"]},{"name":"sealed interface IVideoPipelineOutputInternal : IPipelineOutput","description":"io.github.thibaultbee.streampack.core.pipelines.outputs.IVideoPipelineOutputInternal","location":"streampack-core/io.github.thibaultbee.streampack.core.pipelines.outputs/-i-video-pipeline-output-internal/index.html","searchKeys":["IVideoPipelineOutputInternal","sealed interface IVideoPipelineOutputInternal : IPipelineOutput","io.github.thibaultbee.streampack.core.pipelines.outputs.IVideoPipelineOutputInternal"]},{"name":"suspend fun AudioOnlySingleStreamer(context: Context, audioSourceFactory: IAudioSourceInternal.Factory = MicrophoneSourceFactory(), endpointFactory: IEndpointInternal.Factory = DynamicEndpointFactory()): AudioOnlySingleStreamer","description":"io.github.thibaultbee.streampack.core.streamers.single.AudioOnlySingleStreamer","location":"streampack-core/io.github.thibaultbee.streampack.core.streamers.single/-audio-only-single-streamer.html","searchKeys":["AudioOnlySingleStreamer","suspend fun AudioOnlySingleStreamer(context: Context, audioSourceFactory: IAudioSourceInternal.Factory = MicrophoneSourceFactory(), endpointFactory: IEndpointInternal.Factory = DynamicEndpointFactory()): AudioOnlySingleStreamer","io.github.thibaultbee.streampack.core.streamers.single.AudioOnlySingleStreamer"]},{"name":"suspend fun DualEndpoint.startStreamSecond(descriptor: MediaDescriptor)","description":"io.github.thibaultbee.streampack.core.elements.endpoints.startStreamSecond","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints/start-stream-second.html","searchKeys":["startStreamSecond","suspend fun DualEndpoint.startStreamSecond(descriptor: MediaDescriptor)","io.github.thibaultbee.streampack.core.elements.endpoints.startStreamSecond"]},{"name":"suspend fun DualStreamer(context: Context, audioSourceFactory: IAudioSourceInternal.Factory, videoSourceFactory: IVideoSourceInternal.Factory, firstEndpointFactory: IEndpointInternal.Factory, secondEndpointFactory: IEndpointInternal.Factory, defaultRotation: Int): DualStreamer","description":"io.github.thibaultbee.streampack.core.streamers.dual.DualStreamer","location":"streampack-core/io.github.thibaultbee.streampack.core.streamers.dual/-dual-streamer.html","searchKeys":["DualStreamer","suspend fun DualStreamer(context: Context, audioSourceFactory: IAudioSourceInternal.Factory, videoSourceFactory: IVideoSourceInternal.Factory, firstEndpointFactory: IEndpointInternal.Factory, secondEndpointFactory: IEndpointInternal.Factory, defaultRotation: Int): DualStreamer","io.github.thibaultbee.streampack.core.streamers.dual.DualStreamer"]},{"name":"suspend fun IOpenableStreamer.open(uri: Uri)","description":"io.github.thibaultbee.streampack.core.interfaces.open","location":"streampack-core/io.github.thibaultbee.streampack.core.interfaces/open.html","searchKeys":["open","suspend fun IOpenableStreamer.open(uri: Uri)","io.github.thibaultbee.streampack.core.interfaces.open"]},{"name":"suspend fun IOpenableStreamer.open(uriString: String)","description":"io.github.thibaultbee.streampack.core.interfaces.open","location":"streampack-core/io.github.thibaultbee.streampack.core.interfaces/open.html","searchKeys":["open","suspend fun IOpenableStreamer.open(uriString: String)","io.github.thibaultbee.streampack.core.interfaces.open"]},{"name":"suspend fun IOpenableStreamer.startStream(descriptor: MediaDescriptor)","description":"io.github.thibaultbee.streampack.core.interfaces.startStream","location":"streampack-core/io.github.thibaultbee.streampack.core.interfaces/start-stream.html","searchKeys":["startStream","suspend fun IOpenableStreamer.startStream(descriptor: MediaDescriptor)","io.github.thibaultbee.streampack.core.interfaces.startStream"]},{"name":"suspend fun IOpenableStreamer.startStream(uri: Uri)","description":"io.github.thibaultbee.streampack.core.interfaces.startStream","location":"streampack-core/io.github.thibaultbee.streampack.core.interfaces/start-stream.html","searchKeys":["startStream","suspend fun IOpenableStreamer.startStream(uri: Uri)","io.github.thibaultbee.streampack.core.interfaces.startStream"]},{"name":"suspend fun IOpenableStreamer.startStream(uriString: String)","description":"io.github.thibaultbee.streampack.core.interfaces.startStream","location":"streampack-core/io.github.thibaultbee.streampack.core.interfaces/start-stream.html","searchKeys":["startStream","suspend fun IOpenableStreamer.startStream(uriString: String)","io.github.thibaultbee.streampack.core.interfaces.startStream"]},{"name":"suspend fun IPreviewableSource.setPreview(surfaceHolder: SurfaceHolder)","description":"io.github.thibaultbee.streampack.core.elements.sources.video.setPreview","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.video/set-preview.html","searchKeys":["setPreview","suspend fun IPreviewableSource.setPreview(surfaceHolder: SurfaceHolder)","io.github.thibaultbee.streampack.core.elements.sources.video.setPreview"]},{"name":"suspend fun IPreviewableSource.setPreview(surfaceView: SurfaceView)","description":"io.github.thibaultbee.streampack.core.elements.sources.video.setPreview","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.video/set-preview.html","searchKeys":["setPreview","suspend fun IPreviewableSource.setPreview(surfaceView: SurfaceView)","io.github.thibaultbee.streampack.core.elements.sources.video.setPreview"]},{"name":"suspend fun IPreviewableSource.setPreview(textureView: TextureView)","description":"io.github.thibaultbee.streampack.core.elements.sources.video.setPreview","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.video/set-preview.html","searchKeys":["setPreview","suspend fun IPreviewableSource.setPreview(textureView: TextureView)","io.github.thibaultbee.streampack.core.elements.sources.video.setPreview"]},{"name":"suspend fun IPreviewableSource.startPreview(surfaceHolder: SurfaceHolder)","description":"io.github.thibaultbee.streampack.core.elements.sources.video.startPreview","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.video/start-preview.html","searchKeys":["startPreview","suspend fun IPreviewableSource.startPreview(surfaceHolder: SurfaceHolder)","io.github.thibaultbee.streampack.core.elements.sources.video.startPreview"]},{"name":"suspend fun IPreviewableSource.startPreview(surfaceView: SurfaceView)","description":"io.github.thibaultbee.streampack.core.elements.sources.video.startPreview","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.video/start-preview.html","searchKeys":["startPreview","suspend fun IPreviewableSource.startPreview(surfaceView: SurfaceView)","io.github.thibaultbee.streampack.core.elements.sources.video.startPreview"]},{"name":"suspend fun IPreviewableSource.startPreview(textureView: TextureView)","description":"io.github.thibaultbee.streampack.core.elements.sources.video.startPreview","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.video/start-preview.html","searchKeys":["startPreview","suspend fun IPreviewableSource.startPreview(textureView: TextureView)","io.github.thibaultbee.streampack.core.elements.sources.video.startPreview"]},{"name":"suspend fun IWithVideoSource.setCameraId(cameraId: String)","description":"io.github.thibaultbee.streampack.core.interfaces.setCameraId","location":"streampack-core/io.github.thibaultbee.streampack.core.interfaces/set-camera-id.html","searchKeys":["setCameraId","suspend fun IWithVideoSource.setCameraId(cameraId: String)","io.github.thibaultbee.streampack.core.interfaces.setCameraId"]},{"name":"suspend fun IWithVideoSource.setPreview(surface: Surface)","description":"io.github.thibaultbee.streampack.core.interfaces.setPreview","location":"streampack-core/io.github.thibaultbee.streampack.core.interfaces/set-preview.html","searchKeys":["setPreview","suspend fun IWithVideoSource.setPreview(surface: Surface)","io.github.thibaultbee.streampack.core.interfaces.setPreview"]},{"name":"suspend fun IWithVideoSource.setPreview(surfaceHolder: SurfaceHolder)","description":"io.github.thibaultbee.streampack.core.interfaces.setPreview","location":"streampack-core/io.github.thibaultbee.streampack.core.interfaces/set-preview.html","searchKeys":["setPreview","suspend fun IWithVideoSource.setPreview(surfaceHolder: SurfaceHolder)","io.github.thibaultbee.streampack.core.interfaces.setPreview"]},{"name":"suspend fun IWithVideoSource.setPreview(surfaceView: SurfaceView)","description":"io.github.thibaultbee.streampack.core.interfaces.setPreview","location":"streampack-core/io.github.thibaultbee.streampack.core.interfaces/set-preview.html","searchKeys":["setPreview","suspend fun IWithVideoSource.setPreview(surfaceView: SurfaceView)","io.github.thibaultbee.streampack.core.interfaces.setPreview"]},{"name":"suspend fun IWithVideoSource.setPreview(textureView: TextureView)","description":"io.github.thibaultbee.streampack.core.interfaces.setPreview","location":"streampack-core/io.github.thibaultbee.streampack.core.interfaces/set-preview.html","searchKeys":["setPreview","suspend fun IWithVideoSource.setPreview(textureView: TextureView)","io.github.thibaultbee.streampack.core.interfaces.setPreview"]},{"name":"suspend fun IWithVideoSource.startPreview()","description":"io.github.thibaultbee.streampack.core.interfaces.startPreview","location":"streampack-core/io.github.thibaultbee.streampack.core.interfaces/start-preview.html","searchKeys":["startPreview","suspend fun IWithVideoSource.startPreview()","io.github.thibaultbee.streampack.core.interfaces.startPreview"]},{"name":"suspend fun IWithVideoSource.startPreview(surface: Surface)","description":"io.github.thibaultbee.streampack.core.interfaces.startPreview","location":"streampack-core/io.github.thibaultbee.streampack.core.interfaces/start-preview.html","searchKeys":["startPreview","suspend fun IWithVideoSource.startPreview(surface: Surface)","io.github.thibaultbee.streampack.core.interfaces.startPreview"]},{"name":"suspend fun IWithVideoSource.startPreview(surfaceHolder: SurfaceHolder)","description":"io.github.thibaultbee.streampack.core.interfaces.startPreview","location":"streampack-core/io.github.thibaultbee.streampack.core.interfaces/start-preview.html","searchKeys":["startPreview","suspend fun IWithVideoSource.startPreview(surfaceHolder: SurfaceHolder)","io.github.thibaultbee.streampack.core.interfaces.startPreview"]},{"name":"suspend fun IWithVideoSource.startPreview(surfaceView: SurfaceView)","description":"io.github.thibaultbee.streampack.core.interfaces.startPreview","location":"streampack-core/io.github.thibaultbee.streampack.core.interfaces/start-preview.html","searchKeys":["startPreview","suspend fun IWithVideoSource.startPreview(surfaceView: SurfaceView)","io.github.thibaultbee.streampack.core.interfaces.startPreview"]},{"name":"suspend fun IWithVideoSource.startPreview(textureView: TextureView)","description":"io.github.thibaultbee.streampack.core.interfaces.startPreview","location":"streampack-core/io.github.thibaultbee.streampack.core.interfaces/start-preview.html","searchKeys":["startPreview","suspend fun IWithVideoSource.startPreview(textureView: TextureView)","io.github.thibaultbee.streampack.core.interfaces.startPreview"]},{"name":"suspend fun IWithVideoSource.stopPreview()","description":"io.github.thibaultbee.streampack.core.interfaces.stopPreview","location":"streampack-core/io.github.thibaultbee.streampack.core.interfaces/stop-preview.html","searchKeys":["stopPreview","suspend fun IWithVideoSource.stopPreview()","io.github.thibaultbee.streampack.core.interfaces.stopPreview"]},{"name":"suspend fun SingleStreamer(context: Context, audioSourceFactory: IAudioSourceInternal.Factory, videoSourceFactory: IVideoSourceInternal.Factory, endpointFactory: IEndpointInternal.Factory, defaultRotation: Int): SingleStreamer","description":"io.github.thibaultbee.streampack.core.streamers.single.SingleStreamer","location":"streampack-core/io.github.thibaultbee.streampack.core.streamers.single/-single-streamer.html","searchKeys":["SingleStreamer","suspend fun SingleStreamer(context: Context, audioSourceFactory: IAudioSourceInternal.Factory, videoSourceFactory: IVideoSourceInternal.Factory, endpointFactory: IEndpointInternal.Factory, defaultRotation: Int): SingleStreamer","io.github.thibaultbee.streampack.core.streamers.single.SingleStreamer"]},{"name":"suspend fun VideoOnlyDualStreamer(context: Context, videoSourceFactory: IVideoSourceInternal.Factory, firstEndpointFactory: IEndpointInternal.Factory = DynamicEndpointFactory(), secondEndpointFactory: IEndpointInternal.Factory = DynamicEndpointFactory(), defaultRotation: Int = context.displayRotation): VideoOnlyDualStreamer","description":"io.github.thibaultbee.streampack.core.streamers.dual.VideoOnlyDualStreamer","location":"streampack-core/io.github.thibaultbee.streampack.core.streamers.dual/-video-only-dual-streamer.html","searchKeys":["VideoOnlyDualStreamer","suspend fun VideoOnlyDualStreamer(context: Context, videoSourceFactory: IVideoSourceInternal.Factory, firstEndpointFactory: IEndpointInternal.Factory = DynamicEndpointFactory(), secondEndpointFactory: IEndpointInternal.Factory = DynamicEndpointFactory(), defaultRotation: Int = context.displayRotation): VideoOnlyDualStreamer","io.github.thibaultbee.streampack.core.streamers.dual.VideoOnlyDualStreamer"]},{"name":"suspend fun VideoOnlySingleStreamer(context: Context, videoSourceFactory: IVideoSourceInternal.Factory, endpointFactory: IEndpointInternal.Factory = DynamicEndpointFactory(), defaultRotation: Int = context.displayRotation): VideoOnlySingleStreamer","description":"io.github.thibaultbee.streampack.core.streamers.single.VideoOnlySingleStreamer","location":"streampack-core/io.github.thibaultbee.streampack.core.streamers.single/-video-only-single-streamer.html","searchKeys":["VideoOnlySingleStreamer","suspend fun VideoOnlySingleStreamer(context: Context, videoSourceFactory: IVideoSourceInternal.Factory, endpointFactory: IEndpointInternal.Factory = DynamicEndpointFactory(), defaultRotation: Int = context.displayRotation): VideoOnlySingleStreamer","io.github.thibaultbee.streampack.core.streamers.single.VideoOnlySingleStreamer"]},{"name":"suspend fun addOutput(output: Surface)","description":"io.github.thibaultbee.streampack.core.elements.sources.video.camera.controllers.CameraController.addOutput","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.video.camera.controllers/-camera-controller/add-output.html","searchKeys":["addOutput","suspend fun addOutput(output: Surface)","io.github.thibaultbee.streampack.core.elements.sources.video.camera.controllers.CameraController.addOutput"]},{"name":"suspend fun addTarget(output: Surface): Boolean","description":"io.github.thibaultbee.streampack.core.elements.sources.video.camera.controllers.CameraController.addTarget","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.video.camera.controllers/-camera-controller/add-target.html","searchKeys":["addTarget","suspend fun addTarget(output: Surface): Boolean","io.github.thibaultbee.streampack.core.elements.sources.video.camera.controllers.CameraController.addTarget"]},{"name":"suspend fun addTarget(target: Surface): Boolean","description":"io.github.thibaultbee.streampack.core.elements.sources.video.camera.controllers.CameraSessionController.addTarget","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.video.camera.controllers/-camera-session-controller/add-target.html","searchKeys":["addTarget","suspend fun addTarget(target: Surface): Boolean","io.github.thibaultbee.streampack.core.elements.sources.video.camera.controllers.CameraSessionController.addTarget"]},{"name":"suspend fun addTargets(targets: List<Surface>): Boolean","description":"io.github.thibaultbee.streampack.core.elements.sources.video.camera.controllers.CameraController.addTargets","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.video.camera.controllers/-camera-controller/add-targets.html","searchKeys":["addTargets","suspend fun addTargets(targets: List<Surface>): Boolean","io.github.thibaultbee.streampack.core.elements.sources.video.camera.controllers.CameraController.addTargets"]},{"name":"suspend fun addTargets(targets: List<Surface>): Boolean","description":"io.github.thibaultbee.streampack.core.elements.sources.video.camera.controllers.CameraSessionController.addTargets","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.video.camera.controllers/-camera-session-controller/add-targets.html","searchKeys":["addTargets","suspend fun addTargets(targets: List<Surface>): Boolean","io.github.thibaultbee.streampack.core.elements.sources.video.camera.controllers.CameraSessionController.addTargets"]},{"name":"suspend fun audioVideoMediaProjectionDualStreamer(context: Context, mediaProjection: MediaProjection, firstEndpointFactory: IEndpointInternal.Factory = DynamicEndpointFactory(), secondEndpointFactory: IEndpointInternal.Factory = DynamicEndpointFactory(), defaultRotation: Int = context.displayRotation): DualStreamer","description":"io.github.thibaultbee.streampack.core.streamers.dual.audioVideoMediaProjectionDualStreamer","location":"streampack-core/io.github.thibaultbee.streampack.core.streamers.dual/audio-video-media-projection-dual-streamer.html","searchKeys":["audioVideoMediaProjectionDualStreamer","suspend fun audioVideoMediaProjectionDualStreamer(context: Context, mediaProjection: MediaProjection, firstEndpointFactory: IEndpointInternal.Factory = DynamicEndpointFactory(), secondEndpointFactory: IEndpointInternal.Factory = DynamicEndpointFactory(), defaultRotation: Int = context.displayRotation): DualStreamer","io.github.thibaultbee.streampack.core.streamers.dual.audioVideoMediaProjectionDualStreamer"]},{"name":"suspend fun audioVideoMediaProjectionSingleStreamer(context: Context, mediaProjection: MediaProjection, endpointFactory: IEndpointInternal.Factory = DynamicEndpointFactory(), defaultRotation: Int = context.displayRotation): SingleStreamer","description":"io.github.thibaultbee.streampack.core.streamers.single.audioVideoMediaProjectionSingleStreamer","location":"streampack-core/io.github.thibaultbee.streampack.core.streamers.single/audio-video-media-projection-single-streamer.html","searchKeys":["audioVideoMediaProjectionSingleStreamer","suspend fun audioVideoMediaProjectionSingleStreamer(context: Context, mediaProjection: MediaProjection, endpointFactory: IEndpointInternal.Factory = DynamicEndpointFactory(), defaultRotation: Int = context.displayRotation): SingleStreamer","io.github.thibaultbee.streampack.core.streamers.single.audioVideoMediaProjectionSingleStreamer"]},{"name":"suspend fun cameraDualStreamer(context: Context, cameraId: String = context.defaultCameraId, audioSourceFactory: IAudioSourceInternal.Factory? = MicrophoneSourceFactory(), firstEndpointFactory: IEndpointInternal.Factory = DynamicEndpointFactory(), secondEndpointFactory: IEndpointInternal.Factory = DynamicEndpointFactory(), defaultRotation: Int = context.displayRotation): DualStreamer","description":"io.github.thibaultbee.streampack.core.streamers.dual.cameraDualStreamer","location":"streampack-core/io.github.thibaultbee.streampack.core.streamers.dual/camera-dual-streamer.html","searchKeys":["cameraDualStreamer","suspend fun cameraDualStreamer(context: Context, cameraId: String = context.defaultCameraId, audioSourceFactory: IAudioSourceInternal.Factory? = MicrophoneSourceFactory(), firstEndpointFactory: IEndpointInternal.Factory = DynamicEndpointFactory(), secondEndpointFactory: IEndpointInternal.Factory = DynamicEndpointFactory(), defaultRotation: Int = context.displayRotation): DualStreamer","io.github.thibaultbee.streampack.core.streamers.dual.cameraDualStreamer"]},{"name":"suspend fun cameraSingleStreamer(context: Context, cameraId: String = context.defaultCameraId, audioSourceFactory: IAudioSourceInternal.Factory? = MicrophoneSourceFactory(), endpointFactory: IEndpointInternal.Factory = DynamicEndpointFactory(), defaultRotation: Int = context.displayRotation): SingleStreamer","description":"io.github.thibaultbee.streampack.core.streamers.single.cameraSingleStreamer","location":"streampack-core/io.github.thibaultbee.streampack.core.streamers.single/camera-single-streamer.html","searchKeys":["cameraSingleStreamer","suspend fun cameraSingleStreamer(context: Context, cameraId: String = context.defaultCameraId, audioSourceFactory: IAudioSourceInternal.Factory? = MicrophoneSourceFactory(), endpointFactory: IEndpointInternal.Factory = DynamicEndpointFactory(), defaultRotation: Int = context.displayRotation): SingleStreamer","io.github.thibaultbee.streampack.core.streamers.single.cameraSingleStreamer"]},{"name":"suspend fun cameraVideoOnlyDualStreamer(context: Context, cameraId: String = context.defaultCameraId, firstEndpointFactory: IEndpointInternal.Factory = DynamicEndpointFactory(), secondEndpointFactory: IEndpointInternal.Factory = DynamicEndpointFactory(), defaultRotation: Int = context.displayRotation): VideoOnlyDualStreamer","description":"io.github.thibaultbee.streampack.core.streamers.dual.cameraVideoOnlyDualStreamer","location":"streampack-core/io.github.thibaultbee.streampack.core.streamers.dual/camera-video-only-dual-streamer.html","searchKeys":["cameraVideoOnlyDualStreamer","suspend fun cameraVideoOnlyDualStreamer(context: Context, cameraId: String = context.defaultCameraId, firstEndpointFactory: IEndpointInternal.Factory = DynamicEndpointFactory(), secondEndpointFactory: IEndpointInternal.Factory = DynamicEndpointFactory(), defaultRotation: Int = context.displayRotation): VideoOnlyDualStreamer","io.github.thibaultbee.streampack.core.streamers.dual.cameraVideoOnlyDualStreamer"]},{"name":"suspend fun cameraVideoOnlySingleStreamer(context: Context, cameraId: String = context.defaultCameraId, endpointFactory: IEndpointInternal.Factory = DynamicEndpointFactory(), defaultRotation: Int = context.displayRotation): VideoOnlySingleStreamer","description":"io.github.thibaultbee.streampack.core.streamers.single.cameraVideoOnlySingleStreamer","location":"streampack-core/io.github.thibaultbee.streampack.core.streamers.single/camera-video-only-single-streamer.html","searchKeys":["cameraVideoOnlySingleStreamer","suspend fun cameraVideoOnlySingleStreamer(context: Context, cameraId: String = context.defaultCameraId, endpointFactory: IEndpointInternal.Factory = DynamicEndpointFactory(), defaultRotation: Int = context.displayRotation): VideoOnlySingleStreamer","io.github.thibaultbee.streampack.core.streamers.single.cameraVideoOnlySingleStreamer"]},{"name":"suspend fun createCameraControllerForOutputs(dynamicRange: Long = this.dynamicRange, outputs: List<Surface> = this.outputs): CameraSessionController","description":"io.github.thibaultbee.streampack.core.elements.sources.video.camera.controllers.CameraSessionController.createCameraControllerForOutputs","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.video.camera.controllers/-camera-session-controller/create-camera-controller-for-outputs.html","searchKeys":["createCameraControllerForOutputs","suspend fun createCameraControllerForOutputs(dynamicRange: Long = this.dynamicRange, outputs: List<Surface> = this.outputs): CameraSessionController","io.github.thibaultbee.streampack.core.elements.sources.video.camera.controllers.CameraSessionController.createCameraControllerForOutputs"]},{"name":"suspend fun createSessionController(outputs: List<Surface>, dynamicRange: Long)","description":"io.github.thibaultbee.streampack.core.elements.sources.video.camera.controllers.CameraController.createSessionController","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.video.camera.controllers/-camera-controller/create-session-controller.html","searchKeys":["createSessionController","suspend fun createSessionController(outputs: List<Surface>, dynamicRange: Long)","io.github.thibaultbee.streampack.core.elements.sources.video.camera.controllers.CameraController.createSessionController"]},{"name":"suspend fun hasTarget(surface: Surface): Boolean","description":"io.github.thibaultbee.streampack.core.elements.sources.video.camera.controllers.CameraSessionController.hasTarget","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.video.camera.controllers/-camera-session-controller/has-target.html","searchKeys":["hasTarget","suspend fun hasTarget(surface: Surface): Boolean","io.github.thibaultbee.streampack.core.elements.sources.video.camera.controllers.CameraSessionController.hasTarget"]},{"name":"suspend fun join()","description":"io.github.thibaultbee.streampack.core.elements.utils.ConflatedJob.join","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils/-conflated-job/join.html","searchKeys":["join","suspend fun join()","io.github.thibaultbee.streampack.core.elements.utils.ConflatedJob.join"]},{"name":"suspend fun openSecond(descriptor: MediaDescriptor)","description":"io.github.thibaultbee.streampack.core.elements.endpoints.DualEndpoint.openSecond","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints/-dual-endpoint/open-second.html","searchKeys":["openSecond","suspend fun openSecond(descriptor: MediaDescriptor)","io.github.thibaultbee.streampack.core.elements.endpoints.DualEndpoint.openSecond"]},{"name":"suspend fun removeOutput(output: IPipelineOutput)","description":"io.github.thibaultbee.streampack.core.pipelines.StreamerPipeline.removeOutput","location":"streampack-core/io.github.thibaultbee.streampack.core.pipelines/-streamer-pipeline/remove-output.html","searchKeys":["removeOutput","suspend fun removeOutput(output: IPipelineOutput)","io.github.thibaultbee.streampack.core.pipelines.StreamerPipeline.removeOutput"]},{"name":"suspend fun removeOutput(output: Surface)","description":"io.github.thibaultbee.streampack.core.elements.sources.video.camera.controllers.CameraController.removeOutput","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.video.camera.controllers/-camera-controller/remove-output.html","searchKeys":["removeOutput","suspend fun removeOutput(output: Surface)","io.github.thibaultbee.streampack.core.elements.sources.video.camera.controllers.CameraController.removeOutput"]},{"name":"suspend fun removeTarget(output: Surface): Unit?","description":"io.github.thibaultbee.streampack.core.elements.sources.video.camera.controllers.CameraController.removeTarget","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.video.camera.controllers/-camera-controller/remove-target.html","searchKeys":["removeTarget","suspend fun removeTarget(output: Surface): Unit?","io.github.thibaultbee.streampack.core.elements.sources.video.camera.controllers.CameraController.removeTarget"]},{"name":"suspend fun removeTarget(target: Surface)","description":"io.github.thibaultbee.streampack.core.elements.sources.video.camera.controllers.CameraSessionController.removeTarget","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.video.camera.controllers/-camera-session-controller/remove-target.html","searchKeys":["removeTarget","suspend fun removeTarget(target: Surface)","io.github.thibaultbee.streampack.core.elements.sources.video.camera.controllers.CameraSessionController.removeTarget"]},{"name":"suspend fun removeTargets(targets: List<Surface>)","description":"io.github.thibaultbee.streampack.core.elements.sources.video.camera.controllers.CameraSessionController.removeTargets","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.video.camera.controllers/-camera-session-controller/remove-targets.html","searchKeys":["removeTargets","suspend fun removeTargets(targets: List<Surface>)","io.github.thibaultbee.streampack.core.elements.sources.video.camera.controllers.CameraSessionController.removeTargets"]},{"name":"suspend fun replaceOutput(previousOutput: Surface, newOutput: Surface)","description":"io.github.thibaultbee.streampack.core.elements.sources.video.camera.controllers.CameraController.replaceOutput","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.video.camera.controllers/-camera-controller/replace-output.html","searchKeys":["replaceOutput","suspend fun replaceOutput(previousOutput: Surface, newOutput: Surface)","io.github.thibaultbee.streampack.core.elements.sources.video.camera.controllers.CameraController.replaceOutput"]},{"name":"suspend fun setConfig(audioConfig: AudioConfig, videoConfig: VideoConfig)","description":"io.github.thibaultbee.streampack.core.streamers.single.SingleStreamer.setConfig","location":"streampack-core/io.github.thibaultbee.streampack.core.streamers.single/-single-streamer/set-config.html","searchKeys":["setConfig","suspend fun setConfig(audioConfig: AudioConfig, videoConfig: VideoConfig)","io.github.thibaultbee.streampack.core.streamers.single.SingleStreamer.setConfig"]},{"name":"suspend fun setConfig(audioConfig: DualStreamerAudioConfig, videoConfig: DualStreamerVideoConfig)","description":"io.github.thibaultbee.streampack.core.streamers.dual.DualStreamer.setConfig","location":"streampack-core/io.github.thibaultbee.streampack.core.streamers.dual/-dual-streamer/set-config.html","searchKeys":["setConfig","suspend fun setConfig(audioConfig: DualStreamerAudioConfig, videoConfig: DualStreamerVideoConfig)","io.github.thibaultbee.streampack.core.streamers.dual.DualStreamer.setConfig"]},{"name":"suspend fun setDynamicRange(dynamicRange: Long): CameraSessionController?","description":"io.github.thibaultbee.streampack.core.elements.sources.video.camera.controllers.CameraController.setDynamicRange","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.video.camera.controllers/-camera-controller/set-dynamic-range.html","searchKeys":["setDynamicRange","suspend fun setDynamicRange(dynamicRange: Long): CameraSessionController?","io.github.thibaultbee.streampack.core.elements.sources.video.camera.controllers.CameraController.setDynamicRange"]},{"name":"suspend fun startStreamSecond()","description":"io.github.thibaultbee.streampack.core.elements.endpoints.DualEndpoint.startStreamSecond","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints/-dual-endpoint/start-stream-second.html","searchKeys":["startStreamSecond","suspend fun startStreamSecond()","io.github.thibaultbee.streampack.core.elements.endpoints.DualEndpoint.startStreamSecond"]},{"name":"suspend fun videoMediaProjectionDualStreamer(context: Context, mediaProjection: MediaProjection, audioSourceFactory: IAudioSourceInternal.Factory? = MicrophoneSourceFactory(), firstEndpointFactory: IEndpointInternal.Factory = DynamicEndpointFactory(), secondEndpointFactory: IEndpointInternal.Factory = DynamicEndpointFactory(), defaultRotation: Int = context.displayRotation): DualStreamer","description":"io.github.thibaultbee.streampack.core.streamers.dual.videoMediaProjectionDualStreamer","location":"streampack-core/io.github.thibaultbee.streampack.core.streamers.dual/video-media-projection-dual-streamer.html","searchKeys":["videoMediaProjectionDualStreamer","suspend fun videoMediaProjectionDualStreamer(context: Context, mediaProjection: MediaProjection, audioSourceFactory: IAudioSourceInternal.Factory? = MicrophoneSourceFactory(), firstEndpointFactory: IEndpointInternal.Factory = DynamicEndpointFactory(), secondEndpointFactory: IEndpointInternal.Factory = DynamicEndpointFactory(), defaultRotation: Int = context.displayRotation): DualStreamer","io.github.thibaultbee.streampack.core.streamers.dual.videoMediaProjectionDualStreamer"]},{"name":"suspend fun videoMediaProjectionSingleStreamer(context: Context, mediaProjection: MediaProjection, audioSourceFactory: IAudioSourceInternal.Factory? = MicrophoneSourceFactory(), endpointFactory: IEndpointInternal.Factory = DynamicEndpointFactory(), defaultRotation: Int = context.displayRotation): SingleStreamer","description":"io.github.thibaultbee.streampack.core.streamers.single.videoMediaProjectionSingleStreamer","location":"streampack-core/io.github.thibaultbee.streampack.core.streamers.single/video-media-projection-single-streamer.html","searchKeys":["videoMediaProjectionSingleStreamer","suspend fun videoMediaProjectionSingleStreamer(context: Context, mediaProjection: MediaProjection, audioSourceFactory: IAudioSourceInternal.Factory? = MicrophoneSourceFactory(), endpointFactory: IEndpointInternal.Factory = DynamicEndpointFactory(), defaultRotation: Int = context.displayRotation): SingleStreamer","io.github.thibaultbee.streampack.core.streamers.single.videoMediaProjectionSingleStreamer"]},{"name":"suspend fun videoMediaProjectionVideoOnlyDualStreamer(context: Context, mediaProjection: MediaProjection, firstEndpointFactory: IEndpointInternal.Factory = DynamicEndpointFactory(), secondEndpointFactory: IEndpointInternal.Factory = DynamicEndpointFactory(), defaultRotation: Int = context.displayRotation): VideoOnlyDualStreamer","description":"io.github.thibaultbee.streampack.core.streamers.dual.videoMediaProjectionVideoOnlyDualStreamer","location":"streampack-core/io.github.thibaultbee.streampack.core.streamers.dual/video-media-projection-video-only-dual-streamer.html","searchKeys":["videoMediaProjectionVideoOnlyDualStreamer","suspend fun videoMediaProjectionVideoOnlyDualStreamer(context: Context, mediaProjection: MediaProjection, firstEndpointFactory: IEndpointInternal.Factory = DynamicEndpointFactory(), secondEndpointFactory: IEndpointInternal.Factory = DynamicEndpointFactory(), defaultRotation: Int = context.displayRotation): VideoOnlyDualStreamer","io.github.thibaultbee.streampack.core.streamers.dual.videoMediaProjectionVideoOnlyDualStreamer"]},{"name":"suspend fun videoMediaProjectionVideoOnlySingleStreamer(context: Context, mediaProjection: MediaProjection, endpointFactory: IEndpointInternal.Factory = DynamicEndpointFactory(), defaultRotation: Int = context.displayRotation): VideoOnlySingleStreamer","description":"io.github.thibaultbee.streampack.core.streamers.single.videoMediaProjectionVideoOnlySingleStreamer","location":"streampack-core/io.github.thibaultbee.streampack.core.streamers.single/video-media-projection-video-only-single-streamer.html","searchKeys":["videoMediaProjectionVideoOnlySingleStreamer","suspend fun videoMediaProjectionVideoOnlySingleStreamer(context: Context, mediaProjection: MediaProjection, endpointFactory: IEndpointInternal.Factory = DynamicEndpointFactory(), defaultRotation: Int = context.displayRotation): VideoOnlySingleStreamer","io.github.thibaultbee.streampack.core.streamers.single.videoMediaProjectionVideoOnlySingleStreamer"]},{"name":"typealias AudioConfig = AudioCodecConfig","description":"io.github.thibaultbee.streampack.core.streamers.single.AudioConfig","location":"streampack-core/io.github.thibaultbee.streampack.core.streamers.single/-audio-config/index.html","searchKeys":["AudioConfig","typealias AudioConfig = AudioCodecConfig","io.github.thibaultbee.streampack.core.streamers.single.AudioConfig"]},{"name":"typealias VideoConfig = VideoCodecConfig","description":"io.github.thibaultbee.streampack.core.streamers.single.VideoConfig","location":"streampack-core/io.github.thibaultbee.streampack.core.streamers.single/-video-config/index.html","searchKeys":["VideoConfig","typealias VideoConfig = VideoCodecConfig","io.github.thibaultbee.streampack.core.streamers.single.VideoConfig"]},{"name":"val AudioCodecConfig.sourceConfig: AudioSourceConfig","description":"io.github.thibaultbee.streampack.core.elements.utils.extensions.sourceConfig","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.extensions/source-config.html","searchKeys":["sourceConfig","val AudioCodecConfig.sourceConfig: AudioSourceConfig","io.github.thibaultbee.streampack.core.elements.utils.extensions.sourceConfig"]},{"name":"val AudioEffect.type: UUID","description":"io.github.thibaultbee.streampack.core.elements.utils.extensions.type","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.extensions/type.html","searchKeys":["type","val AudioEffect.type: UUID","io.github.thibaultbee.streampack.core.elements.utils.extensions.type"]},{"name":"val ByteBuffer.isAnnexB: Boolean","description":"io.github.thibaultbee.streampack.core.elements.utils.extensions.isAnnexB","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.extensions/is-annex-b.html","searchKeys":["isAnnexB","val ByteBuffer.isAnnexB: Boolean","io.github.thibaultbee.streampack.core.elements.utils.extensions.isAnnexB"]},{"name":"val ByteBuffer.isAvcc: Boolean","description":"io.github.thibaultbee.streampack.core.elements.utils.extensions.isAvcc","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.extensions/is-avcc.html","searchKeys":["isAvcc","val ByteBuffer.isAvcc: Boolean","io.github.thibaultbee.streampack.core.elements.utils.extensions.isAvcc"]},{"name":"val ByteBuffer.startCodeSize: Int","description":"io.github.thibaultbee.streampack.core.elements.utils.extensions.startCodeSize","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.extensions/start-code-size.html","searchKeys":["startCodeSize","val ByteBuffer.startCodeSize: Int","io.github.thibaultbee.streampack.core.elements.utils.extensions.startCodeSize"]},{"name":"val CameraManager.backCameras: List<String>","description":"io.github.thibaultbee.streampack.core.elements.sources.video.camera.extensions.backCameras","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.video.camera.extensions/back-cameras.html","searchKeys":["backCameras","val CameraManager.backCameras: List<String>","io.github.thibaultbee.streampack.core.elements.sources.video.camera.extensions.backCameras"]},{"name":"val CameraManager.cameras: List<String>","description":"io.github.thibaultbee.streampack.core.elements.sources.video.camera.extensions.cameras","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.video.camera.extensions/cameras.html","searchKeys":["cameras","val CameraManager.cameras: List<String>","io.github.thibaultbee.streampack.core.elements.sources.video.camera.extensions.cameras"]},{"name":"val CameraManager.defaultCameraId: String","description":"io.github.thibaultbee.streampack.core.elements.sources.video.camera.extensions.defaultCameraId","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.video.camera.extensions/default-camera-id.html","searchKeys":["defaultCameraId","val CameraManager.defaultCameraId: String","io.github.thibaultbee.streampack.core.elements.sources.video.camera.extensions.defaultCameraId"]},{"name":"val CameraManager.externalCameras: List<String>","description":"io.github.thibaultbee.streampack.core.elements.sources.video.camera.extensions.externalCameras","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.video.camera.extensions/external-cameras.html","searchKeys":["externalCameras","val CameraManager.externalCameras: List<String>","io.github.thibaultbee.streampack.core.elements.sources.video.camera.extensions.externalCameras"]},{"name":"val CameraManager.frontCameras: List<String>","description":"io.github.thibaultbee.streampack.core.elements.sources.video.camera.extensions.frontCameras","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.video.camera.extensions/front-cameras.html","searchKeys":["frontCameras","val CameraManager.frontCameras: List<String>","io.github.thibaultbee.streampack.core.elements.sources.video.camera.extensions.frontCameras"]},{"name":"val Context.backCameras: List<String>","description":"io.github.thibaultbee.streampack.core.elements.sources.video.camera.extensions.backCameras","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.video.camera.extensions/back-cameras.html","searchKeys":["backCameras","val Context.backCameras: List<String>","io.github.thibaultbee.streampack.core.elements.sources.video.camera.extensions.backCameras"]},{"name":"val Context.cameras: List<String>","description":"io.github.thibaultbee.streampack.core.elements.sources.video.camera.extensions.cameras","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.video.camera.extensions/cameras.html","searchKeys":["cameras","val Context.cameras: List<String>","io.github.thibaultbee.streampack.core.elements.sources.video.camera.extensions.cameras"]},{"name":"val Context.defaultCameraId: String","description":"io.github.thibaultbee.streampack.core.elements.sources.video.camera.extensions.defaultCameraId","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.video.camera.extensions/default-camera-id.html","searchKeys":["defaultCameraId","val Context.defaultCameraId: String","io.github.thibaultbee.streampack.core.elements.sources.video.camera.extensions.defaultCameraId"]},{"name":"val Context.densityDpi: Int","description":"io.github.thibaultbee.streampack.core.elements.utils.extensions.densityDpi","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.extensions/density-dpi.html","searchKeys":["densityDpi","val Context.densityDpi: Int","io.github.thibaultbee.streampack.core.elements.utils.extensions.densityDpi"]},{"name":"val Context.displayRotation: Int","description":"io.github.thibaultbee.streampack.core.elements.utils.extensions.displayRotation","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.extensions/display-rotation.html","searchKeys":["displayRotation","val Context.displayRotation: Int","io.github.thibaultbee.streampack.core.elements.utils.extensions.displayRotation"]},{"name":"val Context.displayRotationDegrees: Int","description":"io.github.thibaultbee.streampack.core.elements.utils.extensions.displayRotationDegrees","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.extensions/display-rotation-degrees.html","searchKeys":["displayRotationDegrees","val Context.displayRotationDegrees: Int","io.github.thibaultbee.streampack.core.elements.utils.extensions.displayRotationDegrees"]},{"name":"val Context.externalCameras: List<String>","description":"io.github.thibaultbee.streampack.core.elements.sources.video.camera.extensions.externalCameras","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.video.camera.extensions/external-cameras.html","searchKeys":["externalCameras","val Context.externalCameras: List<String>","io.github.thibaultbee.streampack.core.elements.sources.video.camera.extensions.externalCameras"]},{"name":"val Context.frontCameras: List<String>","description":"io.github.thibaultbee.streampack.core.elements.sources.video.camera.extensions.frontCameras","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.video.camera.extensions/front-cameras.html","searchKeys":["frontCameras","val Context.frontCameras: List<String>","io.github.thibaultbee.streampack.core.elements.sources.video.camera.extensions.frontCameras"]},{"name":"val Context.isApplicationLandscape: Boolean","description":"io.github.thibaultbee.streampack.core.elements.utils.extensions.isApplicationLandscape","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.extensions/is-application-landscape.html","searchKeys":["isApplicationLandscape","val Context.isApplicationLandscape: Boolean","io.github.thibaultbee.streampack.core.elements.utils.extensions.isApplicationLandscape"]},{"name":"val Context.isApplicationPortrait: Boolean","description":"io.github.thibaultbee.streampack.core.elements.utils.extensions.isApplicationPortrait","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.extensions/is-application-portrait.html","searchKeys":["isApplicationPortrait","val Context.isApplicationPortrait: Boolean","io.github.thibaultbee.streampack.core.elements.utils.extensions.isApplicationPortrait"]},{"name":"val Context.isDeviceLandscape: Boolean","description":"io.github.thibaultbee.streampack.core.elements.utils.extensions.isDeviceLandscape","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.extensions/is-device-landscape.html","searchKeys":["isDeviceLandscape","val Context.isDeviceLandscape: Boolean","io.github.thibaultbee.streampack.core.elements.utils.extensions.isDeviceLandscape"]},{"name":"val Context.isDevicePortrait: Boolean","description":"io.github.thibaultbee.streampack.core.elements.utils.extensions.isDevicePortrait","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.extensions/is-device-portrait.html","searchKeys":["isDevicePortrait","val Context.isDevicePortrait: Boolean","io.github.thibaultbee.streampack.core.elements.utils.extensions.isDevicePortrait"]},{"name":"val Context.isNaturalToLandscape: Boolean","description":"io.github.thibaultbee.streampack.core.elements.utils.extensions.isNaturalToLandscape","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.extensions/is-natural-to-landscape.html","searchKeys":["isNaturalToLandscape","val Context.isNaturalToLandscape: Boolean","io.github.thibaultbee.streampack.core.elements.utils.extensions.isNaturalToLandscape"]},{"name":"val Context.isNaturalToPortrait: Boolean","description":"io.github.thibaultbee.streampack.core.elements.utils.extensions.isNaturalToPortrait","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.extensions/is-natural-to-portrait.html","searchKeys":["isNaturalToPortrait","val Context.isNaturalToPortrait: Boolean","io.github.thibaultbee.streampack.core.elements.utils.extensions.isNaturalToPortrait"]},{"name":"val Context.screenRect: Rect","description":"io.github.thibaultbee.streampack.core.elements.utils.extensions.screenRect","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.extensions/screen-rect.html","searchKeys":["screenRect","val Context.screenRect: Rect","io.github.thibaultbee.streampack.core.elements.utils.extensions.screenRect"]},{"name":"val DEFAULT_COMPENSATION_RANGE: Range<Int>","description":"io.github.thibaultbee.streampack.core.elements.sources.video.camera.CameraSettings.Exposure.Companion.DEFAULT_COMPENSATION_RANGE","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.video.camera/-camera-settings/-exposure/-companion/-d-e-f-a-u-l-t_-c-o-m-p-e-n-s-a-t-i-o-n_-r-a-n-g-e.html","searchKeys":["DEFAULT_COMPENSATION_RANGE","val DEFAULT_COMPENSATION_RANGE: Range<Int>","io.github.thibaultbee.streampack.core.elements.sources.video.camera.CameraSettings.Exposure.Companion.DEFAULT_COMPENSATION_RANGE"]},{"name":"val DEFAULT_COMPENSATION_STEP_RATIONAL: Rational","description":"io.github.thibaultbee.streampack.core.elements.sources.video.camera.CameraSettings.Exposure.Companion.DEFAULT_COMPENSATION_STEP_RATIONAL","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.video.camera/-camera-settings/-exposure/-companion/-d-e-f-a-u-l-t_-c-o-m-p-e-n-s-a-t-i-o-n_-s-t-e-p_-r-a-t-i-o-n-a-l.html","searchKeys":["DEFAULT_COMPENSATION_STEP_RATIONAL","val DEFAULT_COMPENSATION_STEP_RATIONAL: Rational","io.github.thibaultbee.streampack.core.elements.sources.video.camera.CameraSettings.Exposure.Companion.DEFAULT_COMPENSATION_STEP_RATIONAL"]},{"name":"val DEFAULT_LENS_DISTANCE_RANGE: Range<Float>","description":"io.github.thibaultbee.streampack.core.elements.sources.video.camera.CameraSettings.Focus.Companion.DEFAULT_LENS_DISTANCE_RANGE","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.video.camera/-camera-settings/-focus/-companion/-d-e-f-a-u-l-t_-l-e-n-s_-d-i-s-t-a-n-c-e_-r-a-n-g-e.html","searchKeys":["DEFAULT_LENS_DISTANCE_RANGE","val DEFAULT_LENS_DISTANCE_RANGE: Range<Float>","io.github.thibaultbee.streampack.core.elements.sources.video.camera.CameraSettings.Focus.Companion.DEFAULT_LENS_DISTANCE_RANGE"]},{"name":"val DEFAULT_SENSITIVITY_RANGE: Range<Int>","description":"io.github.thibaultbee.streampack.core.elements.sources.video.camera.CameraSettings.Iso.Companion.DEFAULT_SENSITIVITY_RANGE","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.video.camera/-camera-settings/-iso/-companion/-d-e-f-a-u-l-t_-s-e-n-s-i-t-i-v-i-t-y_-r-a-n-g-e.html","searchKeys":["DEFAULT_SENSITIVITY_RANGE","val DEFAULT_SENSITIVITY_RANGE: Range<Int>","io.github.thibaultbee.streampack.core.elements.sources.video.camera.CameraSettings.Iso.Companion.DEFAULT_SENSITIVITY_RANGE"]},{"name":"val DEFAULT_VERTEX_SHADER: String","description":"io.github.thibaultbee.streampack.core.elements.processing.video.utils.GLUtils.DEFAULT_VERTEX_SHADER","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.processing.video.utils/-g-l-utils/-d-e-f-a-u-l-t_-v-e-r-t-e-x_-s-h-a-d-e-r.html","searchKeys":["DEFAULT_VERTEX_SHADER","val DEFAULT_VERTEX_SHADER: String","io.github.thibaultbee.streampack.core.elements.processing.video.utils.GLUtils.DEFAULT_VERTEX_SHADER"]},{"name":"val DEFAULT_ZOOM_RATIO_RANGE: Range<Float>","description":"io.github.thibaultbee.streampack.core.elements.sources.video.camera.CameraSettings.Zoom.Companion.DEFAULT_ZOOM_RATIO_RANGE","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.video.camera/-camera-settings/-zoom/-companion/-d-e-f-a-u-l-t_-z-o-o-m_-r-a-t-i-o_-r-a-n-g-e.html","searchKeys":["DEFAULT_ZOOM_RATIO_RANGE","val DEFAULT_ZOOM_RATIO_RANGE: Range<Float>","io.github.thibaultbee.streampack.core.elements.sources.video.camera.CameraSettings.Zoom.Companion.DEFAULT_ZOOM_RATIO_RANGE"]},{"name":"val EMPTY_ATTRIBS: IntArray","description":"io.github.thibaultbee.streampack.core.elements.processing.video.utils.GLUtils.EMPTY_ATTRIBS","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.processing.video.utils/-g-l-utils/-e-m-p-t-y_-a-t-t-r-i-b-s.html","searchKeys":["EMPTY_ATTRIBS","val EMPTY_ATTRIBS: IntArray","io.github.thibaultbee.streampack.core.elements.processing.video.utils.GLUtils.EMPTY_ATTRIBS"]},{"name":"val HDR_VERTEX_SHADER: String","description":"io.github.thibaultbee.streampack.core.elements.processing.video.utils.GLUtils.HDR_VERTEX_SHADER","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.processing.video.utils/-g-l-utils/-h-d-r_-v-e-r-t-e-x_-s-h-a-d-e-r.html","searchKeys":["HDR_VERTEX_SHADER","val HDR_VERTEX_SHADER: String","io.github.thibaultbee.streampack.core.elements.processing.video.utils.GLUtils.HDR_VERTEX_SHADER"]},{"name":"val HLG_SURFACE_ATTRIBS: IntArray","description":"io.github.thibaultbee.streampack.core.elements.processing.video.utils.GLUtils.HLG_SURFACE_ATTRIBS","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.processing.video.utils/-g-l-utils/-h-l-g_-s-u-r-f-a-c-e_-a-t-t-r-i-b-s.html","searchKeys":["HLG_SURFACE_ATTRIBS","val HLG_SURFACE_ATTRIBS: IntArray","io.github.thibaultbee.streampack.core.elements.processing.video.utils.GLUtils.HLG_SURFACE_ATTRIBS"]},{"name":"val IDENTITY_MATRIX: FloatArray","description":"io.github.thibaultbee.streampack.core.elements.processing.video.utils.GLUtils.IDENTITY_MATRIX","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.processing.video.utils/-g-l-utils/-i-d-e-n-t-i-t-y_-m-a-t-r-i-x.html","searchKeys":["IDENTITY_MATRIX","val IDENTITY_MATRIX: FloatArray","io.github.thibaultbee.streampack.core.elements.processing.video.utils.GLUtils.IDENTITY_MATRIX"]},{"name":"val IPipelineOutput.isStreaming: Boolean","description":"io.github.thibaultbee.streampack.core.pipelines.outputs.isStreaming","location":"streampack-core/io.github.thibaultbee.streampack.core.pipelines.outputs/is-streaming.html","searchKeys":["isStreaming","val IPipelineOutput.isStreaming: Boolean","io.github.thibaultbee.streampack.core.pipelines.outputs.isStreaming"]},{"name":"val IRotationProvider.rotationDegrees: Int","description":"io.github.thibaultbee.streampack.core.streamers.orientation.rotationDegrees","location":"streampack-core/io.github.thibaultbee.streampack.core.streamers.orientation/rotation-degrees.html","searchKeys":["rotationDegrees","val IRotationProvider.rotationDegrees: Int","io.github.thibaultbee.streampack.core.streamers.orientation.rotationDegrees"]},{"name":"val IWithVideoSource.isPreviewable: Boolean","description":"io.github.thibaultbee.streampack.core.interfaces.isPreviewable","location":"streampack-core/io.github.thibaultbee.streampack.core.interfaces/is-previewable.html","searchKeys":["isPreviewable","val IWithVideoSource.isPreviewable: Boolean","io.github.thibaultbee.streampack.core.interfaces.isPreviewable"]},{"name":"val Int.is90or270: Boolean","description":"io.github.thibaultbee.streampack.core.elements.processing.video.utils.extensions.is90or270","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.processing.video.utils.extensions/is90or270.html","searchKeys":["is90or270","val Int.is90or270: Boolean","io.github.thibaultbee.streampack.core.elements.processing.video.utils.extensions.is90or270"]},{"name":"val MediaFormat.extra: List<ByteBuffer>?","description":"io.github.thibaultbee.streampack.core.elements.utils.extensions.extra","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.extensions/extra.html","searchKeys":["extra","val MediaFormat.extra: List<ByteBuffer>?","io.github.thibaultbee.streampack.core.elements.utils.extensions.extra"]},{"name":"val MediaFormat.resolution: Size","description":"io.github.thibaultbee.streampack.core.elements.utils.extensions.resolution","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.extensions/resolution.html","searchKeys":["resolution","val MediaFormat.resolution: Size","io.github.thibaultbee.streampack.core.elements.utils.extensions.resolution"]},{"name":"val MediaSinkType.isLocal: Boolean","description":"io.github.thibaultbee.streampack.core.elements.endpoints.isLocal","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints/is-local.html","searchKeys":["isLocal","val MediaSinkType.isLocal: Boolean","io.github.thibaultbee.streampack.core.elements.endpoints.isLocal"]},{"name":"val NORMALIZED_RECT: RectF","description":"io.github.thibaultbee.streampack.core.elements.processing.video.utils.TransformUtils.NORMALIZED_RECT","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.processing.video.utils/-transform-utils/-n-o-r-m-a-l-i-z-e-d_-r-e-c-t.html","searchKeys":["NORMALIZED_RECT","val NORMALIZED_RECT: RectF","io.github.thibaultbee.streampack.core.elements.processing.video.utils.TransformUtils.NORMALIZED_RECT"]},{"name":"val NO_OUTPUT_SURFACE: OutputSurface","description":"io.github.thibaultbee.streampack.core.elements.processing.video.utils.GLUtils.NO_OUTPUT_SURFACE","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.processing.video.utils/-g-l-utils/-n-o_-o-u-t-p-u-t_-s-u-r-f-a-c-e.html","searchKeys":["NO_OUTPUT_SURFACE","val NO_OUTPUT_SURFACE: OutputSurface","io.github.thibaultbee.streampack.core.elements.processing.video.utils.GLUtils.NO_OUTPUT_SURFACE"]},{"name":"val Rect.size: Size","description":"io.github.thibaultbee.streampack.core.elements.utils.extensions.size","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.extensions/size.html","searchKeys":["size","val Rect.size: Size","io.github.thibaultbee.streampack.core.elements.utils.extensions.size"]},{"name":"val RectF.normalized: Matrix","description":"io.github.thibaultbee.streampack.core.elements.processing.video.utils.extensions.normalized","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.processing.video.utils.extensions/normalized.html","searchKeys":["normalized","val RectF.normalized: Matrix","io.github.thibaultbee.streampack.core.elements.processing.video.utils.extensions.normalized"]},{"name":"val Size.isLandscape: Boolean","description":"io.github.thibaultbee.streampack.core.elements.utils.extensions.isLandscape","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.extensions/is-landscape.html","searchKeys":["isLandscape","val Size.isLandscape: Boolean","io.github.thibaultbee.streampack.core.elements.utils.extensions.isLandscape"]},{"name":"val Size.isPortrait: Boolean","description":"io.github.thibaultbee.streampack.core.elements.utils.extensions.isPortrait","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.extensions/is-portrait.html","searchKeys":["isPortrait","val Size.isPortrait: Boolean","io.github.thibaultbee.streampack.core.elements.utils.extensions.isPortrait"]},{"name":"val Size.landscapize: Size","description":"io.github.thibaultbee.streampack.core.elements.utils.extensions.landscapize","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.extensions/landscapize.html","searchKeys":["landscapize","val Size.landscapize: Size","io.github.thibaultbee.streampack.core.elements.utils.extensions.landscapize"]},{"name":"val Size.portraitize: Size","description":"io.github.thibaultbee.streampack.core.elements.utils.extensions.portraitize","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.extensions/portraitize.html","searchKeys":["portraitize","val Size.portraitize: Size","io.github.thibaultbee.streampack.core.elements.utils.extensions.portraitize"]},{"name":"val Size.reverse: Size","description":"io.github.thibaultbee.streampack.core.elements.utils.extensions.reverse","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.extensions/reverse.html","searchKeys":["reverse","val Size.reverse: Size","io.github.thibaultbee.streampack.core.elements.utils.extensions.reverse"]},{"name":"val TEX_BUF: FloatBuffer","description":"io.github.thibaultbee.streampack.core.elements.processing.video.utils.GLUtils.TEX_BUF","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.processing.video.utils/-g-l-utils/-t-e-x_-b-u-f.html","searchKeys":["TEX_BUF","val TEX_BUF: FloatBuffer","io.github.thibaultbee.streampack.core.elements.processing.video.utils.GLUtils.TEX_BUF"]},{"name":"val TEX_COORDS: FloatArray","description":"io.github.thibaultbee.streampack.core.elements.processing.video.utils.GLUtils.TEX_COORDS","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.processing.video.utils/-g-l-utils/-t-e-x_-c-o-o-r-d-s.html","searchKeys":["TEX_COORDS","val TEX_COORDS: FloatArray","io.github.thibaultbee.streampack.core.elements.processing.video.utils.GLUtils.TEX_COORDS"]},{"name":"val Throwable.isClosedException: Boolean","description":"io.github.thibaultbee.streampack.core.utils.extensions.isClosedException","location":"streampack-core/io.github.thibaultbee.streampack.core.utils.extensions/is-closed-exception.html","searchKeys":["isClosedException","val Throwable.isClosedException: Boolean","io.github.thibaultbee.streampack.core.utils.extensions.isClosedException"]},{"name":"val Throwable.rootCause: Throwable","description":"io.github.thibaultbee.streampack.core.elements.utils.extensions.rootCause","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.extensions/root-cause.html","searchKeys":["rootCause","val Throwable.rootCause: Throwable","io.github.thibaultbee.streampack.core.elements.utils.extensions.rootCause"]},{"name":"val VERTEX_BUF: FloatBuffer","description":"io.github.thibaultbee.streampack.core.elements.processing.video.utils.GLUtils.VERTEX_BUF","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.processing.video.utils/-g-l-utils/-v-e-r-t-e-x_-b-u-f.html","searchKeys":["VERTEX_BUF","val VERTEX_BUF: FloatBuffer","io.github.thibaultbee.streampack.core.elements.processing.video.utils.GLUtils.VERTEX_BUF"]},{"name":"val VERTEX_COORDS: FloatArray","description":"io.github.thibaultbee.streampack.core.elements.processing.video.utils.GLUtils.VERTEX_COORDS","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.processing.video.utils/-g-l-utils/-v-e-r-t-e-x_-c-o-o-r-d-s.html","searchKeys":["VERTEX_COORDS","val VERTEX_COORDS: FloatArray","io.github.thibaultbee.streampack.core.elements.processing.video.utils.GLUtils.VERTEX_COORDS"]},{"name":"val VideoCodecConfig.sourceConfig: VideoSourceConfig","description":"io.github.thibaultbee.streampack.core.elements.utils.extensions.sourceConfig","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.extensions/source-config.html","searchKeys":["sourceConfig","val VideoCodecConfig.sourceConfig: VideoSourceConfig","io.github.thibaultbee.streampack.core.elements.utils.extensions.sourceConfig"]},{"name":"val a: Char","description":"io.github.thibaultbee.streampack.core.elements.utils.av.FourCC.a","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av/-four-c-c/a.html","searchKeys":["a","val a: Char","io.github.thibaultbee.streampack.core.elements.utils.av.FourCC.a"]},{"name":"val aacScaleFactorDataResilienceFlag: Boolean","description":"io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.config.ELDSpecificConfig.aacScaleFactorDataResilienceFlag","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.config/-e-l-d-specific-config/aac-scale-factor-data-resilience-flag.html","searchKeys":["aacScaleFactorDataResilienceFlag","val aacScaleFactorDataResilienceFlag: Boolean","io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.config.ELDSpecificConfig.aacScaleFactorDataResilienceFlag"]},{"name":"val aacScaleFactorDataResilienceFlag: Boolean? = null","description":"io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.config.GASpecificConfig.aacScaleFactorDataResilienceFlag","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.config/-g-a-specific-config/aac-scale-factor-data-resilience-flag.html","searchKeys":["aacScaleFactorDataResilienceFlag","val aacScaleFactorDataResilienceFlag: Boolean? = null","io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.config.GASpecificConfig.aacScaleFactorDataResilienceFlag"]},{"name":"val aacSectionDataResilienceFlag: Boolean","description":"io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.config.ELDSpecificConfig.aacSectionDataResilienceFlag","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.config/-e-l-d-specific-config/aac-section-data-resilience-flag.html","searchKeys":["aacSectionDataResilienceFlag","val aacSectionDataResilienceFlag: Boolean","io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.config.ELDSpecificConfig.aacSectionDataResilienceFlag"]},{"name":"val aacSectionDataResilienceFlag: Boolean? = null","description":"io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.config.GASpecificConfig.aacSectionDataResilienceFlag","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.config/-g-a-specific-config/aac-section-data-resilience-flag.html","searchKeys":["aacSectionDataResilienceFlag","val aacSectionDataResilienceFlag: Boolean? = null","io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.config.GASpecificConfig.aacSectionDataResilienceFlag"]},{"name":"val aacSpectralDataResilienceFlag: Boolean","description":"io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.config.ELDSpecificConfig.aacSpectralDataResilienceFlag","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.config/-e-l-d-specific-config/aac-spectral-data-resilience-flag.html","searchKeys":["aacSpectralDataResilienceFlag","val aacSpectralDataResilienceFlag: Boolean","io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.config.ELDSpecificConfig.aacSpectralDataResilienceFlag"]},{"name":"val aacSpectralDataResilienceFlag: Boolean? = null","description":"io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.config.GASpecificConfig.aacSpectralDataResilienceFlag","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.config/-g-a-specific-config/aac-spectral-data-resilience-flag.html","searchKeys":["aacSpectralDataResilienceFlag","val aacSpectralDataResilienceFlag: Boolean? = null","io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.config.GASpecificConfig.aacSpectralDataResilienceFlag"]},{"name":"val allStreamsSameTimeFraming: Boolean? = null","description":"io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.StreamMuxConfig.allStreamsSameTimeFraming","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac/-stream-mux-config/all-streams-same-time-framing.html","searchKeys":["allStreamsSameTimeFraming","val allStreamsSameTimeFraming: Boolean? = null","io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.StreamMuxConfig.allStreamsSameTimeFraming"]},{"name":"val aspectRatioMode: AspectRatioMode","description":"io.github.thibaultbee.streampack.core.elements.processing.video.outputs.SurfaceOutput.TransformationInfo.aspectRatioMode","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.processing.video.outputs/-surface-output/-transformation-info/aspect-ratio-mode.html","searchKeys":["aspectRatioMode","val aspectRatioMode: AspectRatioMode","io.github.thibaultbee.streampack.core.elements.processing.video.outputs.SurfaceOutput.TransformationInfo.aspectRatioMode"]},{"name":"val audioBitrateRange: Range<Int>","description":"io.github.thibaultbee.streampack.core.configuration.BitrateRegulatorConfig.audioBitrateRange","location":"streampack-core/io.github.thibaultbee.streampack.core.configuration/-bitrate-regulator-config/audio-bitrate-range.html","searchKeys":["audioBitrateRange","val audioBitrateRange: Range<Int>","io.github.thibaultbee.streampack.core.configuration.BitrateRegulatorConfig.audioBitrateRange"]},{"name":"val audioMuxVersionA: Int = 0","description":"io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.StreamMuxConfig.audioMuxVersionA","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac/-stream-mux-config/audio-mux-version-a.html","searchKeys":["audioMuxVersionA","val audioMuxVersionA: Int = 0","io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.StreamMuxConfig.audioMuxVersionA"]},{"name":"val audioObjectType: AudioObjectType","description":"io.github.thibaultbee.streampack.core.elements.utils.av.audio.AudioSpecificConfig.AudioSpecificConfigExtension.audioObjectType","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.audio/-audio-specific-config/-audio-specific-config-extension/audio-object-type.html","searchKeys":["audioObjectType","val audioObjectType: AudioObjectType","io.github.thibaultbee.streampack.core.elements.utils.av.audio.AudioSpecificConfig.AudioSpecificConfigExtension.audioObjectType"]},{"name":"val audioObjectType: AudioObjectType","description":"io.github.thibaultbee.streampack.core.elements.utils.av.audio.AudioSpecificConfig.audioObjectType","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.audio/-audio-specific-config/audio-object-type.html","searchKeys":["audioObjectType","val audioObjectType: AudioObjectType","io.github.thibaultbee.streampack.core.elements.utils.av.audio.AudioSpecificConfig.audioObjectType"]},{"name":"val audioObjectType: AudioObjectType","description":"io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.config.GASpecificConfig.audioObjectType","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.config/-g-a-specific-config/audio-object-type.html","searchKeys":["audioObjectType","val audioObjectType: AudioObjectType","io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.config.GASpecificConfig.audioObjectType"]},{"name":"val availableAutoModes: List<Int>","description":"io.github.thibaultbee.streampack.core.elements.sources.video.camera.CameraSettings.Exposure.availableAutoModes","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.video.camera/-camera-settings/-exposure/available-auto-modes.html","searchKeys":["availableAutoModes","val availableAutoModes: List<Int>","io.github.thibaultbee.streampack.core.elements.sources.video.camera.CameraSettings.Exposure.availableAutoModes"]},{"name":"val availableAutoModes: List<Int>","description":"io.github.thibaultbee.streampack.core.elements.sources.video.camera.CameraSettings.Focus.availableAutoModes","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.video.camera/-camera-settings/-focus/available-auto-modes.html","searchKeys":["availableAutoModes","val availableAutoModes: List<Int>","io.github.thibaultbee.streampack.core.elements.sources.video.camera.CameraSettings.Focus.availableAutoModes"]},{"name":"val availableAutoModes: List<Int>","description":"io.github.thibaultbee.streampack.core.elements.sources.video.camera.CameraSettings.WhiteBalance.availableAutoModes","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.video.camera/-camera-settings/-white-balance/available-auto-modes.html","searchKeys":["availableAutoModes","val availableAutoModes: List<Int>","io.github.thibaultbee.streampack.core.elements.sources.video.camera.CameraSettings.WhiteBalance.availableAutoModes"]},{"name":"val availableCompensationRange: Range<Int>","description":"io.github.thibaultbee.streampack.core.elements.sources.video.camera.CameraSettings.Exposure.availableCompensationRange","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.video.camera/-camera-settings/-exposure/available-compensation-range.html","searchKeys":["availableCompensationRange","val availableCompensationRange: Range<Int>","io.github.thibaultbee.streampack.core.elements.sources.video.camera.CameraSettings.Exposure.availableCompensationRange"]},{"name":"val availableCompensationStep: Rational","description":"io.github.thibaultbee.streampack.core.elements.sources.video.camera.CameraSettings.Exposure.availableCompensationStep","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.video.camera/-camera-settings/-exposure/available-compensation-step.html","searchKeys":["availableCompensationStep","val availableCompensationStep: Rational","io.github.thibaultbee.streampack.core.elements.sources.video.camera.CameraSettings.Exposure.availableCompensationStep"]},{"name":"val availableLensDistanceRange: Range<Float>","description":"io.github.thibaultbee.streampack.core.elements.sources.video.camera.CameraSettings.Focus.availableLensDistanceRange","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.video.camera/-camera-settings/-focus/available-lens-distance-range.html","searchKeys":["availableLensDistanceRange","val availableLensDistanceRange: Range<Float>","io.github.thibaultbee.streampack.core.elements.sources.video.camera.CameraSettings.Focus.availableLensDistanceRange"]},{"name":"val availableSensorSensitivityRange: Range<Int>","description":"io.github.thibaultbee.streampack.core.elements.sources.video.camera.CameraSettings.Iso.availableSensorSensitivityRange","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.video.camera/-camera-settings/-iso/available-sensor-sensitivity-range.html","searchKeys":["availableSensorSensitivityRange","val availableSensorSensitivityRange: Range<Int>","io.github.thibaultbee.streampack.core.elements.sources.video.camera.CameraSettings.Iso.availableSensorSensitivityRange"]},{"name":"val avcPacketType: AVCPacketType","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.video.PacketType.avcPacketType","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.video/-packet-type/avc-packet-type.html","searchKeys":["avcPacketType","val avcPacketType: AVCPacketType","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.video.PacketType.avcPacketType"]},{"name":"val b: Char","description":"io.github.thibaultbee.streampack.core.elements.utils.av.FourCC.b","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av/-four-c-c/b.html","searchKeys":["b","val b: Char","io.github.thibaultbee.streampack.core.elements.utils.av.FourCC.b"]},{"name":"val bitDepthChromaMinus8: Byte","description":"io.github.thibaultbee.streampack.core.elements.utils.av.video.hevc.SequenceParameterSets.bitDepthChromaMinus8","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.video.hevc/-sequence-parameter-sets/bit-depth-chroma-minus8.html","searchKeys":["bitDepthChromaMinus8","val bitDepthChromaMinus8: Byte","io.github.thibaultbee.streampack.core.elements.utils.av.video.hevc.SequenceParameterSets.bitDepthChromaMinus8"]},{"name":"val bitDepthLumaMinus8: Byte","description":"io.github.thibaultbee.streampack.core.elements.utils.av.video.hevc.SequenceParameterSets.bitDepthLumaMinus8","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.video.hevc/-sequence-parameter-sets/bit-depth-luma-minus8.html","searchKeys":["bitDepthLumaMinus8","val bitDepthLumaMinus8: Byte","io.github.thibaultbee.streampack.core.elements.utils.av.video.hevc.SequenceParameterSets.bitDepthLumaMinus8"]},{"name":"val bitEnd: Int","description":"io.github.thibaultbee.streampack.core.elements.utils.av.buffer.BitBuffer.bitEnd","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.buffer/-bit-buffer/bit-end.html","searchKeys":["bitEnd","val bitEnd: Int","io.github.thibaultbee.streampack.core.elements.utils.av.buffer.BitBuffer.bitEnd"]},{"name":"val bitRemaining: Int","description":"io.github.thibaultbee.streampack.core.elements.utils.av.buffer.BitBuffer.bitRemaining","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.buffer/-bit-buffer/bit-remaining.html","searchKeys":["bitRemaining","val bitRemaining: Int","io.github.thibaultbee.streampack.core.elements.utils.av.buffer.BitBuffer.bitRemaining"]},{"name":"val bsAlterScale: Boolean? = null","description":"io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.config.SbrHeader.bsAlterScale","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.config/-sbr-header/bs-alter-scale.html","searchKeys":["bsAlterScale","val bsAlterScale: Boolean? = null","io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.config.SbrHeader.bsAlterScale"]},{"name":"val bsAmpRes: Boolean","description":"io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.config.SbrHeader.bsAmpRes","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.config/-sbr-header/bs-amp-res.html","searchKeys":["bsAmpRes","val bsAmpRes: Boolean","io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.config.SbrHeader.bsAmpRes"]},{"name":"val bsFreqScale: Byte? = null","description":"io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.config.SbrHeader.bsFreqScale","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.config/-sbr-header/bs-freq-scale.html","searchKeys":["bsFreqScale","val bsFreqScale: Byte? = null","io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.config.SbrHeader.bsFreqScale"]},{"name":"val bsHeaderExtra1: Boolean","description":"io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.config.SbrHeader.bsHeaderExtra1","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.config/-sbr-header/bs-header-extra1.html","searchKeys":["bsHeaderExtra1","val bsHeaderExtra1: Boolean","io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.config.SbrHeader.bsHeaderExtra1"]},{"name":"val bsHeaderExtra2: Boolean","description":"io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.config.SbrHeader.bsHeaderExtra2","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.config/-sbr-header/bs-header-extra2.html","searchKeys":["bsHeaderExtra2","val bsHeaderExtra2: Boolean","io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.config.SbrHeader.bsHeaderExtra2"]},{"name":"val bsInterpolFreq: Boolean? = null","description":"io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.config.SbrHeader.bsInterpolFreq","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.config/-sbr-header/bs-interpol-freq.html","searchKeys":["bsInterpolFreq","val bsInterpolFreq: Boolean? = null","io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.config.SbrHeader.bsInterpolFreq"]},{"name":"val bsLimiterBands: Byte? = null","description":"io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.config.SbrHeader.bsLimiterBands","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.config/-sbr-header/bs-limiter-bands.html","searchKeys":["bsLimiterBands","val bsLimiterBands: Byte? = null","io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.config.SbrHeader.bsLimiterBands"]},{"name":"val bsLimiterGains: Byte? = null","description":"io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.config.SbrHeader.bsLimiterGains","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.config/-sbr-header/bs-limiter-gains.html","searchKeys":["bsLimiterGains","val bsLimiterGains: Byte? = null","io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.config.SbrHeader.bsLimiterGains"]},{"name":"val bsNoiseBands: Byte? = null","description":"io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.config.SbrHeader.bsNoiseBands","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.config/-sbr-header/bs-noise-bands.html","searchKeys":["bsNoiseBands","val bsNoiseBands: Byte? = null","io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.config.SbrHeader.bsNoiseBands"]},{"name":"val bsSmoothingMode: Boolean? = null","description":"io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.config.SbrHeader.bsSmoothingMode","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.config/-sbr-header/bs-smoothing-mode.html","searchKeys":["bsSmoothingMode","val bsSmoothingMode: Boolean? = null","io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.config.SbrHeader.bsSmoothingMode"]},{"name":"val bsStartFreq: Byte","description":"io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.config.SbrHeader.bsStartFreq","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.config/-sbr-header/bs-start-freq.html","searchKeys":["bsStartFreq","val bsStartFreq: Byte","io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.config.SbrHeader.bsStartFreq"]},{"name":"val bsStopFreq: Byte","description":"io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.config.SbrHeader.bsStopFreq","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.config/-sbr-header/bs-stop-freq.html","searchKeys":["bsStopFreq","val bsStopFreq: Byte","io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.config.SbrHeader.bsStopFreq"]},{"name":"val bsXoverBand: Byte","description":"io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.config.SbrHeader.bsXoverBand","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.config/-sbr-header/bs-xover-band.html","searchKeys":["bsXoverBand","val bsXoverBand: Byte","io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.config.SbrHeader.bsXoverBand"]},{"name":"val buffer: ByteBuffer","description":"io.github.thibaultbee.streampack.core.elements.data.Frame.buffer","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.data/-frame/buffer.html","searchKeys":["buffer","val buffer: ByteBuffer","io.github.thibaultbee.streampack.core.elements.data.Frame.buffer"]},{"name":"val buffer: ByteBuffer","description":"io.github.thibaultbee.streampack.core.elements.data.Packet.buffer","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.data/-packet/buffer.html","searchKeys":["buffer","val buffer: ByteBuffer","io.github.thibaultbee.streampack.core.elements.data.Packet.buffer"]},{"name":"val buffer: ByteBuffer","description":"io.github.thibaultbee.streampack.core.elements.utils.av.buffer.BitBuffer.buffer","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.buffer/-bit-buffer/buffer.html","searchKeys":["buffer","val buffer: ByteBuffer","io.github.thibaultbee.streampack.core.elements.utils.av.buffer.BitBuffer.buffer"]},{"name":"val byteFormat: Int","description":"io.github.thibaultbee.streampack.core.elements.encoders.AudioCodecConfig.byteFormat","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.encoders/-audio-codec-config/byte-format.html","searchKeys":["byteFormat","val byteFormat: Int","io.github.thibaultbee.streampack.core.elements.encoders.AudioCodecConfig.byteFormat"]},{"name":"val byteFormat: Int","description":"io.github.thibaultbee.streampack.core.elements.sources.audio.AudioSourceConfig.byteFormat","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.audio/-audio-source-config/byte-format.html","searchKeys":["byteFormat","val byteFormat: Int","io.github.thibaultbee.streampack.core.elements.sources.audio.AudioSourceConfig.byteFormat"]},{"name":"val c: Char","description":"io.github.thibaultbee.streampack.core.elements.utils.av.FourCC.c","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av/-four-c-c/c.html","searchKeys":["c","val c: Char","io.github.thibaultbee.streampack.core.elements.utils.av.FourCC.c"]},{"name":"val camera: CameraDevice","description":"io.github.thibaultbee.streampack.core.elements.sources.video.camera.controllers.CameraDeviceController.camera","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.video.camera.controllers/-camera-device-controller/camera.html","searchKeys":["camera","val camera: CameraDevice","io.github.thibaultbee.streampack.core.elements.sources.video.camera.controllers.CameraDeviceController.camera"]},{"name":"val cameraId: String","description":"io.github.thibaultbee.streampack.core.elements.sources.video.camera.CameraSettings.cameraId","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.video.camera/-camera-settings/camera-id.html","searchKeys":["cameraId","val cameraId: String","io.github.thibaultbee.streampack.core.elements.sources.video.camera.CameraSettings.cameraId"]},{"name":"val cameraId: String","description":"io.github.thibaultbee.streampack.core.elements.sources.video.camera.controllers.CameraController.cameraId","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.video.camera.controllers/-camera-controller/camera-id.html","searchKeys":["cameraId","val cameraId: String","io.github.thibaultbee.streampack.core.elements.sources.video.camera.controllers.CameraController.cameraId"]},{"name":"val cameraId: String","description":"io.github.thibaultbee.streampack.core.elements.sources.video.camera.controllers.CameraSessionController.cameraId","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.video.camera.controllers/-camera-session-controller/camera-id.html","searchKeys":["cameraId","val cameraId: String","io.github.thibaultbee.streampack.core.elements.sources.video.camera.controllers.CameraSessionController.cameraId"]},{"name":"val cameraId: String? = null","description":"io.github.thibaultbee.streampack.core.elements.sources.video.camera.CameraSourceFactory.cameraId","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.video.camera/-camera-source-factory/camera-id.html","searchKeys":["cameraId","val cameraId: String? = null","io.github.thibaultbee.streampack.core.elements.sources.video.camera.CameraSourceFactory.cameraId"]},{"name":"val channelConfig: Int","description":"io.github.thibaultbee.streampack.core.elements.encoders.AudioCodecConfig.channelConfig","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.encoders/-audio-codec-config/channel-config.html","searchKeys":["channelConfig","val channelConfig: Int","io.github.thibaultbee.streampack.core.elements.encoders.AudioCodecConfig.channelConfig"]},{"name":"val channelConfig: Int","description":"io.github.thibaultbee.streampack.core.elements.sources.audio.AudioSourceConfig.channelConfig","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.audio/-audio-source-config/channel-config.html","searchKeys":["channelConfig","val channelConfig: Int","io.github.thibaultbee.streampack.core.elements.sources.audio.AudioSourceConfig.channelConfig"]},{"name":"val channelConfiguration: ChannelConfiguration","description":"io.github.thibaultbee.streampack.core.elements.utils.av.audio.AudioSpecificConfig.channelConfiguration","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.audio/-audio-specific-config/channel-configuration.html","searchKeys":["channelConfiguration","val channelConfiguration: ChannelConfiguration","io.github.thibaultbee.streampack.core.elements.utils.av.audio.AudioSpecificConfig.channelConfiguration"]},{"name":"val channelConfiguration: ChannelConfiguration","description":"io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.config.ELDSpecificConfig.channelConfiguration","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.config/-e-l-d-specific-config/channel-configuration.html","searchKeys":["channelConfiguration","val channelConfiguration: ChannelConfiguration","io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.config.ELDSpecificConfig.channelConfiguration"]},{"name":"val channelConfiguration: ChannelConfiguration","description":"io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.config.GASpecificConfig.channelConfiguration","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.config/-g-a-specific-config/channel-configuration.html","searchKeys":["channelConfiguration","val channelConfiguration: ChannelConfiguration","io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.config.GASpecificConfig.channelConfiguration"]},{"name":"val channelConfiguration: ChannelConfiguration?","description":"io.github.thibaultbee.streampack.core.elements.utils.av.audio.AudioSpecificConfig.AudioSpecificConfigExtension.channelConfiguration","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.audio/-audio-specific-config/-audio-specific-config-extension/channel-configuration.html","searchKeys":["channelConfiguration","val channelConfiguration: ChannelConfiguration?","io.github.thibaultbee.streampack.core.elements.utils.av.audio.AudioSpecificConfig.AudioSpecificConfigExtension.channelConfiguration"]},{"name":"val channelCount: Byte","description":"io.github.thibaultbee.streampack.core.elements.utils.av.audio.opus.IdentificationHeader.channelCount","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.audio.opus/-identification-header/channel-count.html","searchKeys":["channelCount","val channelCount: Byte","io.github.thibaultbee.streampack.core.elements.utils.av.audio.opus.IdentificationHeader.channelCount"]},{"name":"val channelCount: Int","description":"io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.ADTS.channelCount","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac/-a-d-t-s/channel-count.html","searchKeys":["channelCount","val channelCount: Int","io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.ADTS.channelCount"]},{"name":"val channelMapping: IdentificationHeader.ChannelMapping?","description":"io.github.thibaultbee.streampack.core.elements.utils.av.audio.opus.IdentificationHeader.channelMapping","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.audio.opus/-identification-header/channel-mapping.html","searchKeys":["channelMapping","val channelMapping: IdentificationHeader.ChannelMapping?","io.github.thibaultbee.streampack.core.elements.utils.av.audio.opus.IdentificationHeader.channelMapping"]},{"name":"val channelMappingFamily: Byte","description":"io.github.thibaultbee.streampack.core.elements.utils.av.audio.opus.IdentificationHeader.channelMappingFamily","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.audio.opus/-identification-header/channel-mapping-family.html","searchKeys":["channelMappingFamily","val channelMappingFamily: Byte","io.github.thibaultbee.streampack.core.elements.utils.av.audio.opus.IdentificationHeader.channelMappingFamily"]},{"name":"val chromaFormat: ChromaFormat","description":"io.github.thibaultbee.streampack.core.elements.utils.av.video.hevc.SequenceParameterSets.chromaFormat","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.video.hevc/-sequence-parameter-sets/chroma-format.html","searchKeys":["chromaFormat","val chromaFormat: ChromaFormat","io.github.thibaultbee.streampack.core.elements.utils.av.video.hevc.SequenceParameterSets.chromaFormat"]},{"name":"val co64: ChunkLargeOffsetBox","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.SampleTableBox.co64","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-sample-table-box/co64.html","searchKeys":["co64","val co64: ChunkLargeOffsetBox","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.SampleTableBox.co64"]},{"name":"val code: Int","description":"io.github.thibaultbee.streampack.core.elements.utils.av.FourCC.code","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av/-four-c-c/code.html","searchKeys":["code","val code: Int","io.github.thibaultbee.streampack.core.elements.utils.av.FourCC.code"]},{"name":"val codecID: Int?","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.VideoMetadata.codecID","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags/-video-metadata/codec-i-d.html","searchKeys":["codecID","val codecID: Int?","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.VideoMetadata.codecID"]},{"name":"val codecID: SoundFormat","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.AudioMetadata.codecID","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags/-audio-metadata/codec-i-d.html","searchKeys":["codecID","val codecID: SoundFormat","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.AudioMetadata.codecID"]},{"name":"val colorCorrection: CameraSettings.ColorCorrection","description":"io.github.thibaultbee.streampack.core.elements.sources.video.camera.CameraSettings.colorCorrection","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.video.camera/-camera-settings/color-correction.html","searchKeys":["colorCorrection","val colorCorrection: CameraSettings.ColorCorrection","io.github.thibaultbee.streampack.core.elements.sources.video.camera.CameraSettings.colorCorrection"]},{"name":"val completeness: Boolean = true","description":"io.github.thibaultbee.streampack.core.elements.utils.av.video.hevc.HEVCDecoderConfigurationRecord.NalUnit.completeness","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.video.hevc/-h-e-v-c-decoder-configuration-record/-nal-unit/completeness.html","searchKeys":["completeness","val completeness: Boolean = true","io.github.thibaultbee.streampack.core.elements.utils.av.video.hevc.HEVCDecoderConfigurationRecord.NalUnit.completeness"]},{"name":"val config: CodecConfig","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models.Track.config","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models/-track/config.html","searchKeys":["config","val config: CodecConfig","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models.Track.config"]},{"name":"val config: CodecConfig","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.data.Stream.config","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.data/-stream/config.html","searchKeys":["config","val config: CodecConfig","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.data.Stream.config"]},{"name":"val config: T","description":"io.github.thibaultbee.streampack.core.elements.encoders.mediacodec.EncoderConfig.config","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.encoders.mediacodec/-encoder-config/config.html","searchKeys":["config","val config: T","io.github.thibaultbee.streampack.core.elements.encoders.mediacodec.EncoderConfig.config"]},{"name":"val containerType: MediaContainerType","description":"io.github.thibaultbee.streampack.core.configuration.mediadescriptor.MediaDescriptor.Type.containerType","location":"streampack-core/io.github.thibaultbee.streampack.core.configuration.mediadescriptor/-media-descriptor/-type/container-type.html","searchKeys":["containerType","val containerType: MediaContainerType","io.github.thibaultbee.streampack.core.configuration.mediadescriptor.MediaDescriptor.Type.containerType"]},{"name":"val context: Context","description":"io.github.thibaultbee.streampack.core.streamers.orientation.DisplayRotationProvider.context","location":"streampack-core/io.github.thibaultbee.streampack.core.streamers.orientation/-display-rotation-provider/context.html","searchKeys":["context","val context: Context","io.github.thibaultbee.streampack.core.streamers.orientation.DisplayRotationProvider.context"]},{"name":"val context: Context","description":"io.github.thibaultbee.streampack.core.streamers.orientation.SensorRotationProvider.context","location":"streampack-core/io.github.thibaultbee.streampack.core.streamers.orientation/-sensor-rotation-provider/context.html","searchKeys":["context","val context: Context","io.github.thibaultbee.streampack.core.streamers.orientation.SensorRotationProvider.context"]},{"name":"val coreCoderDelay: Short? = null","description":"io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.config.GASpecificConfig.coreCoderDelay","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.config/-g-a-specific-config/core-coder-delay.html","searchKeys":["coreCoderDelay","val coreCoderDelay: Short? = null","io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.config.GASpecificConfig.coreCoderDelay"]},{"name":"val cropRect: Rect","description":"io.github.thibaultbee.streampack.core.elements.processing.video.outputs.SurfaceOutput.TransformationInfo.cropRect","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.processing.video.outputs/-surface-output/-transformation-info/crop-rect.html","searchKeys":["cropRect","val cropRect: Rect","io.github.thibaultbee.streampack.core.elements.processing.video.outputs.SurfaceOutput.TransformationInfo.cropRect"]},{"name":"val current: T","description":"io.github.thibaultbee.streampack.core.elements.utils.extensions.History.current","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.extensions/-history/current.html","searchKeys":["current","val current: T","io.github.thibaultbee.streampack.core.elements.utils.extensions.History.current"]},{"name":"val d: Char","description":"io.github.thibaultbee.streampack.core.elements.utils.av.FourCC.d","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av/-four-c-c/d.html","searchKeys":["d","val d: Char","io.github.thibaultbee.streampack.core.elements.utils.av.FourCC.d"]},{"name":"val data: Any","description":"io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.VP9CodecPrivate.CodecFeature.data","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx/-v-p9-codec-private/-codec-feature/data.html","searchKeys":["data","val data: Any","io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.VP9CodecPrivate.CodecFeature.data"]},{"name":"val data: ByteBuffer","description":"io.github.thibaultbee.streampack.core.elements.utils.av.video.hevc.HEVCDecoderConfigurationRecord.NalUnit.data","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.video.hevc/-h-e-v-c-decoder-configuration-record/-nal-unit/data.html","searchKeys":["data","val data: ByteBuffer","io.github.thibaultbee.streampack.core.elements.utils.av.video.hevc.HEVCDecoderConfigurationRecord.NalUnit.data"]},{"name":"val dataRate: Int","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.Metadata.dataRate","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags/-metadata/data-rate.html","searchKeys":["dataRate","val dataRate: Int","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.Metadata.dataRate"]},{"name":"val dataSize: Int","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models.TrackChunks.dataSize","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models/-track-chunks/data-size.html","searchKeys":["dataSize","val dataSize: Int","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models.TrackChunks.dataSize"]},{"name":"val defaultEncoderName: String?","description":"io.github.thibaultbee.streampack.core.elements.encoders.CodecConfig.defaultEncoderName","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.encoders/-codec-config/default-encoder-name.html","searchKeys":["defaultEncoderName","val defaultEncoderName: String?","io.github.thibaultbee.streampack.core.elements.encoders.CodecConfig.defaultEncoderName"]},{"name":"val degradationPriority: Short = 0","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models.SampleFlags.degradationPriority","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models/-sample-flags/degradation-priority.html","searchKeys":["degradationPriority","val degradationPriority: Short = 0","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models.SampleFlags.degradationPriority"]},{"name":"val delta: Int","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.TimeToSampleBox.Entry.delta","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-time-to-sample-box/-entry/delta.html","searchKeys":["delta","val delta: Int","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.TimeToSampleBox.Entry.delta"]},{"name":"val dependsOn: SampleDependsOn","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models.SampleFlags.dependsOn","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models/-sample-flags/depends-on.html","searchKeys":["dependsOn","val dependsOn: SampleDependsOn","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models.SampleFlags.dependsOn"]},{"name":"val dependsOnCoreCoder: Boolean","description":"io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.config.GASpecificConfig.dependsOnCoreCoder","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.config/-g-a-specific-config/depends-on-core-coder.html","searchKeys":["dependsOnCoreCoder","val dependsOnCoreCoder: Boolean","io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.config.GASpecificConfig.dependsOnCoreCoder"]},{"name":"val descriptors: List<MediaDescriptor>","description":"io.github.thibaultbee.streampack.core.elements.endpoints.CombineEndpoint.CombineDescriptor.descriptors","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints/-combine-endpoint/-combine-descriptor/descriptors.html","searchKeys":["descriptors","val descriptors: List<MediaDescriptor>","io.github.thibaultbee.streampack.core.elements.endpoints.CombineEndpoint.CombineDescriptor.descriptors"]},{"name":"val discontinuity: Boolean = false","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.data.Stream.discontinuity","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.data/-stream/discontinuity.html","searchKeys":["discontinuity","val discontinuity: Boolean = false","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.data.Stream.discontinuity"]},{"name":"val duration: Long","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models.Chunk.duration","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models/-chunk/duration.html","searchKeys":["duration","val duration: Long","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models.Chunk.duration"]},{"name":"val duration: Long","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models.TrackChunks.duration","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models/-track-chunks/duration.html","searchKeys":["duration","val duration: Long","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models.TrackChunks.duration"]},{"name":"val dynamicRange: Long","description":"io.github.thibaultbee.streampack.core.elements.sources.video.VideoSourceConfig.dynamicRange","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.video/-video-source-config/dynamic-range.html","searchKeys":["dynamicRange","val dynamicRange: Long","io.github.thibaultbee.streampack.core.elements.sources.video.VideoSourceConfig.dynamicRange"]},{"name":"val dynamicRange: Long","description":"io.github.thibaultbee.streampack.core.elements.sources.video.camera.controllers.CameraSessionController.dynamicRange","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.video.camera.controllers/-camera-session-controller/dynamic-range.html","searchKeys":["dynamicRange","val dynamicRange: Long","io.github.thibaultbee.streampack.core.elements.sources.video.camera.controllers.CameraSessionController.dynamicRange"]},{"name":"val dynamicRange: Long","description":"io.github.thibaultbee.streampack.core.elements.utils.av.video.DynamicRangeProfile.dynamicRange","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.video/-dynamic-range-profile/dynamic-range.html","searchKeys":["dynamicRange","val dynamicRange: Long","io.github.thibaultbee.streampack.core.elements.utils.av.video.DynamicRangeProfile.dynamicRange"]},{"name":"val dynamicRangeProfile: DynamicRangeProfile","description":"io.github.thibaultbee.streampack.core.elements.encoders.VideoCodecConfig.dynamicRangeProfile","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.encoders/-video-codec-config/dynamic-range-profile.html","searchKeys":["dynamicRangeProfile","val dynamicRangeProfile: DynamicRangeProfile","io.github.thibaultbee.streampack.core.elements.encoders.VideoCodecConfig.dynamicRangeProfile"]},{"name":"val dynamicRangeProfile: DynamicRangeProfile","description":"io.github.thibaultbee.streampack.core.elements.sources.video.VideoSourceConfig.dynamicRangeProfile","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.video/-video-source-config/dynamic-range-profile.html","searchKeys":["dynamicRangeProfile","val dynamicRangeProfile: DynamicRangeProfile","io.github.thibaultbee.streampack.core.elements.sources.video.VideoSourceConfig.dynamicRangeProfile"]},{"name":"val eglExtensions: String","description":"io.github.thibaultbee.streampack.core.elements.processing.video.utils.GraphicDeviceInfo.eglExtensions","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.processing.video.utils/-graphic-device-info/egl-extensions.html","searchKeys":["eglExtensions","val eglExtensions: String","io.github.thibaultbee.streampack.core.elements.processing.video.utils.GraphicDeviceInfo.eglExtensions"]},{"name":"val eglSurface: EGLSurface","description":"io.github.thibaultbee.streampack.core.elements.processing.video.utils.OutputSurface.eglSurface","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.processing.video.utils/-output-surface/egl-surface.html","searchKeys":["eglSurface","val eglSurface: EGLSurface","io.github.thibaultbee.streampack.core.elements.processing.video.utils.OutputSurface.eglSurface"]},{"name":"val eglVersion: String","description":"io.github.thibaultbee.streampack.core.elements.processing.video.utils.GraphicDeviceInfo.eglVersion","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.processing.video.utils/-graphic-device-info/egl-version.html","searchKeys":["eglVersion","val eglVersion: String","io.github.thibaultbee.streampack.core.elements.processing.video.utils.GraphicDeviceInfo.eglVersion"]},{"name":"val encodersName: List<String>","description":"io.github.thibaultbee.streampack.core.elements.encoders.mediacodec.MediaCodecHelper.Audio.encodersName","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.encoders.mediacodec/-media-codec-helper/-audio/encoders-name.html","searchKeys":["encodersName","val encodersName: List<String>","io.github.thibaultbee.streampack.core.elements.encoders.mediacodec.MediaCodecHelper.Audio.encodersName"]},{"name":"val encodersName: List<String>","description":"io.github.thibaultbee.streampack.core.elements.encoders.mediacodec.MediaCodecHelper.Video.encodersName","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.encoders.mediacodec/-media-codec-helper/-video/encoders-name.html","searchKeys":["encodersName","val encodersName: List<String>","io.github.thibaultbee.streampack.core.elements.encoders.mediacodec.MediaCodecHelper.Video.encodersName"]},{"name":"val endpointInternals: List<IEndpointInternal>","description":"io.github.thibaultbee.streampack.core.elements.endpoints.CombineEndpointFactory.endpointInternals","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints/-combine-endpoint-factory/endpoint-internals.html","searchKeys":["endpointInternals","val endpointInternals: List<IEndpointInternal>","io.github.thibaultbee.streampack.core.elements.endpoints.CombineEndpointFactory.endpointInternals"]},{"name":"val endpoints: List<IEndpoint>","description":"io.github.thibaultbee.streampack.core.elements.endpoints.CombineEndpoint.endpoints","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints/-combine-endpoint/endpoints.html","searchKeys":["endpoints","val endpoints: List<IEndpoint>","io.github.thibaultbee.streampack.core.elements.endpoints.CombineEndpoint.endpoints"]},{"name":"val entries: EnumEntries<AACPacketType>","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.AACPacketType.entries","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags/-a-a-c-packet-type/entries.html","searchKeys":["entries","val entries: EnumEntries<AACPacketType>","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.AACPacketType.entries"]},{"name":"val entries: EnumEntries<AVCPacketType>","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.video.AVCPacketType.entries","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.video/-a-v-c-packet-type/entries.html","searchKeys":["entries","val entries: EnumEntries<AVCPacketType>","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.video.AVCPacketType.entries"]},{"name":"val entries: EnumEntries<AmfType>","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.amf.AmfType.entries","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.amf/-amf-type/entries.html","searchKeys":["entries","val entries: EnumEntries<AmfType>","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.amf.AmfType.entries"]},{"name":"val entries: EnumEntries<AspectRatioMode>","description":"io.github.thibaultbee.streampack.core.elements.processing.video.outputs.AspectRatioMode.entries","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.processing.video.outputs/-aspect-ratio-mode/entries.html","searchKeys":["entries","val entries: EnumEntries<AspectRatioMode>","io.github.thibaultbee.streampack.core.elements.processing.video.outputs.AspectRatioMode.entries"]},{"name":"val entries: EnumEntries<AudioObjectType>","description":"io.github.thibaultbee.streampack.core.elements.utils.av.audio.AudioObjectType.entries","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.audio/-audio-object-type/entries.html","searchKeys":["entries","val entries: EnumEntries<AudioObjectType>","io.github.thibaultbee.streampack.core.elements.utils.av.audio.AudioObjectType.entries"]},{"name":"val entries: EnumEntries<ChannelConfiguration>","description":"io.github.thibaultbee.streampack.core.elements.utils.av.audio.ChannelConfiguration.entries","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.audio/-channel-configuration/entries.html","searchKeys":["entries","val entries: EnumEntries<ChannelConfiguration>","io.github.thibaultbee.streampack.core.elements.utils.av.audio.ChannelConfiguration.entries"]},{"name":"val entries: EnumEntries<ChromaFormat>","description":"io.github.thibaultbee.streampack.core.elements.utils.av.video.ChromaFormat.entries","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.video/-chroma-format/entries.html","searchKeys":["entries","val entries: EnumEntries<ChromaFormat>","io.github.thibaultbee.streampack.core.elements.utils.av.video.ChromaFormat.entries"]},{"name":"val entries: EnumEntries<ChromaSubsampling>","description":"io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.ChromaSubsampling.entries","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx/-chroma-subsampling/entries.html","searchKeys":["entries","val entries: EnumEntries<ChromaSubsampling>","io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.ChromaSubsampling.entries"]},{"name":"val entries: EnumEntries<CodecID>","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.video.CodecID.entries","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.video/-codec-i-d/entries.html","searchKeys":["entries","val entries: EnumEntries<CodecID>","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.video.CodecID.entries"]},{"name":"val entries: EnumEntries<ColorPrimaries>","description":"io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.ColorPrimaries.entries","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx/-color-primaries/entries.html","searchKeys":["entries","val entries: EnumEntries<ColorPrimaries>","io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.ColorPrimaries.entries"]},{"name":"val entries: EnumEntries<EncoderMode>","description":"io.github.thibaultbee.streampack.core.elements.encoders.EncoderMode.entries","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.encoders/-encoder-mode/entries.html","searchKeys":["entries","val entries: EnumEntries<EncoderMode>","io.github.thibaultbee.streampack.core.elements.encoders.EncoderMode.entries"]},{"name":"val entries: EnumEntries<FourCCs>","description":"io.github.thibaultbee.streampack.core.elements.utils.av.FourCCs.entries","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av/-four-c-cs/entries.html","searchKeys":["entries","val entries: EnumEntries<FourCCs>","io.github.thibaultbee.streampack.core.elements.utils.av.FourCCs.entries"]},{"name":"val entries: EnumEntries<FrameType>","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.video.FrameType.entries","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.video/-frame-type/entries.html","searchKeys":["entries","val entries: EnumEntries<FrameType>","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.video.FrameType.entries"]},{"name":"val entries: EnumEntries<GLUtils.InputFormat>","description":"io.github.thibaultbee.streampack.core.elements.processing.video.utils.GLUtils.InputFormat.entries","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.processing.video.utils/-g-l-utils/-input-format/entries.html","searchKeys":["entries","val entries: EnumEntries<GLUtils.InputFormat>","io.github.thibaultbee.streampack.core.elements.processing.video.utils.GLUtils.InputFormat.entries"]},{"name":"val entries: EnumEntries<HEVCDecoderConfigurationRecord.NalUnit.Type>","description":"io.github.thibaultbee.streampack.core.elements.utils.av.video.hevc.HEVCDecoderConfigurationRecord.NalUnit.Type.entries","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.video.hevc/-h-e-v-c-decoder-configuration-record/-nal-unit/-type/entries.html","searchKeys":["entries","val entries: EnumEntries<HEVCDecoderConfigurationRecord.NalUnit.Type>","io.github.thibaultbee.streampack.core.elements.utils.av.video.hevc.HEVCDecoderConfigurationRecord.NalUnit.Type.entries"]},{"name":"val entries: EnumEntries<HEVCProfile>","description":"io.github.thibaultbee.streampack.core.elements.utils.av.video.hevc.HEVCProfile.entries","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.video.hevc/-h-e-v-c-profile/entries.html","searchKeys":["entries","val entries: EnumEntries<HEVCProfile>","io.github.thibaultbee.streampack.core.elements.utils.av.video.hevc.HEVCProfile.entries"]},{"name":"val entries: EnumEntries<HandlerBox.HandlerType>","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.HandlerBox.HandlerType.entries","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-handler-box/-handler-type/entries.html","searchKeys":["entries","val entries: EnumEntries<HandlerBox.HandlerType>","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.HandlerBox.HandlerType.entries"]},{"name":"val entries: EnumEntries<HasRedundancy>","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models.HasRedundancy.entries","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models/-has-redundancy/entries.html","searchKeys":["entries","val entries: EnumEntries<HasRedundancy>","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models.HasRedundancy.entries"]},{"name":"val entries: EnumEntries<IsLeading>","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models.IsLeading.entries","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models/-is-leading/entries.html","searchKeys":["entries","val entries: EnumEntries<IsLeading>","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models.IsLeading.entries"]},{"name":"val entries: EnumEntries<Level>","description":"io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.Level.entries","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx/-level/entries.html","searchKeys":["entries","val entries: EnumEntries<Level>","io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.Level.entries"]},{"name":"val entries: EnumEntries<MatrixCoefficients>","description":"io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.MatrixCoefficients.entries","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx/-matrix-coefficients/entries.html","searchKeys":["entries","val entries: EnumEntries<MatrixCoefficients>","io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.MatrixCoefficients.entries"]},{"name":"val entries: EnumEntries<MediaContainerType>","description":"io.github.thibaultbee.streampack.core.elements.endpoints.MediaContainerType.entries","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints/-media-container-type/entries.html","searchKeys":["entries","val entries: EnumEntries<MediaContainerType>","io.github.thibaultbee.streampack.core.elements.endpoints.MediaContainerType.entries"]},{"name":"val entries: EnumEntries<MediaSinkType>","description":"io.github.thibaultbee.streampack.core.elements.endpoints.MediaSinkType.entries","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints/-media-sink-type/entries.html","searchKeys":["entries","val entries: EnumEntries<MediaSinkType>","io.github.thibaultbee.streampack.core.elements.endpoints.MediaSinkType.entries"]},{"name":"val entries: EnumEntries<ObjectTypeIndication>","description":"io.github.thibaultbee.streampack.core.elements.utils.av.descriptors.ObjectTypeIndication.entries","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.descriptors/-object-type-indication/entries.html","searchKeys":["entries","val entries: EnumEntries<ObjectTypeIndication>","io.github.thibaultbee.streampack.core.elements.utils.av.descriptors.ObjectTypeIndication.entries"]},{"name":"val entries: EnumEntries<PacketType>","description":"io.github.thibaultbee.streampack.core.elements.data.PacketType.entries","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.data/-packet-type/entries.html","searchKeys":["entries","val entries: EnumEntries<PacketType>","io.github.thibaultbee.streampack.core.elements.data.PacketType.entries"]},{"name":"val entries: EnumEntries<PacketType>","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.video.PacketType.entries","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.video/-packet-type/entries.html","searchKeys":["entries","val entries: EnumEntries<PacketType>","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.video.PacketType.entries"]},{"name":"val entries: EnumEntries<Pes.StreamId>","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets.Pes.StreamId.entries","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets/-pes/-stream-id/entries.html","searchKeys":["entries","val entries: EnumEntries<Pes.StreamId>","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets.Pes.StreamId.entries"]},{"name":"val entries: EnumEntries<Pmt.Descriptor>","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets.Pmt.Descriptor.entries","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets/-pmt/-descriptor/entries.html","searchKeys":["entries","val entries: EnumEntries<Pmt.Descriptor>","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets.Pmt.Descriptor.entries"]},{"name":"val entries: EnumEntries<Pmt.StreamType>","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets.Pmt.StreamType.entries","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets/-pmt/-stream-type/entries.html","searchKeys":["entries","val entries: EnumEntries<Pmt.StreamType>","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets.Pmt.StreamType.entries"]},{"name":"val entries: EnumEntries<Profile>","description":"io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.Profile.entries","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx/-profile/entries.html","searchKeys":["entries","val entries: EnumEntries<Profile>","io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.Profile.entries"]},{"name":"val entries: EnumEntries<SampleDependsOn>","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models.SampleDependsOn.entries","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models/-sample-depends-on/entries.html","searchKeys":["entries","val entries: EnumEntries<SampleDependsOn>","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models.SampleDependsOn.entries"]},{"name":"val entries: EnumEntries<SampleIsDependedOn>","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models.SampleIsDependedOn.entries","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models/-sample-is-depended-on/entries.html","searchKeys":["entries","val entries: EnumEntries<SampleIsDependedOn>","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models.SampleIsDependedOn.entries"]},{"name":"val entries: EnumEntries<SamplingFrequencyIndex>","description":"io.github.thibaultbee.streampack.core.elements.utils.av.audio.SamplingFrequencyIndex.entries","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.audio/-sampling-frequency-index/entries.html","searchKeys":["entries","val entries: EnumEntries<SamplingFrequencyIndex>","io.github.thibaultbee.streampack.core.elements.utils.av.audio.SamplingFrequencyIndex.entries"]},{"name":"val entries: EnumEntries<SoundFormat>","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.SoundFormat.entries","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags/-sound-format/entries.html","searchKeys":["entries","val entries: EnumEntries<SoundFormat>","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.SoundFormat.entries"]},{"name":"val entries: EnumEntries<SoundRate>","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.SoundRate.entries","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags/-sound-rate/entries.html","searchKeys":["entries","val entries: EnumEntries<SoundRate>","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.SoundRate.entries"]},{"name":"val entries: EnumEntries<SoundSize>","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.SoundSize.entries","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags/-sound-size/entries.html","searchKeys":["entries","val entries: EnumEntries<SoundSize>","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.SoundSize.entries"]},{"name":"val entries: EnumEntries<SoundType>","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.SoundType.entries","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags/-sound-type/entries.html","searchKeys":["entries","val entries: EnumEntries<SoundType>","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.SoundType.entries"]},{"name":"val entries: EnumEntries<StreamType>","description":"io.github.thibaultbee.streampack.core.elements.utils.av.descriptors.StreamType.entries","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.descriptors/-stream-type/entries.html","searchKeys":["entries","val entries: EnumEntries<StreamType>","io.github.thibaultbee.streampack.core.elements.utils.av.descriptors.StreamType.entries"]},{"name":"val entries: EnumEntries<StreamerPipeline.AudioOutputMode>","description":"io.github.thibaultbee.streampack.core.pipelines.StreamerPipeline.AudioOutputMode.entries","location":"streampack-core/io.github.thibaultbee.streampack.core.pipelines/-streamer-pipeline/-audio-output-mode/entries.html","searchKeys":["entries","val entries: EnumEntries<StreamerPipeline.AudioOutputMode>","io.github.thibaultbee.streampack.core.pipelines.StreamerPipeline.AudioOutputMode.entries"]},{"name":"val entries: EnumEntries<TSServiceInfo.ServiceType>","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.data.TSServiceInfo.ServiceType.entries","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.data/-t-s-service-info/-service-type/entries.html","searchKeys":["entries","val entries: EnumEntries<TSServiceInfo.ServiceType>","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.data.TSServiceInfo.ServiceType.entries"]},{"name":"val entries: EnumEntries<TagType>","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.TagType.entries","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags/-tag-type/entries.html","searchKeys":["entries","val entries: EnumEntries<TagType>","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.TagType.entries"]},{"name":"val entries: EnumEntries<Tags>","description":"io.github.thibaultbee.streampack.core.elements.utils.av.descriptors.Tags.entries","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.descriptors/-tags/entries.html","searchKeys":["entries","val entries: EnumEntries<Tags>","io.github.thibaultbee.streampack.core.elements.utils.av.descriptors.Tags.entries"]},{"name":"val entries: EnumEntries<TrackFragmentHeaderBox.TrackFragmentFlag>","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.TrackFragmentHeaderBox.TrackFragmentFlag.entries","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-track-fragment-header-box/-track-fragment-flag/entries.html","searchKeys":["entries","val entries: EnumEntries<TrackFragmentHeaderBox.TrackFragmentFlag>","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.TrackFragmentHeaderBox.TrackFragmentFlag.entries"]},{"name":"val entries: EnumEntries<TrackHeaderBox.TrackFlag>","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.TrackHeaderBox.TrackFlag.entries","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-track-header-box/-track-flag/entries.html","searchKeys":["entries","val entries: EnumEntries<TrackHeaderBox.TrackFlag>","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.TrackHeaderBox.TrackFlag.entries"]},{"name":"val entries: EnumEntries<TrackRunBox.TrackRunFlag>","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.TrackRunBox.TrackRunFlag.entries","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-track-run-box/-track-run-flag/entries.html","searchKeys":["entries","val entries: EnumEntries<TrackRunBox.TrackRunFlag>","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.TrackRunBox.TrackRunFlag.entries"]},{"name":"val entries: EnumEntries<TransferCharacteristics>","description":"io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.TransferCharacteristics.entries","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx/-transfer-characteristics/entries.html","searchKeys":["entries","val entries: EnumEntries<TransferCharacteristics>","io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.TransferCharacteristics.entries"]},{"name":"val entries: EnumEntries<VP9CodecPrivate.CodecFeature.Ids>","description":"io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.VP9CodecPrivate.CodecFeature.Ids.entries","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx/-v-p9-codec-private/-codec-feature/-ids/entries.html","searchKeys":["entries","val entries: EnumEntries<VP9CodecPrivate.CodecFeature.Ids>","io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.VP9CodecPrivate.CodecFeature.Ids.entries"]},{"name":"val epConfig: Int? = null","description":"io.github.thibaultbee.streampack.core.elements.utils.av.audio.AudioSpecificConfig.epConfig","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.audio/-audio-specific-config/ep-config.html","searchKeys":["epConfig","val epConfig: Int? = null","io.github.thibaultbee.streampack.core.elements.utils.av.audio.AudioSpecificConfig.epConfig"]},{"name":"val exposure: CameraSettings.Exposure","description":"io.github.thibaultbee.streampack.core.elements.sources.video.camera.CameraSettings.exposure","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.video.camera/-camera-settings/exposure.html","searchKeys":["exposure","val exposure: CameraSettings.Exposure","io.github.thibaultbee.streampack.core.elements.sources.video.camera.CameraSettings.exposure"]},{"name":"val extension: AudioSpecificConfig.AudioSpecificConfigExtension? = null","description":"io.github.thibaultbee.streampack.core.elements.utils.av.audio.AudioSpecificConfig.extension","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.audio/-audio-specific-config/extension.html","searchKeys":["extension","val extension: AudioSpecificConfig.AudioSpecificConfigExtension? = null","io.github.thibaultbee.streampack.core.elements.utils.av.audio.AudioSpecificConfig.extension"]},{"name":"val extensionAudioObjectType: AudioObjectType","description":"io.github.thibaultbee.streampack.core.elements.utils.av.audio.AudioSpecificConfig.AudioSpecificConfigExtension.extensionAudioObjectType","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.audio/-audio-specific-config/-audio-specific-config-extension/extension-audio-object-type.html","searchKeys":["extensionAudioObjectType","val extensionAudioObjectType: AudioObjectType","io.github.thibaultbee.streampack.core.elements.utils.av.audio.AudioSpecificConfig.AudioSpecificConfigExtension.extensionAudioObjectType"]},{"name":"val extensionAudioObjectType: Byte","description":"io.github.thibaultbee.streampack.core.elements.utils.av.audio.AudioObjectType.extensionAudioObjectType","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.audio/-audio-object-type/extension-audio-object-type.html","searchKeys":["extensionAudioObjectType","val extensionAudioObjectType: Byte","io.github.thibaultbee.streampack.core.elements.utils.av.audio.AudioObjectType.extensionAudioObjectType"]},{"name":"val extensionFlag3: Boolean? = null","description":"io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.config.GASpecificConfig.extensionFlag3","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.config/-g-a-specific-config/extension-flag3.html","searchKeys":["extensionFlag3","val extensionFlag3: Boolean? = null","io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.config.GASpecificConfig.extensionFlag3"]},{"name":"val extensionFlag: Boolean","description":"io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.config.GASpecificConfig.extensionFlag","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.config/-g-a-specific-config/extension-flag.html","searchKeys":["extensionFlag","val extensionFlag: Boolean","io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.config.GASpecificConfig.extensionFlag"]},{"name":"val extra: List<ByteBuffer>?","description":"io.github.thibaultbee.streampack.core.elements.data.Frame.extra","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.data/-frame/extra.html","searchKeys":["extra","val extra: List<ByteBuffer>?","io.github.thibaultbee.streampack.core.elements.data.Frame.extra"]},{"name":"val extra: List<List<ByteBuffer>>","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models.Chunk.extra","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models/-chunk/extra.html","searchKeys":["extra","val extra: List<List<ByteBuffer>>","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models.Chunk.extra"]},{"name":"val features: List<VP9CodecPrivate.CodecFeature>","description":"io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.VP9CodecPrivate.features","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx/-v-p9-codec-private/features.html","searchKeys":["features","val features: List<VP9CodecPrivate.CodecFeature>","io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.VP9CodecPrivate.features"]},{"name":"val filesDir: File","description":"io.github.thibaultbee.streampack.core.elements.utils.ChunkedFileOutputStream.filesDir","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils/-chunked-file-output-stream/files-dir.html","searchKeys":["filesDir","val filesDir: File","io.github.thibaultbee.streampack.core.elements.utils.ChunkedFileOutputStream.filesDir"]},{"name":"val firstAudioConfig: AudioCodecConfig","description":"io.github.thibaultbee.streampack.core.streamers.dual.DualStreamerAudioConfig.firstAudioConfig","location":"streampack-core/io.github.thibaultbee.streampack.core.streamers.dual/-dual-streamer-audio-config/first-audio-config.html","searchKeys":["firstAudioConfig","val firstAudioConfig: AudioCodecConfig","io.github.thibaultbee.streampack.core.streamers.dual.DualStreamerAudioConfig.firstAudioConfig"]},{"name":"val firstTimestamp: Long","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models.Chunk.firstTimestamp","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models/-chunk/first-timestamp.html","searchKeys":["firstTimestamp","val firstTimestamp: Long","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models.Chunk.firstTimestamp"]},{"name":"val firstTimestamp: Long","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models.Track.firstTimestamp","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models/-track/first-timestamp.html","searchKeys":["firstTimestamp","val firstTimestamp: Long","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models.Track.firstTimestamp"]},{"name":"val firstTimestamp: Long","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models.TrackChunks.firstTimestamp","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models/-track-chunks/first-timestamp.html","searchKeys":["firstTimestamp","val firstTimestamp: Long","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models.TrackChunks.firstTimestamp"]},{"name":"val firstVideoConfig: VideoCodecConfig","description":"io.github.thibaultbee.streampack.core.streamers.dual.DualStreamerVideoConfig.firstVideoConfig","location":"streampack-core/io.github.thibaultbee.streampack.core.streamers.dual/-dual-streamer-video-config/first-video-config.html","searchKeys":["firstVideoConfig","val firstVideoConfig: VideoCodecConfig","io.github.thibaultbee.streampack.core.streamers.dual.DualStreamerVideoConfig.firstVideoConfig"]},{"name":"val flash: CameraSettings.Flash","description":"io.github.thibaultbee.streampack.core.elements.sources.video.camera.CameraSettings.flash","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.video.camera/-camera-settings/flash.html","searchKeys":["flash","val flash: CameraSettings.Flash","io.github.thibaultbee.streampack.core.elements.sources.video.camera.CameraSettings.flash"]},{"name":"val focus: CameraSettings.Focus","description":"io.github.thibaultbee.streampack.core.elements.sources.video.camera.CameraSettings.focus","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.video.camera/-camera-settings/focus.html","searchKeys":["focus","val focus: CameraSettings.Focus","io.github.thibaultbee.streampack.core.elements.sources.video.camera.CameraSettings.focus"]},{"name":"val focusMetering: CameraSettings.FocusMetering","description":"io.github.thibaultbee.streampack.core.elements.sources.video.camera.CameraSettings.focusMetering","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.video.camera/-camera-settings/focus-metering.html","searchKeys":["focusMetering","val focusMetering: CameraSettings.FocusMetering","io.github.thibaultbee.streampack.core.elements.sources.video.camera.CameraSettings.focusMetering"]},{"name":"val format: List<MediaFormat>","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models.Chunk.format","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models/-chunk/format.html","searchKeys":["format","val format: List<MediaFormat>","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models.Chunk.format"]},{"name":"val format: MediaFormat","description":"io.github.thibaultbee.streampack.core.elements.data.Frame.format","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.data/-frame/format.html","searchKeys":["format","val format: MediaFormat","io.github.thibaultbee.streampack.core.elements.data.Frame.format"]},{"name":"val fps: Int","description":"io.github.thibaultbee.streampack.core.elements.sources.video.VideoSourceConfig.fps","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.video/-video-source-config/fps.html","searchKeys":["fps","val fps: Int","io.github.thibaultbee.streampack.core.elements.sources.video.VideoSourceConfig.fps"]},{"name":"val fps: Int = 30","description":"io.github.thibaultbee.streampack.core.elements.encoders.VideoCodecConfig.fps","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.encoders/-video-codec-config/fps.html","searchKeys":["fps","val fps: Int = 30","io.github.thibaultbee.streampack.core.elements.encoders.VideoCodecConfig.fps"]},{"name":"val frame: Frame","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models.Chunk.IndexedFrame.frame","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models/-chunk/-indexed-frame/frame.html","searchKeys":["frame","val frame: Frame","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models.Chunk.IndexedFrame.frame"]},{"name":"val frameLengthFlag: Boolean","description":"io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.config.ELDSpecificConfig.frameLengthFlag","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.config/-e-l-d-specific-config/frame-length-flag.html","searchKeys":["frameLengthFlag","val frameLengthFlag: Boolean","io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.config.ELDSpecificConfig.frameLengthFlag"]},{"name":"val frameLengthFlag: Boolean","description":"io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.config.GASpecificConfig.frameLengthFlag","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.config/-g-a-specific-config/frame-length-flag.html","searchKeys":["frameLengthFlag","val frameLengthFlag: Boolean","io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.config.GASpecificConfig.frameLengthFlag"]},{"name":"val frameRate: Int","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.VideoMetadata.frameRate","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags/-video-metadata/frame-rate.html","searchKeys":["frameRate","val frameRate: Int","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.VideoMetadata.frameRate"]},{"name":"val generalConstraintIndicatorFlags: Long","description":"io.github.thibaultbee.streampack.core.elements.utils.av.video.hevc.ProfileTierLevel.generalConstraintIndicatorFlags","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.video.hevc/-profile-tier-level/general-constraint-indicator-flags.html","searchKeys":["generalConstraintIndicatorFlags","val generalConstraintIndicatorFlags: Long","io.github.thibaultbee.streampack.core.elements.utils.av.video.hevc.ProfileTierLevel.generalConstraintIndicatorFlags"]},{"name":"val generalLevelIdc: Byte","description":"io.github.thibaultbee.streampack.core.elements.utils.av.video.hevc.ProfileTierLevel.generalLevelIdc","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.video.hevc/-profile-tier-level/general-level-idc.html","searchKeys":["generalLevelIdc","val generalLevelIdc: Byte","io.github.thibaultbee.streampack.core.elements.utils.av.video.hevc.ProfileTierLevel.generalLevelIdc"]},{"name":"val generalProfileCompatibilityFlags: Int","description":"io.github.thibaultbee.streampack.core.elements.utils.av.video.hevc.ProfileTierLevel.generalProfileCompatibilityFlags","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.video.hevc/-profile-tier-level/general-profile-compatibility-flags.html","searchKeys":["generalProfileCompatibilityFlags","val generalProfileCompatibilityFlags: Int","io.github.thibaultbee.streampack.core.elements.utils.av.video.hevc.ProfileTierLevel.generalProfileCompatibilityFlags"]},{"name":"val generalProfileIdc: HEVCProfile","description":"io.github.thibaultbee.streampack.core.elements.utils.av.video.hevc.ProfileTierLevel.generalProfileIdc","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.video.hevc/-profile-tier-level/general-profile-idc.html","searchKeys":["generalProfileIdc","val generalProfileIdc: HEVCProfile","io.github.thibaultbee.streampack.core.elements.utils.av.video.hevc.ProfileTierLevel.generalProfileIdc"]},{"name":"val generalProfileSpace: Byte","description":"io.github.thibaultbee.streampack.core.elements.utils.av.video.hevc.ProfileTierLevel.generalProfileSpace","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.video.hevc/-profile-tier-level/general-profile-space.html","searchKeys":["generalProfileSpace","val generalProfileSpace: Byte","io.github.thibaultbee.streampack.core.elements.utils.av.video.hevc.ProfileTierLevel.generalProfileSpace"]},{"name":"val generalTierFlag: Boolean","description":"io.github.thibaultbee.streampack.core.elements.utils.av.video.hevc.ProfileTierLevel.generalTierFlag","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.video.hevc/-profile-tier-level/general-tier-flag.html","searchKeys":["generalTierFlag","val generalTierFlag: Boolean","io.github.thibaultbee.streampack.core.elements.utils.av.video.hevc.ProfileTierLevel.generalTierFlag"]},{"name":"val glExtensions: String","description":"io.github.thibaultbee.streampack.core.elements.processing.video.utils.GraphicDeviceInfo.glExtensions","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.processing.video.utils/-graphic-device-info/gl-extensions.html","searchKeys":["glExtensions","val glExtensions: String","io.github.thibaultbee.streampack.core.elements.processing.video.utils.GraphicDeviceInfo.glExtensions"]},{"name":"val glVersion: String","description":"io.github.thibaultbee.streampack.core.elements.processing.video.utils.GraphicDeviceInfo.glVersion","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.processing.video.utils/-graphic-device-info/gl-version.html","searchKeys":["glVersion","val glVersion: String","io.github.thibaultbee.streampack.core.elements.processing.video.utils.GraphicDeviceInfo.glVersion"]},{"name":"val glVersionNumber: String","description":"io.github.thibaultbee.streampack.core.elements.processing.video.utils.GLUtils.glVersionNumber","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.processing.video.utils/-g-l-utils/gl-version-number.html","searchKeys":["glVersionNumber","val glVersionNumber: String","io.github.thibaultbee.streampack.core.elements.processing.video.utils.GLUtils.glVersionNumber"]},{"name":"val gopDurationInS: Float = 1.0f","description":"io.github.thibaultbee.streampack.core.elements.encoders.VideoCodecConfig.gopDurationInS","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.encoders/-video-codec-config/gop-duration-in-s.html","searchKeys":["gopDurationInS","val gopDurationInS: Float = 1.0f","io.github.thibaultbee.streampack.core.elements.encoders.VideoCodecConfig.gopDurationInS"]},{"name":"val gopDurationInS: Float = 1.0f","description":"io.github.thibaultbee.streampack.core.streamers.dual.DualStreamerVideoCodecConfig.gopDurationInS","location":"streampack-core/io.github.thibaultbee.streampack.core.streamers.dual/-dual-streamer-video-codec-config/gop-duration-in-s.html","searchKeys":["gopDurationInS","val gopDurationInS: Float = 1.0f","io.github.thibaultbee.streampack.core.streamers.dual.DualStreamerVideoCodecConfig.gopDurationInS"]},{"name":"val hasData: Boolean","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models.Segment.hasData","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models/-segment/has-data.html","searchKeys":["hasData","val hasData: Boolean","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models.Segment.hasData"]},{"name":"val hasData: Boolean","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models.TrackChunks.hasData","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models/-track-chunks/has-data.html","searchKeys":["hasData","val hasData: Boolean","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models.TrackChunks.hasData"]},{"name":"val hasRedundancy: HasRedundancy","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models.SampleFlags.hasRedundancy","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models/-sample-flags/has-redundancy.html","searchKeys":["hasRedundancy","val hasRedundancy: HasRedundancy","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models.SampleFlags.hasRedundancy"]},{"name":"val hasRemaining: Boolean","description":"io.github.thibaultbee.streampack.core.elements.utils.av.buffer.BitBuffer.hasRemaining","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.buffer/-bit-buffer/has-remaining.html","searchKeys":["hasRemaining","val hasRemaining: Boolean","io.github.thibaultbee.streampack.core.elements.utils.av.buffer.BitBuffer.hasRemaining"]},{"name":"val hdr10: DynamicRangeProfile","description":"io.github.thibaultbee.streampack.core.elements.utils.av.video.DynamicRangeProfile.Companion.hdr10","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.video/-dynamic-range-profile/-companion/hdr10.html","searchKeys":["hdr10","val hdr10: DynamicRangeProfile","io.github.thibaultbee.streampack.core.elements.utils.av.video.DynamicRangeProfile.Companion.hdr10"]},{"name":"val hdr10Plus: DynamicRangeProfile","description":"io.github.thibaultbee.streampack.core.elements.utils.av.video.DynamicRangeProfile.Companion.hdr10Plus","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.video/-dynamic-range-profile/-companion/hdr10-plus.html","searchKeys":["hdr10Plus","val hdr10Plus: DynamicRangeProfile","io.github.thibaultbee.streampack.core.elements.utils.av.video.DynamicRangeProfile.Companion.hdr10Plus"]},{"name":"val hdr: DynamicRangeProfile","description":"io.github.thibaultbee.streampack.core.elements.utils.av.video.DynamicRangeProfile.Companion.hdr","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.video/-dynamic-range-profile/-companion/hdr.html","searchKeys":["hdr","val hdr: DynamicRangeProfile","io.github.thibaultbee.streampack.core.elements.utils.av.video.DynamicRangeProfile.Companion.hdr"]},{"name":"val height: Int","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.VideoMetadata.height","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags/-video-metadata/height.html","searchKeys":["height","val height: Int","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.VideoMetadata.height"]},{"name":"val id: Byte","description":"io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.VP9CodecPrivate.CodecFeature.id","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx/-v-p9-codec-private/-codec-feature/id.html","searchKeys":["id","val id: Byte","io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.VP9CodecPrivate.CodecFeature.id"]},{"name":"val id: Int","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.TrackHeaderBox.id","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-track-header-box/id.html","searchKeys":["id","val id: Int","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.TrackHeaderBox.id"]},{"name":"val id: Int","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models.Chunk.IndexedFrame.id","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models/-chunk/-indexed-frame/id.html","searchKeys":["id","val id: Int","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models.Chunk.IndexedFrame.id"]},{"name":"val id: Int","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models.Chunk.id","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models/-chunk/id.html","searchKeys":["id","val id: Int","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models.Chunk.id"]},{"name":"val id: Int","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models.Track.id","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models/-track/id.html","searchKeys":["id","val id: Int","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models.Track.id"]},{"name":"val id: Short","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.data.TSServiceInfo.id","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.data/-t-s-service-info/id.html","searchKeys":["id","val id: Short","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.data.TSServiceInfo.id"]},{"name":"val id: String","description":"io.github.thibaultbee.streampack.core.elements.sources.video.camera.controllers.CameraDeviceController.id","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.video.camera.controllers/-camera-device-controller/id.html","searchKeys":["id","val id: String","io.github.thibaultbee.streampack.core.elements.sources.video.camera.controllers.CameraDeviceController.id"]},{"name":"val info: TSServiceInfo","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.data.Service.info","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.data/-service/info.html","searchKeys":["info","val info: TSServiceInfo","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.data.Service.info"]},{"name":"val infoProvider: ISourceInfoProvider","description":"io.github.thibaultbee.streampack.core.elements.processing.video.outputs.SurfaceOutput.TransformationInfo.infoProvider","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.processing.video.outputs/-surface-output/-transformation-info/info-provider.html","searchKeys":["infoProvider","val infoProvider: ISourceInfoProvider","io.github.thibaultbee.streampack.core.elements.processing.video.outputs.SurfaceOutput.TransformationInfo.infoProvider"]},{"name":"val inputSampleRate: Int","description":"io.github.thibaultbee.streampack.core.elements.utils.av.audio.opus.IdentificationHeader.inputSampleRate","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.audio.opus/-identification-header/input-sample-rate.html","searchKeys":["inputSampleRate","val inputSampleRate: Int","io.github.thibaultbee.streampack.core.elements.utils.av.audio.opus.IdentificationHeader.inputSampleRate"]},{"name":"val isActive: Boolean","description":"io.github.thibaultbee.streampack.core.elements.utils.ConflatedJob.isActive","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils/-conflated-job/is-active.html","searchKeys":["isActive","val isActive: Boolean","io.github.thibaultbee.streampack.core.elements.utils.ConflatedJob.isActive"]},{"name":"val isAudio: Boolean","description":"io.github.thibaultbee.streampack.core.elements.data.Frame.isAudio","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.data/-frame/is-audio.html","searchKeys":["isAudio","val isAudio: Boolean","io.github.thibaultbee.streampack.core.elements.data.Frame.isAudio"]},{"name":"val isAudio: Boolean","description":"io.github.thibaultbee.streampack.core.elements.data.Packet.isAudio","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.data/-packet/is-audio.html","searchKeys":["isAudio","val isAudio: Boolean","io.github.thibaultbee.streampack.core.elements.data.Packet.isAudio"]},{"name":"val isAudio: Boolean","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.data.Stream.isAudio","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.data/-stream/is-audio.html","searchKeys":["isAudio","val isAudio: Boolean","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.data.Stream.isAudio"]},{"name":"val isAvailable: Boolean","description":"io.github.thibaultbee.streampack.core.elements.sources.video.camera.CameraSettings.ColorCorrection.isAvailable","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.video.camera/-camera-settings/-color-correction/is-available.html","searchKeys":["isAvailable","val isAvailable: Boolean","io.github.thibaultbee.streampack.core.elements.sources.video.camera.CameraSettings.ColorCorrection.isAvailable"]},{"name":"val isAvailable: Boolean","description":"io.github.thibaultbee.streampack.core.elements.sources.video.camera.CameraSettings.Flash.isAvailable","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.video.camera/-camera-settings/-flash/is-available.html","searchKeys":["isAvailable","val isAvailable: Boolean","io.github.thibaultbee.streampack.core.elements.sources.video.camera.CameraSettings.Flash.isAvailable"]},{"name":"val isAvailableFlow: StateFlow<Boolean>","description":"io.github.thibaultbee.streampack.core.elements.sources.video.camera.CameraSettings.isAvailableFlow","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.video.camera/-camera-settings/is-available-flow.html","searchKeys":["isAvailableFlow","val isAvailableFlow: StateFlow<Boolean>","io.github.thibaultbee.streampack.core.elements.sources.video.camera.CameraSettings.isAvailableFlow"]},{"name":"val isAvailableFlow: StateFlow<Boolean>","description":"io.github.thibaultbee.streampack.core.elements.sources.video.camera.controllers.CameraController.isAvailableFlow","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.video.camera.controllers/-camera-controller/is-available-flow.html","searchKeys":["isAvailableFlow","val isAvailableFlow: StateFlow<Boolean>","io.github.thibaultbee.streampack.core.elements.sources.video.camera.controllers.CameraController.isAvailableFlow"]},{"name":"val isClosed: Boolean","description":"io.github.thibaultbee.streampack.core.elements.utils.ChunkedFileOutputStream.isClosed","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils/-chunked-file-output-stream/is-closed.html","searchKeys":["isClosed","val isClosed: Boolean","io.github.thibaultbee.streampack.core.elements.utils.ChunkedFileOutputStream.isClosed"]},{"name":"val isDependedOn: SampleIsDependedOn","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models.SampleFlags.isDependedOn","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models/-sample-flags/is-depended-on.html","searchKeys":["isDependedOn","val isDependedOn: SampleIsDependedOn","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models.SampleFlags.isDependedOn"]},{"name":"val isEncoderInputSurface: Boolean = false","description":"io.github.thibaultbee.streampack.core.pipelines.outputs.SurfaceDescriptor.isEncoderInputSurface","location":"streampack-core/io.github.thibaultbee.streampack.core.pipelines.outputs/-surface-descriptor/is-encoder-input-surface.html","searchKeys":["isEncoderInputSurface","val isEncoderInputSurface: Boolean = false","io.github.thibaultbee.streampack.core.pipelines.outputs.SurfaceDescriptor.isEncoderInputSurface"]},{"name":"val isFirstPacketFrame: Boolean","description":"io.github.thibaultbee.streampack.core.elements.data.SrtPacket.isFirstPacketFrame","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.data/-srt-packet/is-first-packet-frame.html","searchKeys":["isFirstPacketFrame","val isFirstPacketFrame: Boolean","io.github.thibaultbee.streampack.core.elements.data.SrtPacket.isFirstPacketFrame"]},{"name":"val isFormatSupported: Boolean","description":"io.github.thibaultbee.streampack.core.elements.encoders.CodecConfig.isFormatSupported","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.encoders/-codec-config/is-format-supported.html","searchKeys":["isFormatSupported","val isFormatSupported: Boolean","io.github.thibaultbee.streampack.core.elements.encoders.CodecConfig.isFormatSupported"]},{"name":"val isFragment: Boolean","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models.Segment.isFragment","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models/-segment/is-fragment.html","searchKeys":["isFragment","val isFragment: Boolean","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models.Segment.isFragment"]},{"name":"val isFragment: Boolean","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models.Track.SyncSample.isFragment","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models/-track/-sync-sample/is-fragment.html","searchKeys":["isFragment","val isFragment: Boolean","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models.Track.SyncSample.isFragment"]},{"name":"val isFrontFacing: Boolean","description":"io.github.thibaultbee.streampack.core.elements.sources.video.camera.CameraInfoProvider.isFrontFacing","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.video.camera/-camera-info-provider/is-front-facing.html","searchKeys":["isFrontFacing","val isFrontFacing: Boolean","io.github.thibaultbee.streampack.core.elements.sources.video.camera.CameraInfoProvider.isFrontFacing"]},{"name":"val isHdr: Boolean","description":"io.github.thibaultbee.streampack.core.elements.encoders.VideoCodecConfig.isHdr","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.encoders/-video-codec-config/is-hdr.html","searchKeys":["isHdr","val isHdr: Boolean","io.github.thibaultbee.streampack.core.elements.encoders.VideoCodecConfig.isHdr"]},{"name":"val isHdr: Boolean","description":"io.github.thibaultbee.streampack.core.elements.utils.av.video.DynamicRangeProfile.isHdr","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.video/-dynamic-range-profile/is-hdr.html","searchKeys":["isHdr","val isHdr: Boolean","io.github.thibaultbee.streampack.core.elements.utils.av.video.DynamicRangeProfile.isHdr"]},{"name":"val isKeyFrame: Boolean = false","description":"io.github.thibaultbee.streampack.core.elements.data.Frame.isKeyFrame","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.data/-frame/is-key-frame.html","searchKeys":["isKeyFrame","val isKeyFrame: Boolean = false","io.github.thibaultbee.streampack.core.elements.data.Frame.isKeyFrame"]},{"name":"val isLastPacketFrame: Boolean","description":"io.github.thibaultbee.streampack.core.elements.data.SrtPacket.isLastPacketFrame","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.data/-srt-packet/is-last-packet-frame.html","searchKeys":["isLastPacketFrame","val isLastPacketFrame: Boolean","io.github.thibaultbee.streampack.core.elements.data.SrtPacket.isLastPacketFrame"]},{"name":"val isLeading: IsLeading","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models.SampleFlags.isLeading","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models/-sample-flags/is-leading.html","searchKeys":["isLeading","val isLeading: IsLeading","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models.SampleFlags.isLeading"]},{"name":"val isNonSyncSample: Boolean","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models.SampleFlags.isNonSyncSample","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models/-sample-flags/is-non-sync-sample.html","searchKeys":["isNonSyncSample","val isNonSyncSample: Boolean","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models.SampleFlags.isNonSyncSample"]},{"name":"val isOpticalAvailable: Boolean","description":"io.github.thibaultbee.streampack.core.elements.sources.video.camera.CameraSettings.Stabilization.isOpticalAvailable","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.video.camera/-camera-settings/-stabilization/is-optical-available.html","searchKeys":["isOpticalAvailable","val isOpticalAvailable: Boolean","io.github.thibaultbee.streampack.core.elements.sources.video.camera.CameraSettings.Stabilization.isOpticalAvailable"]},{"name":"val isStereo: Boolean","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.AudioMetadata.isStereo","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags/-audio-metadata/is-stereo.html","searchKeys":["isStereo","val isStereo: Boolean","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.AudioMetadata.isStereo"]},{"name":"val isValid: Boolean","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models.TrackChunks.isValid","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models/-track-chunks/is-valid.html","searchKeys":["isValid","val isValid: Boolean","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models.TrackChunks.isValid"]},{"name":"val isVideo: Boolean","description":"io.github.thibaultbee.streampack.core.elements.data.Frame.isVideo","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.data/-frame/is-video.html","searchKeys":["isVideo","val isVideo: Boolean","io.github.thibaultbee.streampack.core.elements.data.Frame.isVideo"]},{"name":"val isVideo: Boolean","description":"io.github.thibaultbee.streampack.core.elements.data.Packet.isVideo","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.data/-packet/is-video.html","searchKeys":["isVideo","val isVideo: Boolean","io.github.thibaultbee.streampack.core.elements.data.Packet.isVideo"]},{"name":"val isVideo: Boolean","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.data.Stream.isVideo","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.data/-stream/is-video.html","searchKeys":["isVideo","val isVideo: Boolean","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.data.Stream.isVideo"]},{"name":"val iso: CameraSettings.Iso","description":"io.github.thibaultbee.streampack.core.elements.sources.video.camera.CameraSettings.iso","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.video.camera/-camera-settings/iso.html","searchKeys":["iso","val iso: CameraSettings.Iso","io.github.thibaultbee.streampack.core.elements.sources.video.camera.CameraSettings.iso"]},{"name":"val isomTimeBaseMs: Long","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.utils.TimeUtils.isomTimeBaseMs","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.utils/-time-utils/isom-time-base-ms.html","searchKeys":["isomTimeBaseMs","val isomTimeBaseMs: Long","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.utils.TimeUtils.isomTimeBaseMs"]},{"name":"val layerLength: Short? = null","description":"io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.config.GASpecificConfig.layerLength","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.config/-g-a-specific-config/layer-length.html","searchKeys":["layerLength","val layerLength: Short? = null","io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.config.GASpecificConfig.layerLength"]},{"name":"val layerNr: Byte? = null","description":"io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.config.GASpecificConfig.layerNr","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.config/-g-a-specific-config/layer-nr.html","searchKeys":["layerNr","val layerNr: Byte? = null","io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.config.GASpecificConfig.layerNr"]},{"name":"val lbSbrCrcFlag: Boolean? = null","description":"io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.config.ELDSpecificConfig.lbSbrCrcFlag","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.config/-e-l-d-specific-config/lb-sbr-crc-flag.html","searchKeys":["lbSbrCrcFlag","val lbSbrCrcFlag: Boolean? = null","io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.config.ELDSpecificConfig.lbSbrCrcFlag"]},{"name":"val lbSbrHeader: ELDSpecificConfig.LdSbrHeader? = null","description":"io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.config.ELDSpecificConfig.lbSbrHeader","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.config/-e-l-d-specific-config/lb-sbr-header.html","searchKeys":["lbSbrHeader","val lbSbrHeader: ELDSpecificConfig.LdSbrHeader? = null","io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.config.ELDSpecificConfig.lbSbrHeader"]},{"name":"val lbSbrPresentFlag: Boolean","description":"io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.config.ELDSpecificConfig.lbSbrPresentFlag","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.config/-e-l-d-specific-config/lb-sbr-present-flag.html","searchKeys":["lbSbrPresentFlag","val lbSbrPresentFlag: Boolean","io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.config.ELDSpecificConfig.lbSbrPresentFlag"]},{"name":"val lbSbrSamplingRate: Boolean? = null","description":"io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.config.ELDSpecificConfig.lbSbrSamplingRate","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.config/-e-l-d-specific-config/lb-sbr-sampling-rate.html","searchKeys":["lbSbrSamplingRate","val lbSbrSamplingRate: Boolean? = null","io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.config.ELDSpecificConfig.lbSbrSamplingRate"]},{"name":"val length: Byte","description":"io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.VP9CodecPrivate.CodecFeature.length","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx/-v-p9-codec-private/-codec-feature/length.html","searchKeys":["length","val length: Byte","io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.VP9CodecPrivate.CodecFeature.length"]},{"name":"val level: Int","description":"io.github.thibaultbee.streampack.core.elements.encoders.VideoCodecConfig.level","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.encoders/-video-codec-config/level.html","searchKeys":["level","val level: Int","io.github.thibaultbee.streampack.core.elements.encoders.VideoCodecConfig.level"]},{"name":"val level: Int","description":"io.github.thibaultbee.streampack.core.streamers.dual.DualStreamerVideoCodecConfig.level","location":"streampack-core/io.github.thibaultbee.streampack.core.streamers.dual/-dual-streamer-video-codec-config/level.html","searchKeys":["level","val level: Int","io.github.thibaultbee.streampack.core.streamers.dual.DualStreamerVideoCodecConfig.level"]},{"name":"val maxNumOfMeteringRegions: Int","description":"io.github.thibaultbee.streampack.core.elements.sources.video.camera.CameraSettings.Exposure.maxNumOfMeteringRegions","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.video.camera/-camera-settings/-exposure/max-num-of-metering-regions.html","searchKeys":["maxNumOfMeteringRegions","val maxNumOfMeteringRegions: Int","io.github.thibaultbee.streampack.core.elements.sources.video.camera.CameraSettings.Exposure.maxNumOfMeteringRegions"]},{"name":"val maxNumOfMeteringRegions: Int","description":"io.github.thibaultbee.streampack.core.elements.sources.video.camera.CameraSettings.Focus.maxNumOfMeteringRegions","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.video.camera/-camera-settings/-focus/max-num-of-metering-regions.html","searchKeys":["maxNumOfMeteringRegions","val maxNumOfMeteringRegions: Int","io.github.thibaultbee.streampack.core.elements.sources.video.camera.CameraSettings.Focus.maxNumOfMeteringRegions"]},{"name":"val maxNumOfMeteringRegions: Int","description":"io.github.thibaultbee.streampack.core.elements.sources.video.camera.CameraSettings.WhiteBalance.maxNumOfMeteringRegions","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.video.camera/-camera-settings/-white-balance/max-num-of-metering-regions.html","searchKeys":["maxNumOfMeteringRegions","val maxNumOfMeteringRegions: Int","io.github.thibaultbee.streampack.core.elements.sources.video.camera.CameraSettings.WhiteBalance.maxNumOfMeteringRegions"]},{"name":"val maxSubLayersMinus1: Byte","description":"io.github.thibaultbee.streampack.core.elements.utils.av.video.hevc.SequenceParameterSets.maxSubLayersMinus1","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.video.hevc/-sequence-parameter-sets/max-sub-layers-minus1.html","searchKeys":["maxSubLayersMinus1","val maxSubLayersMinus1: Byte","io.github.thibaultbee.streampack.core.elements.utils.av.video.hevc.SequenceParameterSets.maxSubLayersMinus1"]},{"name":"val mdia: MediaBox","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.TrackBox.mdia","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-track-box/mdia.html","searchKeys":["mdia","val mdia: MediaBox","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.TrackBox.mdia"]},{"name":"val mimeType: String","description":"io.github.thibaultbee.streampack.core.elements.data.Frame.mimeType","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.data/-frame/mime-type.html","searchKeys":["mimeType","val mimeType: String","io.github.thibaultbee.streampack.core.elements.data.Frame.mimeType"]},{"name":"val mimeType: String","description":"io.github.thibaultbee.streampack.core.elements.encoders.CodecConfig.mimeType","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.encoders/-codec-config/mime-type.html","searchKeys":["mimeType","val mimeType: String","io.github.thibaultbee.streampack.core.elements.encoders.CodecConfig.mimeType"]},{"name":"val mimeType: String","description":"io.github.thibaultbee.streampack.core.streamers.dual.DualStreamerAudioCodecConfig.mimeType","location":"streampack-core/io.github.thibaultbee.streampack.core.streamers.dual/-dual-streamer-audio-codec-config/mime-type.html","searchKeys":["mimeType","val mimeType: String","io.github.thibaultbee.streampack.core.streamers.dual.DualStreamerAudioCodecConfig.mimeType"]},{"name":"val mimeType: String","description":"io.github.thibaultbee.streampack.core.streamers.dual.DualStreamerVideoCodecConfig.mimeType","location":"streampack-core/io.github.thibaultbee.streampack.core.streamers.dual/-dual-streamer-video-codec-config/mime-type.html","searchKeys":["mimeType","val mimeType: String","io.github.thibaultbee.streampack.core.streamers.dual.DualStreamerVideoCodecConfig.mimeType"]},{"name":"val mimeType: String?","description":"io.github.thibaultbee.streampack.core.elements.utils.av.FourCC.mimeType","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av/-four-c-c/mime-type.html","searchKeys":["mimeType","val mimeType: String?","io.github.thibaultbee.streampack.core.elements.utils.av.FourCC.mimeType"]},{"name":"val minf: MediaInformationBox","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.MediaBox.minf","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-media-box/minf.html","searchKeys":["minf","val minf: MediaInformationBox","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.MediaBox.minf"]},{"name":"val mode: EncoderMode","description":"io.github.thibaultbee.streampack.core.elements.encoders.mediacodec.EncoderConfig.mode","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.encoders.mediacodec/-encoder-config/mode.html","searchKeys":["mode","val mode: EncoderMode","io.github.thibaultbee.streampack.core.elements.encoders.mediacodec.EncoderConfig.mode"]},{"name":"val moofOffset: Long","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models.Track.SyncSample.moofOffset","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models/-track/-sync-sample/moof-offset.html","searchKeys":["moofOffset","val moofOffset: Long","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models.Track.SyncSample.moofOffset"]},{"name":"val moofOffset: Number","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.TrackFragmentRandomAccessBox.Entry.moofOffset","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-track-fragment-random-access-box/-entry/moof-offset.html","searchKeys":["moofOffset","val moofOffset: Number","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.TrackFragmentRandomAccessBox.Entry.moofOffset"]},{"name":"val muxConfigPresent: Boolean = true","description":"io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.AudioMuxElement.muxConfigPresent","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac/-audio-mux-element/mux-config-present.html","searchKeys":["muxConfigPresent","val muxConfigPresent: Boolean = true","io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.AudioMuxElement.muxConfigPresent"]},{"name":"val muxer: IMuxerInternal","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.CompositeEndpointFactory.muxer","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites/-composite-endpoint-factory/muxer.html","searchKeys":["muxer","val muxer: IMuxerInternal","io.github.thibaultbee.streampack.core.elements.endpoints.composites.CompositeEndpointFactory.muxer"]},{"name":"val muxerInfo: IMuxer.IMuxerInfo","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.CompositeEndpoint.EndpointInfo.muxerInfo","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites/-composite-endpoint/-endpoint-info/muxer-info.html","searchKeys":["muxerInfo","val muxerInfo: IMuxer.IMuxerInfo","io.github.thibaultbee.streampack.core.elements.endpoints.composites.CompositeEndpoint.EndpointInfo.muxerInfo"]},{"name":"val name: String","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.data.TSServiceInfo.name","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.data/-t-s-service-info/name.html","searchKeys":["name","val name: String","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.data.TSServiceInfo.name"]},{"name":"val needMirroring: Boolean","description":"io.github.thibaultbee.streampack.core.elements.processing.video.outputs.SurfaceOutput.TransformationInfo.needMirroring","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.processing.video.outputs/-surface-output/-transformation-info/need-mirroring.html","searchKeys":["needMirroring","val needMirroring: Boolean","io.github.thibaultbee.streampack.core.elements.processing.video.outputs.SurfaceOutput.TransformationInfo.needMirroring"]},{"name":"val noStartCodeData: ByteBuffer","description":"io.github.thibaultbee.streampack.core.elements.utils.av.video.hevc.HEVCDecoderConfigurationRecord.NalUnit.noStartCodeData","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.video.hevc/-h-e-v-c-decoder-configuration-record/-nal-unit/no-start-code-data.html","searchKeys":["noStartCodeData","val noStartCodeData: ByteBuffer","io.github.thibaultbee.streampack.core.elements.utils.av.video.hevc.HEVCDecoderConfigurationRecord.NalUnit.noStartCodeData"]},{"name":"val numOfFiles: Int","description":"io.github.thibaultbee.streampack.core.elements.utils.ChunkedFileOutputStream.numOfFiles","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils/-chunked-file-output-stream/num-of-files.html","searchKeys":["numOfFiles","val numOfFiles: Int","io.github.thibaultbee.streampack.core.elements.utils.ChunkedFileOutputStream.numOfFiles"]},{"name":"val numOfSamples: Int","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models.Chunk.numOfSamples","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models/-chunk/num-of-samples.html","searchKeys":["numOfSamples","val numOfSamples: Int","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models.Chunk.numOfSamples"]},{"name":"val numOfSubFrame: Short? = null","description":"io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.config.GASpecificConfig.numOfSubFrame","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.config/-g-a-specific-config/num-of-sub-frame.html","searchKeys":["numOfSubFrame","val numOfSubFrame: Short? = null","io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.config.GASpecificConfig.numOfSubFrame"]},{"name":"val onFrame: (RawFrame) -> Unit","description":"io.github.thibaultbee.streampack.core.elements.processing.RawFramePullPush.onFrame","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.processing/-raw-frame-pull-push/on-frame.html","searchKeys":["onFrame","val onFrame: (RawFrame) -> Unit","io.github.thibaultbee.streampack.core.elements.processing.RawFramePullPush.onFrame"]},{"name":"val onNewSample: (ByteBuffer) -> Unit","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models.TrackChunks.onNewSample","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models/-track-chunks/on-new-sample.html","searchKeys":["onNewSample","val onNewSample: (ByteBuffer) -> Unit","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models.TrackChunks.onNewSample"]},{"name":"val onlySyncFrame: Boolean","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models.Chunk.onlySyncFrame","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models/-chunk/only-sync-frame.html","searchKeys":["onlySyncFrame","val onlySyncFrame: Boolean","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models.Chunk.onlySyncFrame"]},{"name":"val outputGain: Short","description":"io.github.thibaultbee.streampack.core.elements.utils.av.audio.opus.IdentificationHeader.outputGain","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.audio.opus/-identification-header/output-gain.html","searchKeys":["outputGain","val outputGain: Short","io.github.thibaultbee.streampack.core.elements.utils.av.audio.opus.IdentificationHeader.outputGain"]},{"name":"val outputs: List<Surface>","description":"io.github.thibaultbee.streampack.core.elements.sources.video.camera.controllers.CameraSessionController.outputs","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.video.camera.controllers/-camera-session-controller/outputs.html","searchKeys":["outputs","val outputs: List<Surface>","io.github.thibaultbee.streampack.core.elements.sources.video.camera.controllers.CameraSessionController.outputs"]},{"name":"val paddingValue: Byte = 0","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models.SampleFlags.paddingValue","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models/-sample-flags/padding-value.html","searchKeys":["paddingValue","val paddingValue: Byte = 0","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models.SampleFlags.paddingValue"]},{"name":"val payloadLength: Int","description":"io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.ADTS.payloadLength","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac/-a-d-t-s/payload-length.html","searchKeys":["payloadLength","val payloadLength: Int","io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.ADTS.payloadLength"]},{"name":"val picHeightInLumaSamples: Int","description":"io.github.thibaultbee.streampack.core.elements.utils.av.video.hevc.SequenceParameterSets.picHeightInLumaSamples","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.video.hevc/-sequence-parameter-sets/pic-height-in-luma-samples.html","searchKeys":["picHeightInLumaSamples","val picHeightInLumaSamples: Int","io.github.thibaultbee.streampack.core.elements.utils.av.video.hevc.SequenceParameterSets.picHeightInLumaSamples"]},{"name":"val picWidthInLumaSamples: Int","description":"io.github.thibaultbee.streampack.core.elements.utils.av.video.hevc.SequenceParameterSets.picWidthInLumaSamples","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.video.hevc/-sequence-parameter-sets/pic-width-in-luma-samples.html","searchKeys":["picWidthInLumaSamples","val picWidthInLumaSamples: Int","io.github.thibaultbee.streampack.core.elements.utils.av.video.hevc.SequenceParameterSets.picWidthInLumaSamples"]},{"name":"val pid: Short","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.data.Stream.pid","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.data/-stream/pid.html","searchKeys":["pid","val pid: Short","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.data.Stream.pid"]},{"name":"val pid: Short","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets.TS.pid","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets/-t-s/pid.html","searchKeys":["pid","val pid: Short","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets.TS.pid"]},{"name":"val preSkip: Short","description":"io.github.thibaultbee.streampack.core.elements.utils.av.audio.opus.IdentificationHeader.preSkip","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.audio.opus/-identification-header/pre-skip.html","searchKeys":["preSkip","val preSkip: Short","io.github.thibaultbee.streampack.core.elements.utils.av.audio.opus.IdentificationHeader.preSkip"]},{"name":"val previous: T?","description":"io.github.thibaultbee.streampack.core.elements.utils.extensions.History.previous","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.extensions/-history/previous.html","searchKeys":["previous","val previous: T?","io.github.thibaultbee.streampack.core.elements.utils.extensions.History.previous"]},{"name":"val profile: Int","description":"io.github.thibaultbee.streampack.core.streamers.dual.DualStreamerAudioCodecConfig.profile","location":"streampack-core/io.github.thibaultbee.streampack.core.streamers.dual/-dual-streamer-audio-codec-config/profile.html","searchKeys":["profile","val profile: Int","io.github.thibaultbee.streampack.core.streamers.dual.DualStreamerAudioCodecConfig.profile"]},{"name":"val profile: Int","description":"io.github.thibaultbee.streampack.core.streamers.dual.DualStreamerVideoCodecConfig.profile","location":"streampack-core/io.github.thibaultbee.streampack.core.streamers.dual/-dual-streamer-video-codec-config/profile.html","searchKeys":["profile","val profile: Int","io.github.thibaultbee.streampack.core.streamers.dual.DualStreamerVideoCodecConfig.profile"]},{"name":"val profile: Int = 0","description":"io.github.thibaultbee.streampack.core.elements.encoders.CodecConfig.profile","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.encoders/-codec-config/profile.html","searchKeys":["profile","val profile: Int = 0","io.github.thibaultbee.streampack.core.elements.encoders.CodecConfig.profile"]},{"name":"val profileTierLevel: ProfileTierLevel","description":"io.github.thibaultbee.streampack.core.elements.utils.av.video.hevc.SequenceParameterSets.profileTierLevel","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.video.hevc/-sequence-parameter-sets/profile-tier-level.html","searchKeys":["profileTierLevel","val profileTierLevel: ProfileTierLevel","io.github.thibaultbee.streampack.core.elements.utils.av.video.hevc.SequenceParameterSets.profileTierLevel"]},{"name":"val programConfigElement: ProgramConfigElement? = null","description":"io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.config.GASpecificConfig.programConfigElement","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.config/-g-a-specific-config/program-config-element.html","searchKeys":["programConfigElement","val programConfigElement: ProgramConfigElement? = null","io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.config.GASpecificConfig.programConfigElement"]},{"name":"val protectionAbsent: Boolean","description":"io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.ADTS.protectionAbsent","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac/-a-d-t-s/protection-absent.html","searchKeys":["protectionAbsent","val protectionAbsent: Boolean","io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.ADTS.protectionAbsent"]},{"name":"val providerName: String","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.data.TSServiceInfo.providerName","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.data/-t-s-service-info/provider-name.html","searchKeys":["providerName","val providerName: String","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.data.TSServiceInfo.providerName"]},{"name":"val psPresentFlag: Boolean","description":"io.github.thibaultbee.streampack.core.elements.utils.av.audio.AudioObjectType.psPresentFlag","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.audio/-audio-object-type/ps-present-flag.html","searchKeys":["psPresentFlag","val psPresentFlag: Boolean","io.github.thibaultbee.streampack.core.elements.utils.av.audio.AudioObjectType.psPresentFlag"]},{"name":"val remaining: Int","description":"io.github.thibaultbee.streampack.core.elements.utils.av.buffer.BitBuffer.remaining","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.buffer/-bit-buffer/remaining.html","searchKeys":["remaining","val remaining: Int","io.github.thibaultbee.streampack.core.elements.utils.av.buffer.BitBuffer.remaining"]},{"name":"val resolution: Size","description":"io.github.thibaultbee.streampack.core.elements.encoders.VideoCodecConfig.resolution","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.encoders/-video-codec-config/resolution.html","searchKeys":["resolution","val resolution: Size","io.github.thibaultbee.streampack.core.elements.encoders.VideoCodecConfig.resolution"]},{"name":"val resolution: Size","description":"io.github.thibaultbee.streampack.core.elements.sources.video.VideoSourceConfig.resolution","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.video/-video-source-config/resolution.html","searchKeys":["resolution","val resolution: Size","io.github.thibaultbee.streampack.core.elements.sources.video.VideoSourceConfig.resolution"]},{"name":"val resolution: Size","description":"io.github.thibaultbee.streampack.core.pipelines.outputs.SurfaceDescriptor.resolution","location":"streampack-core/io.github.thibaultbee.streampack.core.pipelines.outputs/-surface-descriptor/resolution.html","searchKeys":["resolution","val resolution: Size","io.github.thibaultbee.streampack.core.pipelines.outputs.SurfaceDescriptor.resolution"]},{"name":"val resolution: Size","description":"io.github.thibaultbee.streampack.core.streamers.dual.DualStreamerVideoCodecConfig.resolution","location":"streampack-core/io.github.thibaultbee.streampack.core.streamers.dual/-dual-streamer-video-codec-config/resolution.html","searchKeys":["resolution","val resolution: Size","io.github.thibaultbee.streampack.core.streamers.dual.DualStreamerVideoCodecConfig.resolution"]},{"name":"val rotationDegrees: Int","description":"io.github.thibaultbee.streampack.core.elements.processing.video.outputs.SurfaceOutput.rotationDegrees","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.processing.video.outputs/-surface-output/rotation-degrees.html","searchKeys":["rotationDegrees","val rotationDegrees: Int","io.github.thibaultbee.streampack.core.elements.processing.video.outputs.SurfaceOutput.rotationDegrees"]},{"name":"val sampleCompositionTimeOffset: Int? = null","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.TrackRunBox.Entry.sampleCompositionTimeOffset","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-track-run-box/-entry/sample-composition-time-offset.html","searchKeys":["sampleCompositionTimeOffset","val sampleCompositionTimeOffset: Int? = null","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.TrackRunBox.Entry.sampleCompositionTimeOffset"]},{"name":"val sampleDts: List<Long>","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models.Chunk.sampleDts","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models/-chunk/sample-dts.html","searchKeys":["sampleDts","val sampleDts: List<Long>","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models.Chunk.sampleDts"]},{"name":"val sampleDuration: Int? = null","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.TrackRunBox.Entry.sampleDuration","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-track-run-box/-entry/sample-duration.html","searchKeys":["sampleDuration","val sampleDuration: Int? = null","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.TrackRunBox.Entry.sampleDuration"]},{"name":"val sampleFlags: Int? = null","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.TrackRunBox.Entry.sampleFlags","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-track-run-box/-entry/sample-flags.html","searchKeys":["sampleFlags","val sampleFlags: Int? = null","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.TrackRunBox.Entry.sampleFlags"]},{"name":"val sampleRate: Int","description":"io.github.thibaultbee.streampack.core.elements.encoders.AudioCodecConfig.sampleRate","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.encoders/-audio-codec-config/sample-rate.html","searchKeys":["sampleRate","val sampleRate: Int","io.github.thibaultbee.streampack.core.elements.encoders.AudioCodecConfig.sampleRate"]},{"name":"val sampleRate: Int","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.AudioMetadata.sampleRate","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags/-audio-metadata/sample-rate.html","searchKeys":["sampleRate","val sampleRate: Int","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.AudioMetadata.sampleRate"]},{"name":"val sampleRate: Int","description":"io.github.thibaultbee.streampack.core.elements.sources.audio.AudioSourceConfig.sampleRate","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.audio/-audio-source-config/sample-rate.html","searchKeys":["sampleRate","val sampleRate: Int","io.github.thibaultbee.streampack.core.elements.sources.audio.AudioSourceConfig.sampleRate"]},{"name":"val sampleRate: Int","description":"io.github.thibaultbee.streampack.core.elements.utils.av.audio.AudioSpecificConfig.AudioSpecificConfigExtension.sampleRate","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.audio/-audio-specific-config/-audio-specific-config-extension/sample-rate.html","searchKeys":["sampleRate","val sampleRate: Int","io.github.thibaultbee.streampack.core.elements.utils.av.audio.AudioSpecificConfig.AudioSpecificConfigExtension.sampleRate"]},{"name":"val sampleRate: Int","description":"io.github.thibaultbee.streampack.core.elements.utils.av.audio.AudioSpecificConfig.sampleRate","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.audio/-audio-specific-config/sample-rate.html","searchKeys":["sampleRate","val sampleRate: Int","io.github.thibaultbee.streampack.core.elements.utils.av.audio.AudioSpecificConfig.sampleRate"]},{"name":"val sampleRate: Int","description":"io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.ADTS.sampleRate","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac/-a-d-t-s/sample-rate.html","searchKeys":["sampleRate","val sampleRate: Int","io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.ADTS.sampleRate"]},{"name":"val sampleSize: Int","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.AudioMetadata.sampleSize","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags/-audio-metadata/sample-size.html","searchKeys":["sampleSize","val sampleSize: Int","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.AudioMetadata.sampleSize"]},{"name":"val sampleSize: Int? = null","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.TrackRunBox.Entry.sampleSize","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-track-run-box/-entry/sample-size.html","searchKeys":["sampleSize","val sampleSize: Int? = null","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.TrackRunBox.Entry.sampleSize"]},{"name":"val samplesPerChunk: Int","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.SampleToChunkBox.Entry.samplesPerChunk","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-sample-to-chunk-box/-entry/samples-per-chunk.html","searchKeys":["samplesPerChunk","val samplesPerChunk: Int","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.SampleToChunkBox.Entry.samplesPerChunk"]},{"name":"val sbrPresentFlag: Boolean","description":"io.github.thibaultbee.streampack.core.elements.utils.av.audio.AudioObjectType.sbrPresentFlag","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.audio/-audio-object-type/sbr-present-flag.html","searchKeys":["sbrPresentFlag","val sbrPresentFlag: Boolean","io.github.thibaultbee.streampack.core.elements.utils.av.audio.AudioObjectType.sbrPresentFlag"]},{"name":"val schemes: Set<String>","description":"io.github.thibaultbee.streampack.core.elements.endpoints.MediaSinkType.schemes","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints/-media-sink-type/schemes.html","searchKeys":["schemes","val schemes: Set<String>","io.github.thibaultbee.streampack.core.elements.endpoints.MediaSinkType.schemes"]},{"name":"val sdr: DynamicRangeProfile","description":"io.github.thibaultbee.streampack.core.elements.utils.av.video.DynamicRangeProfile.Companion.sdr","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.video/-dynamic-range-profile/-companion/sdr.html","searchKeys":["sdr","val sdr: DynamicRangeProfile","io.github.thibaultbee.streampack.core.elements.utils.av.video.DynamicRangeProfile.Companion.sdr"]},{"name":"val secondAudioConfig: AudioCodecConfig","description":"io.github.thibaultbee.streampack.core.streamers.dual.DualStreamerAudioConfig.secondAudioConfig","location":"streampack-core/io.github.thibaultbee.streampack.core.streamers.dual/-dual-streamer-audio-config/second-audio-config.html","searchKeys":["secondAudioConfig","val secondAudioConfig: AudioCodecConfig","io.github.thibaultbee.streampack.core.streamers.dual.DualStreamerAudioConfig.secondAudioConfig"]},{"name":"val secondVideoConfig: VideoCodecConfig","description":"io.github.thibaultbee.streampack.core.streamers.dual.DualStreamerVideoConfig.secondVideoConfig","location":"streampack-core/io.github.thibaultbee.streampack.core.streamers.dual/-dual-streamer-video-config/second-video-config.html","searchKeys":["secondVideoConfig","val secondVideoConfig: VideoCodecConfig","io.github.thibaultbee.streampack.core.streamers.dual.DualStreamerVideoConfig.secondVideoConfig"]},{"name":"val seqParameterSetId: Int","description":"io.github.thibaultbee.streampack.core.elements.utils.av.video.hevc.SequenceParameterSets.seqParameterSetId","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.video.hevc/-sequence-parameter-sets/seq-parameter-set-id.html","searchKeys":["seqParameterSetId","val seqParameterSetId: Int","io.github.thibaultbee.streampack.core.elements.utils.av.video.hevc.SequenceParameterSets.seqParameterSetId"]},{"name":"val sink: ISinkInternal","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.CompositeEndpointFactory.sink","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites/-composite-endpoint-factory/sink.html","searchKeys":["sink","val sink: ISinkInternal","io.github.thibaultbee.streampack.core.elements.endpoints.composites.CompositeEndpointFactory.sink"]},{"name":"val sinkType: MediaSinkType","description":"io.github.thibaultbee.streampack.core.configuration.mediadescriptor.MediaDescriptor.Type.sinkType","location":"streampack-core/io.github.thibaultbee.streampack.core.configuration.mediadescriptor/-media-descriptor/-type/sink-type.html","searchKeys":["sinkType","val sinkType: MediaSinkType","io.github.thibaultbee.streampack.core.configuration.mediadescriptor.MediaDescriptor.Type.sinkType"]},{"name":"val sourceRotationDegrees: Int","description":"io.github.thibaultbee.streampack.core.elements.processing.video.outputs.SurfaceOutput.sourceRotationDegrees","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.processing.video.outputs/-surface-output/source-rotation-degrees.html","searchKeys":["sourceRotationDegrees","val sourceRotationDegrees: Int","io.github.thibaultbee.streampack.core.elements.processing.video.outputs.SurfaceOutput.sourceRotationDegrees"]},{"name":"val specificConfig: SpecificConfig? = null","description":"io.github.thibaultbee.streampack.core.elements.utils.av.audio.AudioSpecificConfig.specificConfig","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.audio/-audio-specific-config/specific-config.html","searchKeys":["specificConfig","val specificConfig: SpecificConfig? = null","io.github.thibaultbee.streampack.core.elements.utils.av.audio.AudioSpecificConfig.specificConfig"]},{"name":"val stabilization: CameraSettings.Stabilization","description":"io.github.thibaultbee.streampack.core.elements.sources.video.camera.CameraSettings.stabilization","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.video.camera/-camera-settings/stabilization.html","searchKeys":["stabilization","val stabilization: CameraSettings.Stabilization","io.github.thibaultbee.streampack.core.elements.sources.video.camera.CameraSettings.stabilization"]},{"name":"val startBitrate: Int","description":"io.github.thibaultbee.streampack.core.elements.encoders.CodecConfig.startBitrate","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.encoders/-codec-config/start-bitrate.html","searchKeys":["startBitrate","val startBitrate: Int","io.github.thibaultbee.streampack.core.elements.encoders.CodecConfig.startBitrate"]},{"name":"val startBitrate: Int","description":"io.github.thibaultbee.streampack.core.streamers.dual.DualStreamerAudioCodecConfig.startBitrate","location":"streampack-core/io.github.thibaultbee.streampack.core.streamers.dual/-dual-streamer-audio-codec-config/start-bitrate.html","searchKeys":["startBitrate","val startBitrate: Int","io.github.thibaultbee.streampack.core.streamers.dual.DualStreamerAudioCodecConfig.startBitrate"]},{"name":"val startBitrate: Int","description":"io.github.thibaultbee.streampack.core.streamers.dual.DualStreamerVideoCodecConfig.startBitrate","location":"streampack-core/io.github.thibaultbee.streampack.core.streamers.dual/-dual-streamer-video-codec-config/start-bitrate.html","searchKeys":["startBitrate","val startBitrate: Int","io.github.thibaultbee.streampack.core.streamers.dual.DualStreamerVideoCodecConfig.startBitrate"]},{"name":"val stbl: SampleTableBox","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.MediaInformationBox.stbl","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-media-information-box/stbl.html","searchKeys":["stbl","val stbl: SampleTableBox","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.MediaInformationBox.stbl"]},{"name":"val stream: Stream","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets.Pes.stream","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets/-pes/stream.html","searchKeys":["stream","val stream: Stream","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets.Pes.stream"]},{"name":"val streamConfigs: List<CodecConfig>","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.sinks.SinkConfiguration.streamConfigs","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.sinks/-sink-configuration/stream-configs.html","searchKeys":["streamConfigs","val streamConfigs: List<CodecConfig>","io.github.thibaultbee.streampack.core.elements.endpoints.composites.sinks.SinkConfiguration.streamConfigs"]},{"name":"val supportedBitrates: Range<Int>","description":"io.github.thibaultbee.streampack.core.elements.encoders.mediacodec.AudioEncoderInfo.supportedBitrates","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.encoders.mediacodec/-audio-encoder-info/supported-bitrates.html","searchKeys":["supportedBitrates","val supportedBitrates: Range<Int>","io.github.thibaultbee.streampack.core.elements.encoders.mediacodec.AudioEncoderInfo.supportedBitrates"]},{"name":"val supportedBitrates: Range<Int>","description":"io.github.thibaultbee.streampack.core.elements.encoders.mediacodec.VideoEncoderInfo.supportedBitrates","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.encoders.mediacodec/-video-encoder-info/supported-bitrates.html","searchKeys":["supportedBitrates","val supportedBitrates: Range<Int>","io.github.thibaultbee.streampack.core.elements.encoders.mediacodec.VideoEncoderInfo.supportedBitrates"]},{"name":"val supportedEncoders: List<String>","description":"io.github.thibaultbee.streampack.core.elements.encoders.mediacodec.MediaCodecHelper.Audio.supportedEncoders","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.encoders.mediacodec/-media-codec-helper/-audio/supported-encoders.html","searchKeys":["supportedEncoders","val supportedEncoders: List<String>","io.github.thibaultbee.streampack.core.elements.encoders.mediacodec.MediaCodecHelper.Audio.supportedEncoders"]},{"name":"val supportedEncoders: List<String>","description":"io.github.thibaultbee.streampack.core.elements.encoders.mediacodec.MediaCodecHelper.Video.supportedEncoders","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.encoders.mediacodec/-media-codec-helper/-video/supported-encoders.html","searchKeys":["supportedEncoders","val supportedEncoders: List<String>","io.github.thibaultbee.streampack.core.elements.encoders.mediacodec.MediaCodecHelper.Video.supportedEncoders"]},{"name":"val supportedFrameRates: Range<Int>","description":"io.github.thibaultbee.streampack.core.elements.encoders.mediacodec.VideoEncoderInfo.supportedFrameRates","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.encoders.mediacodec/-video-encoder-info/supported-frame-rates.html","searchKeys":["supportedFrameRates","val supportedFrameRates: Range<Int>","io.github.thibaultbee.streampack.core.elements.encoders.mediacodec.VideoEncoderInfo.supportedFrameRates"]},{"name":"val supportedHeights: Range<Int>","description":"io.github.thibaultbee.streampack.core.elements.encoders.mediacodec.VideoEncoderInfo.supportedHeights","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.encoders.mediacodec/-video-encoder-info/supported-heights.html","searchKeys":["supportedHeights","val supportedHeights: Range<Int>","io.github.thibaultbee.streampack.core.elements.encoders.mediacodec.VideoEncoderInfo.supportedHeights"]},{"name":"val supportedSampleRates: IntArray","description":"io.github.thibaultbee.streampack.core.elements.encoders.mediacodec.AudioEncoderInfo.supportedSampleRates","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.encoders.mediacodec/-audio-encoder-info/supported-sample-rates.html","searchKeys":["supportedSampleRates","val supportedSampleRates: IntArray","io.github.thibaultbee.streampack.core.elements.encoders.mediacodec.AudioEncoderInfo.supportedSampleRates"]},{"name":"val supportedWidths: Range<Int>","description":"io.github.thibaultbee.streampack.core.elements.encoders.mediacodec.VideoEncoderInfo.supportedWidths","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.encoders.mediacodec/-video-encoder-info/supported-widths.html","searchKeys":["supportedWidths","val supportedWidths: Range<Int>","io.github.thibaultbee.streampack.core.elements.encoders.mediacodec.VideoEncoderInfo.supportedWidths"]},{"name":"val surface: Surface","description":"io.github.thibaultbee.streampack.core.pipelines.outputs.SurfaceDescriptor.surface","location":"streampack-core/io.github.thibaultbee.streampack.core.pipelines.outputs/-surface-descriptor/surface.html","searchKeys":["surface","val surface: Surface","io.github.thibaultbee.streampack.core.pipelines.outputs.SurfaceDescriptor.surface"]},{"name":"val syncFrameList: List<Int>","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models.Chunk.syncFrameList","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models/-chunk/sync-frame-list.html","searchKeys":["syncFrameList","val syncFrameList: List<Int>","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models.Chunk.syncFrameList"]},{"name":"val syncSamples: MutableList<Track.SyncSample>","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models.Track.syncSamples","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models/-track/sync-samples.html","searchKeys":["syncSamples","val syncSamples: MutableList<Track.SyncSample>","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models.Track.syncSamples"]},{"name":"val targetRotation: Int","description":"io.github.thibaultbee.streampack.core.elements.processing.video.outputs.SurfaceOutput.TransformationInfo.targetRotation","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.processing.video.outputs/-surface-output/-transformation-info/target-rotation.html","searchKeys":["targetRotation","val targetRotation: Int","io.github.thibaultbee.streampack.core.elements.processing.video.outputs.SurfaceOutput.TransformationInfo.targetRotation"]},{"name":"val targetRotation: Int = 0","description":"io.github.thibaultbee.streampack.core.pipelines.outputs.SurfaceDescriptor.targetRotation","location":"streampack-core/io.github.thibaultbee.streampack.core.pipelines.outputs/-surface-descriptor/target-rotation.html","searchKeys":["targetRotation","val targetRotation: Int = 0","io.github.thibaultbee.streampack.core.pipelines.outputs.SurfaceDescriptor.targetRotation"]},{"name":"val temporalIdNesting: Boolean","description":"io.github.thibaultbee.streampack.core.elements.utils.av.video.hevc.SequenceParameterSets.temporalIdNesting","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.video.hevc/-sequence-parameter-sets/temporal-id-nesting.html","searchKeys":["temporalIdNesting","val temporalIdNesting: Boolean","io.github.thibaultbee.streampack.core.elements.utils.av.video.hevc.SequenceParameterSets.temporalIdNesting"]},{"name":"val textureName: Int","description":"io.github.thibaultbee.streampack.core.elements.processing.video.OpenGlRenderer.textureName","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.processing.video/-open-gl-renderer/texture-name.html","searchKeys":["textureName","val textureName: Int","io.github.thibaultbee.streampack.core.elements.processing.video.OpenGlRenderer.textureName"]},{"name":"val throwables: Iterable<Throwable>","description":"io.github.thibaultbee.streampack.core.pipelines.utils.MultiException.throwables","location":"streampack-core/io.github.thibaultbee.streampack.core.pipelines.utils/-multi-exception/throwables.html","searchKeys":["throwables","val throwables: Iterable<Throwable>","io.github.thibaultbee.streampack.core.pipelines.utils.MultiException.throwables"]},{"name":"val time: Long","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models.Track.SyncSample.time","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models/-track/-sync-sample/time.html","searchKeys":["time","val time: Long","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models.Track.SyncSample.time"]},{"name":"val time: Number","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.TrackFragmentRandomAccessBox.Entry.time","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-track-fragment-random-access-box/-entry/time.html","searchKeys":["time","val time: Number","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.TrackFragmentRandomAccessBox.Entry.time"]},{"name":"val timescale: Int","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models.MovieBoxFactory.timescale","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models/-movie-box-factory/timescale.html","searchKeys":["timescale","val timescale: Int","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models.MovieBoxFactory.timescale"]},{"name":"val timescale: Int","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models.Track.timescale","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models/-track/timescale.html","searchKeys":["timescale","val timescale: Int","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models.Track.timescale"]},{"name":"val tkhd: TrackHeaderBox","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.TrackBox.tkhd","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-track-box/tkhd.html","searchKeys":["tkhd","val tkhd: TrackHeaderBox","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.TrackBox.tkhd"]},{"name":"val track: Track","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models.TrackChunks.track","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models/-track-chunks/track.html","searchKeys":["track","val track: Track","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models.TrackChunks.track"]},{"name":"val trak: List<TrackBox>","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.MovieBox.trak","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-movie-box/trak.html","searchKeys":["trak","val trak: List<TrackBox>","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.MovieBox.trak"]},{"name":"val transferFunction: Int","description":"io.github.thibaultbee.streampack.core.elements.utils.av.video.DynamicRangeProfile.transferFunction","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.video/-dynamic-range-profile/transfer-function.html","searchKeys":["transferFunction","val transferFunction: Int","io.github.thibaultbee.streampack.core.elements.utils.av.video.DynamicRangeProfile.transferFunction"]},{"name":"val ts: Long","description":"io.github.thibaultbee.streampack.core.elements.data.Packet.ts","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.data/-packet/ts.html","searchKeys":["ts","val ts: Long","io.github.thibaultbee.streampack.core.elements.data.Packet.ts"]},{"name":"val type: HEVCDecoderConfigurationRecord.NalUnit.Type","description":"io.github.thibaultbee.streampack.core.elements.utils.av.video.hevc.HEVCDecoderConfigurationRecord.NalUnit.type","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.video.hevc/-h-e-v-c-decoder-configuration-record/-nal-unit/type.html","searchKeys":["type","val type: HEVCDecoderConfigurationRecord.NalUnit.Type","io.github.thibaultbee.streampack.core.elements.utils.av.video.hevc.HEVCDecoderConfigurationRecord.NalUnit.type"]},{"name":"val type: MediaDescriptor.Type","description":"io.github.thibaultbee.streampack.core.configuration.mediadescriptor.MediaDescriptor.type","location":"streampack-core/io.github.thibaultbee.streampack.core.configuration.mediadescriptor/-media-descriptor/type.html","searchKeys":["type","val type: MediaDescriptor.Type","io.github.thibaultbee.streampack.core.configuration.mediadescriptor.MediaDescriptor.type"]},{"name":"val type: PacketType","description":"io.github.thibaultbee.streampack.core.elements.data.Packet.type","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.data/-packet/type.html","searchKeys":["type","val type: PacketType","io.github.thibaultbee.streampack.core.elements.data.Packet.type"]},{"name":"val type: TSServiceInfo.ServiceType","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.data.TSServiceInfo.type","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.data/-t-s-service-info/type.html","searchKeys":["type","val type: TSServiceInfo.ServiceType","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.data.TSServiceInfo.type"]},{"name":"val utcNowIsom: Long","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.utils.TimeUtils.utcNowIsom","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.utils/-time-utils/utc-now-isom.html","searchKeys":["utcNowIsom","val utcNowIsom: Long","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.utils.TimeUtils.utcNowIsom"]},{"name":"val value: Byte","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.amf.AmfType.value","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.amf/-amf-type/value.html","searchKeys":["value","val value: Byte","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.amf.AmfType.value"]},{"name":"val value: Byte","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models.HasRedundancy.value","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models/-has-redundancy/value.html","searchKeys":["value","val value: Byte","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models.HasRedundancy.value"]},{"name":"val value: Byte","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models.IsLeading.value","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models/-is-leading/value.html","searchKeys":["value","val value: Byte","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models.IsLeading.value"]},{"name":"val value: Byte","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models.SampleDependsOn.value","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models/-sample-depends-on/value.html","searchKeys":["value","val value: Byte","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models.SampleDependsOn.value"]},{"name":"val value: Byte","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models.SampleIsDependedOn.value","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models/-sample-is-depended-on/value.html","searchKeys":["value","val value: Byte","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.models.SampleIsDependedOn.value"]},{"name":"val value: Byte","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.data.TSServiceInfo.ServiceType.value","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.data/-t-s-service-info/-service-type/value.html","searchKeys":["value","val value: Byte","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.data.TSServiceInfo.ServiceType.value"]},{"name":"val value: Byte","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets.Pmt.Descriptor.value","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets/-pmt/-descriptor/value.html","searchKeys":["value","val value: Byte","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets.Pmt.Descriptor.value"]},{"name":"val value: Byte","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets.Pmt.StreamType.value","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets/-pmt/-stream-type/value.html","searchKeys":["value","val value: Byte","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets.Pmt.StreamType.value"]},{"name":"val value: Byte","description":"io.github.thibaultbee.streampack.core.elements.utils.av.descriptors.ObjectTypeIndication.value","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.descriptors/-object-type-indication/value.html","searchKeys":["value","val value: Byte","io.github.thibaultbee.streampack.core.elements.utils.av.descriptors.ObjectTypeIndication.value"]},{"name":"val value: Byte","description":"io.github.thibaultbee.streampack.core.elements.utils.av.descriptors.StreamType.value","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.descriptors/-stream-type/value.html","searchKeys":["value","val value: Byte","io.github.thibaultbee.streampack.core.elements.utils.av.descriptors.StreamType.value"]},{"name":"val value: Byte","description":"io.github.thibaultbee.streampack.core.elements.utils.av.descriptors.Tags.value","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.descriptors/-tags/value.html","searchKeys":["value","val value: Byte","io.github.thibaultbee.streampack.core.elements.utils.av.descriptors.Tags.value"]},{"name":"val value: Byte","description":"io.github.thibaultbee.streampack.core.elements.utils.av.video.ChromaFormat.value","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.video/-chroma-format/value.html","searchKeys":["value","val value: Byte","io.github.thibaultbee.streampack.core.elements.utils.av.video.ChromaFormat.value"]},{"name":"val value: Byte","description":"io.github.thibaultbee.streampack.core.elements.utils.av.video.hevc.HEVCDecoderConfigurationRecord.NalUnit.Type.value","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.video.hevc/-h-e-v-c-decoder-configuration-record/-nal-unit/-type/value.html","searchKeys":["value","val value: Byte","io.github.thibaultbee.streampack.core.elements.utils.av.video.hevc.HEVCDecoderConfigurationRecord.NalUnit.Type.value"]},{"name":"val value: Byte","description":"io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.ChromaSubsampling.value","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx/-chroma-subsampling/value.html","searchKeys":["value","val value: Byte","io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.ChromaSubsampling.value"]},{"name":"val value: Byte","description":"io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.VP9CodecPrivate.CodecFeature.Ids.value","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx/-v-p9-codec-private/-codec-feature/-ids/value.html","searchKeys":["value","val value: Byte","io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.VP9CodecPrivate.CodecFeature.Ids.value"]},{"name":"val value: FourCC","description":"io.github.thibaultbee.streampack.core.elements.utils.av.FourCCs.value","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av/-four-c-cs/value.html","searchKeys":["value","val value: FourCC","io.github.thibaultbee.streampack.core.elements.utils.av.FourCCs.value"]},{"name":"val value: Int","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.AACPacketType.value","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags/-a-a-c-packet-type/value.html","searchKeys":["value","val value: Int","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.AACPacketType.value"]},{"name":"val value: Int","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.SoundFormat.value","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags/-sound-format/value.html","searchKeys":["value","val value: Int","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.SoundFormat.value"]},{"name":"val value: Int","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.SoundRate.value","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags/-sound-rate/value.html","searchKeys":["value","val value: Int","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.SoundRate.value"]},{"name":"val value: Int","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.SoundSize.value","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags/-sound-size/value.html","searchKeys":["value","val value: Int","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.SoundSize.value"]},{"name":"val value: Int","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.SoundType.value","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags/-sound-type/value.html","searchKeys":["value","val value: Int","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.SoundType.value"]},{"name":"val value: Int","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.TagType.value","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags/-tag-type/value.html","searchKeys":["value","val value: Int","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.TagType.value"]},{"name":"val value: Int","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.video.AVCPacketType.value","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.video/-a-v-c-packet-type/value.html","searchKeys":["value","val value: Int","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.video.AVCPacketType.value"]},{"name":"val value: Int","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.video.CodecID.value","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.video/-codec-i-d/value.html","searchKeys":["value","val value: Int","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.video.CodecID.value"]},{"name":"val value: Int","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.video.FrameType.value","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.video/-frame-type/value.html","searchKeys":["value","val value: Int","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.video.FrameType.value"]},{"name":"val value: Int","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.video.PacketType.value","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.video/-packet-type/value.html","searchKeys":["value","val value: Int","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.video.PacketType.value"]},{"name":"val value: Int","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.TrackFragmentHeaderBox.TrackFragmentFlag.value","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-track-fragment-header-box/-track-fragment-flag/value.html","searchKeys":["value","val value: Int","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.TrackFragmentHeaderBox.TrackFragmentFlag.value"]},{"name":"val value: Int","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.TrackHeaderBox.TrackFlag.value","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-track-header-box/-track-flag/value.html","searchKeys":["value","val value: Int","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.TrackHeaderBox.TrackFlag.value"]},{"name":"val value: Int","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.TrackRunBox.TrackRunFlag.value","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-track-run-box/-track-run-flag/value.html","searchKeys":["value","val value: Int","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.TrackRunBox.TrackRunFlag.value"]},{"name":"val value: Int","description":"io.github.thibaultbee.streampack.core.elements.utils.av.audio.AudioObjectType.value","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.audio/-audio-object-type/value.html","searchKeys":["value","val value: Int","io.github.thibaultbee.streampack.core.elements.utils.av.audio.AudioObjectType.value"]},{"name":"val value: Int","description":"io.github.thibaultbee.streampack.core.elements.utils.av.audio.SamplingFrequencyIndex.value","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.audio/-sampling-frequency-index/value.html","searchKeys":["value","val value: Int","io.github.thibaultbee.streampack.core.elements.utils.av.audio.SamplingFrequencyIndex.value"]},{"name":"val value: Int","description":"io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.ColorPrimaries.value","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx/-color-primaries/value.html","searchKeys":["value","val value: Int","io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.ColorPrimaries.value"]},{"name":"val value: Int","description":"io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.Level.value","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx/-level/value.html","searchKeys":["value","val value: Int","io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.Level.value"]},{"name":"val value: Int","description":"io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.MatrixCoefficients.value","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx/-matrix-coefficients/value.html","searchKeys":["value","val value: Int","io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.MatrixCoefficients.value"]},{"name":"val value: Int","description":"io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.Profile.value","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx/-profile/value.html","searchKeys":["value","val value: Int","io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.Profile.value"]},{"name":"val value: Int","description":"io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.TransferCharacteristics.value","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx/-transfer-characteristics/value.html","searchKeys":["value","val value: Int","io.github.thibaultbee.streampack.core.elements.utils.av.video.vpx.TransferCharacteristics.value"]},{"name":"val value: Short","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets.Pes.StreamId.value","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets/-pes/-stream-id/value.html","searchKeys":["value","val value: Short","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets.Pes.StreamId.value"]},{"name":"val value: Short","description":"io.github.thibaultbee.streampack.core.elements.utils.av.audio.ChannelConfiguration.value","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.audio/-channel-configuration/value.html","searchKeys":["value","val value: Short","io.github.thibaultbee.streampack.core.elements.utils.av.audio.ChannelConfiguration.value"]},{"name":"val value: Short","description":"io.github.thibaultbee.streampack.core.elements.utils.av.video.hevc.HEVCProfile.value","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.video.hevc/-h-e-v-c-profile/value.html","searchKeys":["value","val value: Short","io.github.thibaultbee.streampack.core.elements.utils.av.video.hevc.HEVCProfile.value"]},{"name":"val value: String","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.HandlerBox.HandlerType.value","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-handler-box/-handler-type/value.html","searchKeys":["value","val value: String","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.HandlerBox.HandlerType.value"]},{"name":"val version: Byte","description":"io.github.thibaultbee.streampack.core.elements.utils.av.audio.opus.IdentificationHeader.version","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.audio.opus/-identification-header/version.html","searchKeys":["version","val version: Byte","io.github.thibaultbee.streampack.core.elements.utils.av.audio.opus.IdentificationHeader.version"]},{"name":"val version: Int = 0","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.SampleEntry.version","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes/-sample-entry/version.html","searchKeys":["version","val version: Int = 0","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.mp4.boxes.SampleEntry.version"]},{"name":"val videoBitrateRange: Range<Int>","description":"io.github.thibaultbee.streampack.core.configuration.BitrateRegulatorConfig.videoBitrateRange","location":"streampack-core/io.github.thibaultbee.streampack.core.configuration/-bitrate-regulator-config/video-bitrate-range.html","searchKeys":["videoBitrateRange","val videoBitrateRange: Range<Int>","io.github.thibaultbee.streampack.core.configuration.BitrateRegulatorConfig.videoBitrateRange"]},{"name":"val videoParameterSetId: Byte","description":"io.github.thibaultbee.streampack.core.elements.utils.av.video.hevc.SequenceParameterSets.videoParameterSetId","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.video.hevc/-sequence-parameter-sets/video-parameter-set-id.html","searchKeys":["videoParameterSetId","val videoParameterSetId: Byte","io.github.thibaultbee.streampack.core.elements.utils.av.video.hevc.SequenceParameterSets.videoParameterSetId"]},{"name":"val viewPortRect: Rect","description":"io.github.thibaultbee.streampack.core.elements.processing.video.utils.OutputSurface.viewPortRect","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.processing.video.utils/-output-surface/view-port-rect.html","searchKeys":["viewPortRect","val viewPortRect: Rect","io.github.thibaultbee.streampack.core.elements.processing.video.utils.OutputSurface.viewPortRect"]},{"name":"val whiteBalance: CameraSettings.WhiteBalance","description":"io.github.thibaultbee.streampack.core.elements.sources.video.camera.CameraSettings.whiteBalance","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.video.camera/-camera-settings/white-balance.html","searchKeys":["whiteBalance","val whiteBalance: CameraSettings.WhiteBalance","io.github.thibaultbee.streampack.core.elements.sources.video.camera.CameraSettings.whiteBalance"]},{"name":"val width: Int","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.VideoMetadata.width","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags/-video-metadata/width.html","searchKeys":["width","val width: Int","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.flv.tags.VideoMetadata.width"]},{"name":"val withAudio: Boolean = true","description":"io.github.thibaultbee.streampack.core.pipelines.StreamerPipeline.withAudio","location":"streampack-core/io.github.thibaultbee.streampack.core.pipelines/-streamer-pipeline/with-audio.html","searchKeys":["withAudio","val withAudio: Boolean = true","io.github.thibaultbee.streampack.core.pipelines.StreamerPipeline.withAudio"]},{"name":"val withAudio: Boolean = true","description":"io.github.thibaultbee.streampack.core.streamers.dual.DualStreamer.withAudio","location":"streampack-core/io.github.thibaultbee.streampack.core.streamers.dual/-dual-streamer/with-audio.html","searchKeys":["withAudio","val withAudio: Boolean = true","io.github.thibaultbee.streampack.core.streamers.dual.DualStreamer.withAudio"]},{"name":"val withAudio: Boolean = true","description":"io.github.thibaultbee.streampack.core.streamers.single.SingleStreamer.withAudio","location":"streampack-core/io.github.thibaultbee.streampack.core.streamers.single/-single-streamer/with-audio.html","searchKeys":["withAudio","val withAudio: Boolean = true","io.github.thibaultbee.streampack.core.streamers.single.SingleStreamer.withAudio"]},{"name":"val withVideo: Boolean = true","description":"io.github.thibaultbee.streampack.core.pipelines.StreamerPipeline.withVideo","location":"streampack-core/io.github.thibaultbee.streampack.core.pipelines/-streamer-pipeline/with-video.html","searchKeys":["withVideo","val withVideo: Boolean = true","io.github.thibaultbee.streampack.core.pipelines.StreamerPipeline.withVideo"]},{"name":"val withVideo: Boolean = true","description":"io.github.thibaultbee.streampack.core.streamers.dual.DualStreamer.withVideo","location":"streampack-core/io.github.thibaultbee.streampack.core.streamers.dual/-dual-streamer/with-video.html","searchKeys":["withVideo","val withVideo: Boolean = true","io.github.thibaultbee.streampack.core.streamers.dual.DualStreamer.withVideo"]},{"name":"val withVideo: Boolean = true","description":"io.github.thibaultbee.streampack.core.streamers.single.SingleStreamer.withVideo","location":"streampack-core/io.github.thibaultbee.streampack.core.streamers.single/-single-streamer/with-video.html","searchKeys":["withVideo","val withVideo: Boolean = true","io.github.thibaultbee.streampack.core.streamers.single.SingleStreamer.withVideo"]},{"name":"val zoom: CameraSettings.Zoom","description":"io.github.thibaultbee.streampack.core.elements.sources.video.camera.CameraSettings.zoom","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.video.camera/-camera-settings/zoom.html","searchKeys":["zoom","val zoom: CameraSettings.Zoom","io.github.thibaultbee.streampack.core.elements.sources.video.camera.CameraSettings.zoom"]},{"name":"var autoMode: Int","description":"io.github.thibaultbee.streampack.core.elements.sources.video.camera.CameraSettings.Exposure.autoMode","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.video.camera/-camera-settings/-exposure/auto-mode.html","searchKeys":["autoMode","var autoMode: Int","io.github.thibaultbee.streampack.core.elements.sources.video.camera.CameraSettings.Exposure.autoMode"]},{"name":"var autoMode: Int","description":"io.github.thibaultbee.streampack.core.elements.sources.video.camera.CameraSettings.Focus.autoMode","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.video.camera/-camera-settings/-focus/auto-mode.html","searchKeys":["autoMode","var autoMode: Int","io.github.thibaultbee.streampack.core.elements.sources.video.camera.CameraSettings.Focus.autoMode"]},{"name":"var autoMode: Int","description":"io.github.thibaultbee.streampack.core.elements.sources.video.camera.CameraSettings.WhiteBalance.autoMode","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.video.camera/-camera-settings/-white-balance/auto-mode.html","searchKeys":["autoMode","var autoMode: Int","io.github.thibaultbee.streampack.core.elements.sources.video.camera.CameraSettings.WhiteBalance.autoMode"]},{"name":"var bitPosition: Int","description":"io.github.thibaultbee.streampack.core.elements.utils.av.buffer.BitBuffer.bitPosition","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.buffer/-bit-buffer/bit-position.html","searchKeys":["bitPosition","var bitPosition: Int","io.github.thibaultbee.streampack.core.elements.utils.av.buffer.BitBuffer.bitPosition"]},{"name":"var buffer: ByteBuffer","description":"io.github.thibaultbee.streampack.core.elements.utils.av.buffer.ByteBufferBitReader.buffer","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.buffer/-byte-buffer-bit-reader/buffer.html","searchKeys":["buffer","var buffer: ByteBuffer","io.github.thibaultbee.streampack.core.elements.utils.av.buffer.ByteBufferBitReader.buffer"]},{"name":"var cameraAudioRestriction: Int","description":"io.github.thibaultbee.streampack.core.elements.sources.video.camera.controllers.CameraDeviceController.cameraAudioRestriction","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.video.camera.controllers/-camera-device-controller/camera-audio-restriction.html","searchKeys":["cameraAudioRestriction","var cameraAudioRestriction: Int","io.github.thibaultbee.streampack.core.elements.sources.video.camera.controllers.CameraDeviceController.cameraAudioRestriction"]},{"name":"var compensation: Int","description":"io.github.thibaultbee.streampack.core.elements.sources.video.camera.CameraSettings.Exposure.compensation","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.video.camera/-camera-settings/-exposure/compensation.html","searchKeys":["compensation","var compensation: Int","io.github.thibaultbee.streampack.core.elements.sources.video.camera.CameraSettings.Exposure.compensation"]},{"name":"var dtsInUs: Long?","description":"io.github.thibaultbee.streampack.core.elements.data.Frame.dtsInUs","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.data/-frame/dts-in-us.html","searchKeys":["dtsInUs","var dtsInUs: Long?","io.github.thibaultbee.streampack.core.elements.data.Frame.dtsInUs"]},{"name":"var enable: Boolean","description":"io.github.thibaultbee.streampack.core.elements.sources.video.camera.CameraSettings.Flash.enable","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.video.camera/-camera-settings/-flash/enable.html","searchKeys":["enable","var enable: Boolean","io.github.thibaultbee.streampack.core.elements.sources.video.camera.CameraSettings.Flash.enable"]},{"name":"var enableOptical: Boolean","description":"io.github.thibaultbee.streampack.core.elements.sources.video.camera.CameraSettings.Stabilization.enableOptical","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.video.camera/-camera-settings/-stabilization/enable-optical.html","searchKeys":["enableOptical","var enableOptical: Boolean","io.github.thibaultbee.streampack.core.elements.sources.video.camera.CameraSettings.Stabilization.enableOptical"]},{"name":"var enableVideo: Boolean","description":"io.github.thibaultbee.streampack.core.elements.sources.video.camera.CameraSettings.Stabilization.enableVideo","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.video.camera/-camera-settings/-stabilization/enable-video.html","searchKeys":["enableVideo","var enableVideo: Boolean","io.github.thibaultbee.streampack.core.elements.sources.video.camera.CameraSettings.Stabilization.enableVideo"]},{"name":"var isReleased: Boolean","description":"io.github.thibaultbee.streampack.core.elements.sources.video.camera.controllers.CameraSessionController.isReleased","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.video.camera.controllers/-camera-session-controller/is-released.html","searchKeys":["isReleased","var isReleased: Boolean","io.github.thibaultbee.streampack.core.elements.sources.video.camera.controllers.CameraSessionController.isReleased"]},{"name":"var lensDistance: Float","description":"io.github.thibaultbee.streampack.core.elements.sources.video.camera.CameraSettings.Focus.lensDistance","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.video.camera/-camera-settings/-focus/lens-distance.html","searchKeys":["lensDistance","var lensDistance: Float","io.github.thibaultbee.streampack.core.elements.sources.video.camera.CameraSettings.Focus.lensDistance"]},{"name":"var listener: IMuxerInternal.IMuxerListener?","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.utils.TSOutputCallback.listener","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.utils/-t-s-output-callback/listener.html","searchKeys":["listener","var listener: IMuxerInternal.IMuxerListener?","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.utils.TSOutputCallback.listener"]},{"name":"var lock: Boolean","description":"io.github.thibaultbee.streampack.core.elements.sources.video.camera.CameraSettings.Exposure.lock","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.video.camera/-camera-settings/-exposure/lock.html","searchKeys":["lock","var lock: Boolean","io.github.thibaultbee.streampack.core.elements.sources.video.camera.CameraSettings.Exposure.lock"]},{"name":"var lock: Boolean","description":"io.github.thibaultbee.streampack.core.elements.sources.video.camera.CameraSettings.WhiteBalance.lock","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.video.camera/-camera-settings/-white-balance/lock.html","searchKeys":["lock","var lock: Boolean","io.github.thibaultbee.streampack.core.elements.sources.video.camera.CameraSettings.WhiteBalance.lock"]},{"name":"var logger: ILogger","description":"io.github.thibaultbee.streampack.core.logger.Logger.logger","location":"streampack-core/io.github.thibaultbee.streampack.core.logger/-logger/logger.html","searchKeys":["logger","var logger: ILogger","io.github.thibaultbee.streampack.core.logger.Logger.logger"]},{"name":"var meteringRegions: List<MeteringRectangle>","description":"io.github.thibaultbee.streampack.core.elements.sources.video.camera.CameraSettings.Exposure.meteringRegions","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.video.camera/-camera-settings/-exposure/metering-regions.html","searchKeys":["meteringRegions","var meteringRegions: List<MeteringRectangle>","io.github.thibaultbee.streampack.core.elements.sources.video.camera.CameraSettings.Exposure.meteringRegions"]},{"name":"var meteringRegions: List<MeteringRectangle>","description":"io.github.thibaultbee.streampack.core.elements.sources.video.camera.CameraSettings.Focus.meteringRegions","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.video.camera/-camera-settings/-focus/metering-regions.html","searchKeys":["meteringRegions","var meteringRegions: List<MeteringRectangle>","io.github.thibaultbee.streampack.core.elements.sources.video.camera.CameraSettings.Focus.meteringRegions"]},{"name":"var meteringRegions: List<MeteringRectangle>","description":"io.github.thibaultbee.streampack.core.elements.sources.video.camera.CameraSettings.WhiteBalance.meteringRegions","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.video.camera/-camera-settings/-white-balance/metering-regions.html","searchKeys":["meteringRegions","var meteringRegions: List<MeteringRectangle>","io.github.thibaultbee.streampack.core.elements.sources.video.camera.CameraSettings.WhiteBalance.meteringRegions"]},{"name":"var packetCount: Int","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets.Pat.packetCount","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets/-pat/packet-count.html","searchKeys":["packetCount","var packetCount: Int","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets.Pat.packetCount"]},{"name":"var packetCount: Int","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets.Sdt.packetCount","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets/-sdt/packet-count.html","searchKeys":["packetCount","var packetCount: Int","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets.Sdt.packetCount"]},{"name":"var pcrPid: Short?","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.data.Service.pcrPid","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.data/-service/pcr-pid.html","searchKeys":["pcrPid","var pcrPid: Short?","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.data.Service.pcrPid"]},{"name":"var pmt: Pmt?","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.data.Service.pmt","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.data/-service/pmt.html","searchKeys":["pmt","var pmt: Pmt?","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.data.Service.pmt"]},{"name":"var ptsInUs: Long","description":"io.github.thibaultbee.streampack.core.elements.data.Frame.ptsInUs","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.data/-frame/pts-in-us.html","searchKeys":["ptsInUs","var ptsInUs: Long","io.github.thibaultbee.streampack.core.elements.data.Frame.ptsInUs"]},{"name":"var rggbChannelVector: RggbChannelVector?","description":"io.github.thibaultbee.streampack.core.elements.sources.video.camera.CameraSettings.ColorCorrection.rggbChannelVector","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.video.camera/-camera-settings/-color-correction/rggb-channel-vector.html","searchKeys":["rggbChannelVector","var rggbChannelVector: RggbChannelVector?","io.github.thibaultbee.streampack.core.elements.sources.video.camera.CameraSettings.ColorCorrection.rggbChannelVector"]},{"name":"var sensorSensitivity: Int","description":"io.github.thibaultbee.streampack.core.elements.sources.video.camera.CameraSettings.Iso.sensorSensitivity","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.sources.video.camera/-camera-settings/-iso/sensor-sensitivity.html","searchKeys":["sensorSensitivity","var sensorSensitivity: Int","io.github.thibaultbee.streampack.core.elements.sources.video.camera.CameraSettings.Iso.sensorSensitivity"]},{"name":"var streams: List<Stream>","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets.Pmt.streams","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets/-pmt/streams.html","searchKeys":["streams","var streams: List<Stream>","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets.Pmt.streams"]},{"name":"var streams: MutableList<Stream>","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.data.Service.streams","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.data/-service/streams.html","searchKeys":["streams","var streams: MutableList<Stream>","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.data.Service.streams"]},{"name":"var timestampInUs: Long","description":"io.github.thibaultbee.streampack.core.elements.data.RawFrame.timestampInUs","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.data/-raw-frame/timestamp-in-us.html","searchKeys":["timestampInUs","var timestampInUs: Long","io.github.thibaultbee.streampack.core.elements.data.RawFrame.timestampInUs"]},{"name":"var useSameStreamMuxConfig: Boolean","description":"io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.AudioMuxElement.useSameStreamMuxConfig","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac/-audio-mux-element/use-same-stream-mux-config.html","searchKeys":["useSameStreamMuxConfig","var useSameStreamMuxConfig: Boolean","io.github.thibaultbee.streampack.core.elements.utils.av.audio.aac.AudioMuxElement.useSameStreamMuxConfig"]},{"name":"var versionNumber: Byte","description":"io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets.Psi.versionNumber","location":"streampack-core/io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets/-psi/version-number.html","searchKeys":["versionNumber","var versionNumber: Byte","io.github.thibaultbee.streampack.core.elements.endpoints.composites.muxers.ts.packets.Psi.versionNumber"]},{"name":"RTMP","description":"io.github.thibaultbee.streampack.screenrecorder.models.EndpointType.RTMP","location":"demo-screenrecorder/io.github.thibaultbee.streampack.screenrecorder.models/-endpoint-type/-r-t-m-p/index.html","searchKeys":["RTMP","RTMP","io.github.thibaultbee.streampack.screenrecorder.models.EndpointType.RTMP"]},{"name":"SRT","description":"io.github.thibaultbee.streampack.screenrecorder.models.EndpointType.SRT","location":"demo-screenrecorder/io.github.thibaultbee.streampack.screenrecorder.models/-endpoint-type/-s-r-t/index.html","searchKeys":["SRT","SRT","io.github.thibaultbee.streampack.screenrecorder.models.EndpointType.SRT"]},{"name":"STOP","description":"io.github.thibaultbee.streampack.screenrecorder.models.Actions.STOP","location":"demo-screenrecorder/io.github.thibaultbee.streampack.screenrecorder.models/-actions/-s-t-o-p/index.html","searchKeys":["STOP","STOP","io.github.thibaultbee.streampack.screenrecorder.models.Actions.STOP"]},{"name":"class Audio(sharedPref: SharedPreferences, resources: Resources)","description":"io.github.thibaultbee.streampack.screenrecorder.Configuration.Audio","location":"demo-screenrecorder/io.github.thibaultbee.streampack.screenrecorder/-configuration/-audio/index.html","searchKeys":["Audio","class Audio(sharedPref: SharedPreferences, resources: Resources)","io.github.thibaultbee.streampack.screenrecorder.Configuration.Audio"]},{"name":"class Configuration(context: Context)","description":"io.github.thibaultbee.streampack.screenrecorder.Configuration","location":"demo-screenrecorder/io.github.thibaultbee.streampack.screenrecorder/-configuration/index.html","searchKeys":["Configuration","class Configuration(context: Context)","io.github.thibaultbee.streampack.screenrecorder.Configuration"]},{"name":"class DemoMediaProjectionService : MediaProjectionService<ISingleStreamer> ","description":"io.github.thibaultbee.streampack.screenrecorder.services.DemoMediaProjectionService","location":"demo-screenrecorder/io.github.thibaultbee.streampack.screenrecorder.services/-demo-media-projection-service/index.html","searchKeys":["DemoMediaProjectionService","class DemoMediaProjectionService : MediaProjectionService<ISingleStreamer> ","io.github.thibaultbee.streampack.screenrecorder.services.DemoMediaProjectionService"]},{"name":"class Endpoint(sharedPref: SharedPreferences, resources: Resources)","description":"io.github.thibaultbee.streampack.screenrecorder.Configuration.Endpoint","location":"demo-screenrecorder/io.github.thibaultbee.streampack.screenrecorder/-configuration/-endpoint/index.html","searchKeys":["Endpoint","class Endpoint(sharedPref: SharedPreferences, resources: Resources)","io.github.thibaultbee.streampack.screenrecorder.Configuration.Endpoint"]},{"name":"class EndpointFactory(type: EndpointType)","description":"io.github.thibaultbee.streampack.screenrecorder.models.EndpointFactory","location":"demo-screenrecorder/io.github.thibaultbee.streampack.screenrecorder.models/-endpoint-factory/index.html","searchKeys":["EndpointFactory","class EndpointFactory(type: EndpointType)","io.github.thibaultbee.streampack.screenrecorder.models.EndpointFactory"]},{"name":"class MainActivity : AppCompatActivity","description":"io.github.thibaultbee.streampack.screenrecorder.MainActivity","location":"demo-screenrecorder/io.github.thibaultbee.streampack.screenrecorder/-main-activity/index.html","searchKeys":["MainActivity","class MainActivity : AppCompatActivity","io.github.thibaultbee.streampack.screenrecorder.MainActivity"]},{"name":"class Muxer(sharedPref: SharedPreferences, resources: Resources)","description":"io.github.thibaultbee.streampack.screenrecorder.Configuration.Muxer","location":"demo-screenrecorder/io.github.thibaultbee.streampack.screenrecorder/-configuration/-muxer/index.html","searchKeys":["Muxer","class Muxer(sharedPref: SharedPreferences, resources: Resources)","io.github.thibaultbee.streampack.screenrecorder.Configuration.Muxer"]},{"name":"class RtmpConnection(sharedPref: SharedPreferences, resources: Resources)","description":"io.github.thibaultbee.streampack.screenrecorder.Configuration.Endpoint.RtmpConnection","location":"demo-screenrecorder/io.github.thibaultbee.streampack.screenrecorder/-configuration/-endpoint/-rtmp-connection/index.html","searchKeys":["RtmpConnection","class RtmpConnection(sharedPref: SharedPreferences, resources: Resources)","io.github.thibaultbee.streampack.screenrecorder.Configuration.Endpoint.RtmpConnection"]},{"name":"class RtmpEndpoint : Endpoint","description":"io.github.thibaultbee.streampack.screenrecorder.models.Endpoint.RtmpEndpoint","location":"demo-screenrecorder/io.github.thibaultbee.streampack.screenrecorder.models/-endpoint/-rtmp-endpoint/index.html","searchKeys":["RtmpEndpoint","class RtmpEndpoint : Endpoint","io.github.thibaultbee.streampack.screenrecorder.models.Endpoint.RtmpEndpoint"]},{"name":"class SettingsActivity : AppCompatActivity","description":"io.github.thibaultbee.streampack.screenrecorder.settings.SettingsActivity","location":"demo-screenrecorder/io.github.thibaultbee.streampack.screenrecorder.settings/-settings-activity/index.html","searchKeys":["SettingsActivity","class SettingsActivity : AppCompatActivity","io.github.thibaultbee.streampack.screenrecorder.settings.SettingsActivity"]},{"name":"class SettingsFragment : PreferenceFragmentCompat","description":"io.github.thibaultbee.streampack.screenrecorder.settings.SettingsFragment","location":"demo-screenrecorder/io.github.thibaultbee.streampack.screenrecorder.settings/-settings-fragment/index.html","searchKeys":["SettingsFragment","class SettingsFragment : PreferenceFragmentCompat","io.github.thibaultbee.streampack.screenrecorder.settings.SettingsFragment"]},{"name":"class SrtConnection(sharedPref: SharedPreferences, resources: Resources)","description":"io.github.thibaultbee.streampack.screenrecorder.Configuration.Endpoint.SrtConnection","location":"demo-screenrecorder/io.github.thibaultbee.streampack.screenrecorder/-configuration/-endpoint/-srt-connection/index.html","searchKeys":["SrtConnection","class SrtConnection(sharedPref: SharedPreferences, resources: Resources)","io.github.thibaultbee.streampack.screenrecorder.Configuration.Endpoint.SrtConnection"]},{"name":"class SrtEndpoint : Endpoint","description":"io.github.thibaultbee.streampack.screenrecorder.models.Endpoint.SrtEndpoint","location":"demo-screenrecorder/io.github.thibaultbee.streampack.screenrecorder.models/-endpoint/-srt-endpoint/index.html","searchKeys":["SrtEndpoint","class SrtEndpoint : Endpoint","io.github.thibaultbee.streampack.screenrecorder.models.Endpoint.SrtEndpoint"]},{"name":"class Video(sharedPref: SharedPreferences, resources: Resources)","description":"io.github.thibaultbee.streampack.screenrecorder.Configuration.Video","location":"demo-screenrecorder/io.github.thibaultbee.streampack.screenrecorder/-configuration/-video/index.html","searchKeys":["Video","class Video(sharedPref: SharedPreferences, resources: Resources)","io.github.thibaultbee.streampack.screenrecorder.Configuration.Video"]},{"name":"constructor()","description":"io.github.thibaultbee.streampack.screenrecorder.MainActivity.MainActivity","location":"demo-screenrecorder/io.github.thibaultbee.streampack.screenrecorder/-main-activity/-main-activity.html","searchKeys":["MainActivity","constructor()","io.github.thibaultbee.streampack.screenrecorder.MainActivity.MainActivity"]},{"name":"constructor()","description":"io.github.thibaultbee.streampack.screenrecorder.models.Endpoint.RtmpEndpoint.RtmpEndpoint","location":"demo-screenrecorder/io.github.thibaultbee.streampack.screenrecorder.models/-endpoint/-rtmp-endpoint/-rtmp-endpoint.html","searchKeys":["RtmpEndpoint","constructor()","io.github.thibaultbee.streampack.screenrecorder.models.Endpoint.RtmpEndpoint.RtmpEndpoint"]},{"name":"constructor()","description":"io.github.thibaultbee.streampack.screenrecorder.models.Endpoint.SrtEndpoint.SrtEndpoint","location":"demo-screenrecorder/io.github.thibaultbee.streampack.screenrecorder.models/-endpoint/-srt-endpoint/-srt-endpoint.html","searchKeys":["SrtEndpoint","constructor()","io.github.thibaultbee.streampack.screenrecorder.models.Endpoint.SrtEndpoint.SrtEndpoint"]},{"name":"constructor()","description":"io.github.thibaultbee.streampack.screenrecorder.services.DemoMediaProjectionService.DemoMediaProjectionService","location":"demo-screenrecorder/io.github.thibaultbee.streampack.screenrecorder.services/-demo-media-projection-service/-demo-media-projection-service.html","searchKeys":["DemoMediaProjectionService","constructor()","io.github.thibaultbee.streampack.screenrecorder.services.DemoMediaProjectionService.DemoMediaProjectionService"]},{"name":"constructor()","description":"io.github.thibaultbee.streampack.screenrecorder.settings.SettingsActivity.SettingsActivity","location":"demo-screenrecorder/io.github.thibaultbee.streampack.screenrecorder.settings/-settings-activity/-settings-activity.html","searchKeys":["SettingsActivity","constructor()","io.github.thibaultbee.streampack.screenrecorder.settings.SettingsActivity.SettingsActivity"]},{"name":"constructor()","description":"io.github.thibaultbee.streampack.screenrecorder.settings.SettingsFragment.SettingsFragment","location":"demo-screenrecorder/io.github.thibaultbee.streampack.screenrecorder.settings/-settings-fragment/-settings-fragment.html","searchKeys":["SettingsFragment","constructor()","io.github.thibaultbee.streampack.screenrecorder.settings.SettingsFragment.SettingsFragment"]},{"name":"constructor(context: Context)","description":"io.github.thibaultbee.streampack.screenrecorder.Configuration.Configuration","location":"demo-screenrecorder/io.github.thibaultbee.streampack.screenrecorder/-configuration/-configuration.html","searchKeys":["Configuration","constructor(context: Context)","io.github.thibaultbee.streampack.screenrecorder.Configuration.Configuration"]},{"name":"constructor(sharedPref: SharedPreferences, resources: Resources)","description":"io.github.thibaultbee.streampack.screenrecorder.Configuration.Audio.Audio","location":"demo-screenrecorder/io.github.thibaultbee.streampack.screenrecorder/-configuration/-audio/-audio.html","searchKeys":["Audio","constructor(sharedPref: SharedPreferences, resources: Resources)","io.github.thibaultbee.streampack.screenrecorder.Configuration.Audio.Audio"]},{"name":"constructor(sharedPref: SharedPreferences, resources: Resources)","description":"io.github.thibaultbee.streampack.screenrecorder.Configuration.Endpoint.Endpoint","location":"demo-screenrecorder/io.github.thibaultbee.streampack.screenrecorder/-configuration/-endpoint/-endpoint.html","searchKeys":["Endpoint","constructor(sharedPref: SharedPreferences, resources: Resources)","io.github.thibaultbee.streampack.screenrecorder.Configuration.Endpoint.Endpoint"]},{"name":"constructor(sharedPref: SharedPreferences, resources: Resources)","description":"io.github.thibaultbee.streampack.screenrecorder.Configuration.Endpoint.RtmpConnection.RtmpConnection","location":"demo-screenrecorder/io.github.thibaultbee.streampack.screenrecorder/-configuration/-endpoint/-rtmp-connection/-rtmp-connection.html","searchKeys":["RtmpConnection","constructor(sharedPref: SharedPreferences, resources: Resources)","io.github.thibaultbee.streampack.screenrecorder.Configuration.Endpoint.RtmpConnection.RtmpConnection"]},{"name":"constructor(sharedPref: SharedPreferences, resources: Resources)","description":"io.github.thibaultbee.streampack.screenrecorder.Configuration.Endpoint.SrtConnection.SrtConnection","location":"demo-screenrecorder/io.github.thibaultbee.streampack.screenrecorder/-configuration/-endpoint/-srt-connection/-srt-connection.html","searchKeys":["SrtConnection","constructor(sharedPref: SharedPreferences, resources: Resources)","io.github.thibaultbee.streampack.screenrecorder.Configuration.Endpoint.SrtConnection.SrtConnection"]},{"name":"constructor(sharedPref: SharedPreferences, resources: Resources)","description":"io.github.thibaultbee.streampack.screenrecorder.Configuration.Muxer.Muxer","location":"demo-screenrecorder/io.github.thibaultbee.streampack.screenrecorder/-configuration/-muxer/-muxer.html","searchKeys":["Muxer","constructor(sharedPref: SharedPreferences, resources: Resources)","io.github.thibaultbee.streampack.screenrecorder.Configuration.Muxer.Muxer"]},{"name":"constructor(sharedPref: SharedPreferences, resources: Resources)","description":"io.github.thibaultbee.streampack.screenrecorder.Configuration.Video.Video","location":"demo-screenrecorder/io.github.thibaultbee.streampack.screenrecorder/-configuration/-video/-video.html","searchKeys":["Video","constructor(sharedPref: SharedPreferences, resources: Resources)","io.github.thibaultbee.streampack.screenrecorder.Configuration.Video.Video"]},{"name":"constructor(type: EndpointType)","description":"io.github.thibaultbee.streampack.screenrecorder.models.EndpointFactory.EndpointFactory","location":"demo-screenrecorder/io.github.thibaultbee.streampack.screenrecorder.models/-endpoint-factory/-endpoint-factory.html","searchKeys":["EndpointFactory","constructor(type: EndpointType)","io.github.thibaultbee.streampack.screenrecorder.models.EndpointFactory.EndpointFactory"]},{"name":"enum Actions : Enum<Actions> ","description":"io.github.thibaultbee.streampack.screenrecorder.models.Actions","location":"demo-screenrecorder/io.github.thibaultbee.streampack.screenrecorder.models/-actions/index.html","searchKeys":["Actions","enum Actions : Enum<Actions> ","io.github.thibaultbee.streampack.screenrecorder.models.Actions"]},{"name":"enum EndpointType : Enum<EndpointType> ","description":"io.github.thibaultbee.streampack.screenrecorder.models.EndpointType","location":"demo-screenrecorder/io.github.thibaultbee.streampack.screenrecorder.models/-endpoint-type/index.html","searchKeys":["EndpointType","enum EndpointType : Enum<EndpointType> ","io.github.thibaultbee.streampack.screenrecorder.models.EndpointType"]},{"name":"fun build(): Endpoint","description":"io.github.thibaultbee.streampack.screenrecorder.models.EndpointFactory.build","location":"demo-screenrecorder/io.github.thibaultbee.streampack.screenrecorder.models/-endpoint-factory/build.html","searchKeys":["build","fun build(): Endpoint","io.github.thibaultbee.streampack.screenrecorder.models.EndpointFactory.build"]},{"name":"fun fromId(id: Int): EndpointType","description":"io.github.thibaultbee.streampack.screenrecorder.models.EndpointType.Companion.fromId","location":"demo-screenrecorder/io.github.thibaultbee.streampack.screenrecorder.models/-endpoint-type/-companion/from-id.html","searchKeys":["fromId","fun fromId(id: Int): EndpointType","io.github.thibaultbee.streampack.screenrecorder.models.EndpointType.Companion.fromId"]},{"name":"fun valueOf(value: String): Actions","description":"io.github.thibaultbee.streampack.screenrecorder.models.Actions.valueOf","location":"demo-screenrecorder/io.github.thibaultbee.streampack.screenrecorder.models/-actions/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): Actions","io.github.thibaultbee.streampack.screenrecorder.models.Actions.valueOf"]},{"name":"fun valueOf(value: String): EndpointType","description":"io.github.thibaultbee.streampack.screenrecorder.models.EndpointType.valueOf","location":"demo-screenrecorder/io.github.thibaultbee.streampack.screenrecorder.models/-endpoint-type/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): EndpointType","io.github.thibaultbee.streampack.screenrecorder.models.EndpointType.valueOf"]},{"name":"fun values(): Array<Actions>","description":"io.github.thibaultbee.streampack.screenrecorder.models.Actions.values","location":"demo-screenrecorder/io.github.thibaultbee.streampack.screenrecorder.models/-actions/values.html","searchKeys":["values","fun values(): Array<Actions>","io.github.thibaultbee.streampack.screenrecorder.models.Actions.values"]},{"name":"fun values(): Array<EndpointType>","description":"io.github.thibaultbee.streampack.screenrecorder.models.EndpointType.values","location":"demo-screenrecorder/io.github.thibaultbee.streampack.screenrecorder.models/-endpoint-type/values.html","searchKeys":["values","fun values(): Array<EndpointType>","io.github.thibaultbee.streampack.screenrecorder.models.EndpointType.values"]},{"name":"object Companion","description":"io.github.thibaultbee.streampack.screenrecorder.MainActivity.Companion","location":"demo-screenrecorder/io.github.thibaultbee.streampack.screenrecorder/-main-activity/-companion/index.html","searchKeys":["Companion","object Companion","io.github.thibaultbee.streampack.screenrecorder.MainActivity.Companion"]},{"name":"object Companion","description":"io.github.thibaultbee.streampack.screenrecorder.models.EndpointType.Companion","location":"demo-screenrecorder/io.github.thibaultbee.streampack.screenrecorder.models/-endpoint-type/-companion/index.html","searchKeys":["Companion","object Companion","io.github.thibaultbee.streampack.screenrecorder.models.EndpointType.Companion"]},{"name":"object Companion","description":"io.github.thibaultbee.streampack.screenrecorder.services.DemoMediaProjectionService.Companion","location":"demo-screenrecorder/io.github.thibaultbee.streampack.screenrecorder.services/-demo-media-projection-service/-companion/index.html","searchKeys":["Companion","object Companion","io.github.thibaultbee.streampack.screenrecorder.services.DemoMediaProjectionService.Companion"]},{"name":"open override fun onCreateOptionsMenu(menu: Menu): Boolean","description":"io.github.thibaultbee.streampack.screenrecorder.MainActivity.onCreateOptionsMenu","location":"demo-screenrecorder/io.github.thibaultbee.streampack.screenrecorder/-main-activity/on-create-options-menu.html","searchKeys":["onCreateOptionsMenu","open override fun onCreateOptionsMenu(menu: Menu): Boolean","io.github.thibaultbee.streampack.screenrecorder.MainActivity.onCreateOptionsMenu"]},{"name":"open override fun onCreatePreferences(savedInstanceState: Bundle?, rootKey: String?)","description":"io.github.thibaultbee.streampack.screenrecorder.settings.SettingsFragment.onCreatePreferences","location":"demo-screenrecorder/io.github.thibaultbee.streampack.screenrecorder.settings/-settings-fragment/on-create-preferences.html","searchKeys":["onCreatePreferences","open override fun onCreatePreferences(savedInstanceState: Bundle?, rootKey: String?)","io.github.thibaultbee.streampack.screenrecorder.settings.SettingsFragment.onCreatePreferences"]},{"name":"open override fun onResume()","description":"io.github.thibaultbee.streampack.screenrecorder.settings.SettingsFragment.onResume","location":"demo-screenrecorder/io.github.thibaultbee.streampack.screenrecorder.settings/-settings-fragment/on-resume.html","searchKeys":["onResume","open override fun onResume()","io.github.thibaultbee.streampack.screenrecorder.settings.SettingsFragment.onResume"]},{"name":"open override fun onStartCommand(intent: Intent?, flags: Int, startId: Int): Int","description":"io.github.thibaultbee.streampack.screenrecorder.services.DemoMediaProjectionService.onStartCommand","location":"demo-screenrecorder/io.github.thibaultbee.streampack.screenrecorder.services/-demo-media-projection-service/on-start-command.html","searchKeys":["onStartCommand","open override fun onStartCommand(intent: Intent?, flags: Int, startId: Int): Int","io.github.thibaultbee.streampack.screenrecorder.services.DemoMediaProjectionService.onStartCommand"]},{"name":"protected constructor(hasTSCapabilities: Boolean, hasFLVCapabilities: Boolean, hasSrtCapabilities: Boolean, hasRtmpCapabilities: Boolean)","description":"io.github.thibaultbee.streampack.screenrecorder.models.Endpoint.Endpoint","location":"demo-screenrecorder/io.github.thibaultbee.streampack.screenrecorder.models/-endpoint/-endpoint.html","searchKeys":["Endpoint","protected constructor(hasTSCapabilities: Boolean, hasFLVCapabilities: Boolean, hasSrtCapabilities: Boolean, hasRtmpCapabilities: Boolean)","io.github.thibaultbee.streampack.screenrecorder.models.Endpoint.Endpoint"]},{"name":"protected open override fun createDefaultAudioSource(mediaProjection: MediaProjection, extras: Bundle): IAudioSourceInternal.Factory","description":"io.github.thibaultbee.streampack.screenrecorder.services.DemoMediaProjectionService.createDefaultAudioSource","location":"demo-screenrecorder/io.github.thibaultbee.streampack.screenrecorder.services/-demo-media-projection-service/create-default-audio-source.html","searchKeys":["createDefaultAudioSource","protected open override fun createDefaultAudioSource(mediaProjection: MediaProjection, extras: Bundle): IAudioSourceInternal.Factory","io.github.thibaultbee.streampack.screenrecorder.services.DemoMediaProjectionService.createDefaultAudioSource"]},{"name":"protected open override fun onCreate(savedInstanceState: Bundle?)","description":"io.github.thibaultbee.streampack.screenrecorder.MainActivity.onCreate","location":"demo-screenrecorder/io.github.thibaultbee.streampack.screenrecorder/-main-activity/on-create.html","searchKeys":["onCreate","protected open override fun onCreate(savedInstanceState: Bundle?)","io.github.thibaultbee.streampack.screenrecorder.MainActivity.onCreate"]},{"name":"protected open override fun onCreate(savedInstanceState: Bundle?)","description":"io.github.thibaultbee.streampack.screenrecorder.settings.SettingsActivity.onCreate","location":"demo-screenrecorder/io.github.thibaultbee.streampack.screenrecorder.settings/-settings-activity/on-create.html","searchKeys":["onCreate","protected open override fun onCreate(savedInstanceState: Bundle?)","io.github.thibaultbee.streampack.screenrecorder.settings.SettingsActivity.onCreate"]},{"name":"protected open override fun onDestroy()","description":"io.github.thibaultbee.streampack.screenrecorder.MainActivity.onDestroy","location":"demo-screenrecorder/io.github.thibaultbee.streampack.screenrecorder/-main-activity/on-destroy.html","searchKeys":["onDestroy","protected open override fun onDestroy()","io.github.thibaultbee.streampack.screenrecorder.MainActivity.onDestroy"]},{"name":"protected open override fun onOpenNotification(): Notification","description":"io.github.thibaultbee.streampack.screenrecorder.services.DemoMediaProjectionService.onOpenNotification","location":"demo-screenrecorder/io.github.thibaultbee.streampack.screenrecorder.services/-demo-media-projection-service/on-open-notification.html","searchKeys":["onOpenNotification","protected open override fun onOpenNotification(): Notification","io.github.thibaultbee.streampack.screenrecorder.services.DemoMediaProjectionService.onOpenNotification"]},{"name":"protected open override fun onResume()","description":"io.github.thibaultbee.streampack.screenrecorder.MainActivity.onResume","location":"demo-screenrecorder/io.github.thibaultbee.streampack.screenrecorder/-main-activity/on-resume.html","searchKeys":["onResume","protected open override fun onResume()","io.github.thibaultbee.streampack.screenrecorder.MainActivity.onResume"]},{"name":"sealed class Endpoint(val hasTSCapabilities: Boolean, val hasFLVCapabilities: Boolean, val hasSrtCapabilities: Boolean, val hasRtmpCapabilities: Boolean)","description":"io.github.thibaultbee.streampack.screenrecorder.models.Endpoint","location":"demo-screenrecorder/io.github.thibaultbee.streampack.screenrecorder.models/-endpoint/index.html","searchKeys":["Endpoint","sealed class Endpoint(val hasTSCapabilities: Boolean, val hasFLVCapabilities: Boolean, val hasSrtCapabilities: Boolean, val hasRtmpCapabilities: Boolean)","io.github.thibaultbee.streampack.screenrecorder.models.Endpoint"]},{"name":"val audio: Configuration.Audio","description":"io.github.thibaultbee.streampack.screenrecorder.Configuration.audio","location":"demo-screenrecorder/io.github.thibaultbee.streampack.screenrecorder/-configuration/audio.html","searchKeys":["audio","val audio: Configuration.Audio","io.github.thibaultbee.streampack.screenrecorder.Configuration.audio"]},{"name":"val byteFormat: Int = 2","description":"io.github.thibaultbee.streampack.screenrecorder.Configuration.Audio.byteFormat","location":"demo-screenrecorder/io.github.thibaultbee.streampack.screenrecorder/-configuration/-audio/byte-format.html","searchKeys":["byteFormat","val byteFormat: Int = 2","io.github.thibaultbee.streampack.screenrecorder.Configuration.Audio.byteFormat"]},{"name":"val endpoint: Configuration.Endpoint","description":"io.github.thibaultbee.streampack.screenrecorder.Configuration.endpoint","location":"demo-screenrecorder/io.github.thibaultbee.streampack.screenrecorder/-configuration/endpoint.html","searchKeys":["endpoint","val endpoint: Configuration.Endpoint","io.github.thibaultbee.streampack.screenrecorder.Configuration.endpoint"]},{"name":"val entries: EnumEntries<Actions>","description":"io.github.thibaultbee.streampack.screenrecorder.models.Actions.entries","location":"demo-screenrecorder/io.github.thibaultbee.streampack.screenrecorder.models/-actions/entries.html","searchKeys":["entries","val entries: EnumEntries<Actions>","io.github.thibaultbee.streampack.screenrecorder.models.Actions.entries"]},{"name":"val entries: EnumEntries<EndpointType>","description":"io.github.thibaultbee.streampack.screenrecorder.models.EndpointType.entries","location":"demo-screenrecorder/io.github.thibaultbee.streampack.screenrecorder.models/-endpoint-type/entries.html","searchKeys":["entries","val entries: EnumEntries<EndpointType>","io.github.thibaultbee.streampack.screenrecorder.models.EndpointType.entries"]},{"name":"val hasFLVCapabilities: Boolean","description":"io.github.thibaultbee.streampack.screenrecorder.models.Endpoint.hasFLVCapabilities","location":"demo-screenrecorder/io.github.thibaultbee.streampack.screenrecorder.models/-endpoint/has-f-l-v-capabilities.html","searchKeys":["hasFLVCapabilities","val hasFLVCapabilities: Boolean","io.github.thibaultbee.streampack.screenrecorder.models.Endpoint.hasFLVCapabilities"]},{"name":"val hasRtmpCapabilities: Boolean","description":"io.github.thibaultbee.streampack.screenrecorder.models.Endpoint.hasRtmpCapabilities","location":"demo-screenrecorder/io.github.thibaultbee.streampack.screenrecorder.models/-endpoint/has-rtmp-capabilities.html","searchKeys":["hasRtmpCapabilities","val hasRtmpCapabilities: Boolean","io.github.thibaultbee.streampack.screenrecorder.models.Endpoint.hasRtmpCapabilities"]},{"name":"val hasSrtCapabilities: Boolean","description":"io.github.thibaultbee.streampack.screenrecorder.models.Endpoint.hasSrtCapabilities","location":"demo-screenrecorder/io.github.thibaultbee.streampack.screenrecorder.models/-endpoint/has-srt-capabilities.html","searchKeys":["hasSrtCapabilities","val hasSrtCapabilities: Boolean","io.github.thibaultbee.streampack.screenrecorder.models.Endpoint.hasSrtCapabilities"]},{"name":"val hasTSCapabilities: Boolean","description":"io.github.thibaultbee.streampack.screenrecorder.models.Endpoint.hasTSCapabilities","location":"demo-screenrecorder/io.github.thibaultbee.streampack.screenrecorder.models/-endpoint/has-t-s-capabilities.html","searchKeys":["hasTSCapabilities","val hasTSCapabilities: Boolean","io.github.thibaultbee.streampack.screenrecorder.models.Endpoint.hasTSCapabilities"]},{"name":"val id: Int","description":"io.github.thibaultbee.streampack.screenrecorder.models.EndpointType.id","location":"demo-screenrecorder/io.github.thibaultbee.streampack.screenrecorder.models/-endpoint-type/id.html","searchKeys":["id","val id: Int","io.github.thibaultbee.streampack.screenrecorder.models.EndpointType.id"]},{"name":"val muxer: Configuration.Muxer","description":"io.github.thibaultbee.streampack.screenrecorder.Configuration.muxer","location":"demo-screenrecorder/io.github.thibaultbee.streampack.screenrecorder/-configuration/muxer.html","searchKeys":["muxer","val muxer: Configuration.Muxer","io.github.thibaultbee.streampack.screenrecorder.Configuration.muxer"]},{"name":"val rtmp: Configuration.Endpoint.RtmpConnection","description":"io.github.thibaultbee.streampack.screenrecorder.Configuration.Endpoint.rtmp","location":"demo-screenrecorder/io.github.thibaultbee.streampack.screenrecorder/-configuration/-endpoint/rtmp.html","searchKeys":["rtmp","val rtmp: Configuration.Endpoint.RtmpConnection","io.github.thibaultbee.streampack.screenrecorder.Configuration.Endpoint.rtmp"]},{"name":"val srt: Configuration.Endpoint.SrtConnection","description":"io.github.thibaultbee.streampack.screenrecorder.Configuration.Endpoint.srt","location":"demo-screenrecorder/io.github.thibaultbee.streampack.screenrecorder/-configuration/-endpoint/srt.html","searchKeys":["srt","val srt: Configuration.Endpoint.SrtConnection","io.github.thibaultbee.streampack.screenrecorder.Configuration.Endpoint.srt"]},{"name":"val type: EndpointType","description":"io.github.thibaultbee.streampack.screenrecorder.Configuration.Endpoint.type","location":"demo-screenrecorder/io.github.thibaultbee.streampack.screenrecorder/-configuration/-endpoint/type.html","searchKeys":["type","val type: EndpointType","io.github.thibaultbee.streampack.screenrecorder.Configuration.Endpoint.type"]},{"name":"val value: String","description":"io.github.thibaultbee.streampack.screenrecorder.models.Actions.value","location":"demo-screenrecorder/io.github.thibaultbee.streampack.screenrecorder.models/-actions/value.html","searchKeys":["value","val value: String","io.github.thibaultbee.streampack.screenrecorder.models.Actions.value"]},{"name":"val video: Configuration.Video","description":"io.github.thibaultbee.streampack.screenrecorder.Configuration.video","location":"demo-screenrecorder/io.github.thibaultbee.streampack.screenrecorder/-configuration/video.html","searchKeys":["video","val video: Configuration.Video","io.github.thibaultbee.streampack.screenrecorder.Configuration.video"]},{"name":"var bitrate: Int","description":"io.github.thibaultbee.streampack.screenrecorder.Configuration.Audio.bitrate","location":"demo-screenrecorder/io.github.thibaultbee.streampack.screenrecorder/-configuration/-audio/bitrate.html","searchKeys":["bitrate","var bitrate: Int","io.github.thibaultbee.streampack.screenrecorder.Configuration.Audio.bitrate"]},{"name":"var bitrate: Int","description":"io.github.thibaultbee.streampack.screenrecorder.Configuration.Video.bitrate","location":"demo-screenrecorder/io.github.thibaultbee.streampack.screenrecorder/-configuration/-video/bitrate.html","searchKeys":["bitrate","var bitrate: Int","io.github.thibaultbee.streampack.screenrecorder.Configuration.Video.bitrate"]},{"name":"var encoder: String","description":"io.github.thibaultbee.streampack.screenrecorder.Configuration.Audio.encoder","location":"demo-screenrecorder/io.github.thibaultbee.streampack.screenrecorder/-configuration/-audio/encoder.html","searchKeys":["encoder","var encoder: String","io.github.thibaultbee.streampack.screenrecorder.Configuration.Audio.encoder"]},{"name":"var encoder: String","description":"io.github.thibaultbee.streampack.screenrecorder.Configuration.Video.encoder","location":"demo-screenrecorder/io.github.thibaultbee.streampack.screenrecorder/-configuration/-video/encoder.html","searchKeys":["encoder","var encoder: String","io.github.thibaultbee.streampack.screenrecorder.Configuration.Video.encoder"]},{"name":"var ip: String","description":"io.github.thibaultbee.streampack.screenrecorder.Configuration.Endpoint.SrtConnection.ip","location":"demo-screenrecorder/io.github.thibaultbee.streampack.screenrecorder/-configuration/-endpoint/-srt-connection/ip.html","searchKeys":["ip","var ip: String","io.github.thibaultbee.streampack.screenrecorder.Configuration.Endpoint.SrtConnection.ip"]},{"name":"var numberOfChannels: Int","description":"io.github.thibaultbee.streampack.screenrecorder.Configuration.Audio.numberOfChannels","location":"demo-screenrecorder/io.github.thibaultbee.streampack.screenrecorder/-configuration/-audio/number-of-channels.html","searchKeys":["numberOfChannels","var numberOfChannels: Int","io.github.thibaultbee.streampack.screenrecorder.Configuration.Audio.numberOfChannels"]},{"name":"var passPhrase: String","description":"io.github.thibaultbee.streampack.screenrecorder.Configuration.Endpoint.SrtConnection.passPhrase","location":"demo-screenrecorder/io.github.thibaultbee.streampack.screenrecorder/-configuration/-endpoint/-srt-connection/pass-phrase.html","searchKeys":["passPhrase","var passPhrase: String","io.github.thibaultbee.streampack.screenrecorder.Configuration.Endpoint.SrtConnection.passPhrase"]},{"name":"var port: Int","description":"io.github.thibaultbee.streampack.screenrecorder.Configuration.Endpoint.SrtConnection.port","location":"demo-screenrecorder/io.github.thibaultbee.streampack.screenrecorder/-configuration/-endpoint/-srt-connection/port.html","searchKeys":["port","var port: Int","io.github.thibaultbee.streampack.screenrecorder.Configuration.Endpoint.SrtConnection.port"]},{"name":"var provider: String","description":"io.github.thibaultbee.streampack.screenrecorder.Configuration.Muxer.provider","location":"demo-screenrecorder/io.github.thibaultbee.streampack.screenrecorder/-configuration/-muxer/provider.html","searchKeys":["provider","var provider: String","io.github.thibaultbee.streampack.screenrecorder.Configuration.Muxer.provider"]},{"name":"var resolution: Size","description":"io.github.thibaultbee.streampack.screenrecorder.Configuration.Video.resolution","location":"demo-screenrecorder/io.github.thibaultbee.streampack.screenrecorder/-configuration/-video/resolution.html","searchKeys":["resolution","var resolution: Size","io.github.thibaultbee.streampack.screenrecorder.Configuration.Video.resolution"]},{"name":"var sampleRate: Int","description":"io.github.thibaultbee.streampack.screenrecorder.Configuration.Audio.sampleRate","location":"demo-screenrecorder/io.github.thibaultbee.streampack.screenrecorder/-configuration/-audio/sample-rate.html","searchKeys":["sampleRate","var sampleRate: Int","io.github.thibaultbee.streampack.screenrecorder.Configuration.Audio.sampleRate"]},{"name":"var service: String","description":"io.github.thibaultbee.streampack.screenrecorder.Configuration.Muxer.service","location":"demo-screenrecorder/io.github.thibaultbee.streampack.screenrecorder/-configuration/-muxer/service.html","searchKeys":["service","var service: String","io.github.thibaultbee.streampack.screenrecorder.Configuration.Muxer.service"]},{"name":"var streamID: String","description":"io.github.thibaultbee.streampack.screenrecorder.Configuration.Endpoint.SrtConnection.streamID","location":"demo-screenrecorder/io.github.thibaultbee.streampack.screenrecorder/-configuration/-endpoint/-srt-connection/stream-i-d.html","searchKeys":["streamID","var streamID: String","io.github.thibaultbee.streampack.screenrecorder.Configuration.Endpoint.SrtConnection.streamID"]},{"name":"var url: String","description":"io.github.thibaultbee.streampack.screenrecorder.Configuration.Endpoint.RtmpConnection.url","location":"demo-screenrecorder/io.github.thibaultbee.streampack.screenrecorder/-configuration/-endpoint/-rtmp-connection/url.html","searchKeys":["url","var url: String","io.github.thibaultbee.streampack.screenrecorder.Configuration.Endpoint.RtmpConnection.url"]},{"name":"abstract class SrtBitrateRegulator(bitrateRegulatorConfig: BitrateRegulatorConfig, onVideoTargetBitrateChange: (Int) -> Unit, onAudioTargetBitrateChange: (Int) -> Unit) : BitrateRegulator","description":"io.github.thibaultbee.streampack.ext.srt.regulator.SrtBitrateRegulator","location":"streampack-srt/io.github.thibaultbee.streampack.ext.srt.regulator/-srt-bitrate-regulator/index.html","searchKeys":["SrtBitrateRegulator","abstract class SrtBitrateRegulator(bitrateRegulatorConfig: BitrateRegulatorConfig, onVideoTargetBitrateChange: (Int) -> Unit, onAudioTargetBitrateChange: (Int) -> Unit) : BitrateRegulator","io.github.thibaultbee.streampack.ext.srt.regulator.SrtBitrateRegulator"]},{"name":"abstract fun update(stats: Stats, currentVideoBitrate: Int, currentAudioBitrate: Int)","description":"io.github.thibaultbee.streampack.ext.srt.regulator.SrtBitrateRegulator.update","location":"streampack-srt/io.github.thibaultbee.streampack.ext.srt.regulator/-srt-bitrate-regulator/update.html","searchKeys":["update","abstract fun update(stats: Stats, currentVideoBitrate: Int, currentAudioBitrate: Int)","io.github.thibaultbee.streampack.ext.srt.regulator.SrtBitrateRegulator.update"]},{"name":"abstract override fun newBitrateRegulator(bitrateRegulatorConfig: BitrateRegulatorConfig, onVideoTargetBitrateChange: (Int) -> Unit, onAudioTargetBitrateChange: (Int) -> Unit): SrtBitrateRegulator","description":"io.github.thibaultbee.streampack.ext.srt.regulator.SrtBitrateRegulator.Factory.newBitrateRegulator","location":"streampack-srt/io.github.thibaultbee.streampack.ext.srt.regulator/-srt-bitrate-regulator/-factory/new-bitrate-regulator.html","searchKeys":["newBitrateRegulator","abstract override fun newBitrateRegulator(bitrateRegulatorConfig: BitrateRegulatorConfig, onVideoTargetBitrateChange: (Int) -> Unit, onAudioTargetBitrateChange: (Int) -> Unit): SrtBitrateRegulator","io.github.thibaultbee.streampack.ext.srt.regulator.SrtBitrateRegulator.Factory.newBitrateRegulator"]},{"name":"class DefaultSrtBitrateRegulator(bitrateRegulatorConfig: BitrateRegulatorConfig, onVideoTargetBitrateChange: (Int) -> Unit, onAudioTargetBitrateChange: (Int) -> Unit) : SrtBitrateRegulator","description":"io.github.thibaultbee.streampack.ext.srt.regulator.DefaultSrtBitrateRegulator","location":"streampack-srt/io.github.thibaultbee.streampack.ext.srt.regulator/-default-srt-bitrate-regulator/index.html","searchKeys":["DefaultSrtBitrateRegulator","class DefaultSrtBitrateRegulator(bitrateRegulatorConfig: BitrateRegulatorConfig, onVideoTargetBitrateChange: (Int) -> Unit, onAudioTargetBitrateChange: (Int) -> Unit) : SrtBitrateRegulator","io.github.thibaultbee.streampack.ext.srt.regulator.DefaultSrtBitrateRegulator"]},{"name":"class DefaultSrtBitrateRegulatorController","description":"io.github.thibaultbee.streampack.ext.srt.regulator.controllers.DefaultSrtBitrateRegulatorController","location":"streampack-srt/io.github.thibaultbee.streampack.ext.srt.regulator.controllers/-default-srt-bitrate-regulator-controller/index.html","searchKeys":["DefaultSrtBitrateRegulatorController","class DefaultSrtBitrateRegulatorController","io.github.thibaultbee.streampack.ext.srt.regulator.controllers.DefaultSrtBitrateRegulatorController"]},{"name":"class Factory : SrtBitrateRegulator.Factory","description":"io.github.thibaultbee.streampack.ext.srt.regulator.DefaultSrtBitrateRegulator.Factory","location":"streampack-srt/io.github.thibaultbee.streampack.ext.srt.regulator/-default-srt-bitrate-regulator/-factory/index.html","searchKeys":["Factory","class Factory : SrtBitrateRegulator.Factory","io.github.thibaultbee.streampack.ext.srt.regulator.DefaultSrtBitrateRegulator.Factory"]},{"name":"class Factory(bitrateRegulatorFactory: SrtBitrateRegulator.Factory = DefaultSrtBitrateRegulator.Factory(), bitrateRegulatorConfig: BitrateRegulatorConfig = BitrateRegulatorConfig(), delayTimeInMs: Long = 500) : BitrateRegulatorController.Factory","description":"io.github.thibaultbee.streampack.ext.srt.regulator.controllers.DefaultSrtBitrateRegulatorController.Factory","location":"streampack-srt/io.github.thibaultbee.streampack.ext.srt.regulator.controllers/-default-srt-bitrate-regulator-controller/-factory/index.html","searchKeys":["Factory","class Factory(bitrateRegulatorFactory: SrtBitrateRegulator.Factory = DefaultSrtBitrateRegulator.Factory(), bitrateRegulatorConfig: BitrateRegulatorConfig = BitrateRegulatorConfig(), delayTimeInMs: Long = 500) : BitrateRegulatorController.Factory","io.github.thibaultbee.streampack.ext.srt.regulator.controllers.DefaultSrtBitrateRegulatorController.Factory"]},{"name":"class SrtMediaDescriptor(val srtUrl: SrtUrl, serviceInfo: TSServiceInfo = createDefaultTsServiceInfo()) : MediaDescriptor","description":"io.github.thibaultbee.streampack.ext.srt.data.mediadescriptor.SrtMediaDescriptor","location":"streampack-srt/io.github.thibaultbee.streampack.ext.srt.data.mediadescriptor/-srt-media-descriptor/index.html","searchKeys":["SrtMediaDescriptor","class SrtMediaDescriptor(val srtUrl: SrtUrl, serviceInfo: TSServiceInfo = createDefaultTsServiceInfo()) : MediaDescriptor","io.github.thibaultbee.streampack.ext.srt.data.mediadescriptor.SrtMediaDescriptor"]},{"name":"class SrtSink : AbstractSink","description":"io.github.thibaultbee.streampack.ext.srt.elements.endpoints.composites.sinks.SrtSink","location":"streampack-srt/io.github.thibaultbee.streampack.ext.srt.elements.endpoints.composites.sinks/-srt-sink/index.html","searchKeys":["SrtSink","class SrtSink : AbstractSink","io.github.thibaultbee.streampack.ext.srt.elements.endpoints.composites.sinks.SrtSink"]},{"name":"const val MAXIMUM_INCREASE_THRESHOLD: Int = 200000","description":"io.github.thibaultbee.streampack.ext.srt.regulator.DefaultSrtBitrateRegulator.Companion.MAXIMUM_INCREASE_THRESHOLD","location":"streampack-srt/io.github.thibaultbee.streampack.ext.srt.regulator/-default-srt-bitrate-regulator/-companion/-m-a-x-i-m-u-m_-i-n-c-r-e-a-s-e_-t-h-r-e-s-h-o-l-d.html","searchKeys":["MAXIMUM_INCREASE_THRESHOLD","const val MAXIMUM_INCREASE_THRESHOLD: Int = 200000","io.github.thibaultbee.streampack.ext.srt.regulator.DefaultSrtBitrateRegulator.Companion.MAXIMUM_INCREASE_THRESHOLD"]},{"name":"const val MINIMUM_DECREASE_THRESHOLD: Int = 100000","description":"io.github.thibaultbee.streampack.ext.srt.regulator.DefaultSrtBitrateRegulator.Companion.MINIMUM_DECREASE_THRESHOLD","location":"streampack-srt/io.github.thibaultbee.streampack.ext.srt.regulator/-default-srt-bitrate-regulator/-companion/-m-i-n-i-m-u-m_-d-e-c-r-e-a-s-e_-t-h-r-e-s-h-o-l-d.html","searchKeys":["MINIMUM_DECREASE_THRESHOLD","const val MINIMUM_DECREASE_THRESHOLD: Int = 100000","io.github.thibaultbee.streampack.ext.srt.regulator.DefaultSrtBitrateRegulator.Companion.MINIMUM_DECREASE_THRESHOLD"]},{"name":"const val SEND_PACKET_THRESHOLD: Int = 50","description":"io.github.thibaultbee.streampack.ext.srt.regulator.DefaultSrtBitrateRegulator.Companion.SEND_PACKET_THRESHOLD","location":"streampack-srt/io.github.thibaultbee.streampack.ext.srt.regulator/-default-srt-bitrate-regulator/-companion/-s-e-n-d_-p-a-c-k-e-t_-t-h-r-e-s-h-o-l-d.html","searchKeys":["SEND_PACKET_THRESHOLD","const val SEND_PACKET_THRESHOLD: Int = 50","io.github.thibaultbee.streampack.ext.srt.regulator.DefaultSrtBitrateRegulator.Companion.SEND_PACKET_THRESHOLD"]},{"name":"constructor()","description":"io.github.thibaultbee.streampack.ext.srt.elements.endpoints.composites.sinks.SrtSink.SrtSink","location":"streampack-srt/io.github.thibaultbee.streampack.ext.srt.elements.endpoints.composites.sinks/-srt-sink/-srt-sink.html","searchKeys":["SrtSink","constructor()","io.github.thibaultbee.streampack.ext.srt.elements.endpoints.composites.sinks.SrtSink.SrtSink"]},{"name":"constructor()","description":"io.github.thibaultbee.streampack.ext.srt.regulator.DefaultSrtBitrateRegulator.Factory.Factory","location":"streampack-srt/io.github.thibaultbee.streampack.ext.srt.regulator/-default-srt-bitrate-regulator/-factory/-factory.html","searchKeys":["Factory","constructor()","io.github.thibaultbee.streampack.ext.srt.regulator.DefaultSrtBitrateRegulator.Factory.Factory"]},{"name":"constructor()","description":"io.github.thibaultbee.streampack.ext.srt.regulator.controllers.DefaultSrtBitrateRegulatorController.DefaultSrtBitrateRegulatorController","location":"streampack-srt/io.github.thibaultbee.streampack.ext.srt.regulator.controllers/-default-srt-bitrate-regulator-controller/-default-srt-bitrate-regulator-controller.html","searchKeys":["DefaultSrtBitrateRegulatorController","constructor()","io.github.thibaultbee.streampack.ext.srt.regulator.controllers.DefaultSrtBitrateRegulatorController.DefaultSrtBitrateRegulatorController"]},{"name":"constructor(bitrateRegulatorConfig: BitrateRegulatorConfig, onVideoTargetBitrateChange: (Int) -> Unit, onAudioTargetBitrateChange: (Int) -> Unit)","description":"io.github.thibaultbee.streampack.ext.srt.regulator.DefaultSrtBitrateRegulator.DefaultSrtBitrateRegulator","location":"streampack-srt/io.github.thibaultbee.streampack.ext.srt.regulator/-default-srt-bitrate-regulator/-default-srt-bitrate-regulator.html","searchKeys":["DefaultSrtBitrateRegulator","constructor(bitrateRegulatorConfig: BitrateRegulatorConfig, onVideoTargetBitrateChange: (Int) -> Unit, onAudioTargetBitrateChange: (Int) -> Unit)","io.github.thibaultbee.streampack.ext.srt.regulator.DefaultSrtBitrateRegulator.DefaultSrtBitrateRegulator"]},{"name":"constructor(bitrateRegulatorConfig: BitrateRegulatorConfig, onVideoTargetBitrateChange: (Int) -> Unit, onAudioTargetBitrateChange: (Int) -> Unit)","description":"io.github.thibaultbee.streampack.ext.srt.regulator.SrtBitrateRegulator.SrtBitrateRegulator","location":"streampack-srt/io.github.thibaultbee.streampack.ext.srt.regulator/-srt-bitrate-regulator/-srt-bitrate-regulator.html","searchKeys":["SrtBitrateRegulator","constructor(bitrateRegulatorConfig: BitrateRegulatorConfig, onVideoTargetBitrateChange: (Int) -> Unit, onAudioTargetBitrateChange: (Int) -> Unit)","io.github.thibaultbee.streampack.ext.srt.regulator.SrtBitrateRegulator.SrtBitrateRegulator"]},{"name":"constructor(bitrateRegulatorFactory: SrtBitrateRegulator.Factory = DefaultSrtBitrateRegulator.Factory(), bitrateRegulatorConfig: BitrateRegulatorConfig = BitrateRegulatorConfig(), delayTimeInMs: Long = 500)","description":"io.github.thibaultbee.streampack.ext.srt.regulator.controllers.DefaultSrtBitrateRegulatorController.Factory.Factory","location":"streampack-srt/io.github.thibaultbee.streampack.ext.srt.regulator.controllers/-default-srt-bitrate-regulator-controller/-factory/-factory.html","searchKeys":["Factory","constructor(bitrateRegulatorFactory: SrtBitrateRegulator.Factory = DefaultSrtBitrateRegulator.Factory(), bitrateRegulatorConfig: BitrateRegulatorConfig = BitrateRegulatorConfig(), delayTimeInMs: Long = 500)","io.github.thibaultbee.streampack.ext.srt.regulator.controllers.DefaultSrtBitrateRegulatorController.Factory.Factory"]},{"name":"constructor(srtUrl: SrtUrl, serviceInfo: TSServiceInfo = createDefaultTsServiceInfo())","description":"io.github.thibaultbee.streampack.ext.srt.data.mediadescriptor.SrtMediaDescriptor.SrtMediaDescriptor","location":"streampack-srt/io.github.thibaultbee.streampack.ext.srt.data.mediadescriptor/-srt-media-descriptor/-srt-media-descriptor.html","searchKeys":["SrtMediaDescriptor","constructor(srtUrl: SrtUrl, serviceInfo: TSServiceInfo = createDefaultTsServiceInfo())","io.github.thibaultbee.streampack.ext.srt.data.mediadescriptor.SrtMediaDescriptor.SrtMediaDescriptor"]},{"name":"fun SrtEndpointFactory(serviceInfo: TSServiceInfo = createDefaultTsServiceInfo()): CompositeEndpointFactory","description":"io.github.thibaultbee.streampack.ext.srt.elements.endpoints.composites.SrtEndpointFactory","location":"streampack-srt/io.github.thibaultbee.streampack.ext.srt.elements.endpoints.composites/-srt-endpoint-factory.html","searchKeys":["SrtEndpointFactory","fun SrtEndpointFactory(serviceInfo: TSServiceInfo = createDefaultTsServiceInfo()): CompositeEndpointFactory","io.github.thibaultbee.streampack.ext.srt.elements.endpoints.composites.SrtEndpointFactory"]},{"name":"fun SrtMediaDescriptor(descriptor: MediaDescriptor): SrtMediaDescriptor","description":"io.github.thibaultbee.streampack.ext.srt.data.mediadescriptor.SrtMediaDescriptor","location":"streampack-srt/io.github.thibaultbee.streampack.ext.srt.data.mediadescriptor/-srt-media-descriptor.html","searchKeys":["SrtMediaDescriptor","fun SrtMediaDescriptor(descriptor: MediaDescriptor): SrtMediaDescriptor","io.github.thibaultbee.streampack.ext.srt.data.mediadescriptor.SrtMediaDescriptor"]},{"name":"fun SrtMediaDescriptor(host: String, port: Int, streamId: String? = null, passPhrase: String? = null, latency: Int? = null, connectionTimeout: Int? = null, serviceInfo: TSServiceInfo = createDefaultTsServiceInfo()): SrtMediaDescriptor","description":"io.github.thibaultbee.streampack.ext.srt.data.mediadescriptor.SrtMediaDescriptor","location":"streampack-srt/io.github.thibaultbee.streampack.ext.srt.data.mediadescriptor/-srt-media-descriptor.html","searchKeys":["SrtMediaDescriptor","fun SrtMediaDescriptor(host: String, port: Int, streamId: String? = null, passPhrase: String? = null, latency: Int? = null, connectionTimeout: Int? = null, serviceInfo: TSServiceInfo = createDefaultTsServiceInfo()): SrtMediaDescriptor","io.github.thibaultbee.streampack.ext.srt.data.mediadescriptor.SrtMediaDescriptor"]},{"name":"fun SrtMediaDescriptor(uri: Uri, serviceInfo: TSServiceInfo = createDefaultTsServiceInfo()): SrtMediaDescriptor","description":"io.github.thibaultbee.streampack.ext.srt.data.mediadescriptor.SrtMediaDescriptor","location":"streampack-srt/io.github.thibaultbee.streampack.ext.srt.data.mediadescriptor/-srt-media-descriptor.html","searchKeys":["SrtMediaDescriptor","fun SrtMediaDescriptor(uri: Uri, serviceInfo: TSServiceInfo = createDefaultTsServiceInfo()): SrtMediaDescriptor","io.github.thibaultbee.streampack.ext.srt.data.mediadescriptor.SrtMediaDescriptor"]},{"name":"fun SrtMediaDescriptor(uriString: String, serviceInfo: TSServiceInfo = createDefaultTsServiceInfo()): SrtMediaDescriptor","description":"io.github.thibaultbee.streampack.ext.srt.data.mediadescriptor.SrtMediaDescriptor","location":"streampack-srt/io.github.thibaultbee.streampack.ext.srt.data.mediadescriptor/-srt-media-descriptor.html","searchKeys":["SrtMediaDescriptor","fun SrtMediaDescriptor(uriString: String, serviceInfo: TSServiceInfo = createDefaultTsServiceInfo()): SrtMediaDescriptor","io.github.thibaultbee.streampack.ext.srt.data.mediadescriptor.SrtMediaDescriptor"]},{"name":"interface Factory : IBitrateRegulator.Factory","description":"io.github.thibaultbee.streampack.ext.srt.regulator.SrtBitrateRegulator.Factory","location":"streampack-srt/io.github.thibaultbee.streampack.ext.srt.regulator/-srt-bitrate-regulator/-factory/index.html","searchKeys":["Factory","interface Factory : IBitrateRegulator.Factory","io.github.thibaultbee.streampack.ext.srt.regulator.SrtBitrateRegulator.Factory"]},{"name":"object Companion","description":"io.github.thibaultbee.streampack.ext.srt.data.mediadescriptor.SrtMediaDescriptor.Companion","location":"streampack-srt/io.github.thibaultbee.streampack.ext.srt.data.mediadescriptor/-srt-media-descriptor/-companion/index.html","searchKeys":["Companion","object Companion","io.github.thibaultbee.streampack.ext.srt.data.mediadescriptor.SrtMediaDescriptor.Companion"]},{"name":"object Companion","description":"io.github.thibaultbee.streampack.ext.srt.elements.endpoints.composites.sinks.SrtSink.Companion","location":"streampack-srt/io.github.thibaultbee.streampack.ext.srt.elements.endpoints.composites.sinks/-srt-sink/-companion/index.html","searchKeys":["Companion","object Companion","io.github.thibaultbee.streampack.ext.srt.elements.endpoints.composites.sinks.SrtSink.Companion"]},{"name":"object Companion","description":"io.github.thibaultbee.streampack.ext.srt.regulator.DefaultSrtBitrateRegulator.Companion","location":"streampack-srt/io.github.thibaultbee.streampack.ext.srt.regulator/-default-srt-bitrate-regulator/-companion/index.html","searchKeys":["Companion","object Companion","io.github.thibaultbee.streampack.ext.srt.regulator.DefaultSrtBitrateRegulator.Companion"]},{"name":"open override fun configure(config: SinkConfiguration)","description":"io.github.thibaultbee.streampack.ext.srt.elements.endpoints.composites.sinks.SrtSink.configure","location":"streampack-srt/io.github.thibaultbee.streampack.ext.srt.elements.endpoints.composites.sinks/-srt-sink/configure.html","searchKeys":["configure","open override fun configure(config: SinkConfiguration)","io.github.thibaultbee.streampack.ext.srt.elements.endpoints.composites.sinks.SrtSink.configure"]},{"name":"open override fun newBitrateRegulator(bitrateRegulatorConfig: BitrateRegulatorConfig, onVideoTargetBitrateChange: (Int) -> Unit, onAudioTargetBitrateChange: (Int) -> Unit): DefaultSrtBitrateRegulator","description":"io.github.thibaultbee.streampack.ext.srt.regulator.DefaultSrtBitrateRegulator.Factory.newBitrateRegulator","location":"streampack-srt/io.github.thibaultbee.streampack.ext.srt.regulator/-default-srt-bitrate-regulator/-factory/new-bitrate-regulator.html","searchKeys":["newBitrateRegulator","open override fun newBitrateRegulator(bitrateRegulatorConfig: BitrateRegulatorConfig, onVideoTargetBitrateChange: (Int) -> Unit, onAudioTargetBitrateChange: (Int) -> Unit): DefaultSrtBitrateRegulator","io.github.thibaultbee.streampack.ext.srt.regulator.DefaultSrtBitrateRegulator.Factory.newBitrateRegulator"]},{"name":"open override fun newBitrateRegulatorController(pipelineOutput: IEncodingPipelineOutput): DummyBitrateRegulatorController","description":"io.github.thibaultbee.streampack.ext.srt.regulator.controllers.DefaultSrtBitrateRegulatorController.Factory.newBitrateRegulatorController","location":"streampack-srt/io.github.thibaultbee.streampack.ext.srt.regulator.controllers/-default-srt-bitrate-regulator-controller/-factory/new-bitrate-regulator-controller.html","searchKeys":["newBitrateRegulatorController","open override fun newBitrateRegulatorController(pipelineOutput: IEncodingPipelineOutput): DummyBitrateRegulatorController","io.github.thibaultbee.streampack.ext.srt.regulator.controllers.DefaultSrtBitrateRegulatorController.Factory.newBitrateRegulatorController"]},{"name":"open override fun update(stats: Any, currentVideoBitrate: Int, currentAudioBitrate: Int)","description":"io.github.thibaultbee.streampack.ext.srt.regulator.SrtBitrateRegulator.update","location":"streampack-srt/io.github.thibaultbee.streampack.ext.srt.regulator/-srt-bitrate-regulator/update.html","searchKeys":["update","open override fun update(stats: Any, currentVideoBitrate: Int, currentAudioBitrate: Int)","io.github.thibaultbee.streampack.ext.srt.regulator.SrtBitrateRegulator.update"]},{"name":"open override fun update(stats: Stats, currentVideoBitrate: Int, currentAudioBitrate: Int)","description":"io.github.thibaultbee.streampack.ext.srt.regulator.DefaultSrtBitrateRegulator.update","location":"streampack-srt/io.github.thibaultbee.streampack.ext.srt.regulator/-default-srt-bitrate-regulator/update.html","searchKeys":["update","open override fun update(stats: Stats, currentVideoBitrate: Int, currentAudioBitrate: Int)","io.github.thibaultbee.streampack.ext.srt.regulator.DefaultSrtBitrateRegulator.update"]},{"name":"open override val isOpenFlow: StateFlow<Boolean>","description":"io.github.thibaultbee.streampack.ext.srt.elements.endpoints.composites.sinks.SrtSink.isOpenFlow","location":"streampack-srt/io.github.thibaultbee.streampack.ext.srt.elements.endpoints.composites.sinks/-srt-sink/is-open-flow.html","searchKeys":["isOpenFlow","open override val isOpenFlow: StateFlow<Boolean>","io.github.thibaultbee.streampack.ext.srt.elements.endpoints.composites.sinks.SrtSink.isOpenFlow"]},{"name":"open override val metrics: Stats","description":"io.github.thibaultbee.streampack.ext.srt.elements.endpoints.composites.sinks.SrtSink.metrics","location":"streampack-srt/io.github.thibaultbee.streampack.ext.srt.elements.endpoints.composites.sinks/-srt-sink/metrics.html","searchKeys":["metrics","open override val metrics: Stats","io.github.thibaultbee.streampack.ext.srt.elements.endpoints.composites.sinks.SrtSink.metrics"]},{"name":"open override val supportedSinkTypes: List<MediaSinkType>","description":"io.github.thibaultbee.streampack.ext.srt.elements.endpoints.composites.sinks.SrtSink.supportedSinkTypes","location":"streampack-srt/io.github.thibaultbee.streampack.ext.srt.elements.endpoints.composites.sinks/-srt-sink/supported-sink-types.html","searchKeys":["supportedSinkTypes","open override val supportedSinkTypes: List<MediaSinkType>","io.github.thibaultbee.streampack.ext.srt.elements.endpoints.composites.sinks.SrtSink.supportedSinkTypes"]},{"name":"open override val uri: Uri","description":"io.github.thibaultbee.streampack.ext.srt.data.mediadescriptor.SrtMediaDescriptor.uri","location":"streampack-srt/io.github.thibaultbee.streampack.ext.srt.data.mediadescriptor/-srt-media-descriptor/uri.html","searchKeys":["uri","open override val uri: Uri","io.github.thibaultbee.streampack.ext.srt.data.mediadescriptor.SrtMediaDescriptor.uri"]},{"name":"open suspend override fun close()","description":"io.github.thibaultbee.streampack.ext.srt.elements.endpoints.composites.sinks.SrtSink.close","location":"streampack-srt/io.github.thibaultbee.streampack.ext.srt.elements.endpoints.composites.sinks/-srt-sink/close.html","searchKeys":["close","open suspend override fun close()","io.github.thibaultbee.streampack.ext.srt.elements.endpoints.composites.sinks.SrtSink.close"]},{"name":"open suspend override fun openImpl(mediaDescriptor: MediaDescriptor)","description":"io.github.thibaultbee.streampack.ext.srt.elements.endpoints.composites.sinks.SrtSink.openImpl","location":"streampack-srt/io.github.thibaultbee.streampack.ext.srt.elements.endpoints.composites.sinks/-srt-sink/open-impl.html","searchKeys":["openImpl","open suspend override fun openImpl(mediaDescriptor: MediaDescriptor)","io.github.thibaultbee.streampack.ext.srt.elements.endpoints.composites.sinks.SrtSink.openImpl"]},{"name":"open suspend override fun startStream()","description":"io.github.thibaultbee.streampack.ext.srt.elements.endpoints.composites.sinks.SrtSink.startStream","location":"streampack-srt/io.github.thibaultbee.streampack.ext.srt.elements.endpoints.composites.sinks/-srt-sink/start-stream.html","searchKeys":["startStream","open suspend override fun startStream()","io.github.thibaultbee.streampack.ext.srt.elements.endpoints.composites.sinks.SrtSink.startStream"]},{"name":"open suspend override fun stopStream()","description":"io.github.thibaultbee.streampack.ext.srt.elements.endpoints.composites.sinks.SrtSink.stopStream","location":"streampack-srt/io.github.thibaultbee.streampack.ext.srt.elements.endpoints.composites.sinks/-srt-sink/stop-stream.html","searchKeys":["stopStream","open suspend override fun stopStream()","io.github.thibaultbee.streampack.ext.srt.elements.endpoints.composites.sinks.SrtSink.stopStream"]},{"name":"open suspend override fun write(packet: Packet): Int","description":"io.github.thibaultbee.streampack.ext.srt.elements.endpoints.composites.sinks.SrtSink.write","location":"streampack-srt/io.github.thibaultbee.streampack.ext.srt.elements.endpoints.composites.sinks/-srt-sink/write.html","searchKeys":["write","open suspend override fun write(packet: Packet): Int","io.github.thibaultbee.streampack.ext.srt.elements.endpoints.composites.sinks.SrtSink.write"]},{"name":"val host: String","description":"io.github.thibaultbee.streampack.ext.srt.data.mediadescriptor.SrtMediaDescriptor.host","location":"streampack-srt/io.github.thibaultbee.streampack.ext.srt.data.mediadescriptor/-srt-media-descriptor/host.html","searchKeys":["host","val host: String","io.github.thibaultbee.streampack.ext.srt.data.mediadescriptor.SrtMediaDescriptor.host"]},{"name":"val passphrase: String?","description":"io.github.thibaultbee.streampack.ext.srt.data.mediadescriptor.SrtMediaDescriptor.passphrase","location":"streampack-srt/io.github.thibaultbee.streampack.ext.srt.data.mediadescriptor/-srt-media-descriptor/passphrase.html","searchKeys":["passphrase","val passphrase: String?","io.github.thibaultbee.streampack.ext.srt.data.mediadescriptor.SrtMediaDescriptor.passphrase"]},{"name":"val port: Int","description":"io.github.thibaultbee.streampack.ext.srt.data.mediadescriptor.SrtMediaDescriptor.port","location":"streampack-srt/io.github.thibaultbee.streampack.ext.srt.data.mediadescriptor/-srt-media-descriptor/port.html","searchKeys":["port","val port: Int","io.github.thibaultbee.streampack.ext.srt.data.mediadescriptor.SrtMediaDescriptor.port"]},{"name":"val srtUrl: SrtUrl","description":"io.github.thibaultbee.streampack.ext.srt.data.mediadescriptor.SrtMediaDescriptor.srtUrl","location":"streampack-srt/io.github.thibaultbee.streampack.ext.srt.data.mediadescriptor/-srt-media-descriptor/srt-url.html","searchKeys":["srtUrl","val srtUrl: SrtUrl","io.github.thibaultbee.streampack.ext.srt.data.mediadescriptor.SrtMediaDescriptor.srtUrl"]},{"name":"val streamId: String?","description":"io.github.thibaultbee.streampack.ext.srt.data.mediadescriptor.SrtMediaDescriptor.streamId","location":"streampack-srt/io.github.thibaultbee.streampack.ext.srt.data.mediadescriptor/-srt-media-descriptor/stream-id.html","searchKeys":["streamId","val streamId: String?","io.github.thibaultbee.streampack.ext.srt.data.mediadescriptor.SrtMediaDescriptor.streamId"]},{"name":"CENTER","description":"io.github.thibaultbee.streampack.ui.views.PreviewView.Position.CENTER","location":"streampack-ui/io.github.thibaultbee.streampack.ui.views/-preview-view/-position/-c-e-n-t-e-r/index.html","searchKeys":["CENTER","CENTER","io.github.thibaultbee.streampack.ui.views.PreviewView.Position.CENTER"]},{"name":"END","description":"io.github.thibaultbee.streampack.ui.views.PreviewView.Position.END","location":"streampack-ui/io.github.thibaultbee.streampack.ui.views/-preview-view/-position/-e-n-d/index.html","searchKeys":["END","END","io.github.thibaultbee.streampack.ui.views.PreviewView.Position.END"]},{"name":"FILL","description":"io.github.thibaultbee.streampack.ui.views.PreviewView.ScaleMode.FILL","location":"streampack-ui/io.github.thibaultbee.streampack.ui.views/-preview-view/-scale-mode/-f-i-l-l/index.html","searchKeys":["FILL","FILL","io.github.thibaultbee.streampack.ui.views.PreviewView.ScaleMode.FILL"]},{"name":"FIT","description":"io.github.thibaultbee.streampack.ui.views.PreviewView.ScaleMode.FIT","location":"streampack-ui/io.github.thibaultbee.streampack.ui.views/-preview-view/-scale-mode/-f-i-t/index.html","searchKeys":["FIT","FIT","io.github.thibaultbee.streampack.ui.views.PreviewView.ScaleMode.FIT"]},{"name":"START","description":"io.github.thibaultbee.streampack.ui.views.PreviewView.Position.START","location":"streampack-ui/io.github.thibaultbee.streampack.ui.views/-preview-view/-position/-s-t-a-r-t/index.html","searchKeys":["START","START","io.github.thibaultbee.streampack.ui.views.PreviewView.Position.START"]},{"name":"class PreviewView constructor(context: Context, attrs: AttributeSet? = null, defStyle: Int = 0) : FrameLayout","description":"io.github.thibaultbee.streampack.ui.views.PreviewView","location":"streampack-ui/io.github.thibaultbee.streampack.ui.views/-preview-view/index.html","searchKeys":["PreviewView","class PreviewView constructor(context: Context, attrs: AttributeSet? = null, defStyle: Int = 0) : FrameLayout","io.github.thibaultbee.streampack.ui.views.PreviewView"]},{"name":"constructor(context: Context, attrs: AttributeSet? = null, defStyle: Int = 0)","description":"io.github.thibaultbee.streampack.ui.views.AutoFitSurfaceView.AutoFitSurfaceView","location":"streampack-ui/io.github.thibaultbee.streampack.ui.views/-auto-fit-surface-view/-auto-fit-surface-view.html","searchKeys":["AutoFitSurfaceView","constructor(context: Context, attrs: AttributeSet? = null, defStyle: Int = 0)","io.github.thibaultbee.streampack.ui.views.AutoFitSurfaceView.AutoFitSurfaceView"]},{"name":"constructor(context: Context, attrs: AttributeSet? = null, defStyle: Int = 0)","description":"io.github.thibaultbee.streampack.ui.views.PreviewView.PreviewView","location":"streampack-ui/io.github.thibaultbee.streampack.ui.views/-preview-view/-preview-view.html","searchKeys":["PreviewView","constructor(context: Context, attrs: AttributeSet? = null, defStyle: Int = 0)","io.github.thibaultbee.streampack.ui.views.PreviewView.PreviewView"]},{"name":"enum Position : Enum<PreviewView.Position> ","description":"io.github.thibaultbee.streampack.ui.views.PreviewView.Position","location":"streampack-ui/io.github.thibaultbee.streampack.ui.views/-preview-view/-position/index.html","searchKeys":["Position","enum Position : Enum<PreviewView.Position> ","io.github.thibaultbee.streampack.ui.views.PreviewView.Position"]},{"name":"enum ScaleMode : Enum<PreviewView.ScaleMode> ","description":"io.github.thibaultbee.streampack.ui.views.PreviewView.ScaleMode","location":"streampack-ui/io.github.thibaultbee.streampack.ui.views/-preview-view/-scale-mode/index.html","searchKeys":["ScaleMode","enum ScaleMode : Enum<PreviewView.ScaleMode> ","io.github.thibaultbee.streampack.ui.views.PreviewView.ScaleMode"]},{"name":"fun entryOf(value: Int): PreviewView.Position","description":"io.github.thibaultbee.streampack.ui.views.PreviewView.Position.Companion.entryOf","location":"streampack-ui/io.github.thibaultbee.streampack.ui.views/-preview-view/-position/-companion/entry-of.html","searchKeys":["entryOf","fun entryOf(value: Int): PreviewView.Position","io.github.thibaultbee.streampack.ui.views.PreviewView.Position.Companion.entryOf"]},{"name":"fun entryOf(value: Int): PreviewView.ScaleMode","description":"io.github.thibaultbee.streampack.ui.views.PreviewView.ScaleMode.Companion.entryOf","location":"streampack-ui/io.github.thibaultbee.streampack.ui.views/-preview-view/-scale-mode/-companion/entry-of.html","searchKeys":["entryOf","fun entryOf(value: Int): PreviewView.ScaleMode","io.github.thibaultbee.streampack.ui.views.PreviewView.ScaleMode.Companion.entryOf"]},{"name":"fun setAspectRatio(width: Int, height: Int)","description":"io.github.thibaultbee.streampack.ui.views.AutoFitSurfaceView.setAspectRatio","location":"streampack-ui/io.github.thibaultbee.streampack.ui.views/-auto-fit-surface-view/set-aspect-ratio.html","searchKeys":["setAspectRatio","fun setAspectRatio(width: Int, height: Int)","io.github.thibaultbee.streampack.ui.views.AutoFitSurfaceView.setAspectRatio"]},{"name":"fun valueOf(value: String): PreviewView.Position","description":"io.github.thibaultbee.streampack.ui.views.PreviewView.Position.valueOf","location":"streampack-ui/io.github.thibaultbee.streampack.ui.views/-preview-view/-position/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): PreviewView.Position","io.github.thibaultbee.streampack.ui.views.PreviewView.Position.valueOf"]},{"name":"fun valueOf(value: String): PreviewView.ScaleMode","description":"io.github.thibaultbee.streampack.ui.views.PreviewView.ScaleMode.valueOf","location":"streampack-ui/io.github.thibaultbee.streampack.ui.views/-preview-view/-scale-mode/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): PreviewView.ScaleMode","io.github.thibaultbee.streampack.ui.views.PreviewView.ScaleMode.valueOf"]},{"name":"fun values(): Array<PreviewView.Position>","description":"io.github.thibaultbee.streampack.ui.views.PreviewView.Position.values","location":"streampack-ui/io.github.thibaultbee.streampack.ui.views/-preview-view/-position/values.html","searchKeys":["values","fun values(): Array<PreviewView.Position>","io.github.thibaultbee.streampack.ui.views.PreviewView.Position.values"]},{"name":"fun values(): Array<PreviewView.ScaleMode>","description":"io.github.thibaultbee.streampack.ui.views.PreviewView.ScaleMode.values","location":"streampack-ui/io.github.thibaultbee.streampack.ui.views/-preview-view/-scale-mode/values.html","searchKeys":["values","fun values(): Array<PreviewView.ScaleMode>","io.github.thibaultbee.streampack.ui.views.PreviewView.ScaleMode.values"]},{"name":"interface Listener","description":"io.github.thibaultbee.streampack.ui.views.PreviewView.Listener","location":"streampack-ui/io.github.thibaultbee.streampack.ui.views/-preview-view/-listener/index.html","searchKeys":["Listener","interface Listener","io.github.thibaultbee.streampack.ui.views.PreviewView.Listener"]},{"name":"object Companion","description":"io.github.thibaultbee.streampack.ui.views.AutoFitSurfaceView.Companion","location":"streampack-ui/io.github.thibaultbee.streampack.ui.views/-auto-fit-surface-view/-companion/index.html","searchKeys":["Companion","object Companion","io.github.thibaultbee.streampack.ui.views.AutoFitSurfaceView.Companion"]},{"name":"object Companion","description":"io.github.thibaultbee.streampack.ui.views.PreviewView.Companion","location":"streampack-ui/io.github.thibaultbee.streampack.ui.views/-preview-view/-companion/index.html","searchKeys":["Companion","object Companion","io.github.thibaultbee.streampack.ui.views.PreviewView.Companion"]},{"name":"object Companion","description":"io.github.thibaultbee.streampack.ui.views.PreviewView.Position.Companion","location":"streampack-ui/io.github.thibaultbee.streampack.ui.views/-preview-view/-position/-companion/index.html","searchKeys":["Companion","object Companion","io.github.thibaultbee.streampack.ui.views.PreviewView.Position.Companion"]},{"name":"object Companion","description":"io.github.thibaultbee.streampack.ui.views.PreviewView.ScaleMode.Companion","location":"streampack-ui/io.github.thibaultbee.streampack.ui.views/-preview-view/-scale-mode/-companion/index.html","searchKeys":["Companion","object Companion","io.github.thibaultbee.streampack.ui.views.PreviewView.ScaleMode.Companion"]},{"name":"open class AutoFitSurfaceView constructor(context: Context, attrs: AttributeSet? = null, defStyle: Int = 0) : SurfaceView","description":"io.github.thibaultbee.streampack.ui.views.AutoFitSurfaceView","location":"streampack-ui/io.github.thibaultbee.streampack.ui.views/-auto-fit-surface-view/index.html","searchKeys":["AutoFitSurfaceView","open class AutoFitSurfaceView constructor(context: Context, attrs: AttributeSet? = null, defStyle: Int = 0) : SurfaceView","io.github.thibaultbee.streampack.ui.views.AutoFitSurfaceView"]},{"name":"open fun onPreviewFailed(t: Throwable)","description":"io.github.thibaultbee.streampack.ui.views.PreviewView.Listener.onPreviewFailed","location":"streampack-ui/io.github.thibaultbee.streampack.ui.views/-preview-view/-listener/on-preview-failed.html","searchKeys":["onPreviewFailed","open fun onPreviewFailed(t: Throwable)","io.github.thibaultbee.streampack.ui.views.PreviewView.Listener.onPreviewFailed"]},{"name":"open fun onPreviewStarted()","description":"io.github.thibaultbee.streampack.ui.views.PreviewView.Listener.onPreviewStarted","location":"streampack-ui/io.github.thibaultbee.streampack.ui.views/-preview-view/-listener/on-preview-started.html","searchKeys":["onPreviewStarted","open fun onPreviewStarted()","io.github.thibaultbee.streampack.ui.views.PreviewView.Listener.onPreviewStarted"]},{"name":"open fun onZoomRationOnPinchChanged(zoomRatio: Float)","description":"io.github.thibaultbee.streampack.ui.views.PreviewView.Listener.onZoomRationOnPinchChanged","location":"streampack-ui/io.github.thibaultbee.streampack.ui.views/-preview-view/-listener/on-zoom-ration-on-pinch-changed.html","searchKeys":["onZoomRationOnPinchChanged","open fun onZoomRationOnPinchChanged(zoomRatio: Float)","io.github.thibaultbee.streampack.ui.views.PreviewView.Listener.onZoomRationOnPinchChanged"]},{"name":"open override fun onTouchEvent(event: MotionEvent): Boolean","description":"io.github.thibaultbee.streampack.ui.views.PreviewView.onTouchEvent","location":"streampack-ui/io.github.thibaultbee.streampack.ui.views/-preview-view/on-touch-event.html","searchKeys":["onTouchEvent","open override fun onTouchEvent(event: MotionEvent): Boolean","io.github.thibaultbee.streampack.ui.views.PreviewView.onTouchEvent"]},{"name":"open override fun performClick(): Boolean","description":"io.github.thibaultbee.streampack.ui.views.PreviewView.performClick","location":"streampack-ui/io.github.thibaultbee.streampack.ui.views/-preview-view/perform-click.html","searchKeys":["performClick","open override fun performClick(): Boolean","io.github.thibaultbee.streampack.ui.views.PreviewView.performClick"]},{"name":"protected open override fun onAttachedToWindow()","description":"io.github.thibaultbee.streampack.ui.views.PreviewView.onAttachedToWindow","location":"streampack-ui/io.github.thibaultbee.streampack.ui.views/-preview-view/on-attached-to-window.html","searchKeys":["onAttachedToWindow","protected open override fun onAttachedToWindow()","io.github.thibaultbee.streampack.ui.views.PreviewView.onAttachedToWindow"]},{"name":"protected open override fun onDetachedFromWindow()","description":"io.github.thibaultbee.streampack.ui.views.PreviewView.onDetachedFromWindow","location":"streampack-ui/io.github.thibaultbee.streampack.ui.views/-preview-view/on-detached-from-window.html","searchKeys":["onDetachedFromWindow","protected open override fun onDetachedFromWindow()","io.github.thibaultbee.streampack.ui.views.PreviewView.onDetachedFromWindow"]},{"name":"protected open override fun onMeasure(widthMeasureSpec: Int, heightMeasureSpec: Int)","description":"io.github.thibaultbee.streampack.ui.views.AutoFitSurfaceView.onMeasure","location":"streampack-ui/io.github.thibaultbee.streampack.ui.views/-auto-fit-surface-view/on-measure.html","searchKeys":["onMeasure","protected open override fun onMeasure(widthMeasureSpec: Int, heightMeasureSpec: Int)","io.github.thibaultbee.streampack.ui.views.AutoFitSurfaceView.onMeasure"]},{"name":"protected open override fun onSizeChanged(w: Int, h: Int, oldw: Int, oldh: Int)","description":"io.github.thibaultbee.streampack.ui.views.PreviewView.onSizeChanged","location":"streampack-ui/io.github.thibaultbee.streampack.ui.views/-preview-view/on-size-changed.html","searchKeys":["onSizeChanged","protected open override fun onSizeChanged(w: Int, h: Int, oldw: Int, oldh: Int)","io.github.thibaultbee.streampack.ui.views.PreviewView.onSizeChanged"]},{"name":"protected open override fun onWindowVisibilityChanged(visibility: Int)","description":"io.github.thibaultbee.streampack.ui.views.PreviewView.onWindowVisibilityChanged","location":"streampack-ui/io.github.thibaultbee.streampack.ui.views/-preview-view/on-window-visibility-changed.html","searchKeys":["onWindowVisibilityChanged","protected open override fun onWindowVisibilityChanged(visibility: Int)","io.github.thibaultbee.streampack.ui.views.PreviewView.onWindowVisibilityChanged"]},{"name":"suspend fun IPreviewableSource.setPreview(viewfinder: CameraViewfinder, previewSize: Size): ViewfinderSurfaceRequest","description":"io.github.thibaultbee.streampack.ui.views.setPreview","location":"streampack-ui/io.github.thibaultbee.streampack.ui.views/set-preview.html","searchKeys":["setPreview","suspend fun IPreviewableSource.setPreview(viewfinder: CameraViewfinder, previewSize: Size): ViewfinderSurfaceRequest","io.github.thibaultbee.streampack.ui.views.setPreview"]},{"name":"suspend fun IPreviewableSource.startPreview(viewfinder: CameraViewfinder, previewSize: Size): ViewfinderSurfaceRequest","description":"io.github.thibaultbee.streampack.ui.views.startPreview","location":"streampack-ui/io.github.thibaultbee.streampack.ui.views/start-preview.html","searchKeys":["startPreview","suspend fun IPreviewableSource.startPreview(viewfinder: CameraViewfinder, previewSize: Size): ViewfinderSurfaceRequest","io.github.thibaultbee.streampack.ui.views.startPreview"]},{"name":"suspend fun IWithVideoSource.setPreview(viewfinder: CameraViewfinder, previewSize: Size): ViewfinderSurfaceRequest","description":"io.github.thibaultbee.streampack.ui.views.setPreview","location":"streampack-ui/io.github.thibaultbee.streampack.ui.views/set-preview.html","searchKeys":["setPreview","suspend fun IWithVideoSource.setPreview(viewfinder: CameraViewfinder, previewSize: Size): ViewfinderSurfaceRequest","io.github.thibaultbee.streampack.ui.views.setPreview"]},{"name":"suspend fun IWithVideoSource.startPreview(viewfinder: CameraViewfinder, previewSize: Size): ViewfinderSurfaceRequest","description":"io.github.thibaultbee.streampack.ui.views.startPreview","location":"streampack-ui/io.github.thibaultbee.streampack.ui.views/start-preview.html","searchKeys":["startPreview","suspend fun IWithVideoSource.startPreview(viewfinder: CameraViewfinder, previewSize: Size): ViewfinderSurfaceRequest","io.github.thibaultbee.streampack.ui.views.startPreview"]},{"name":"suspend fun startPreview()","description":"io.github.thibaultbee.streampack.ui.views.PreviewView.startPreview","location":"streampack-ui/io.github.thibaultbee.streampack.ui.views/-preview-view/start-preview.html","searchKeys":["startPreview","suspend fun startPreview()","io.github.thibaultbee.streampack.ui.views.PreviewView.startPreview"]},{"name":"suspend fun stopPreview()","description":"io.github.thibaultbee.streampack.ui.views.PreviewView.stopPreview","location":"streampack-ui/io.github.thibaultbee.streampack.ui.views/-preview-view/stop-preview.html","searchKeys":["stopPreview","suspend fun stopPreview()","io.github.thibaultbee.streampack.ui.views.PreviewView.stopPreview"]},{"name":"val entries: EnumEntries<PreviewView.Position>","description":"io.github.thibaultbee.streampack.ui.views.PreviewView.Position.entries","location":"streampack-ui/io.github.thibaultbee.streampack.ui.views/-preview-view/-position/entries.html","searchKeys":["entries","val entries: EnumEntries<PreviewView.Position>","io.github.thibaultbee.streampack.ui.views.PreviewView.Position.entries"]},{"name":"val entries: EnumEntries<PreviewView.ScaleMode>","description":"io.github.thibaultbee.streampack.ui.views.PreviewView.ScaleMode.entries","location":"streampack-ui/io.github.thibaultbee.streampack.ui.views/-preview-view/-scale-mode/entries.html","searchKeys":["entries","val entries: EnumEntries<PreviewView.ScaleMode>","io.github.thibaultbee.streampack.ui.views.PreviewView.ScaleMode.entries"]},{"name":"val value: Int","description":"io.github.thibaultbee.streampack.ui.views.PreviewView.Position.value","location":"streampack-ui/io.github.thibaultbee.streampack.ui.views/-preview-view/-position/value.html","searchKeys":["value","val value: Int","io.github.thibaultbee.streampack.ui.views.PreviewView.Position.value"]},{"name":"val value: Int","description":"io.github.thibaultbee.streampack.ui.views.PreviewView.ScaleMode.value","location":"streampack-ui/io.github.thibaultbee.streampack.ui.views/-preview-view/-scale-mode/value.html","searchKeys":["value","val value: Int","io.github.thibaultbee.streampack.ui.views.PreviewView.ScaleMode.value"]},{"name":"var enableTapToFocus: Boolean","description":"io.github.thibaultbee.streampack.ui.views.PreviewView.enableTapToFocus","location":"streampack-ui/io.github.thibaultbee.streampack.ui.views/-preview-view/enable-tap-to-focus.html","searchKeys":["enableTapToFocus","var enableTapToFocus: Boolean","io.github.thibaultbee.streampack.ui.views.PreviewView.enableTapToFocus"]},{"name":"var enableZoomOnPinch: Boolean","description":"io.github.thibaultbee.streampack.ui.views.PreviewView.enableZoomOnPinch","location":"streampack-ui/io.github.thibaultbee.streampack.ui.views/-preview-view/enable-zoom-on-pinch.html","searchKeys":["enableZoomOnPinch","var enableZoomOnPinch: Boolean","io.github.thibaultbee.streampack.ui.views.PreviewView.enableZoomOnPinch"]},{"name":"var listener: PreviewView.Listener?","description":"io.github.thibaultbee.streampack.ui.views.PreviewView.listener","location":"streampack-ui/io.github.thibaultbee.streampack.ui.views/-preview-view/listener.html","searchKeys":["listener","var listener: PreviewView.Listener?","io.github.thibaultbee.streampack.ui.views.PreviewView.listener"]},{"name":"var position: PreviewView.Position","description":"io.github.thibaultbee.streampack.ui.views.PreviewView.position","location":"streampack-ui/io.github.thibaultbee.streampack.ui.views/-preview-view/position.html","searchKeys":["position","var position: PreviewView.Position","io.github.thibaultbee.streampack.ui.views.PreviewView.position"]},{"name":"var scaleMode: PreviewView.ScaleMode","description":"io.github.thibaultbee.streampack.ui.views.PreviewView.scaleMode","location":"streampack-ui/io.github.thibaultbee.streampack.ui.views/-preview-view/scale-mode.html","searchKeys":["scaleMode","var scaleMode: PreviewView.ScaleMode","io.github.thibaultbee.streampack.ui.views.PreviewView.scaleMode"]},{"name":"var streamer: IWithVideoSource?","description":"io.github.thibaultbee.streampack.ui.views.PreviewView.streamer","location":"streampack-ui/io.github.thibaultbee.streampack.ui.views/-preview-view/streamer.html","searchKeys":["streamer","var streamer: IWithVideoSource?","io.github.thibaultbee.streampack.ui.views.PreviewView.streamer"]},{"name":"FLV","description":"io.github.thibaultbee.streampack.app.models.FileExtension.FLV","location":"demo-camera/io.github.thibaultbee.streampack.app.models/-file-extension/-f-l-v/index.html","searchKeys":["FLV","FLV","io.github.thibaultbee.streampack.app.models.FileExtension.FLV"]},{"name":"FLV_FILE","description":"io.github.thibaultbee.streampack.app.models.EndpointType.FLV_FILE","location":"demo-camera/io.github.thibaultbee.streampack.app.models/-endpoint-type/-f-l-v_-f-i-l-e/index.html","searchKeys":["FLV_FILE","FLV_FILE","io.github.thibaultbee.streampack.app.models.EndpointType.FLV_FILE"]},{"name":"MP4","description":"io.github.thibaultbee.streampack.app.models.FileExtension.MP4","location":"demo-camera/io.github.thibaultbee.streampack.app.models/-file-extension/-m-p4/index.html","searchKeys":["MP4","MP4","io.github.thibaultbee.streampack.app.models.FileExtension.MP4"]},{"name":"MP4_FILE","description":"io.github.thibaultbee.streampack.app.models.EndpointType.MP4_FILE","location":"demo-camera/io.github.thibaultbee.streampack.app.models/-endpoint-type/-m-p4_-f-i-l-e/index.html","searchKeys":["MP4_FILE","MP4_FILE","io.github.thibaultbee.streampack.app.models.EndpointType.MP4_FILE"]},{"name":"OGG","description":"io.github.thibaultbee.streampack.app.models.FileExtension.OGG","location":"demo-camera/io.github.thibaultbee.streampack.app.models/-file-extension/-o-g-g/index.html","searchKeys":["OGG","OGG","io.github.thibaultbee.streampack.app.models.FileExtension.OGG"]},{"name":"OGG_FILE","description":"io.github.thibaultbee.streampack.app.models.EndpointType.OGG_FILE","location":"demo-camera/io.github.thibaultbee.streampack.app.models/-endpoint-type/-o-g-g_-f-i-l-e/index.html","searchKeys":["OGG_FILE","OGG_FILE","io.github.thibaultbee.streampack.app.models.EndpointType.OGG_FILE"]},{"name":"RTMP","description":"io.github.thibaultbee.streampack.app.models.EndpointType.RTMP","location":"demo-camera/io.github.thibaultbee.streampack.app.models/-endpoint-type/-r-t-m-p/index.html","searchKeys":["RTMP","RTMP","io.github.thibaultbee.streampack.app.models.EndpointType.RTMP"]},{"name":"SRT","description":"io.github.thibaultbee.streampack.app.models.EndpointType.SRT","location":"demo-camera/io.github.thibaultbee.streampack.app.models/-endpoint-type/-s-r-t/index.html","searchKeys":["SRT","SRT","io.github.thibaultbee.streampack.app.models.EndpointType.SRT"]},{"name":"THREEGP","description":"io.github.thibaultbee.streampack.app.models.FileExtension.THREEGP","location":"demo-camera/io.github.thibaultbee.streampack.app.models/-file-extension/-t-h-r-e-e-g-p/index.html","searchKeys":["THREEGP","THREEGP","io.github.thibaultbee.streampack.app.models.FileExtension.THREEGP"]},{"name":"THREEGP_FILE","description":"io.github.thibaultbee.streampack.app.models.EndpointType.THREEGP_FILE","location":"demo-camera/io.github.thibaultbee.streampack.app.models/-endpoint-type/-t-h-r-e-e-g-p_-f-i-l-e/index.html","searchKeys":["THREEGP_FILE","THREEGP_FILE","io.github.thibaultbee.streampack.app.models.EndpointType.THREEGP_FILE"]},{"name":"TS","description":"io.github.thibaultbee.streampack.app.models.FileExtension.TS","location":"demo-camera/io.github.thibaultbee.streampack.app.models/-file-extension/-t-s/index.html","searchKeys":["TS","TS","io.github.thibaultbee.streampack.app.models.FileExtension.TS"]},{"name":"TS_FILE","description":"io.github.thibaultbee.streampack.app.models.EndpointType.TS_FILE","location":"demo-camera/io.github.thibaultbee.streampack.app.models/-endpoint-type/-t-s_-f-i-l-e/index.html","searchKeys":["TS_FILE","TS_FILE","io.github.thibaultbee.streampack.app.models.EndpointType.TS_FILE"]},{"name":"WEBM","description":"io.github.thibaultbee.streampack.app.models.FileExtension.WEBM","location":"demo-camera/io.github.thibaultbee.streampack.app.models/-file-extension/-w-e-b-m/index.html","searchKeys":["WEBM","WEBM","io.github.thibaultbee.streampack.app.models.FileExtension.WEBM"]},{"name":"WEBM_FILE","description":"io.github.thibaultbee.streampack.app.models.EndpointType.WEBM_FILE","location":"demo-camera/io.github.thibaultbee.streampack.app.models/-endpoint-type/-w-e-b-m_-f-i-l-e/index.html","searchKeys":["WEBM_FILE","WEBM_FILE","io.github.thibaultbee.streampack.app.models.EndpointType.WEBM_FILE"]},{"name":"abstract class ObservableViewModel : ViewModel, Observable","description":"io.github.thibaultbee.streampack.app.utils.ObservableViewModel","location":"demo-camera/io.github.thibaultbee.streampack.app.utils/-observable-view-model/index.html","searchKeys":["ObservableViewModel","abstract class ObservableViewModel : ViewModel, Observable","io.github.thibaultbee.streampack.app.utils.ObservableViewModel"]},{"name":"class BuildStreamerUseCase(context: Context, dataStoreRepository: DataStoreRepository)","description":"io.github.thibaultbee.streampack.app.ui.main.usecases.BuildStreamerUseCase","location":"demo-camera/io.github.thibaultbee.streampack.app.ui.main.usecases/-build-streamer-use-case/index.html","searchKeys":["BuildStreamerUseCase","class BuildStreamerUseCase(context: Context, dataStoreRepository: DataStoreRepository)","io.github.thibaultbee.streampack.app.ui.main.usecases.BuildStreamerUseCase"]},{"name":"class DataStoreRepository(context: Context, dataStore: DataStore<Preferences>)","description":"io.github.thibaultbee.streampack.app.data.storage.DataStoreRepository","location":"demo-camera/io.github.thibaultbee.streampack.app.data.storage/-data-store-repository/index.html","searchKeys":["DataStoreRepository","class DataStoreRepository(context: Context, dataStore: DataStore<Preferences>)","io.github.thibaultbee.streampack.app.data.storage.DataStoreRepository"]},{"name":"class EndpointFactory(type: EndpointType)","description":"io.github.thibaultbee.streampack.app.models.EndpointFactory","location":"demo-camera/io.github.thibaultbee.streampack.app.models/-endpoint-factory/index.html","searchKeys":["EndpointFactory","class EndpointFactory(type: EndpointType)","io.github.thibaultbee.streampack.app.models.EndpointFactory"]},{"name":"class FlvFileEndpoint : Endpoint","description":"io.github.thibaultbee.streampack.app.models.Endpoint.FlvFileEndpoint","location":"demo-camera/io.github.thibaultbee.streampack.app.models/-endpoint/-flv-file-endpoint/index.html","searchKeys":["FlvFileEndpoint","class FlvFileEndpoint : Endpoint","io.github.thibaultbee.streampack.app.models.Endpoint.FlvFileEndpoint"]},{"name":"class MainActivity : AppCompatActivity","description":"io.github.thibaultbee.streampack.app.ui.main.MainActivity","location":"demo-camera/io.github.thibaultbee.streampack.app.ui.main/-main-activity/index.html","searchKeys":["MainActivity","class MainActivity : AppCompatActivity","io.github.thibaultbee.streampack.app.ui.main.MainActivity"]},{"name":"class Mp4FileEndpoint : Endpoint","description":"io.github.thibaultbee.streampack.app.models.Endpoint.Mp4FileEndpoint","location":"demo-camera/io.github.thibaultbee.streampack.app.models/-endpoint/-mp4-file-endpoint/index.html","searchKeys":["Mp4FileEndpoint","class Mp4FileEndpoint : Endpoint","io.github.thibaultbee.streampack.app.models.Endpoint.Mp4FileEndpoint"]},{"name":"class OggFileEndpoint : Endpoint","description":"io.github.thibaultbee.streampack.app.models.Endpoint.OggFileEndpoint","location":"demo-camera/io.github.thibaultbee.streampack.app.models/-endpoint/-ogg-file-endpoint/index.html","searchKeys":["OggFileEndpoint","class OggFileEndpoint : Endpoint","io.github.thibaultbee.streampack.app.models.Endpoint.OggFileEndpoint"]},{"name":"class PermissionManager","description":"io.github.thibaultbee.streampack.app.utils.PermissionManager","location":"demo-camera/io.github.thibaultbee.streampack.app.utils/-permission-manager/index.html","searchKeys":["PermissionManager","class PermissionManager","io.github.thibaultbee.streampack.app.utils.PermissionManager"]},{"name":"class PreferencesDataStoreAdapter(dataStore: DataStore<Preferences>, coroutineScope: CoroutineScope) : PreferenceDataStore","description":"io.github.thibaultbee.streampack.app.data.storage.PreferencesDataStoreAdapter","location":"demo-camera/io.github.thibaultbee.streampack.app.data.storage/-preferences-data-store-adapter/index.html","searchKeys":["PreferencesDataStoreAdapter","class PreferencesDataStoreAdapter(dataStore: DataStore<Preferences>, coroutineScope: CoroutineScope) : PreferenceDataStore","io.github.thibaultbee.streampack.app.data.storage.PreferencesDataStoreAdapter"]},{"name":"class PreviewFragment : Fragment","description":"io.github.thibaultbee.streampack.app.ui.main.PreviewFragment","location":"demo-camera/io.github.thibaultbee.streampack.app.ui.main/-preview-fragment/index.html","searchKeys":["PreviewFragment","class PreviewFragment : Fragment","io.github.thibaultbee.streampack.app.ui.main.PreviewFragment"]},{"name":"class PreviewViewModel(application: Application) : ObservableViewModel","description":"io.github.thibaultbee.streampack.app.ui.main.PreviewViewModel","location":"demo-camera/io.github.thibaultbee.streampack.app.ui.main/-preview-view-model/index.html","searchKeys":["PreviewViewModel","class PreviewViewModel(application: Application) : ObservableViewModel","io.github.thibaultbee.streampack.app.ui.main.PreviewViewModel"]},{"name":"class PreviewViewModelFactory(application: Application) : ViewModelProvider.Factory","description":"io.github.thibaultbee.streampack.app.ui.main.PreviewViewModelFactory","location":"demo-camera/io.github.thibaultbee.streampack.app.ui.main/-preview-view-model-factory/index.html","searchKeys":["PreviewViewModelFactory","class PreviewViewModelFactory(application: Application) : ViewModelProvider.Factory","io.github.thibaultbee.streampack.app.ui.main.PreviewViewModelFactory"]},{"name":"class ProfileLevelDisplay(context: Context)","description":"io.github.thibaultbee.streampack.app.utils.ProfileLevelDisplay","location":"demo-camera/io.github.thibaultbee.streampack.app.utils/-profile-level-display/index.html","searchKeys":["ProfileLevelDisplay","class ProfileLevelDisplay(context: Context)","io.github.thibaultbee.streampack.app.utils.ProfileLevelDisplay"]},{"name":"class RotationRepository(context: Context)","description":"io.github.thibaultbee.streampack.app.data.rotation.RotationRepository","location":"demo-camera/io.github.thibaultbee.streampack.app.data.rotation/-rotation-repository/index.html","searchKeys":["RotationRepository","class RotationRepository(context: Context)","io.github.thibaultbee.streampack.app.data.rotation.RotationRepository"]},{"name":"class RtmpEndpoint : Endpoint","description":"io.github.thibaultbee.streampack.app.models.Endpoint.RtmpEndpoint","location":"demo-camera/io.github.thibaultbee.streampack.app.models/-endpoint/-rtmp-endpoint/index.html","searchKeys":["RtmpEndpoint","class RtmpEndpoint : Endpoint","io.github.thibaultbee.streampack.app.models.Endpoint.RtmpEndpoint"]},{"name":"class SettingsActivity : AppCompatActivity","description":"io.github.thibaultbee.streampack.app.ui.settings.SettingsActivity","location":"demo-camera/io.github.thibaultbee.streampack.app.ui.settings/-settings-activity/index.html","searchKeys":["SettingsActivity","class SettingsActivity : AppCompatActivity","io.github.thibaultbee.streampack.app.ui.settings.SettingsActivity"]},{"name":"class SettingsFragment : PreferenceFragmentCompat","description":"io.github.thibaultbee.streampack.app.ui.settings.SettingsFragment","location":"demo-camera/io.github.thibaultbee.streampack.app.ui.settings/-settings-fragment/index.html","searchKeys":["SettingsFragment","class SettingsFragment : PreferenceFragmentCompat","io.github.thibaultbee.streampack.app.ui.settings.SettingsFragment"]},{"name":"class SrtEndpoint : Endpoint","description":"io.github.thibaultbee.streampack.app.models.Endpoint.SrtEndpoint","location":"demo-camera/io.github.thibaultbee.streampack.app.models/-endpoint/-srt-endpoint/index.html","searchKeys":["SrtEndpoint","class SrtEndpoint : Endpoint","io.github.thibaultbee.streampack.app.models.Endpoint.SrtEndpoint"]},{"name":"class StreamerInfoFactory(context: Context, endpointType: EndpointType)","description":"io.github.thibaultbee.streampack.app.utils.StreamerInfoFactory","location":"demo-camera/io.github.thibaultbee.streampack.app.utils/-streamer-info-factory/index.html","searchKeys":["StreamerInfoFactory","class StreamerInfoFactory(context: Context, endpointType: EndpointType)","io.github.thibaultbee.streampack.app.utils.StreamerInfoFactory"]},{"name":"class ThreeGPFileEndpoint : Endpoint","description":"io.github.thibaultbee.streampack.app.models.Endpoint.ThreeGPFileEndpoint","location":"demo-camera/io.github.thibaultbee.streampack.app.models/-endpoint/-three-g-p-file-endpoint/index.html","searchKeys":["ThreeGPFileEndpoint","class ThreeGPFileEndpoint : Endpoint","io.github.thibaultbee.streampack.app.models.Endpoint.ThreeGPFileEndpoint"]},{"name":"class TsFileEndpoint : Endpoint","description":"io.github.thibaultbee.streampack.app.models.Endpoint.TsFileEndpoint","location":"demo-camera/io.github.thibaultbee.streampack.app.models/-endpoint/-ts-file-endpoint/index.html","searchKeys":["TsFileEndpoint","class TsFileEndpoint : Endpoint","io.github.thibaultbee.streampack.app.models.Endpoint.TsFileEndpoint"]},{"name":"class WebmFileEndpoint : Endpoint","description":"io.github.thibaultbee.streampack.app.models.Endpoint.WebmFileEndpoint","location":"demo-camera/io.github.thibaultbee.streampack.app.models/-endpoint/-webm-file-endpoint/index.html","searchKeys":["WebmFileEndpoint","class WebmFileEndpoint : Endpoint","io.github.thibaultbee.streampack.app.models.Endpoint.WebmFileEndpoint"]},{"name":"const val defaultUri: String","description":"io.github.thibaultbee.streampack.app.ApplicationConstants.Connection.defaultUri","location":"demo-camera/io.github.thibaultbee.streampack.app/-application-constants/-connection/default-uri.html","searchKeys":["defaultUri","const val defaultUri: String","io.github.thibaultbee.streampack.app.ApplicationConstants.Connection.defaultUri"]},{"name":"const val supportedOrientation: Int","description":"io.github.thibaultbee.streampack.app.ApplicationConstants.supportedOrientation","location":"demo-camera/io.github.thibaultbee.streampack.app/-application-constants/supported-orientation.html","searchKeys":["supportedOrientation","const val supportedOrientation: Int","io.github.thibaultbee.streampack.app.ApplicationConstants.supportedOrientation"]},{"name":"const val userPrefName: String","description":"io.github.thibaultbee.streampack.app.ApplicationConstants.userPrefName","location":"demo-camera/io.github.thibaultbee.streampack.app/-application-constants/user-pref-name.html","searchKeys":["userPrefName","const val userPrefName: String","io.github.thibaultbee.streampack.app.ApplicationConstants.userPrefName"]},{"name":"constructor()","description":"io.github.thibaultbee.streampack.app.models.Endpoint.FlvFileEndpoint.FlvFileEndpoint","location":"demo-camera/io.github.thibaultbee.streampack.app.models/-endpoint/-flv-file-endpoint/-flv-file-endpoint.html","searchKeys":["FlvFileEndpoint","constructor()","io.github.thibaultbee.streampack.app.models.Endpoint.FlvFileEndpoint.FlvFileEndpoint"]},{"name":"constructor()","description":"io.github.thibaultbee.streampack.app.models.Endpoint.Mp4FileEndpoint.Mp4FileEndpoint","location":"demo-camera/io.github.thibaultbee.streampack.app.models/-endpoint/-mp4-file-endpoint/-mp4-file-endpoint.html","searchKeys":["Mp4FileEndpoint","constructor()","io.github.thibaultbee.streampack.app.models.Endpoint.Mp4FileEndpoint.Mp4FileEndpoint"]},{"name":"constructor()","description":"io.github.thibaultbee.streampack.app.models.Endpoint.OggFileEndpoint.OggFileEndpoint","location":"demo-camera/io.github.thibaultbee.streampack.app.models/-endpoint/-ogg-file-endpoint/-ogg-file-endpoint.html","searchKeys":["OggFileEndpoint","constructor()","io.github.thibaultbee.streampack.app.models.Endpoint.OggFileEndpoint.OggFileEndpoint"]},{"name":"constructor()","description":"io.github.thibaultbee.streampack.app.models.Endpoint.RtmpEndpoint.RtmpEndpoint","location":"demo-camera/io.github.thibaultbee.streampack.app.models/-endpoint/-rtmp-endpoint/-rtmp-endpoint.html","searchKeys":["RtmpEndpoint","constructor()","io.github.thibaultbee.streampack.app.models.Endpoint.RtmpEndpoint.RtmpEndpoint"]},{"name":"constructor()","description":"io.github.thibaultbee.streampack.app.models.Endpoint.SrtEndpoint.SrtEndpoint","location":"demo-camera/io.github.thibaultbee.streampack.app.models/-endpoint/-srt-endpoint/-srt-endpoint.html","searchKeys":["SrtEndpoint","constructor()","io.github.thibaultbee.streampack.app.models.Endpoint.SrtEndpoint.SrtEndpoint"]},{"name":"constructor()","description":"io.github.thibaultbee.streampack.app.models.Endpoint.ThreeGPFileEndpoint.ThreeGPFileEndpoint","location":"demo-camera/io.github.thibaultbee.streampack.app.models/-endpoint/-three-g-p-file-endpoint/-three-g-p-file-endpoint.html","searchKeys":["ThreeGPFileEndpoint","constructor()","io.github.thibaultbee.streampack.app.models.Endpoint.ThreeGPFileEndpoint.ThreeGPFileEndpoint"]},{"name":"constructor()","description":"io.github.thibaultbee.streampack.app.models.Endpoint.TsFileEndpoint.TsFileEndpoint","location":"demo-camera/io.github.thibaultbee.streampack.app.models/-endpoint/-ts-file-endpoint/-ts-file-endpoint.html","searchKeys":["TsFileEndpoint","constructor()","io.github.thibaultbee.streampack.app.models.Endpoint.TsFileEndpoint.TsFileEndpoint"]},{"name":"constructor()","description":"io.github.thibaultbee.streampack.app.models.Endpoint.WebmFileEndpoint.WebmFileEndpoint","location":"demo-camera/io.github.thibaultbee.streampack.app.models/-endpoint/-webm-file-endpoint/-webm-file-endpoint.html","searchKeys":["WebmFileEndpoint","constructor()","io.github.thibaultbee.streampack.app.models.Endpoint.WebmFileEndpoint.WebmFileEndpoint"]},{"name":"constructor()","description":"io.github.thibaultbee.streampack.app.ui.main.MainActivity.MainActivity","location":"demo-camera/io.github.thibaultbee.streampack.app.ui.main/-main-activity/-main-activity.html","searchKeys":["MainActivity","constructor()","io.github.thibaultbee.streampack.app.ui.main.MainActivity.MainActivity"]},{"name":"constructor()","description":"io.github.thibaultbee.streampack.app.ui.main.PreviewFragment.PreviewFragment","location":"demo-camera/io.github.thibaultbee.streampack.app.ui.main/-preview-fragment/-preview-fragment.html","searchKeys":["PreviewFragment","constructor()","io.github.thibaultbee.streampack.app.ui.main.PreviewFragment.PreviewFragment"]},{"name":"constructor()","description":"io.github.thibaultbee.streampack.app.ui.settings.SettingsActivity.SettingsActivity","location":"demo-camera/io.github.thibaultbee.streampack.app.ui.settings/-settings-activity/-settings-activity.html","searchKeys":["SettingsActivity","constructor()","io.github.thibaultbee.streampack.app.ui.settings.SettingsActivity.SettingsActivity"]},{"name":"constructor()","description":"io.github.thibaultbee.streampack.app.ui.settings.SettingsFragment.SettingsFragment","location":"demo-camera/io.github.thibaultbee.streampack.app.ui.settings/-settings-fragment/-settings-fragment.html","searchKeys":["SettingsFragment","constructor()","io.github.thibaultbee.streampack.app.ui.settings.SettingsFragment.SettingsFragment"]},{"name":"constructor()","description":"io.github.thibaultbee.streampack.app.utils.ObservableViewModel.ObservableViewModel","location":"demo-camera/io.github.thibaultbee.streampack.app.utils/-observable-view-model/-observable-view-model.html","searchKeys":["ObservableViewModel","constructor()","io.github.thibaultbee.streampack.app.utils.ObservableViewModel.ObservableViewModel"]},{"name":"constructor()","description":"io.github.thibaultbee.streampack.app.utils.PermissionManager.PermissionManager","location":"demo-camera/io.github.thibaultbee.streampack.app.utils/-permission-manager/-permission-manager.html","searchKeys":["PermissionManager","constructor()","io.github.thibaultbee.streampack.app.utils.PermissionManager.PermissionManager"]},{"name":"constructor(application: Application)","description":"io.github.thibaultbee.streampack.app.ui.main.PreviewViewModel.PreviewViewModel","location":"demo-camera/io.github.thibaultbee.streampack.app.ui.main/-preview-view-model/-preview-view-model.html","searchKeys":["PreviewViewModel","constructor(application: Application)","io.github.thibaultbee.streampack.app.ui.main.PreviewViewModel.PreviewViewModel"]},{"name":"constructor(application: Application)","description":"io.github.thibaultbee.streampack.app.ui.main.PreviewViewModelFactory.PreviewViewModelFactory","location":"demo-camera/io.github.thibaultbee.streampack.app.ui.main/-preview-view-model-factory/-preview-view-model-factory.html","searchKeys":["PreviewViewModelFactory","constructor(application: Application)","io.github.thibaultbee.streampack.app.ui.main.PreviewViewModelFactory.PreviewViewModelFactory"]},{"name":"constructor(context: Context)","description":"io.github.thibaultbee.streampack.app.data.rotation.RotationRepository.RotationRepository","location":"demo-camera/io.github.thibaultbee.streampack.app.data.rotation/-rotation-repository/-rotation-repository.html","searchKeys":["RotationRepository","constructor(context: Context)","io.github.thibaultbee.streampack.app.data.rotation.RotationRepository.RotationRepository"]},{"name":"constructor(context: Context)","description":"io.github.thibaultbee.streampack.app.utils.ProfileLevelDisplay.ProfileLevelDisplay","location":"demo-camera/io.github.thibaultbee.streampack.app.utils/-profile-level-display/-profile-level-display.html","searchKeys":["ProfileLevelDisplay","constructor(context: Context)","io.github.thibaultbee.streampack.app.utils.ProfileLevelDisplay.ProfileLevelDisplay"]},{"name":"constructor(context: Context, dataStore: DataStore<Preferences>)","description":"io.github.thibaultbee.streampack.app.data.storage.DataStoreRepository.DataStoreRepository","location":"demo-camera/io.github.thibaultbee.streampack.app.data.storage/-data-store-repository/-data-store-repository.html","searchKeys":["DataStoreRepository","constructor(context: Context, dataStore: DataStore<Preferences>)","io.github.thibaultbee.streampack.app.data.storage.DataStoreRepository.DataStoreRepository"]},{"name":"constructor(context: Context, dataStoreRepository: DataStoreRepository)","description":"io.github.thibaultbee.streampack.app.ui.main.usecases.BuildStreamerUseCase.BuildStreamerUseCase","location":"demo-camera/io.github.thibaultbee.streampack.app.ui.main.usecases/-build-streamer-use-case/-build-streamer-use-case.html","searchKeys":["BuildStreamerUseCase","constructor(context: Context, dataStoreRepository: DataStoreRepository)","io.github.thibaultbee.streampack.app.ui.main.usecases.BuildStreamerUseCase.BuildStreamerUseCase"]},{"name":"constructor(context: Context, endpointType: EndpointType)","description":"io.github.thibaultbee.streampack.app.utils.StreamerInfoFactory.StreamerInfoFactory","location":"demo-camera/io.github.thibaultbee.streampack.app.utils/-streamer-info-factory/-streamer-info-factory.html","searchKeys":["StreamerInfoFactory","constructor(context: Context, endpointType: EndpointType)","io.github.thibaultbee.streampack.app.utils.StreamerInfoFactory.StreamerInfoFactory"]},{"name":"constructor(dataStore: DataStore<Preferences>, coroutineScope: CoroutineScope)","description":"io.github.thibaultbee.streampack.app.data.storage.PreferencesDataStoreAdapter.PreferencesDataStoreAdapter","location":"demo-camera/io.github.thibaultbee.streampack.app.data.storage/-preferences-data-store-adapter/-preferences-data-store-adapter.html","searchKeys":["PreferencesDataStoreAdapter","constructor(dataStore: DataStore<Preferences>, coroutineScope: CoroutineScope)","io.github.thibaultbee.streampack.app.data.storage.PreferencesDataStoreAdapter.PreferencesDataStoreAdapter"]},{"name":"constructor(type: EndpointType)","description":"io.github.thibaultbee.streampack.app.models.EndpointFactory.EndpointFactory","location":"demo-camera/io.github.thibaultbee.streampack.app.models/-endpoint-factory/-endpoint-factory.html","searchKeys":["EndpointFactory","constructor(type: EndpointType)","io.github.thibaultbee.streampack.app.models.EndpointFactory.EndpointFactory"]},{"name":"enum EndpointType : Enum<EndpointType> ","description":"io.github.thibaultbee.streampack.app.models.EndpointType","location":"demo-camera/io.github.thibaultbee.streampack.app.models/-endpoint-type/index.html","searchKeys":["EndpointType","enum EndpointType : Enum<EndpointType> ","io.github.thibaultbee.streampack.app.models.EndpointType"]},{"name":"enum FileExtension : Enum<FileExtension> ","description":"io.github.thibaultbee.streampack.app.models.FileExtension","location":"demo-camera/io.github.thibaultbee.streampack.app.models/-file-extension/index.html","searchKeys":["FileExtension","enum FileExtension : Enum<FileExtension> ","io.github.thibaultbee.streampack.app.models.FileExtension"]},{"name":"fun Context.createAudioContentUri(name: String): Uri","description":"io.github.thibaultbee.streampack.app.utils.createAudioContentUri","location":"demo-camera/io.github.thibaultbee.streampack.app.utils/create-audio-content-uri.html","searchKeys":["createAudioContentUri","fun Context.createAudioContentUri(name: String): Uri","io.github.thibaultbee.streampack.app.utils.createAudioContentUri"]},{"name":"fun Context.createVideoContentUri(name: String): Uri","description":"io.github.thibaultbee.streampack.app.utils.createVideoContentUri","location":"demo-camera/io.github.thibaultbee.streampack.app.utils/create-video-content-uri.html","searchKeys":["createVideoContentUri","fun Context.createVideoContentUri(name: String): Uri","io.github.thibaultbee.streampack.app.utils.createVideoContentUri"]},{"name":"fun String.appendIfNotEndsWith(suffix: String): String","description":"io.github.thibaultbee.streampack.app.utils.appendIfNotEndsWith","location":"demo-camera/io.github.thibaultbee.streampack.app.utils/append-if-not-ends-with.html","searchKeys":["appendIfNotEndsWith","fun String.appendIfNotEndsWith(suffix: String): String","io.github.thibaultbee.streampack.app.utils.appendIfNotEndsWith"]},{"name":"fun build(): CameraStreamerConfigurationInfo","description":"io.github.thibaultbee.streampack.app.utils.StreamerInfoFactory.build","location":"demo-camera/io.github.thibaultbee.streampack.app.utils/-streamer-info-factory/build.html","searchKeys":["build","fun build(): CameraStreamerConfigurationInfo","io.github.thibaultbee.streampack.app.utils.StreamerInfoFactory.build"]},{"name":"fun build(): Endpoint","description":"io.github.thibaultbee.streampack.app.models.EndpointFactory.build","location":"demo-camera/io.github.thibaultbee.streampack.app.models/-endpoint-factory/build.html","searchKeys":["build","fun build(): Endpoint","io.github.thibaultbee.streampack.app.models.EndpointFactory.build"]},{"name":"fun configureAudio()","description":"io.github.thibaultbee.streampack.app.ui.main.PreviewViewModel.configureAudio","location":"demo-camera/io.github.thibaultbee.streampack.app.ui.main/-preview-view-model/configure-audio.html","searchKeys":["configureAudio","fun configureAudio()","io.github.thibaultbee.streampack.app.ui.main.PreviewViewModel.configureAudio"]},{"name":"fun fromEndpointType(endpointType: EndpointType): FileExtension","description":"io.github.thibaultbee.streampack.app.models.FileExtension.Companion.fromEndpointType","location":"demo-camera/io.github.thibaultbee.streampack.app.models/-file-extension/-companion/from-endpoint-type.html","searchKeys":["fromEndpointType","fun fromEndpointType(endpointType: EndpointType): FileExtension","io.github.thibaultbee.streampack.app.models.FileExtension.Companion.fromEndpointType"]},{"name":"fun fromId(id: Int): EndpointType","description":"io.github.thibaultbee.streampack.app.models.EndpointType.Companion.fromId","location":"demo-camera/io.github.thibaultbee.streampack.app.models/-endpoint-type/-companion/from-id.html","searchKeys":["fromId","fun fromId(id: Int): EndpointType","io.github.thibaultbee.streampack.app.models.EndpointType.Companion.fromId"]},{"name":"fun getAllLevelSet(mimeType: String): Set<Int>","description":"io.github.thibaultbee.streampack.app.utils.ProfileLevelDisplay.getAllLevelSet","location":"demo-camera/io.github.thibaultbee.streampack.app.utils/-profile-level-display/get-all-level-set.html","searchKeys":["getAllLevelSet","fun getAllLevelSet(mimeType: String): Set<Int>","io.github.thibaultbee.streampack.app.utils.ProfileLevelDisplay.getAllLevelSet"]},{"name":"fun getInstance(context: Context): RotationRepository","description":"io.github.thibaultbee.streampack.app.data.rotation.RotationRepository.Companion.getInstance","location":"demo-camera/io.github.thibaultbee.streampack.app.data.rotation/-rotation-repository/-companion/get-instance.html","searchKeys":["getInstance","fun getInstance(context: Context): RotationRepository","io.github.thibaultbee.streampack.app.data.rotation.RotationRepository.Companion.getInstance"]},{"name":"fun getLevel(mimeType: String, name: String): Int","description":"io.github.thibaultbee.streampack.app.utils.ProfileLevelDisplay.getLevel","location":"demo-camera/io.github.thibaultbee.streampack.app.utils/-profile-level-display/get-level.html","searchKeys":["getLevel","fun getLevel(mimeType: String, name: String): Int","io.github.thibaultbee.streampack.app.utils.ProfileLevelDisplay.getLevel"]},{"name":"fun getLevelName(mimeType: String, level: Int): String","description":"io.github.thibaultbee.streampack.app.utils.ProfileLevelDisplay.getLevelName","location":"demo-camera/io.github.thibaultbee.streampack.app.utils/-profile-level-display/get-level-name.html","searchKeys":["getLevelName","fun getLevelName(mimeType: String, level: Int): String","io.github.thibaultbee.streampack.app.utils.ProfileLevelDisplay.getLevelName"]},{"name":"fun getProfile(mimeType: String, name: String): Int","description":"io.github.thibaultbee.streampack.app.utils.ProfileLevelDisplay.getProfile","location":"demo-camera/io.github.thibaultbee.streampack.app.utils/-profile-level-display/get-profile.html","searchKeys":["getProfile","fun getProfile(mimeType: String, name: String): Int","io.github.thibaultbee.streampack.app.utils.ProfileLevelDisplay.getProfile"]},{"name":"fun getProfileName(mimeType: String, profile: Int): String","description":"io.github.thibaultbee.streampack.app.utils.ProfileLevelDisplay.getProfileName","location":"demo-camera/io.github.thibaultbee.streampack.app.utils/-profile-level-display/get-profile-name.html","searchKeys":["getProfileName","fun getProfileName(mimeType: String, profile: Int): String","io.github.thibaultbee.streampack.app.utils.ProfileLevelDisplay.getProfileName"]},{"name":"fun getSliderValue(slider: Slider): Float","description":"io.github.thibaultbee.streampack.app.ui.getSliderValue","location":"demo-camera/io.github.thibaultbee.streampack.app.ui/get-slider-value.html","searchKeys":["getSliderValue","fun getSliderValue(slider: Slider): Float","io.github.thibaultbee.streampack.app.ui.getSliderValue"]},{"name":"fun goneUnless(view: View, visible: Boolean)","description":"io.github.thibaultbee.streampack.app.ui.BindingAdapters.goneUnless","location":"demo-camera/io.github.thibaultbee.streampack.app.ui/-binding-adapters/gone-unless.html","searchKeys":["goneUnless","fun goneUnless(view: View, visible: Boolean)","io.github.thibaultbee.streampack.app.ui.BindingAdapters.goneUnless"]},{"name":"fun hasPermissions(context: Context, vararg permissions: String): Boolean","description":"io.github.thibaultbee.streampack.app.utils.PermissionManager.Companion.hasPermissions","location":"demo-camera/io.github.thibaultbee.streampack.app.utils/-permission-manager/-companion/has-permissions.html","searchKeys":["hasPermissions","fun hasPermissions(context: Context, vararg permissions: String): Boolean","io.github.thibaultbee.streampack.app.utils.PermissionManager.Companion.hasPermissions"]},{"name":"fun initializeVideoSource()","description":"io.github.thibaultbee.streampack.app.ui.main.PreviewViewModel.initializeVideoSource","location":"demo-camera/io.github.thibaultbee.streampack.app.ui.main/-preview-view-model/initialize-video-source.html","searchKeys":["initializeVideoSource","fun initializeVideoSource()","io.github.thibaultbee.streampack.app.ui.main.PreviewViewModel.initializeVideoSource"]},{"name":"fun notifyChange()","description":"io.github.thibaultbee.streampack.app.utils.ObservableViewModel.notifyChange","location":"demo-camera/io.github.thibaultbee.streampack.app.utils/-observable-view-model/notify-change.html","searchKeys":["notifyChange","fun notifyChange()","io.github.thibaultbee.streampack.app.utils.ObservableViewModel.notifyChange"]},{"name":"fun notifyPropertyChanged(fieldId: Int)","description":"io.github.thibaultbee.streampack.app.utils.ObservableViewModel.notifyPropertyChanged","location":"demo-camera/io.github.thibaultbee.streampack.app.utils/-observable-view-model/notify-property-changed.html","searchKeys":["notifyPropertyChanged","fun notifyPropertyChanged(fieldId: Int)","io.github.thibaultbee.streampack.app.utils.ObservableViewModel.notifyPropertyChanged"]},{"name":"fun onZoomRationOnPinchChanged()","description":"io.github.thibaultbee.streampack.app.ui.main.PreviewViewModel.onZoomRationOnPinchChanged","location":"demo-camera/io.github.thibaultbee.streampack.app.ui.main/-preview-view-model/on-zoom-ration-on-pinch-changed.html","searchKeys":["onZoomRationOnPinchChanged","fun onZoomRationOnPinchChanged()","io.github.thibaultbee.streampack.app.ui.main.PreviewViewModel.onZoomRationOnPinchChanged"]},{"name":"fun setMute(isMuted: Boolean)","description":"io.github.thibaultbee.streampack.app.ui.main.PreviewViewModel.setMute","location":"demo-camera/io.github.thibaultbee.streampack.app.ui.main/-preview-view-model/set-mute.html","searchKeys":["setMute","fun setMute(isMuted: Boolean)","io.github.thibaultbee.streampack.app.ui.main.PreviewViewModel.setMute"]},{"name":"fun setSliderListeners(slider: Slider, attrChange: InverseBindingListener)","description":"io.github.thibaultbee.streampack.app.ui.setSliderListeners","location":"demo-camera/io.github.thibaultbee.streampack.app.ui/set-slider-listeners.html","searchKeys":["setSliderListeners","fun setSliderListeners(slider: Slider, attrChange: InverseBindingListener)","io.github.thibaultbee.streampack.app.ui.setSliderListeners"]},{"name":"fun showAlertDialog(context: Context, title: String, message: String = \"\")","description":"io.github.thibaultbee.streampack.app.utils.DialogUtils.showAlertDialog","location":"demo-camera/io.github.thibaultbee.streampack.app.utils/-dialog-utils/show-alert-dialog.html","searchKeys":["showAlertDialog","fun showAlertDialog(context: Context, title: String, message: String = \"\")","io.github.thibaultbee.streampack.app.utils.DialogUtils.showAlertDialog"]},{"name":"fun showPermissionAlertDialog(context: Context, afterPositiveButton: () -> Unit = {})","description":"io.github.thibaultbee.streampack.app.utils.DialogUtils.showPermissionAlertDialog","location":"demo-camera/io.github.thibaultbee.streampack.app.utils/-dialog-utils/show-permission-alert-dialog.html","searchKeys":["showPermissionAlertDialog","fun showPermissionAlertDialog(context: Context, afterPositiveButton: () -> Unit = {})","io.github.thibaultbee.streampack.app.utils.DialogUtils.showPermissionAlertDialog"]},{"name":"fun startStream()","description":"io.github.thibaultbee.streampack.app.ui.main.PreviewViewModel.startStream","location":"demo-camera/io.github.thibaultbee.streampack.app.ui.main/-preview-view-model/start-stream.html","searchKeys":["startStream","fun startStream()","io.github.thibaultbee.streampack.app.ui.main.PreviewViewModel.startStream"]},{"name":"fun stopStream()","description":"io.github.thibaultbee.streampack.app.ui.main.PreviewViewModel.stopStream","location":"demo-camera/io.github.thibaultbee.streampack.app.ui.main/-preview-view-model/stop-stream.html","searchKeys":["stopStream","fun stopStream()","io.github.thibaultbee.streampack.app.ui.main.PreviewViewModel.stopStream"]},{"name":"fun switchBackToFront(): Boolean","description":"io.github.thibaultbee.streampack.app.ui.main.PreviewViewModel.switchBackToFront","location":"demo-camera/io.github.thibaultbee.streampack.app.ui.main/-preview-view-model/switch-back-to-front.html","searchKeys":["switchBackToFront","fun switchBackToFront(): Boolean","io.github.thibaultbee.streampack.app.ui.main.PreviewViewModel.switchBackToFront"]},{"name":"fun toggleAutoFocusMode()","description":"io.github.thibaultbee.streampack.app.ui.main.PreviewViewModel.toggleAutoFocusMode","location":"demo-camera/io.github.thibaultbee.streampack.app.ui.main/-preview-view-model/toggle-auto-focus-mode.html","searchKeys":["toggleAutoFocusMode","fun toggleAutoFocusMode()","io.github.thibaultbee.streampack.app.ui.main.PreviewViewModel.toggleAutoFocusMode"]},{"name":"fun toggleAutoWhiteBalanceMode()","description":"io.github.thibaultbee.streampack.app.ui.main.PreviewViewModel.toggleAutoWhiteBalanceMode","location":"demo-camera/io.github.thibaultbee.streampack.app.ui.main/-preview-view-model/toggle-auto-white-balance-mode.html","searchKeys":["toggleAutoWhiteBalanceMode","fun toggleAutoWhiteBalanceMode()","io.github.thibaultbee.streampack.app.ui.main.PreviewViewModel.toggleAutoWhiteBalanceMode"]},{"name":"fun toggleCamera()","description":"io.github.thibaultbee.streampack.app.ui.main.PreviewViewModel.toggleCamera","location":"demo-camera/io.github.thibaultbee.streampack.app.ui.main/-preview-view-model/toggle-camera.html","searchKeys":["toggleCamera","fun toggleCamera()","io.github.thibaultbee.streampack.app.ui.main.PreviewViewModel.toggleCamera"]},{"name":"fun toggleExposureSlider()","description":"io.github.thibaultbee.streampack.app.ui.main.PreviewViewModel.toggleExposureSlider","location":"demo-camera/io.github.thibaultbee.streampack.app.ui.main/-preview-view-model/toggle-exposure-slider.html","searchKeys":["toggleExposureSlider","fun toggleExposureSlider()","io.github.thibaultbee.streampack.app.ui.main.PreviewViewModel.toggleExposureSlider"]},{"name":"fun toggleFlash()","description":"io.github.thibaultbee.streampack.app.ui.main.PreviewViewModel.toggleFlash","location":"demo-camera/io.github.thibaultbee.streampack.app.ui.main/-preview-view-model/toggle-flash.html","searchKeys":["toggleFlash","fun toggleFlash()","io.github.thibaultbee.streampack.app.ui.main.PreviewViewModel.toggleFlash"]},{"name":"fun toggleVideoSource()","description":"io.github.thibaultbee.streampack.app.ui.main.PreviewViewModel.toggleVideoSource","location":"demo-camera/io.github.thibaultbee.streampack.app.ui.main/-preview-view-model/toggle-video-source.html","searchKeys":["toggleVideoSource","fun toggleVideoSource()","io.github.thibaultbee.streampack.app.ui.main.PreviewViewModel.toggleVideoSource"]},{"name":"fun toggleZoomSlider()","description":"io.github.thibaultbee.streampack.app.ui.main.PreviewViewModel.toggleZoomSlider","location":"demo-camera/io.github.thibaultbee.streampack.app.ui.main/-preview-view-model/toggle-zoom-slider.html","searchKeys":["toggleZoomSlider","fun toggleZoomSlider()","io.github.thibaultbee.streampack.app.ui.main.PreviewViewModel.toggleZoomSlider"]},{"name":"fun valueOf(value: String): EndpointType","description":"io.github.thibaultbee.streampack.app.models.EndpointType.valueOf","location":"demo-camera/io.github.thibaultbee.streampack.app.models/-endpoint-type/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): EndpointType","io.github.thibaultbee.streampack.app.models.EndpointType.valueOf"]},{"name":"fun valueOf(value: String): FileExtension","description":"io.github.thibaultbee.streampack.app.models.FileExtension.valueOf","location":"demo-camera/io.github.thibaultbee.streampack.app.models/-file-extension/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): FileExtension","io.github.thibaultbee.streampack.app.models.FileExtension.valueOf"]},{"name":"fun values(): Array<EndpointType>","description":"io.github.thibaultbee.streampack.app.models.EndpointType.values","location":"demo-camera/io.github.thibaultbee.streampack.app.models/-endpoint-type/values.html","searchKeys":["values","fun values(): Array<EndpointType>","io.github.thibaultbee.streampack.app.models.EndpointType.values"]},{"name":"fun values(): Array<FileExtension>","description":"io.github.thibaultbee.streampack.app.models.FileExtension.values","location":"demo-camera/io.github.thibaultbee.streampack.app.models/-file-extension/values.html","searchKeys":["values","fun values(): Array<FileExtension>","io.github.thibaultbee.streampack.app.models.FileExtension.values"]},{"name":"object ApplicationConstants","description":"io.github.thibaultbee.streampack.app.ApplicationConstants","location":"demo-camera/io.github.thibaultbee.streampack.app/-application-constants/index.html","searchKeys":["ApplicationConstants","object ApplicationConstants","io.github.thibaultbee.streampack.app.ApplicationConstants"]},{"name":"object Audio","description":"io.github.thibaultbee.streampack.app.ApplicationConstants.Audio","location":"demo-camera/io.github.thibaultbee.streampack.app/-application-constants/-audio/index.html","searchKeys":["Audio","object Audio","io.github.thibaultbee.streampack.app.ApplicationConstants.Audio"]},{"name":"object BindingAdapters","description":"io.github.thibaultbee.streampack.app.ui.BindingAdapters","location":"demo-camera/io.github.thibaultbee.streampack.app.ui/-binding-adapters/index.html","searchKeys":["BindingAdapters","object BindingAdapters","io.github.thibaultbee.streampack.app.ui.BindingAdapters"]},{"name":"object Companion","description":"io.github.thibaultbee.streampack.app.data.rotation.RotationRepository.Companion","location":"demo-camera/io.github.thibaultbee.streampack.app.data.rotation/-rotation-repository/-companion/index.html","searchKeys":["Companion","object Companion","io.github.thibaultbee.streampack.app.data.rotation.RotationRepository.Companion"]},{"name":"object Companion","description":"io.github.thibaultbee.streampack.app.models.EndpointType.Companion","location":"demo-camera/io.github.thibaultbee.streampack.app.models/-endpoint-type/-companion/index.html","searchKeys":["Companion","object Companion","io.github.thibaultbee.streampack.app.models.EndpointType.Companion"]},{"name":"object Companion","description":"io.github.thibaultbee.streampack.app.models.FileExtension.Companion","location":"demo-camera/io.github.thibaultbee.streampack.app.models/-file-extension/-companion/index.html","searchKeys":["Companion","object Companion","io.github.thibaultbee.streampack.app.models.FileExtension.Companion"]},{"name":"object Companion","description":"io.github.thibaultbee.streampack.app.ui.main.MainActivity.Companion","location":"demo-camera/io.github.thibaultbee.streampack.app.ui.main/-main-activity/-companion/index.html","searchKeys":["Companion","object Companion","io.github.thibaultbee.streampack.app.ui.main.MainActivity.Companion"]},{"name":"object Companion","description":"io.github.thibaultbee.streampack.app.ui.main.PreviewFragment.Companion","location":"demo-camera/io.github.thibaultbee.streampack.app.ui.main/-preview-fragment/-companion/index.html","searchKeys":["Companion","object Companion","io.github.thibaultbee.streampack.app.ui.main.PreviewFragment.Companion"]},{"name":"object Companion","description":"io.github.thibaultbee.streampack.app.ui.main.PreviewViewModel.Companion","location":"demo-camera/io.github.thibaultbee.streampack.app.ui.main/-preview-view-model/-companion/index.html","searchKeys":["Companion","object Companion","io.github.thibaultbee.streampack.app.ui.main.PreviewViewModel.Companion"]},{"name":"object Companion","description":"io.github.thibaultbee.streampack.app.utils.PermissionManager.Companion","location":"demo-camera/io.github.thibaultbee.streampack.app.utils/-permission-manager/-companion/index.html","searchKeys":["Companion","object Companion","io.github.thibaultbee.streampack.app.utils.PermissionManager.Companion"]},{"name":"object Connection","description":"io.github.thibaultbee.streampack.app.ApplicationConstants.Connection","location":"demo-camera/io.github.thibaultbee.streampack.app/-application-constants/-connection/index.html","searchKeys":["Connection","object Connection","io.github.thibaultbee.streampack.app.ApplicationConstants.Connection"]},{"name":"object DialogUtils","description":"io.github.thibaultbee.streampack.app.utils.DialogUtils","location":"demo-camera/io.github.thibaultbee.streampack.app.utils/-dialog-utils/index.html","searchKeys":["DialogUtils","object DialogUtils","io.github.thibaultbee.streampack.app.utils.DialogUtils"]},{"name":"object Video","description":"io.github.thibaultbee.streampack.app.ApplicationConstants.Video","location":"demo-camera/io.github.thibaultbee.streampack.app/-application-constants/-video/index.html","searchKeys":["Video","object Video","io.github.thibaultbee.streampack.app.ApplicationConstants.Video"]},{"name":"open override fun <T : ViewModel> create(modelClass: Class<T>): T","description":"io.github.thibaultbee.streampack.app.ui.main.PreviewViewModelFactory.create","location":"demo-camera/io.github.thibaultbee.streampack.app.ui.main/-preview-view-model-factory/create.html","searchKeys":["create","open override fun <T : ViewModel> create(modelClass: Class<T>): T","io.github.thibaultbee.streampack.app.ui.main.PreviewViewModelFactory.create"]},{"name":"open override fun addOnPropertyChangedCallback(callback: Observable.OnPropertyChangedCallback)","description":"io.github.thibaultbee.streampack.app.utils.ObservableViewModel.addOnPropertyChangedCallback","location":"demo-camera/io.github.thibaultbee.streampack.app.utils/-observable-view-model/add-on-property-changed-callback.html","searchKeys":["addOnPropertyChangedCallback","open override fun addOnPropertyChangedCallback(callback: Observable.OnPropertyChangedCallback)","io.github.thibaultbee.streampack.app.utils.ObservableViewModel.addOnPropertyChangedCallback"]},{"name":"open override fun getBoolean(key: String, defValue: Boolean): Boolean","description":"io.github.thibaultbee.streampack.app.data.storage.PreferencesDataStoreAdapter.getBoolean","location":"demo-camera/io.github.thibaultbee.streampack.app.data.storage/-preferences-data-store-adapter/get-boolean.html","searchKeys":["getBoolean","open override fun getBoolean(key: String, defValue: Boolean): Boolean","io.github.thibaultbee.streampack.app.data.storage.PreferencesDataStoreAdapter.getBoolean"]},{"name":"open override fun getFloat(key: String, defValue: Float): Float","description":"io.github.thibaultbee.streampack.app.data.storage.PreferencesDataStoreAdapter.getFloat","location":"demo-camera/io.github.thibaultbee.streampack.app.data.storage/-preferences-data-store-adapter/get-float.html","searchKeys":["getFloat","open override fun getFloat(key: String, defValue: Float): Float","io.github.thibaultbee.streampack.app.data.storage.PreferencesDataStoreAdapter.getFloat"]},{"name":"open override fun getInt(key: String, defValue: Int): Int","description":"io.github.thibaultbee.streampack.app.data.storage.PreferencesDataStoreAdapter.getInt","location":"demo-camera/io.github.thibaultbee.streampack.app.data.storage/-preferences-data-store-adapter/get-int.html","searchKeys":["getInt","open override fun getInt(key: String, defValue: Int): Int","io.github.thibaultbee.streampack.app.data.storage.PreferencesDataStoreAdapter.getInt"]},{"name":"open override fun getLong(key: String, defValue: Long): Long","description":"io.github.thibaultbee.streampack.app.data.storage.PreferencesDataStoreAdapter.getLong","location":"demo-camera/io.github.thibaultbee.streampack.app.data.storage/-preferences-data-store-adapter/get-long.html","searchKeys":["getLong","open override fun getLong(key: String, defValue: Long): Long","io.github.thibaultbee.streampack.app.data.storage.PreferencesDataStoreAdapter.getLong"]},{"name":"open override fun getString(key: String, defValue: String?): String?","description":"io.github.thibaultbee.streampack.app.data.storage.PreferencesDataStoreAdapter.getString","location":"demo-camera/io.github.thibaultbee.streampack.app.data.storage/-preferences-data-store-adapter/get-string.html","searchKeys":["getString","open override fun getString(key: String, defValue: String?): String?","io.github.thibaultbee.streampack.app.data.storage.PreferencesDataStoreAdapter.getString"]},{"name":"open override fun onCreateOptionsMenu(menu: Menu): Boolean","description":"io.github.thibaultbee.streampack.app.ui.main.MainActivity.onCreateOptionsMenu","location":"demo-camera/io.github.thibaultbee.streampack.app.ui.main/-main-activity/on-create-options-menu.html","searchKeys":["onCreateOptionsMenu","open override fun onCreateOptionsMenu(menu: Menu): Boolean","io.github.thibaultbee.streampack.app.ui.main.MainActivity.onCreateOptionsMenu"]},{"name":"open override fun onCreatePreferences(savedInstanceState: Bundle?, rootKey: String?)","description":"io.github.thibaultbee.streampack.app.ui.settings.SettingsFragment.onCreatePreferences","location":"demo-camera/io.github.thibaultbee.streampack.app.ui.settings/-settings-fragment/on-create-preferences.html","searchKeys":["onCreatePreferences","open override fun onCreatePreferences(savedInstanceState: Bundle?, rootKey: String?)","io.github.thibaultbee.streampack.app.ui.settings.SettingsFragment.onCreatePreferences"]},{"name":"open override fun onCreateView(inflater: LayoutInflater, container: ViewGroup?, savedInstanceState: Bundle?): View","description":"io.github.thibaultbee.streampack.app.ui.main.PreviewFragment.onCreateView","location":"demo-camera/io.github.thibaultbee.streampack.app.ui.main/-preview-fragment/on-create-view.html","searchKeys":["onCreateView","open override fun onCreateView(inflater: LayoutInflater, container: ViewGroup?, savedInstanceState: Bundle?): View","io.github.thibaultbee.streampack.app.ui.main.PreviewFragment.onCreateView"]},{"name":"open override fun onPause()","description":"io.github.thibaultbee.streampack.app.ui.main.PreviewFragment.onPause","location":"demo-camera/io.github.thibaultbee.streampack.app.ui.main/-preview-fragment/on-pause.html","searchKeys":["onPause","open override fun onPause()","io.github.thibaultbee.streampack.app.ui.main.PreviewFragment.onPause"]},{"name":"open override fun onResume()","description":"io.github.thibaultbee.streampack.app.ui.settings.SettingsFragment.onResume","location":"demo-camera/io.github.thibaultbee.streampack.app.ui.settings/-settings-fragment/on-resume.html","searchKeys":["onResume","open override fun onResume()","io.github.thibaultbee.streampack.app.ui.settings.SettingsFragment.onResume"]},{"name":"open override fun onStart()","description":"io.github.thibaultbee.streampack.app.ui.main.PreviewFragment.onStart","location":"demo-camera/io.github.thibaultbee.streampack.app.ui.main/-preview-fragment/on-start.html","searchKeys":["onStart","open override fun onStart()","io.github.thibaultbee.streampack.app.ui.main.PreviewFragment.onStart"]},{"name":"open override fun putBoolean(key: String, value: Boolean)","description":"io.github.thibaultbee.streampack.app.data.storage.PreferencesDataStoreAdapter.putBoolean","location":"demo-camera/io.github.thibaultbee.streampack.app.data.storage/-preferences-data-store-adapter/put-boolean.html","searchKeys":["putBoolean","open override fun putBoolean(key: String, value: Boolean)","io.github.thibaultbee.streampack.app.data.storage.PreferencesDataStoreAdapter.putBoolean"]},{"name":"open override fun putFloat(key: String, value: Float)","description":"io.github.thibaultbee.streampack.app.data.storage.PreferencesDataStoreAdapter.putFloat","location":"demo-camera/io.github.thibaultbee.streampack.app.data.storage/-preferences-data-store-adapter/put-float.html","searchKeys":["putFloat","open override fun putFloat(key: String, value: Float)","io.github.thibaultbee.streampack.app.data.storage.PreferencesDataStoreAdapter.putFloat"]},{"name":"open override fun putInt(key: String, value: Int)","description":"io.github.thibaultbee.streampack.app.data.storage.PreferencesDataStoreAdapter.putInt","location":"demo-camera/io.github.thibaultbee.streampack.app.data.storage/-preferences-data-store-adapter/put-int.html","searchKeys":["putInt","open override fun putInt(key: String, value: Int)","io.github.thibaultbee.streampack.app.data.storage.PreferencesDataStoreAdapter.putInt"]},{"name":"open override fun putLong(key: String, value: Long)","description":"io.github.thibaultbee.streampack.app.data.storage.PreferencesDataStoreAdapter.putLong","location":"demo-camera/io.github.thibaultbee.streampack.app.data.storage/-preferences-data-store-adapter/put-long.html","searchKeys":["putLong","open override fun putLong(key: String, value: Long)","io.github.thibaultbee.streampack.app.data.storage.PreferencesDataStoreAdapter.putLong"]},{"name":"open override fun putString(key: String, value: String?)","description":"io.github.thibaultbee.streampack.app.data.storage.PreferencesDataStoreAdapter.putString","location":"demo-camera/io.github.thibaultbee.streampack.app.data.storage/-preferences-data-store-adapter/put-string.html","searchKeys":["putString","open override fun putString(key: String, value: String?)","io.github.thibaultbee.streampack.app.data.storage.PreferencesDataStoreAdapter.putString"]},{"name":"open override fun removeOnPropertyChangedCallback(callback: Observable.OnPropertyChangedCallback)","description":"io.github.thibaultbee.streampack.app.utils.ObservableViewModel.removeOnPropertyChangedCallback","location":"demo-camera/io.github.thibaultbee.streampack.app.utils/-observable-view-model/remove-on-property-changed-callback.html","searchKeys":["removeOnPropertyChangedCallback","open override fun removeOnPropertyChangedCallback(callback: Observable.OnPropertyChangedCallback)","io.github.thibaultbee.streampack.app.utils.ObservableViewModel.removeOnPropertyChangedCallback"]},{"name":"operator fun invoke(previousStreamer: SingleStreamer? = null): SingleStreamer","description":"io.github.thibaultbee.streampack.app.ui.main.usecases.BuildStreamerUseCase.invoke","location":"demo-camera/io.github.thibaultbee.streampack.app.ui.main.usecases/-build-streamer-use-case/invoke.html","searchKeys":["invoke","operator fun invoke(previousStreamer: SingleStreamer? = null): SingleStreamer","io.github.thibaultbee.streampack.app.ui.main.usecases.BuildStreamerUseCase.invoke"]},{"name":"protected constructor(hasTSCapabilities: Boolean, hasFLVCapabilities: Boolean, hasMP4Capabilities: Boolean, hasFileCapabilities: Boolean, hasSrtCapabilities: Boolean, hasRtmpCapabilities: Boolean)","description":"io.github.thibaultbee.streampack.app.models.Endpoint.Endpoint","location":"demo-camera/io.github.thibaultbee.streampack.app.models/-endpoint/-endpoint.html","searchKeys":["Endpoint","protected constructor(hasTSCapabilities: Boolean, hasFLVCapabilities: Boolean, hasMP4Capabilities: Boolean, hasFileCapabilities: Boolean, hasSrtCapabilities: Boolean, hasRtmpCapabilities: Boolean)","io.github.thibaultbee.streampack.app.models.Endpoint.Endpoint"]},{"name":"protected open override fun onCleared()","description":"io.github.thibaultbee.streampack.app.ui.main.PreviewViewModel.onCleared","location":"demo-camera/io.github.thibaultbee.streampack.app.ui.main/-preview-view-model/on-cleared.html","searchKeys":["onCleared","protected open override fun onCleared()","io.github.thibaultbee.streampack.app.ui.main.PreviewViewModel.onCleared"]},{"name":"protected open override fun onCreate(savedInstanceState: Bundle?)","description":"io.github.thibaultbee.streampack.app.ui.main.MainActivity.onCreate","location":"demo-camera/io.github.thibaultbee.streampack.app.ui.main/-main-activity/on-create.html","searchKeys":["onCreate","protected open override fun onCreate(savedInstanceState: Bundle?)","io.github.thibaultbee.streampack.app.ui.main.MainActivity.onCreate"]},{"name":"protected open override fun onCreate(savedInstanceState: Bundle?)","description":"io.github.thibaultbee.streampack.app.ui.settings.SettingsActivity.onCreate","location":"demo-camera/io.github.thibaultbee.streampack.app.ui.settings/-settings-activity/on-create.html","searchKeys":["onCreate","protected open override fun onCreate(savedInstanceState: Bundle?)","io.github.thibaultbee.streampack.app.ui.settings.SettingsActivity.onCreate"]},{"name":"sealed class Endpoint(val hasTSCapabilities: Boolean, val hasFLVCapabilities: Boolean, val hasMP4Capabilities: Boolean, val hasFileCapabilities: Boolean, val hasSrtCapabilities: Boolean, val hasRtmpCapabilities: Boolean)","description":"io.github.thibaultbee.streampack.app.models.Endpoint","location":"demo-camera/io.github.thibaultbee.streampack.app.models/-endpoint/index.html","searchKeys":["Endpoint","sealed class Endpoint(val hasTSCapabilities: Boolean, val hasFLVCapabilities: Boolean, val hasMP4Capabilities: Boolean, val hasFileCapabilities: Boolean, val hasSrtCapabilities: Boolean, val hasRtmpCapabilities: Boolean)","io.github.thibaultbee.streampack.app.models.Endpoint"]},{"name":"suspend fun IWithVideoSource.setNextCameraId(context: Context)","description":"io.github.thibaultbee.streampack.app.utils.setNextCameraId","location":"demo-camera/io.github.thibaultbee.streampack.app.utils/set-next-camera-id.html","searchKeys":["setNextCameraId","suspend fun IWithVideoSource.setNextCameraId(context: Context)","io.github.thibaultbee.streampack.app.utils.setNextCameraId"]},{"name":"suspend fun IWithVideoSource.toggleBackToFront(context: Context)","description":"io.github.thibaultbee.streampack.app.utils.toggleBackToFront","location":"demo-camera/io.github.thibaultbee.streampack.app.utils/toggle-back-to-front.html","searchKeys":["toggleBackToFront","suspend fun IWithVideoSource.toggleBackToFront(context: Context)","io.github.thibaultbee.streampack.app.utils.toggleBackToFront"]},{"name":"val Context.dataStore: DataStore<Preferences>","description":"io.github.thibaultbee.streampack.app.utils.dataStore","location":"demo-camera/io.github.thibaultbee.streampack.app.utils/data-store.html","searchKeys":["dataStore","val Context.dataStore: DataStore<Preferences>","io.github.thibaultbee.streampack.app.utils.dataStore"]},{"name":"val Range<*>.isEmpty: Boolean","description":"io.github.thibaultbee.streampack.app.utils.isEmpty","location":"demo-camera/io.github.thibaultbee.streampack.app.utils/is-empty.html","searchKeys":["isEmpty","val Range<*>.isEmpty: Boolean","io.github.thibaultbee.streampack.app.utils.isEmpty"]},{"name":"val audioConfigFlow: Flow<AudioConfig?>","description":"io.github.thibaultbee.streampack.app.data.storage.DataStoreRepository.audioConfigFlow","location":"demo-camera/io.github.thibaultbee.streampack.app.data.storage/-data-store-repository/audio-config-flow.html","searchKeys":["audioConfigFlow","val audioConfigFlow: Flow<AudioConfig?>","io.github.thibaultbee.streampack.app.data.storage.DataStoreRepository.audioConfigFlow"]},{"name":"val bitrateRegulatorConfigFlow: Flow<BitrateRegulatorConfig?>","description":"io.github.thibaultbee.streampack.app.data.storage.DataStoreRepository.bitrateRegulatorConfigFlow","location":"demo-camera/io.github.thibaultbee.streampack.app.data.storage/-data-store-repository/bitrate-regulator-config-flow.html","searchKeys":["bitrateRegulatorConfigFlow","val bitrateRegulatorConfigFlow: Flow<BitrateRegulatorConfig?>","io.github.thibaultbee.streampack.app.data.storage.DataStoreRepository.bitrateRegulatorConfigFlow"]},{"name":"val defaultBitrateInBps: Int","description":"io.github.thibaultbee.streampack.app.ApplicationConstants.Audio.defaultBitrateInBps","location":"demo-camera/io.github.thibaultbee.streampack.app/-application-constants/-audio/default-bitrate-in-bps.html","searchKeys":["defaultBitrateInBps","val defaultBitrateInBps: Int","io.github.thibaultbee.streampack.app.ApplicationConstants.Audio.defaultBitrateInBps"]},{"name":"val defaultBitrateInBps: Int","description":"io.github.thibaultbee.streampack.app.ApplicationConstants.Video.defaultBitrateInBps","location":"demo-camera/io.github.thibaultbee.streampack.app/-application-constants/-video/default-bitrate-in-bps.html","searchKeys":["defaultBitrateInBps","val defaultBitrateInBps: Int","io.github.thibaultbee.streampack.app.ApplicationConstants.Video.defaultBitrateInBps"]},{"name":"val defaultByteFormat: Int","description":"io.github.thibaultbee.streampack.app.ApplicationConstants.Audio.defaultByteFormat","location":"demo-camera/io.github.thibaultbee.streampack.app/-application-constants/-audio/default-byte-format.html","searchKeys":["defaultByteFormat","val defaultByteFormat: Int","io.github.thibaultbee.streampack.app.ApplicationConstants.Audio.defaultByteFormat"]},{"name":"val defaultChannelConfig: Int","description":"io.github.thibaultbee.streampack.app.ApplicationConstants.Audio.defaultChannelConfig","location":"demo-camera/io.github.thibaultbee.streampack.app/-application-constants/-audio/default-channel-config.html","searchKeys":["defaultChannelConfig","val defaultChannelConfig: Int","io.github.thibaultbee.streampack.app.ApplicationConstants.Audio.defaultChannelConfig"]},{"name":"val defaultEncoder: String","description":"io.github.thibaultbee.streampack.app.ApplicationConstants.Audio.defaultEncoder","location":"demo-camera/io.github.thibaultbee.streampack.app/-application-constants/-audio/default-encoder.html","searchKeys":["defaultEncoder","val defaultEncoder: String","io.github.thibaultbee.streampack.app.ApplicationConstants.Audio.defaultEncoder"]},{"name":"val defaultEncoder: String","description":"io.github.thibaultbee.streampack.app.ApplicationConstants.Video.defaultEncoder","location":"demo-camera/io.github.thibaultbee.streampack.app/-application-constants/-video/default-encoder.html","searchKeys":["defaultEncoder","val defaultEncoder: String","io.github.thibaultbee.streampack.app.ApplicationConstants.Video.defaultEncoder"]},{"name":"val defaultFps: Int","description":"io.github.thibaultbee.streampack.app.ApplicationConstants.Video.defaultFps","location":"demo-camera/io.github.thibaultbee.streampack.app/-application-constants/-video/default-fps.html","searchKeys":["defaultFps","val defaultFps: Int","io.github.thibaultbee.streampack.app.ApplicationConstants.Video.defaultFps"]},{"name":"val defaultResolution: Size","description":"io.github.thibaultbee.streampack.app.ApplicationConstants.Video.defaultResolution","location":"demo-camera/io.github.thibaultbee.streampack.app/-application-constants/-video/default-resolution.html","searchKeys":["defaultResolution","val defaultResolution: Size","io.github.thibaultbee.streampack.app.ApplicationConstants.Video.defaultResolution"]},{"name":"val defaultSampleRate: Int","description":"io.github.thibaultbee.streampack.app.ApplicationConstants.Audio.defaultSampleRate","location":"demo-camera/io.github.thibaultbee.streampack.app/-application-constants/-audio/default-sample-rate.html","searchKeys":["defaultSampleRate","val defaultSampleRate: Int","io.github.thibaultbee.streampack.app.ApplicationConstants.Audio.defaultSampleRate"]},{"name":"val endpointDescriptorFlow: Flow<MediaDescriptor>","description":"io.github.thibaultbee.streampack.app.data.storage.DataStoreRepository.endpointDescriptorFlow","location":"demo-camera/io.github.thibaultbee.streampack.app.data.storage/-data-store-repository/endpoint-descriptor-flow.html","searchKeys":["endpointDescriptorFlow","val endpointDescriptorFlow: Flow<MediaDescriptor>","io.github.thibaultbee.streampack.app.data.storage.DataStoreRepository.endpointDescriptorFlow"]},{"name":"val endpointErrorLiveData: LiveData<String>","description":"io.github.thibaultbee.streampack.app.ui.main.PreviewViewModel.endpointErrorLiveData","location":"demo-camera/io.github.thibaultbee.streampack.app.ui.main/-preview-view-model/endpoint-error-live-data.html","searchKeys":["endpointErrorLiveData","val endpointErrorLiveData: LiveData<String>","io.github.thibaultbee.streampack.app.ui.main.PreviewViewModel.endpointErrorLiveData"]},{"name":"val entries: EnumEntries<EndpointType>","description":"io.github.thibaultbee.streampack.app.models.EndpointType.entries","location":"demo-camera/io.github.thibaultbee.streampack.app.models/-endpoint-type/entries.html","searchKeys":["entries","val entries: EnumEntries<EndpointType>","io.github.thibaultbee.streampack.app.models.EndpointType.entries"]},{"name":"val entries: EnumEntries<FileExtension>","description":"io.github.thibaultbee.streampack.app.models.FileExtension.entries","location":"demo-camera/io.github.thibaultbee.streampack.app.models/-file-extension/entries.html","searchKeys":["entries","val entries: EnumEntries<FileExtension>","io.github.thibaultbee.streampack.app.models.FileExtension.entries"]},{"name":"val exposureCompensationRange: MutableLiveData<Range<Int>>","description":"io.github.thibaultbee.streampack.app.ui.main.PreviewViewModel.exposureCompensationRange","location":"demo-camera/io.github.thibaultbee.streampack.app.ui.main/-preview-view-model/exposure-compensation-range.html","searchKeys":["exposureCompensationRange","val exposureCompensationRange: MutableLiveData<Range<Int>>","io.github.thibaultbee.streampack.app.ui.main.PreviewViewModel.exposureCompensationRange"]},{"name":"val exposureCompensationStep: MutableLiveData<Rational>","description":"io.github.thibaultbee.streampack.app.ui.main.PreviewViewModel.exposureCompensationStep","location":"demo-camera/io.github.thibaultbee.streampack.app.ui.main/-preview-view-model/exposure-compensation-step.html","searchKeys":["exposureCompensationStep","val exposureCompensationStep: MutableLiveData<Rational>","io.github.thibaultbee.streampack.app.ui.main.PreviewViewModel.exposureCompensationStep"]},{"name":"val extension: String","description":"io.github.thibaultbee.streampack.app.models.FileExtension.extension","location":"demo-camera/io.github.thibaultbee.streampack.app.models/-file-extension/extension.html","searchKeys":["extension","val extension: String","io.github.thibaultbee.streampack.app.models.FileExtension.extension"]},{"name":"val hasFLVCapabilities: Boolean","description":"io.github.thibaultbee.streampack.app.models.Endpoint.hasFLVCapabilities","location":"demo-camera/io.github.thibaultbee.streampack.app.models/-endpoint/has-f-l-v-capabilities.html","searchKeys":["hasFLVCapabilities","val hasFLVCapabilities: Boolean","io.github.thibaultbee.streampack.app.models.Endpoint.hasFLVCapabilities"]},{"name":"val hasFileCapabilities: Boolean","description":"io.github.thibaultbee.streampack.app.models.Endpoint.hasFileCapabilities","location":"demo-camera/io.github.thibaultbee.streampack.app.models/-endpoint/has-file-capabilities.html","searchKeys":["hasFileCapabilities","val hasFileCapabilities: Boolean","io.github.thibaultbee.streampack.app.models.Endpoint.hasFileCapabilities"]},{"name":"val hasMP4Capabilities: Boolean","description":"io.github.thibaultbee.streampack.app.models.Endpoint.hasMP4Capabilities","location":"demo-camera/io.github.thibaultbee.streampack.app.models/-endpoint/has-m-p4-capabilities.html","searchKeys":["hasMP4Capabilities","val hasMP4Capabilities: Boolean","io.github.thibaultbee.streampack.app.models.Endpoint.hasMP4Capabilities"]},{"name":"val hasRtmpCapabilities: Boolean","description":"io.github.thibaultbee.streampack.app.models.Endpoint.hasRtmpCapabilities","location":"demo-camera/io.github.thibaultbee.streampack.app.models/-endpoint/has-rtmp-capabilities.html","searchKeys":["hasRtmpCapabilities","val hasRtmpCapabilities: Boolean","io.github.thibaultbee.streampack.app.models.Endpoint.hasRtmpCapabilities"]},{"name":"val hasSrtCapabilities: Boolean","description":"io.github.thibaultbee.streampack.app.models.Endpoint.hasSrtCapabilities","location":"demo-camera/io.github.thibaultbee.streampack.app.models/-endpoint/has-srt-capabilities.html","searchKeys":["hasSrtCapabilities","val hasSrtCapabilities: Boolean","io.github.thibaultbee.streampack.app.models.Endpoint.hasSrtCapabilities"]},{"name":"val hasTSCapabilities: Boolean","description":"io.github.thibaultbee.streampack.app.models.Endpoint.hasTSCapabilities","location":"demo-camera/io.github.thibaultbee.streampack.app.models/-endpoint/has-t-s-capabilities.html","searchKeys":["hasTSCapabilities","val hasTSCapabilities: Boolean","io.github.thibaultbee.streampack.app.models.Endpoint.hasTSCapabilities"]},{"name":"val id: Int","description":"io.github.thibaultbee.streampack.app.models.EndpointType.id","location":"demo-camera/io.github.thibaultbee.streampack.app.models/-endpoint-type/id.html","searchKeys":["id","val id: Int","io.github.thibaultbee.streampack.app.models.EndpointType.id"]},{"name":"val isAudioEnableFlow: Flow<Boolean>","description":"io.github.thibaultbee.streampack.app.data.storage.DataStoreRepository.isAudioEnableFlow","location":"demo-camera/io.github.thibaultbee.streampack.app.data.storage/-data-store-repository/is-audio-enable-flow.html","searchKeys":["isAudioEnableFlow","val isAudioEnableFlow: Flow<Boolean>","io.github.thibaultbee.streampack.app.data.storage.DataStoreRepository.isAudioEnableFlow"]},{"name":"val isAutoFocusModeAvailable: MutableLiveData<Boolean>","description":"io.github.thibaultbee.streampack.app.ui.main.PreviewViewModel.isAutoFocusModeAvailable","location":"demo-camera/io.github.thibaultbee.streampack.app.ui.main/-preview-view-model/is-auto-focus-mode-available.html","searchKeys":["isAutoFocusModeAvailable","val isAutoFocusModeAvailable: MutableLiveData<Boolean>","io.github.thibaultbee.streampack.app.ui.main.PreviewViewModel.isAutoFocusModeAvailable"]},{"name":"val isAutoWhiteBalanceAvailable: MutableLiveData<Boolean>","description":"io.github.thibaultbee.streampack.app.ui.main.PreviewViewModel.isAutoWhiteBalanceAvailable","location":"demo-camera/io.github.thibaultbee.streampack.app.ui.main/-preview-view-model/is-auto-white-balance-available.html","searchKeys":["isAutoWhiteBalanceAvailable","val isAutoWhiteBalanceAvailable: MutableLiveData<Boolean>","io.github.thibaultbee.streampack.app.ui.main.PreviewViewModel.isAutoWhiteBalanceAvailable"]},{"name":"val isCameraSource: LiveData<Boolean>?","description":"io.github.thibaultbee.streampack.app.ui.main.PreviewViewModel.isCameraSource","location":"demo-camera/io.github.thibaultbee.streampack.app.ui.main/-preview-view-model/is-camera-source.html","searchKeys":["isCameraSource","val isCameraSource: LiveData<Boolean>?","io.github.thibaultbee.streampack.app.ui.main.PreviewViewModel.isCameraSource"]},{"name":"val isExposureCompensationAvailable: MutableLiveData<Boolean>","description":"io.github.thibaultbee.streampack.app.ui.main.PreviewViewModel.isExposureCompensationAvailable","location":"demo-camera/io.github.thibaultbee.streampack.app.ui.main/-preview-view-model/is-exposure-compensation-available.html","searchKeys":["isExposureCompensationAvailable","val isExposureCompensationAvailable: MutableLiveData<Boolean>","io.github.thibaultbee.streampack.app.ui.main.PreviewViewModel.isExposureCompensationAvailable"]},{"name":"val isFlashAvailable: MutableLiveData<Boolean>","description":"io.github.thibaultbee.streampack.app.ui.main.PreviewViewModel.isFlashAvailable","location":"demo-camera/io.github.thibaultbee.streampack.app.ui.main/-preview-view-model/is-flash-available.html","searchKeys":["isFlashAvailable","val isFlashAvailable: MutableLiveData<Boolean>","io.github.thibaultbee.streampack.app.ui.main.PreviewViewModel.isFlashAvailable"]},{"name":"val isStreamingLiveData: LiveData<Boolean>","description":"io.github.thibaultbee.streampack.app.ui.main.PreviewViewModel.isStreamingLiveData","location":"demo-camera/io.github.thibaultbee.streampack.app.ui.main/-preview-view-model/is-streaming-live-data.html","searchKeys":["isStreamingLiveData","val isStreamingLiveData: LiveData<Boolean>","io.github.thibaultbee.streampack.app.ui.main.PreviewViewModel.isStreamingLiveData"]},{"name":"val isTryingConnectionLiveData: LiveData<Boolean>","description":"io.github.thibaultbee.streampack.app.ui.main.PreviewViewModel.isTryingConnectionLiveData","location":"demo-camera/io.github.thibaultbee.streampack.app.ui.main/-preview-view-model/is-trying-connection-live-data.html","searchKeys":["isTryingConnectionLiveData","val isTryingConnectionLiveData: LiveData<Boolean>","io.github.thibaultbee.streampack.app.ui.main.PreviewViewModel.isTryingConnectionLiveData"]},{"name":"val isVideoEnableFlow: Flow<Boolean>","description":"io.github.thibaultbee.streampack.app.data.storage.DataStoreRepository.isVideoEnableFlow","location":"demo-camera/io.github.thibaultbee.streampack.app.data.storage/-data-store-repository/is-video-enable-flow.html","searchKeys":["isVideoEnableFlow","val isVideoEnableFlow: Flow<Boolean>","io.github.thibaultbee.streampack.app.data.storage.DataStoreRepository.isVideoEnableFlow"]},{"name":"val isZoomAvailable: MutableLiveData<Boolean>","description":"io.github.thibaultbee.streampack.app.ui.main.PreviewViewModel.isZoomAvailable","location":"demo-camera/io.github.thibaultbee.streampack.app.ui.main/-preview-view-model/is-zoom-available.html","searchKeys":["isZoomAvailable","val isZoomAvailable: MutableLiveData<Boolean>","io.github.thibaultbee.streampack.app.ui.main.PreviewViewModel.isZoomAvailable"]},{"name":"val lensDistanceRange: MutableLiveData<Range<Float>>","description":"io.github.thibaultbee.streampack.app.ui.main.PreviewViewModel.lensDistanceRange","location":"demo-camera/io.github.thibaultbee.streampack.app.ui.main/-preview-view-model/lens-distance-range.html","searchKeys":["lensDistanceRange","val lensDistanceRange: MutableLiveData<Range<Float>>","io.github.thibaultbee.streampack.app.ui.main.PreviewViewModel.lensDistanceRange"]},{"name":"val requiredPermissions: List<String>","description":"io.github.thibaultbee.streampack.app.ui.main.PreviewViewModel.requiredPermissions","location":"demo-camera/io.github.thibaultbee.streampack.app.ui.main/-preview-view-model/required-permissions.html","searchKeys":["requiredPermissions","val requiredPermissions: List<String>","io.github.thibaultbee.streampack.app.ui.main.PreviewViewModel.requiredPermissions"]},{"name":"val rotationFlow: Flow<Int>","description":"io.github.thibaultbee.streampack.app.data.rotation.RotationRepository.rotationFlow","location":"demo-camera/io.github.thibaultbee.streampack.app.data.rotation/-rotation-repository/rotation-flow.html","searchKeys":["rotationFlow","val rotationFlow: Flow<Int>","io.github.thibaultbee.streampack.app.data.rotation.RotationRepository.rotationFlow"]},{"name":"val showExposureSlider: MutableLiveData<Boolean>","description":"io.github.thibaultbee.streampack.app.ui.main.PreviewViewModel.showExposureSlider","location":"demo-camera/io.github.thibaultbee.streampack.app.ui.main/-preview-view-model/show-exposure-slider.html","searchKeys":["showExposureSlider","val showExposureSlider: MutableLiveData<Boolean>","io.github.thibaultbee.streampack.app.ui.main.PreviewViewModel.showExposureSlider"]},{"name":"val showLensDistanceSlider: MutableLiveData<Boolean>","description":"io.github.thibaultbee.streampack.app.ui.main.PreviewViewModel.showLensDistanceSlider","location":"demo-camera/io.github.thibaultbee.streampack.app.ui.main/-preview-view-model/show-lens-distance-slider.html","searchKeys":["showLensDistanceSlider","val showLensDistanceSlider: MutableLiveData<Boolean>","io.github.thibaultbee.streampack.app.ui.main.PreviewViewModel.showLensDistanceSlider"]},{"name":"val showZoomSlider: MutableLiveData<Boolean>","description":"io.github.thibaultbee.streampack.app.ui.main.PreviewViewModel.showZoomSlider","location":"demo-camera/io.github.thibaultbee.streampack.app.ui.main/-preview-view-model/show-zoom-slider.html","searchKeys":["showZoomSlider","val showZoomSlider: MutableLiveData<Boolean>","io.github.thibaultbee.streampack.app.ui.main.PreviewViewModel.showZoomSlider"]},{"name":"val streamerErrorLiveData: LiveData<String>","description":"io.github.thibaultbee.streampack.app.ui.main.PreviewViewModel.streamerErrorLiveData","location":"demo-camera/io.github.thibaultbee.streampack.app.ui.main/-preview-view-model/streamer-error-live-data.html","searchKeys":["streamerErrorLiveData","val streamerErrorLiveData: LiveData<String>","io.github.thibaultbee.streampack.app.ui.main.PreviewViewModel.streamerErrorLiveData"]},{"name":"val streamerLiveData: LiveData<SingleStreamer>","description":"io.github.thibaultbee.streampack.app.ui.main.PreviewViewModel.streamerLiveData","location":"demo-camera/io.github.thibaultbee.streampack.app.ui.main/-preview-view-model/streamer-live-data.html","searchKeys":["streamerLiveData","val streamerLiveData: LiveData<SingleStreamer>","io.github.thibaultbee.streampack.app.ui.main.PreviewViewModel.streamerLiveData"]},{"name":"val videoConfigFlow: Flow<VideoConfig?>","description":"io.github.thibaultbee.streampack.app.data.storage.DataStoreRepository.videoConfigFlow","location":"demo-camera/io.github.thibaultbee.streampack.app.data.storage/-data-store-repository/video-config-flow.html","searchKeys":["videoConfigFlow","val videoConfigFlow: Flow<VideoConfig?>","io.github.thibaultbee.streampack.app.data.storage.DataStoreRepository.videoConfigFlow"]},{"name":"val zoomRatioRange: MutableLiveData<Range<Float>>","description":"io.github.thibaultbee.streampack.app.ui.main.PreviewViewModel.zoomRatioRange","location":"demo-camera/io.github.thibaultbee.streampack.app.ui.main/-preview-view-model/zoom-ratio-range.html","searchKeys":["zoomRatioRange","val zoomRatioRange: MutableLiveData<Range<Float>>","io.github.thibaultbee.streampack.app.ui.main.PreviewViewModel.zoomRatioRange"]},{"name":"var exposureCompensation: Float","description":"io.github.thibaultbee.streampack.app.ui.main.PreviewViewModel.exposureCompensation","location":"demo-camera/io.github.thibaultbee.streampack.app.ui.main/-preview-view-model/exposure-compensation.html","searchKeys":["exposureCompensation","var exposureCompensation: Float","io.github.thibaultbee.streampack.app.ui.main.PreviewViewModel.exposureCompensation"]},{"name":"var lensDistance: Float","description":"io.github.thibaultbee.streampack.app.ui.main.PreviewViewModel.lensDistance","location":"demo-camera/io.github.thibaultbee.streampack.app.ui.main/-preview-view-model/lens-distance.html","searchKeys":["lensDistance","var lensDistance: Float","io.github.thibaultbee.streampack.app.ui.main.PreviewViewModel.lensDistance"]},{"name":"var zoomRatio: Float","description":"io.github.thibaultbee.streampack.app.ui.main.PreviewViewModel.zoomRatio","location":"demo-camera/io.github.thibaultbee.streampack.app.ui.main/-preview-view-model/zoom-ratio.html","searchKeys":["zoomRatio","var zoomRatio: Float","io.github.thibaultbee.streampack.app.ui.main.PreviewViewModel.zoomRatio"]},{"name":"abstract class MediaProjectionService<T : IStreamer>(streamerFactory: StreamerFactory<T>, notificationId: Int = DEFAULT_NOTIFICATION_ID, channelId: String = DEFAULT_NOTIFICATION_CHANNEL_ID, channelNameResourceId: Int = R.string.default_channel_name, channelDescriptionResourceId: Int = 0, notificationIconResourceId: Int = R.drawable.ic_baseline_linked_camera_24) : StreamerService<T> ","description":"io.github.thibaultbee.streampack.services.MediaProjectionService","location":"streampack-services/io.github.thibaultbee.streampack.services/-media-projection-service/index.html","searchKeys":["MediaProjectionService","abstract class MediaProjectionService<T : IStreamer>(streamerFactory: StreamerFactory<T>, notificationId: Int = DEFAULT_NOTIFICATION_ID, channelId: String = DEFAULT_NOTIFICATION_CHANNEL_ID, channelNameResourceId: Int = R.string.default_channel_name, channelDescriptionResourceId: Int = 0, notificationIconResourceId: Int = R.drawable.ic_baseline_linked_camera_24) : StreamerService<T> ","io.github.thibaultbee.streampack.services.MediaProjectionService"]},{"name":"abstract class StreamerService<T : IStreamer>(streamerFactory: StreamerFactory<T>, notificationId: Int = DEFAULT_NOTIFICATION_ID, val channelId: String = DEFAULT_NOTIFICATION_CHANNEL_ID, val channelNameResourceId: Int = R.string.default_channel_name, val channelDescriptionResourceId: Int = 0, val notificationIconResourceId: Int = R.drawable.ic_baseline_linked_camera_24) : LifecycleService, IRotationProvider.Listener","description":"io.github.thibaultbee.streampack.services.StreamerService","location":"streampack-services/io.github.thibaultbee.streampack.services/-streamer-service/index.html","searchKeys":["StreamerService","abstract class StreamerService<T : IStreamer>(streamerFactory: StreamerFactory<T>, notificationId: Int = DEFAULT_NOTIFICATION_ID, val channelId: String = DEFAULT_NOTIFICATION_CHANNEL_ID, val channelNameResourceId: Int = R.string.default_channel_name, val channelDescriptionResourceId: Int = 0, val notificationIconResourceId: Int = R.drawable.ic_baseline_linked_camera_24) : LifecycleService, IRotationProvider.Listener","io.github.thibaultbee.streampack.services.StreamerService"]},{"name":"abstract fun create(context: Context): T","description":"io.github.thibaultbee.streampack.services.utils.StreamerFactory.create","location":"streampack-services/io.github.thibaultbee.streampack.services.utils/-streamer-factory/create.html","searchKeys":["create","abstract fun create(context: Context): T","io.github.thibaultbee.streampack.services.utils.StreamerFactory.create"]},{"name":"class NotificationUtils(service: Service, channelId: String, notificationId: Int)","description":"io.github.thibaultbee.streampack.services.utils.NotificationUtils","location":"streampack-services/io.github.thibaultbee.streampack.services.utils/-notification-utils/index.html","searchKeys":["NotificationUtils","class NotificationUtils(service: Service, channelId: String, notificationId: Int)","io.github.thibaultbee.streampack.services.utils.NotificationUtils"]},{"name":"const val USER_BUNDLE_KEY: String","description":"io.github.thibaultbee.streampack.services.StreamerService.Companion.USER_BUNDLE_KEY","location":"streampack-services/io.github.thibaultbee.streampack.services/-streamer-service/-companion/-u-s-e-r_-b-u-n-d-l-e_-k-e-y.html","searchKeys":["USER_BUNDLE_KEY","const val USER_BUNDLE_KEY: String","io.github.thibaultbee.streampack.services.StreamerService.Companion.USER_BUNDLE_KEY"]},{"name":"constructor()","description":"io.github.thibaultbee.streampack.services.StreamerService.StreamerServiceBinder.StreamerServiceBinder","location":"streampack-services/io.github.thibaultbee.streampack.services/-streamer-service/-streamer-service-binder/-streamer-service-binder.html","searchKeys":["StreamerServiceBinder","constructor()","io.github.thibaultbee.streampack.services.StreamerService.StreamerServiceBinder.StreamerServiceBinder"]},{"name":"constructor(service: Service, channelId: String, notificationId: Int)","description":"io.github.thibaultbee.streampack.services.utils.NotificationUtils.NotificationUtils","location":"streampack-services/io.github.thibaultbee.streampack.services.utils/-notification-utils/-notification-utils.html","searchKeys":["NotificationUtils","constructor(service: Service, channelId: String, notificationId: Int)","io.github.thibaultbee.streampack.services.utils.NotificationUtils.NotificationUtils"]},{"name":"constructor(streamerFactory: StreamerFactory<T>, notificationId: Int = DEFAULT_NOTIFICATION_ID, channelId: String = DEFAULT_NOTIFICATION_CHANNEL_ID, channelNameResourceId: Int = R.string.default_channel_name, channelDescriptionResourceId: Int = 0, notificationIconResourceId: Int = R.drawable.ic_baseline_linked_camera_24)","description":"io.github.thibaultbee.streampack.services.MediaProjectionService.MediaProjectionService","location":"streampack-services/io.github.thibaultbee.streampack.services/-media-projection-service/-media-projection-service.html","searchKeys":["MediaProjectionService","constructor(streamerFactory: StreamerFactory<T>, notificationId: Int = DEFAULT_NOTIFICATION_ID, channelId: String = DEFAULT_NOTIFICATION_CHANNEL_ID, channelNameResourceId: Int = R.string.default_channel_name, channelDescriptionResourceId: Int = 0, notificationIconResourceId: Int = R.drawable.ic_baseline_linked_camera_24)","io.github.thibaultbee.streampack.services.MediaProjectionService.MediaProjectionService"]},{"name":"constructor(streamerFactory: StreamerFactory<T>, notificationId: Int = DEFAULT_NOTIFICATION_ID, channelId: String = DEFAULT_NOTIFICATION_CHANNEL_ID, channelNameResourceId: Int = R.string.default_channel_name, channelDescriptionResourceId: Int = 0, notificationIconResourceId: Int = R.drawable.ic_baseline_linked_camera_24)","description":"io.github.thibaultbee.streampack.services.StreamerService.StreamerService","location":"streampack-services/io.github.thibaultbee.streampack.services/-streamer-service/-streamer-service.html","searchKeys":["StreamerService","constructor(streamerFactory: StreamerFactory<T>, notificationId: Int = DEFAULT_NOTIFICATION_ID, channelId: String = DEFAULT_NOTIFICATION_CHANNEL_ID, channelNameResourceId: Int = R.string.default_channel_name, channelDescriptionResourceId: Int = 0, notificationIconResourceId: Int = R.drawable.ic_baseline_linked_camera_24)","io.github.thibaultbee.streampack.services.StreamerService.StreamerService"]},{"name":"constructor(withAudio: Boolean, withVideo: Boolean, defaultRotation: Int? = null)","description":"io.github.thibaultbee.streampack.services.utils.DualStreamerFactory.DualStreamerFactory","location":"streampack-services/io.github.thibaultbee.streampack.services.utils/-dual-streamer-factory/-dual-streamer-factory.html","searchKeys":["DualStreamerFactory","constructor(withAudio: Boolean, withVideo: Boolean, defaultRotation: Int? = null)","io.github.thibaultbee.streampack.services.utils.DualStreamerFactory.DualStreamerFactory"]},{"name":"constructor(withAudio: Boolean, withVideo: Boolean, defaultRotation: Int? = null)","description":"io.github.thibaultbee.streampack.services.utils.SingleStreamerFactory.SingleStreamerFactory","location":"streampack-services/io.github.thibaultbee.streampack.services.utils/-single-streamer-factory/-single-streamer-factory.html","searchKeys":["SingleStreamerFactory","constructor(withAudio: Boolean, withVideo: Boolean, defaultRotation: Int? = null)","io.github.thibaultbee.streampack.services.utils.SingleStreamerFactory.SingleStreamerFactory"]},{"name":"fun bindService(context: Context, serviceClass: Class<out MediaProjectionService<*>>, resultCode: Int, resultData: Intent, onServiceCreated: (IStreamer) -> Unit, onServiceDisconnected: (name: ComponentName?) -> Unit = {}, onExtra: (Intent) -> Unit = {}): ServiceConnection","description":"io.github.thibaultbee.streampack.services.MediaProjectionService.Companion.bindService","location":"streampack-services/io.github.thibaultbee.streampack.services/-media-projection-service/-companion/bind-service.html","searchKeys":["bindService","fun bindService(context: Context, serviceClass: Class<out MediaProjectionService<*>>, resultCode: Int, resultData: Intent, onServiceCreated: (IStreamer) -> Unit, onServiceDisconnected: (name: ComponentName?) -> Unit = {}, onExtra: (Intent) -> Unit = {}): ServiceConnection","io.github.thibaultbee.streampack.services.MediaProjectionService.Companion.bindService"]},{"name":"fun bindService(context: Context, serviceClass: Class<out StreamerService<*>>, connection: ServiceConnection, onExtra: (Intent) -> Unit = {})","description":"io.github.thibaultbee.streampack.services.StreamerService.Companion.bindService","location":"streampack-services/io.github.thibaultbee.streampack.services/-streamer-service/-companion/bind-service.html","searchKeys":["bindService","fun bindService(context: Context, serviceClass: Class<out StreamerService<*>>, connection: ServiceConnection, onExtra: (Intent) -> Unit = {})","io.github.thibaultbee.streampack.services.StreamerService.Companion.bindService"]},{"name":"fun bindService(context: Context, serviceClass: Class<out StreamerService<*>>, onServiceCreated: (IStreamer) -> Unit, onServiceDisconnected: (name: ComponentName?) -> Unit = {}, onExtra: (Intent) -> Unit = {}): ServiceConnection","description":"io.github.thibaultbee.streampack.services.StreamerService.Companion.bindService","location":"streampack-services/io.github.thibaultbee.streampack.services/-streamer-service/-companion/bind-service.html","searchKeys":["bindService","fun bindService(context: Context, serviceClass: Class<out StreamerService<*>>, onServiceCreated: (IStreamer) -> Unit, onServiceDisconnected: (name: ComponentName?) -> Unit = {}, onExtra: (Intent) -> Unit = {}): ServiceConnection","io.github.thibaultbee.streampack.services.StreamerService.Companion.bindService"]},{"name":"fun cancel()","description":"io.github.thibaultbee.streampack.services.utils.NotificationUtils.cancel","location":"streampack-services/io.github.thibaultbee.streampack.services.utils/-notification-utils/cancel.html","searchKeys":["cancel","fun cancel()","io.github.thibaultbee.streampack.services.utils.NotificationUtils.cancel"]},{"name":"fun createNotification(title: String, content: String? = null, iconResourceId: Int): Notification","description":"io.github.thibaultbee.streampack.services.utils.NotificationUtils.createNotification","location":"streampack-services/io.github.thibaultbee.streampack.services.utils/-notification-utils/create-notification.html","searchKeys":["createNotification","fun createNotification(title: String, content: String? = null, iconResourceId: Int): Notification","io.github.thibaultbee.streampack.services.utils.NotificationUtils.createNotification"]},{"name":"fun createNotification(titleResourceId: Int, contentResourceId: Int, iconResourceId: Int): Notification","description":"io.github.thibaultbee.streampack.services.utils.NotificationUtils.createNotification","location":"streampack-services/io.github.thibaultbee.streampack.services.utils/-notification-utils/create-notification.html","searchKeys":["createNotification","fun createNotification(titleResourceId: Int, contentResourceId: Int, iconResourceId: Int): Notification","io.github.thibaultbee.streampack.services.utils.NotificationUtils.createNotification"]},{"name":"fun createNotificationChannel(nameResourceId: Int, descriptionResourceId: Int)","description":"io.github.thibaultbee.streampack.services.utils.NotificationUtils.createNotificationChannel","location":"streampack-services/io.github.thibaultbee.streampack.services.utils/-notification-utils/create-notification-channel.html","searchKeys":["createNotificationChannel","fun createNotificationChannel(nameResourceId: Int, descriptionResourceId: Int)","io.github.thibaultbee.streampack.services.utils.NotificationUtils.createNotificationChannel"]},{"name":"fun notify(notification: Notification)","description":"io.github.thibaultbee.streampack.services.utils.NotificationUtils.notify","location":"streampack-services/io.github.thibaultbee.streampack.services.utils/-notification-utils/notify.html","searchKeys":["notify","fun notify(notification: Notification)","io.github.thibaultbee.streampack.services.utils.NotificationUtils.notify"]},{"name":"interface StreamerFactory<T : IStreamer>","description":"io.github.thibaultbee.streampack.services.utils.StreamerFactory","location":"streampack-services/io.github.thibaultbee.streampack.services.utils/-streamer-factory/index.html","searchKeys":["StreamerFactory","interface StreamerFactory<T : IStreamer>","io.github.thibaultbee.streampack.services.utils.StreamerFactory"]},{"name":"object Companion","description":"io.github.thibaultbee.streampack.services.MediaProjectionService.Companion","location":"streampack-services/io.github.thibaultbee.streampack.services/-media-projection-service/-companion/index.html","searchKeys":["Companion","object Companion","io.github.thibaultbee.streampack.services.MediaProjectionService.Companion"]},{"name":"object Companion","description":"io.github.thibaultbee.streampack.services.StreamerService.Companion","location":"streampack-services/io.github.thibaultbee.streampack.services/-streamer-service/-companion/index.html","searchKeys":["Companion","object Companion","io.github.thibaultbee.streampack.services.StreamerService.Companion"]},{"name":"open class DualStreamerFactory(withAudio: Boolean, withVideo: Boolean, defaultRotation: Int? = null) : StreamerFactory<IDualStreamer> ","description":"io.github.thibaultbee.streampack.services.utils.DualStreamerFactory","location":"streampack-services/io.github.thibaultbee.streampack.services.utils/-dual-streamer-factory/index.html","searchKeys":["DualStreamerFactory","open class DualStreamerFactory(withAudio: Boolean, withVideo: Boolean, defaultRotation: Int? = null) : StreamerFactory<IDualStreamer> ","io.github.thibaultbee.streampack.services.utils.DualStreamerFactory"]},{"name":"open class SingleStreamerFactory(withAudio: Boolean, withVideo: Boolean, defaultRotation: Int? = null) : StreamerFactory<ISingleStreamer> ","description":"io.github.thibaultbee.streampack.services.utils.SingleStreamerFactory","location":"streampack-services/io.github.thibaultbee.streampack.services.utils/-single-streamer-factory/index.html","searchKeys":["SingleStreamerFactory","open class SingleStreamerFactory(withAudio: Boolean, withVideo: Boolean, defaultRotation: Int? = null) : StreamerFactory<ISingleStreamer> ","io.github.thibaultbee.streampack.services.utils.SingleStreamerFactory"]},{"name":"open override fun create(context: Context): IDualStreamer","description":"io.github.thibaultbee.streampack.services.utils.DualStreamerFactory.create","location":"streampack-services/io.github.thibaultbee.streampack.services.utils/-dual-streamer-factory/create.html","searchKeys":["create","open override fun create(context: Context): IDualStreamer","io.github.thibaultbee.streampack.services.utils.DualStreamerFactory.create"]},{"name":"open override fun create(context: Context): ISingleStreamer","description":"io.github.thibaultbee.streampack.services.utils.SingleStreamerFactory.create","location":"streampack-services/io.github.thibaultbee.streampack.services.utils/-single-streamer-factory/create.html","searchKeys":["create","open override fun create(context: Context): ISingleStreamer","io.github.thibaultbee.streampack.services.utils.SingleStreamerFactory.create"]},{"name":"open override fun onBind(intent: Intent): IBinder?","description":"io.github.thibaultbee.streampack.services.StreamerService.onBind","location":"streampack-services/io.github.thibaultbee.streampack.services/-streamer-service/on-bind.html","searchKeys":["onBind","open override fun onBind(intent: Intent): IBinder?","io.github.thibaultbee.streampack.services.StreamerService.onBind"]},{"name":"open override fun onCreate()","description":"io.github.thibaultbee.streampack.services.StreamerService.onCreate","location":"streampack-services/io.github.thibaultbee.streampack.services/-streamer-service/on-create.html","searchKeys":["onCreate","open override fun onCreate()","io.github.thibaultbee.streampack.services.StreamerService.onCreate"]},{"name":"open override fun onDestroy()","description":"io.github.thibaultbee.streampack.services.MediaProjectionService.onDestroy","location":"streampack-services/io.github.thibaultbee.streampack.services/-media-projection-service/on-destroy.html","searchKeys":["onDestroy","open override fun onDestroy()","io.github.thibaultbee.streampack.services.MediaProjectionService.onDestroy"]},{"name":"open override fun onDestroy()","description":"io.github.thibaultbee.streampack.services.StreamerService.onDestroy","location":"streampack-services/io.github.thibaultbee.streampack.services/-streamer-service/on-destroy.html","searchKeys":["onDestroy","open override fun onDestroy()","io.github.thibaultbee.streampack.services.StreamerService.onDestroy"]},{"name":"open override fun onOrientationChanged(rotation: Int)","description":"io.github.thibaultbee.streampack.services.StreamerService.onOrientationChanged","location":"streampack-services/io.github.thibaultbee.streampack.services/-streamer-service/on-orientation-changed.html","searchKeys":["onOrientationChanged","open override fun onOrientationChanged(rotation: Int)","io.github.thibaultbee.streampack.services.StreamerService.onOrientationChanged"]},{"name":"open override fun onStartCommand(intent: Intent?, flags: Int, startId: Int): Int","description":"io.github.thibaultbee.streampack.services.StreamerService.onStartCommand","location":"streampack-services/io.github.thibaultbee.streampack.services/-streamer-service/on-start-command.html","searchKeys":["onStartCommand","open override fun onStartCommand(intent: Intent?, flags: Int, startId: Int): Int","io.github.thibaultbee.streampack.services.StreamerService.onStartCommand"]},{"name":"open override fun onUnbind(intent: Intent?): Boolean","description":"io.github.thibaultbee.streampack.services.StreamerService.onUnbind","location":"streampack-services/io.github.thibaultbee.streampack.services/-streamer-service/on-unbind.html","searchKeys":["onUnbind","open override fun onUnbind(intent: Intent?): Boolean","io.github.thibaultbee.streampack.services.StreamerService.onUnbind"]},{"name":"protected abstract fun createDefaultAudioSource(mediaProjection: MediaProjection, extras: Bundle): IAudioSourceInternal.Factory?","description":"io.github.thibaultbee.streampack.services.MediaProjectionService.createDefaultAudioSource","location":"streampack-services/io.github.thibaultbee.streampack.services/-media-projection-service/create-default-audio-source.html","searchKeys":["createDefaultAudioSource","protected abstract fun createDefaultAudioSource(mediaProjection: MediaProjection, extras: Bundle): IAudioSourceInternal.Factory?","io.github.thibaultbee.streampack.services.MediaProjectionService.createDefaultAudioSource"]},{"name":"protected abstract suspend fun onExtra(extras: Bundle)","description":"io.github.thibaultbee.streampack.services.StreamerService.onExtra","location":"streampack-services/io.github.thibaultbee.streampack.services/-streamer-service/on-extra.html","searchKeys":["onExtra","protected abstract suspend fun onExtra(extras: Bundle)","io.github.thibaultbee.streampack.services.StreamerService.onExtra"]},{"name":"protected inner class StreamerServiceBinder : Binder","description":"io.github.thibaultbee.streampack.services.StreamerService.StreamerServiceBinder","location":"streampack-services/io.github.thibaultbee.streampack.services/-streamer-service/-streamer-service-binder/index.html","searchKeys":["StreamerServiceBinder","protected inner class StreamerServiceBinder : Binder","io.github.thibaultbee.streampack.services.StreamerService.StreamerServiceBinder"]},{"name":"protected open fun createDefaultVideoSource(mediaProjection: MediaProjection, extras: Bundle): IVideoSourceInternal.Factory?","description":"io.github.thibaultbee.streampack.services.MediaProjectionService.createDefaultVideoSource","location":"streampack-services/io.github.thibaultbee.streampack.services/-media-projection-service/create-default-video-source.html","searchKeys":["createDefaultVideoSource","protected open fun createDefaultVideoSource(mediaProjection: MediaProjection, extras: Bundle): IVideoSourceInternal.Factory?","io.github.thibaultbee.streampack.services.MediaProjectionService.createDefaultVideoSource"]},{"name":"protected open fun onClose()","description":"io.github.thibaultbee.streampack.services.StreamerService.onClose","location":"streampack-services/io.github.thibaultbee.streampack.services/-streamer-service/on-close.html","searchKeys":["onClose","protected open fun onClose()","io.github.thibaultbee.streampack.services.StreamerService.onClose"]},{"name":"protected open fun onCloseNotification(): Notification?","description":"io.github.thibaultbee.streampack.services.StreamerService.onCloseNotification","location":"streampack-services/io.github.thibaultbee.streampack.services/-streamer-service/on-close-notification.html","searchKeys":["onCloseNotification","protected open fun onCloseNotification(): Notification?","io.github.thibaultbee.streampack.services.StreamerService.onCloseNotification"]},{"name":"protected open fun onCreateNotification(): Notification","description":"io.github.thibaultbee.streampack.services.StreamerService.onCreateNotification","location":"streampack-services/io.github.thibaultbee.streampack.services/-streamer-service/on-create-notification.html","searchKeys":["onCreateNotification","protected open fun onCreateNotification(): Notification","io.github.thibaultbee.streampack.services.StreamerService.onCreateNotification"]},{"name":"protected open fun onError(t: Throwable)","description":"io.github.thibaultbee.streampack.services.StreamerService.onError","location":"streampack-services/io.github.thibaultbee.streampack.services/-streamer-service/on-error.html","searchKeys":["onError","protected open fun onError(t: Throwable)","io.github.thibaultbee.streampack.services.StreamerService.onError"]},{"name":"protected open fun onErrorNotification(t: Throwable): Notification?","description":"io.github.thibaultbee.streampack.services.StreamerService.onErrorNotification","location":"streampack-services/io.github.thibaultbee.streampack.services/-streamer-service/on-error-notification.html","searchKeys":["onErrorNotification","protected open fun onErrorNotification(t: Throwable): Notification?","io.github.thibaultbee.streampack.services.StreamerService.onErrorNotification"]},{"name":"protected open fun onOpen()","description":"io.github.thibaultbee.streampack.services.StreamerService.onOpen","location":"streampack-services/io.github.thibaultbee.streampack.services/-streamer-service/on-open.html","searchKeys":["onOpen","protected open fun onOpen()","io.github.thibaultbee.streampack.services.StreamerService.onOpen"]},{"name":"protected open fun onOpenNotification(): Notification?","description":"io.github.thibaultbee.streampack.services.StreamerService.onOpenNotification","location":"streampack-services/io.github.thibaultbee.streampack.services/-streamer-service/on-open-notification.html","searchKeys":["onOpenNotification","protected open fun onOpenNotification(): Notification?","io.github.thibaultbee.streampack.services.StreamerService.onOpenNotification"]},{"name":"protected open fun onStreamingStart()","description":"io.github.thibaultbee.streampack.services.StreamerService.onStreamingStart","location":"streampack-services/io.github.thibaultbee.streampack.services/-streamer-service/on-streaming-start.html","searchKeys":["onStreamingStart","protected open fun onStreamingStart()","io.github.thibaultbee.streampack.services.StreamerService.onStreamingStart"]},{"name":"protected open fun onStreamingStop()","description":"io.github.thibaultbee.streampack.services.StreamerService.onStreamingStop","location":"streampack-services/io.github.thibaultbee.streampack.services/-streamer-service/on-streaming-stop.html","searchKeys":["onStreamingStop","protected open fun onStreamingStop()","io.github.thibaultbee.streampack.services.StreamerService.onStreamingStop"]},{"name":"protected open override fun onStreamingStop()","description":"io.github.thibaultbee.streampack.services.MediaProjectionService.onStreamingStop","location":"streampack-services/io.github.thibaultbee.streampack.services/-media-projection-service/on-streaming-stop.html","searchKeys":["onStreamingStop","protected open override fun onStreamingStop()","io.github.thibaultbee.streampack.services.MediaProjectionService.onStreamingStop"]},{"name":"protected open suspend fun setStreamerMediaProjection(streamer: T, mediaProjection: MediaProjection, extras: Bundle)","description":"io.github.thibaultbee.streampack.services.MediaProjectionService.setStreamerMediaProjection","location":"streampack-services/io.github.thibaultbee.streampack.services/-media-projection-service/set-streamer-media-projection.html","searchKeys":["setStreamerMediaProjection","protected open suspend fun setStreamerMediaProjection(streamer: T, mediaProjection: MediaProjection, extras: Bundle)","io.github.thibaultbee.streampack.services.MediaProjectionService.setStreamerMediaProjection"]},{"name":"protected open suspend override fun onExtra(extras: Bundle)","description":"io.github.thibaultbee.streampack.services.MediaProjectionService.onExtra","location":"streampack-services/io.github.thibaultbee.streampack.services/-media-projection-service/on-extra.html","searchKeys":["onExtra","protected open suspend override fun onExtra(extras: Bundle)","io.github.thibaultbee.streampack.services.MediaProjectionService.onExtra"]},{"name":"protected open val rotationProvider: IRotationProvider?","description":"io.github.thibaultbee.streampack.services.StreamerService.rotationProvider","location":"streampack-services/io.github.thibaultbee.streampack.services/-streamer-service/rotation-provider.html","searchKeys":["rotationProvider","protected open val rotationProvider: IRotationProvider?","io.github.thibaultbee.streampack.services.StreamerService.rotationProvider"]},{"name":"protected val channelDescriptionResourceId: Int = 0","description":"io.github.thibaultbee.streampack.services.StreamerService.channelDescriptionResourceId","location":"streampack-services/io.github.thibaultbee.streampack.services/-streamer-service/channel-description-resource-id.html","searchKeys":["channelDescriptionResourceId","protected val channelDescriptionResourceId: Int = 0","io.github.thibaultbee.streampack.services.StreamerService.channelDescriptionResourceId"]},{"name":"protected val channelId: String","description":"io.github.thibaultbee.streampack.services.StreamerService.channelId","location":"streampack-services/io.github.thibaultbee.streampack.services/-streamer-service/channel-id.html","searchKeys":["channelId","protected val channelId: String","io.github.thibaultbee.streampack.services.StreamerService.channelId"]},{"name":"protected val channelNameResourceId: Int","description":"io.github.thibaultbee.streampack.services.StreamerService.channelNameResourceId","location":"streampack-services/io.github.thibaultbee.streampack.services/-streamer-service/channel-name-resource-id.html","searchKeys":["channelNameResourceId","protected val channelNameResourceId: Int","io.github.thibaultbee.streampack.services.StreamerService.channelNameResourceId"]},{"name":"protected val notificationIconResourceId: Int","description":"io.github.thibaultbee.streampack.services.StreamerService.notificationIconResourceId","location":"streampack-services/io.github.thibaultbee.streampack.services/-streamer-service/notification-icon-resource-id.html","searchKeys":["notificationIconResourceId","protected val notificationIconResourceId: Int","io.github.thibaultbee.streampack.services.StreamerService.notificationIconResourceId"]},{"name":"protected val streamer: T","description":"io.github.thibaultbee.streampack.services.StreamerService.streamer","location":"streampack-services/io.github.thibaultbee.streampack.services/-streamer-service/streamer.html","searchKeys":["streamer","protected val streamer: T","io.github.thibaultbee.streampack.services.StreamerService.streamer"]},{"name":"protected var mediaProjection: MediaProjection?","description":"io.github.thibaultbee.streampack.services.MediaProjectionService.mediaProjection","location":"streampack-services/io.github.thibaultbee.streampack.services/-media-projection-service/media-projection.html","searchKeys":["mediaProjection","protected var mediaProjection: MediaProjection?","io.github.thibaultbee.streampack.services.MediaProjectionService.mediaProjection"]},{"name":"val streamer: T","description":"io.github.thibaultbee.streampack.services.StreamerService.StreamerServiceBinder.streamer","location":"streampack-services/io.github.thibaultbee.streampack.services/-streamer-service/-streamer-service-binder/streamer.html","searchKeys":["streamer","val streamer: T","io.github.thibaultbee.streampack.services.StreamerService.StreamerServiceBinder.streamer"]}]